{
  "total": 2565,
  "p": 1,
  "ps": 100,
  "paging": {
    "pageIndex": 1,
    "pageSize": 100,
    "total": 2565
  },
  "effortTotal": 21544,
  "issues": [
    {
      "key": "d40ca5f5-39bb-4ad8-abeb-8e25e66d9567",
      "rule": "python:S3776",
      "severity": "CRITICAL",
      "component": "openpilot:cereal/messaging/__init__.py",
      "project": "openpilot",
      "line": 169,
      "hash": "396ffb83af890897d26036a69a8f868f",
      "textRange": {
        "startLine": 169,
        "endLine": 169,
        "startOffset": 6,
        "endOffset": 17
      },
      "flows": [
        {
          "locations": [
            {
              "component": "openpilot:cereal/messaging/__init__.py",
              "textRange": {
                "startLine": 172,
                "endLine": 172,
                "startOffset": 4,
                "endOffset": 7
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:cereal/messaging/__init__.py",
              "textRange": {
                "startLine": 173,
                "endLine": 173,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:cereal/messaging/__init__.py",
              "textRange": {
                "startLine": 180,
                "endLine": 180,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:cereal/messaging/__init__.py",
              "textRange": {
                "startLine": 188,
                "endLine": 188,
                "startOffset": 4,
                "endOffset": 7
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:cereal/messaging/__init__.py",
              "textRange": {
                "startLine": 189,
                "endLine": 189,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:cereal/messaging/__init__.py",
              "textRange": {
                "startLine": 189,
                "endLine": 189,
                "startOffset": 42,
                "endOffset": 45
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:cereal/messaging/__init__.py",
              "textRange": {
                "startLine": 200,
                "endLine": 200,
                "startOffset": 8,
                "endOffset": 14
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:cereal/messaging/__init__.py",
              "textRange": {
                "startLine": 206,
                "endLine": 206,
                "startOffset": 38,
                "endOffset": 40
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:cereal/messaging/__init__.py",
              "textRange": {
                "startLine": 207,
                "endLine": 207,
                "startOffset": 6,
                "endOffset": 10
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:cereal/messaging/__init__.py",
              "textRange": {
                "startLine": 209,
                "endLine": 209,
                "startOffset": 8,
                "endOffset": 10
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:cereal/messaging/__init__.py",
              "textRange": {
                "startLine": 211,
                "endLine": 211,
                "startOffset": 8,
                "endOffset": 12
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Refactor this function to reduce its Cognitive Complexity from 18 to the 15 allowed.",
      "effort": "8min",
      "debt": "8min",
      "author": "user@comma.ai",
      "tags": [
        "brain-overload"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "FOCUSED",
      "cleanCodeAttributeCategory": "ADAPTABLE",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "HIGH"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "93c2b4af-ac19-4de2-94c9-caf60a8ddaaa",
      "rule": "python:S3776",
      "severity": "CRITICAL",
      "component": "openpilot:common/markdown.py",
      "project": "openpilot",
      "line": 6,
      "hash": "8fc5a2231247e43f485dc57c5d474ca6",
      "textRange": {
        "startLine": 6,
        "endLine": 6,
        "startOffset": 4,
        "endOffset": 18
      },
      "flows": [
        {
          "locations": [
            {
              "component": "openpilot:common/markdown.py",
              "textRange": {
                "startLine": 12,
                "endLine": 12,
                "startOffset": 4,
                "endOffset": 9
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:common/markdown.py",
              "textRange": {
                "startLine": 15,
                "endLine": 15,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:common/markdown.py",
              "textRange": {
                "startLine": 19,
                "endLine": 19,
                "startOffset": 2,
                "endOffset": 5
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:common/markdown.py",
              "textRange": {
                "startLine": 20,
                "endLine": 20,
                "startOffset": 4,
                "endOffset": 6
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:common/markdown.py",
              "textRange": {
                "startLine": 20,
                "endLine": 20,
                "startOffset": 26,
                "endOffset": 29
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:common/markdown.py",
              "textRange": {
                "startLine": 22,
                "endLine": 22,
                "startOffset": 4,
                "endOffset": 8
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:common/markdown.py",
              "textRange": {
                "startLine": 24,
                "endLine": 24,
                "startOffset": 4,
                "endOffset": 8
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:common/markdown.py",
              "textRange": {
                "startLine": 26,
                "endLine": 26,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:common/markdown.py",
              "textRange": {
                "startLine": 28,
                "endLine": 28,
                "startOffset": 6,
                "endOffset": 10
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:common/markdown.py",
              "textRange": {
                "startLine": 30,
                "endLine": 30,
                "startOffset": 8,
                "endOffset": 10
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:common/markdown.py",
              "textRange": {
                "startLine": 34,
                "endLine": 34,
                "startOffset": 4,
                "endOffset": 8
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:common/markdown.py",
              "textRange": {
                "startLine": 36,
                "endLine": 36,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:common/markdown.py",
              "textRange": {
                "startLine": 42,
                "endLine": 42,
                "startOffset": 2,
                "endOffset": 5
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Refactor this function to reduce its Cognitive Complexity from 24 to the 15 allowed.",
      "effort": "14min",
      "debt": "14min",
      "author": "user@comma.ai",
      "tags": [
        "brain-overload"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "FOCUSED",
      "cleanCodeAttributeCategory": "ADAPTABLE",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "HIGH"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "b5a5ba77-6873-4a64-a1bc-e989de031209",
      "rule": "python:S108",
      "severity": "MAJOR",
      "component": "openpilot:common/markdown.py",
      "project": "openpilot",
      "line": 23,
      "hash": "1a1dc91c907325c69271ddf0c944bc72",
      "textRange": {
        "startLine": 23,
        "endLine": 23,
        "startOffset": 6,
        "endOffset": 10
      },
      "flows": [],
      "status": "OPEN",
      "message": "Either remove or fill this block of code.",
      "effort": "5min",
      "debt": "5min",
      "author": "user@comma.ai",
      "tags": [
        "suspicious"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "CLEAR",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "470ab3b4-d6c0-4fd6-8506-de59894b4172",
      "rule": "python:S1542",
      "severity": "MAJOR",
      "component": "openpilot:common/mock/generators.py",
      "project": "openpilot",
      "line": 12,
      "hash": "28300c77ffdf36da80c4eff11ecd9c76",
      "textRange": {
        "startLine": 12,
        "endLine": 12,
        "startOffset": 4,
        "endOffset": 31
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename function \"generate_liveLocationKalman\" to match the regular expression ^[a-z_][a-z0-9_]*$.",
      "effort": "10min",
      "debt": "10min",
      "author": "user@comma.ai",
      "tags": [
        "convention"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "IDENTIFIABLE",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "4face8ab-ea6e-4394-997b-40a532b674cd",
      "rule": "python:S125",
      "severity": "MAJOR",
      "component": "openpilot:common/transformations/tests/test_orientation.py",
      "project": "openpilot",
      "line": 60,
      "hash": "24ffb4c8e99d3795a115730fda83d652",
      "textRange": {
        "startLine": 60,
        "endLine": 60,
        "startOffset": 6,
        "endOffset": 110
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove this commented out code.",
      "effort": "5min",
      "debt": "5min",
      "author": "user@comma.ai",
      "tags": [
        "unused"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "CLEAR",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "4c0f3b72-1261-44e3-b640-4a73f75bed73",
      "rule": "python:S112",
      "severity": "MAJOR",
      "component": "openpilot:common/utils.py",
      "project": "openpilot",
      "line": 10,
      "hash": "eccdb6e7fe3518524d69e11b16664e56",
      "textRange": {
        "startLine": 10,
        "endLine": 10,
        "startOffset": 12,
        "endOffset": 52
      },
      "flows": [],
      "status": "OPEN",
      "message": "Replace this generic exception class with a more specific one.",
      "effort": "20min",
      "debt": "20min",
      "author": "user@comma.ai",
      "tags": [
        "cwe",
        "error-handling"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "ca5cfb20-b6c8-4a63-a3ce-0b5ac7157d33",
      "rule": "python:S1135",
      "severity": "INFO",
      "component": "openpilot:conftest.py",
      "project": "openpilot",
      "line": 13,
      "hash": "1a6c8757df27b43ff062a6951ba2b250",
      "textRange": {
        "startLine": 13,
        "endLine": 13,
        "startOffset": 2,
        "endOffset": 55
      },
      "flows": [],
      "status": "OPEN",
      "message": "Complete the task associated to this \"TODO\" comment.",
      "effort": "0min",
      "debt": "0min",
      "author": "user@comma.ai",
      "tags": [
        "cwe"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "22cdddc6-7b72-400f-bbe5-00d72786b101",
      "rule": "python:S1192",
      "severity": "CRITICAL",
      "component": "openpilot:docs/conf.py",
      "project": "openpilot",
      "line": 60,
      "hash": "0387aea584a00467069a85db1afce9c2",
      "textRange": {
        "startLine": 60,
        "endLine": 60,
        "startOffset": 23,
        "endOffset": 48
      },
      "flows": [
        {
          "locations": [
            {
              "component": "openpilot:docs/conf.py",
              "textRange": {
                "startLine": 67,
                "endLine": 67,
                "startOffset": 29,
                "endOffset": 54
              },
              "msg": "Duplication",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:docs/conf.py",
              "textRange": {
                "startLine": 70,
                "endLine": 70,
                "startOffset": 28,
                "endOffset": 53
              },
              "msg": "Duplication",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:docs/conf.py",
              "textRange": {
                "startLine": 71,
                "endLine": 71,
                "startOffset": 34,
                "endOffset": 59
              },
              "msg": "Duplication",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Define a constant instead of duplicating this literal \"openpilot Documentation\" 4 times.",
      "effort": "8min",
      "debt": "8min",
      "author": "user@comma.ai",
      "tags": [
        "design"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "DISTINCT",
      "cleanCodeAttributeCategory": "ADAPTABLE",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "HIGH"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "238a2a5b-edbe-4d2e-be02-4d36b2b3a4c0",
      "rule": "python:S1192",
      "severity": "CRITICAL",
      "component": "openpilot:docs/conf.py",
      "project": "openpilot",
      "line": 64,
      "hash": "7fc81561c000d35203022f15d0a102f9",
      "textRange": {
        "startLine": 64,
        "endLine": 64,
        "startOffset": 23,
        "endOffset": 63
      },
      "flows": [
        {
          "locations": [
            {
              "component": "openpilot:docs/conf.py",
              "textRange": {
                "startLine": 65,
                "endLine": 65,
                "startOffset": 27,
                "endOffset": 67
              },
              "msg": "Duplication",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:docs/conf.py",
              "textRange": {
                "startLine": 66,
                "endLine": 66,
                "startOffset": 34,
                "endOffset": 74
              },
              "msg": "Duplication",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:docs/conf.py",
              "textRange": {
                "startLine": 69,
                "endLine": 69,
                "startOffset": 27,
                "endOffset": 67
              },
              "msg": "Duplication",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Define a constant instead of duplicating this literal \"https://docs.comma.ai/_static/logo.png\" 4 times.",
      "effort": "8min",
      "debt": "8min",
      "author": "user@comma.ai",
      "tags": [
        "design"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "DISTINCT",
      "cleanCodeAttributeCategory": "ADAPTABLE",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "HIGH"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "d8ef2f83-1a11-43b2-82c1-2aeac7eedb87",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "openpilot:msgq_repo/msgq/tests/test_fake.py",
      "project": "openpilot",
      "line": 116,
      "hash": "2a93ef5209d5a68735e6d0820fb7a1cc",
      "textRange": {
        "startLine": 116,
        "endLine": 116,
        "startOffset": 4,
        "endOffset": 19
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"carState_handle\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "user@comma.ai",
      "tags": [
        "convention"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "IDENTIFIABLE",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "5cc7589d-f755-425a-8fe8-ab4364b60273",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "openpilot:msgq_repo/msgq/tests/test_fake.py",
      "project": "openpilot",
      "line": 155,
      "hash": "c178c77d4e130b16bc0d5ded6fd52065",
      "textRange": {
        "startLine": 155,
        "endLine": 155,
        "startOffset": 4,
        "endOffset": 19
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"carState_handle\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "user@comma.ai",
      "tags": [
        "convention"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "IDENTIFIABLE",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "56b383a9-69dd-4304-88aa-2fee72666893",
      "rule": "python:S1135",
      "severity": "INFO",
      "component": "openpilot:msgq_repo/msgq/tests/test_messaging.py",
      "project": "openpilot",
      "line": 70,
      "hash": "04c98effc4522a7063785bf1c92e7df2",
      "textRange": {
        "startLine": 70,
        "endLine": 70,
        "startOffset": 10,
        "endOffset": 37
      },
      "flows": [],
      "status": "OPEN",
      "message": "Complete the task associated to this \"TODO\" comment.",
      "effort": "0min",
      "debt": "0min",
      "author": "user@comma.ai",
      "tags": [
        "cwe"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "e2ab7d71-9e5e-4a5c-862e-0e9d68fc43e0",
      "rule": "python:S1172",
      "severity": "MAJOR",
      "component": "openpilot:msgq_repo/site_scons/site_tools/cython.py",
      "project": "openpilot",
      "line": 71,
      "hash": "5dca0729d07cde85396f8b77345324ae",
      "textRange": {
        "startLine": 71,
        "endLine": 71,
        "startOffset": 11,
        "endOffset": 14
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove the unused function parameter \"env\".",
      "effort": "5min",
      "debt": "5min",
      "author": "user@comma.ai",
      "tags": [
        "unused"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "CLEAR",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "fab2dd96-36da-4992-9423-9e3d0a58e0cc",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "openpilot:opendbc/can/tests/test_packer_parser.py",
      "project": "openpilot",
      "line": 14,
      "hash": "febd7518986ce269c6cc69d862a52039",
      "textRange": {
        "startLine": 14,
        "endLine": 14,
        "startOffset": 51,
        "endOffset": 62
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this parameter \"logMonoTime\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "user@comma.ai",
      "tags": [
        "convention"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "IDENTIFIABLE",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "6c4e3b89-9af8-4ad3-a7ff-a7b37f6810ff",
      "rule": "python:S1481",
      "severity": "MINOR",
      "component": "openpilot:opendbc/can/tests/test_packer_parser.py",
      "project": "openpilot",
      "line": 291,
      "hash": "cbbcbcf7237cb9e89aee3773410ec085",
      "textRange": {
        "startLine": 291,
        "endLine": 291,
        "startOffset": 4,
        "endOffset": 7
      },
      "flows": [
        {
          "locations": [
            {
              "component": "openpilot:opendbc/can/tests/test_packer_parser.py",
              "textRange": {
                "startLine": 301,
                "endLine": 301,
                "startOffset": 10,
                "endOffset": 13
              },
              "msg": "Assignment to unused local variable \"idx\".",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Remove the unused local variable \"idx\".",
      "effort": "5min",
      "debt": "5min",
      "author": "user@comma.ai",
      "tags": [
        "unused"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "CLEAR",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "e3566492-80fb-4192-b4ad-d093f03dc278",
      "rule": "python:S1135",
      "severity": "INFO",
      "component": "openpilot:opendbc/can/tests/test_packer_parser.py",
      "project": "openpilot",
      "line": 386,
      "hash": "cbd091439e3677912c20620d9f8085c0",
      "textRange": {
        "startLine": 386,
        "endLine": 386,
        "startOffset": 4,
        "endOffset": 68
      },
      "flows": [],
      "status": "OPEN",
      "message": "Complete the task associated to this \"TODO\" comment.",
      "effort": "0min",
      "debt": "0min",
      "author": "user@comma.ai",
      "tags": [
        "cwe"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "654a23db-5fa0-4742-8153-885c82e249cf",
      "rule": "python:S1172",
      "severity": "MAJOR",
      "component": "openpilot:opendbc/site_scons/site_tools/cython.py",
      "project": "openpilot",
      "line": 71,
      "hash": "5dca0729d07cde85396f8b77345324ae",
      "textRange": {
        "startLine": 71,
        "endLine": 71,
        "startOffset": 11,
        "endOffset": 14
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove the unused function parameter \"env\".",
      "effort": "5min",
      "debt": "5min",
      "author": "user@comma.ai",
      "tags": [
        "unused"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "CLEAR",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "08ff23c9-6a4f-4258-94f0-9952e4f4a897",
      "rule": "python:S3776",
      "severity": "CRITICAL",
      "component": "openpilot:panda/python/uds.py",
      "project": "openpilot",
      "line": 471,
      "hash": "23b434358ab93e4e60263a7d6ae10cc9",
      "textRange": {
        "startLine": 471,
        "endLine": 471,
        "startOffset": 6,
        "endOffset": 20
      },
      "flows": [
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 476,
                "endLine": 476,
                "startOffset": 4,
                "endOffset": 6
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 477,
                "endLine": 477,
                "startOffset": 32,
                "endOffset": 34
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 483,
                "endLine": 483,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 487,
                "endLine": 487,
                "startOffset": 4,
                "endOffset": 8
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 489,
                "endLine": 489,
                "startOffset": 32,
                "endOffset": 34
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 496,
                "endLine": 496,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 498,
                "endLine": 498,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 504,
                "endLine": 504,
                "startOffset": 4,
                "endOffset": 8
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 510,
                "endLine": 510,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 512,
                "endLine": 512,
                "startOffset": 6,
                "endOffset": 10
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 515,
                "endLine": 515,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 519,
                "endLine": 519,
                "startOffset": 4,
                "endOffset": 8
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 522,
                "endLine": 522,
                "startOffset": 32,
                "endOffset": 34
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 523,
                "endLine": 523,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 524,
                "endLine": 524,
                "startOffset": 8,
                "endOffset": 10
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 528,
                "endLine": 528,
                "startOffset": 26,
                "endOffset": 28
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 535,
                "endLine": 535,
                "startOffset": 40,
                "endOffset": 42
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 537,
                "endLine": 537,
                "startOffset": 8,
                "endOffset": 11
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 544,
                "endLine": 544,
                "startOffset": 8,
                "endOffset": 10
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 546,
                "endLine": 546,
                "startOffset": 8,
                "endOffset": 10
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 548,
                "endLine": 548,
                "startOffset": 6,
                "endOffset": 10
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 550,
                "endLine": 550,
                "startOffset": 8,
                "endOffset": 10
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 555,
                "endLine": 555,
                "startOffset": 4,
                "endOffset": 8
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Refactor this function to reduce its Cognitive Complexity from 43 to the 15 allowed.",
      "effort": "33min",
      "debt": "33min",
      "author": "user@comma.ai",
      "tags": [
        "brain-overload"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "FOCUSED",
      "cleanCodeAttributeCategory": "ADAPTABLE",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "HIGH"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "230f761b-0e63-4ef6-a9c7-0d332d7c7e35",
      "rule": "python:S3776",
      "severity": "CRITICAL",
      "component": "openpilot:panda/python/uds.py",
      "project": "openpilot",
      "line": 592,
      "hash": "41b83c4e3aee0d12008635c791cb542c",
      "textRange": {
        "startLine": 592,
        "endLine": 592,
        "startOffset": 6,
        "endOffset": 18
      },
      "flows": [
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 594,
                "endLine": 594,
                "startOffset": 4,
                "endOffset": 6
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 596,
                "endLine": 596,
                "startOffset": 4,
                "endOffset": 6
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 600,
                "endLine": 600,
                "startOffset": 16,
                "endOffset": 18
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 604,
                "endLine": 604,
                "startOffset": 4,
                "endOffset": 9
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 605,
                "endLine": 605,
                "startOffset": 46,
                "endOffset": 48
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 608,
                "endLine": 608,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 612,
                "endLine": 612,
                "startOffset": 25,
                "endOffset": 27
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 615,
                "endLine": 615,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 616,
                "endLine": 616,
                "startOffset": 29,
                "endOffset": 31
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 619,
                "endLine": 619,
                "startOffset": 8,
                "endOffset": 14
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 621,
                "endLine": 621,
                "startOffset": 29,
                "endOffset": 31
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 624,
                "endLine": 624,
                "startOffset": 8,
                "endOffset": 14
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 627,
                "endLine": 627,
                "startOffset": 8,
                "endOffset": 10
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 629,
                "endLine": 629,
                "startOffset": 10,
                "endOffset": 12
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 635,
                "endLine": 635,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 636,
                "endLine": 636,
                "startOffset": 37,
                "endOffset": 39
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 639,
                "endLine": 639,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 640,
                "endLine": 640,
                "startOffset": 27,
                "endOffset": 29
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 641,
                "endLine": 641,
                "startOffset": 8,
                "endOffset": 10
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 642,
                "endLine": 642,
                "startOffset": 39,
                "endOffset": 41
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/uds.py",
              "textRange": {
                "startLine": 646,
                "endLine": 646,
                "startOffset": 21,
                "endOffset": 23
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Refactor this function to reduce its Cognitive Complexity from 50 to the 15 allowed.",
      "effort": "40min",
      "debt": "40min",
      "author": "user@comma.ai",
      "tags": [
        "brain-overload"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "FOCUSED",
      "cleanCodeAttributeCategory": "ADAPTABLE",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "HIGH"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "ecb82f00-d642-485a-a83a-9a1f1b3393f4",
      "rule": "python:S101",
      "severity": "MINOR",
      "component": "openpilot:panda/python/xcp.py",
      "project": "openpilot",
      "line": 6,
      "hash": "4e48acad101ea9208deebbda7588e7c2",
      "textRange": {
        "startLine": 6,
        "endLine": 6,
        "startOffset": 6,
        "endOffset": 18
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename class \"COMMAND_CODE\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
      "effort": "5min",
      "debt": "5min",
      "author": "user@comma.ai",
      "tags": [
        "convention"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "IDENTIFIABLE",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "63bdee53-e927-44e9-8366-290605d80fba",
      "rule": "python:S101",
      "severity": "MINOR",
      "component": "openpilot:panda/python/xcp.py",
      "project": "openpilot",
      "line": 85,
      "hash": "11a9ecbeb7faae3329d3edd9e6176a45",
      "textRange": {
        "startLine": 85,
        "endLine": 85,
        "startOffset": 6,
        "endOffset": 18
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename class \"CONNECT_MODE\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
      "effort": "5min",
      "debt": "5min",
      "author": "user@comma.ai",
      "tags": [
        "convention"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "IDENTIFIABLE",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "a39d90c4-2c26-4ad4-9676-a7ddbd2c4247",
      "rule": "python:S101",
      "severity": "MINOR",
      "component": "openpilot:panda/python/xcp.py",
      "project": "openpilot",
      "line": 89,
      "hash": "fddc4f4bfcea5798c322297b46a2af61",
      "textRange": {
        "startLine": 89,
        "endLine": 89,
        "startOffset": 6,
        "endOffset": 25
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename class \"GET_ID_REQUEST_TYPE\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
      "effort": "5min",
      "debt": "5min",
      "author": "user@comma.ai",
      "tags": [
        "convention"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "IDENTIFIABLE",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "77da8d93-0579-48bf-b899-c97df72ef02c",
      "rule": "python:S3776",
      "severity": "CRITICAL",
      "component": "openpilot:panda/python/xcp.py",
      "project": "openpilot",
      "line": 142,
      "hash": "e808b65793ea8ee428c330fffaab6e17",
      "textRange": {
        "startLine": 142,
        "endLine": 142,
        "startOffset": 6,
        "endOffset": 15
      },
      "flows": [
        {
          "locations": [
            {
              "component": "openpilot:panda/python/xcp.py",
              "textRange": {
                "startLine": 144,
                "endLine": 144,
                "startOffset": 4,
                "endOffset": 9
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/xcp.py",
              "textRange": {
                "startLine": 145,
                "endLine": 145,
                "startOffset": 36,
                "endOffset": 38
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/xcp.py",
              "textRange": {
                "startLine": 146,
                "endLine": 146,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/xcp.py",
              "textRange": {
                "startLine": 148,
                "endLine": 148,
                "startOffset": 6,
                "endOffset": 9
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/xcp.py",
              "textRange": {
                "startLine": 149,
                "endLine": 149,
                "startOffset": 8,
                "endOffset": 10
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/xcp.py",
              "textRange": {
                "startLine": 149,
                "endLine": 149,
                "startOffset": 34,
                "endOffset": 37
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/xcp.py",
              "textRange": {
                "startLine": 151,
                "endLine": 151,
                "startOffset": 10,
                "endOffset": 12
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/python/xcp.py",
              "textRange": {
                "startLine": 155,
                "endLine": 155,
                "startOffset": 10,
                "endOffset": 12
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Refactor this function to reduce its Cognitive Complexity from 18 to the 15 allowed.",
      "effort": "8min",
      "debt": "8min",
      "author": "user@comma.ai",
      "tags": [
        "brain-overload"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "FOCUSED",
      "cleanCodeAttributeCategory": "ADAPTABLE",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "HIGH"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "ec91eec4-8a08-4a0b-aa2c-33c0b15c9136",
      "rule": "python:S1135",
      "severity": "INFO",
      "component": "openpilot:panda/python/xcp.py",
      "project": "openpilot",
      "line": 213,
      "hash": "df56926a40a5883fe56eb0820c6a8f99",
      "textRange": {
        "startLine": 213,
        "endLine": 213,
        "startOffset": 4,
        "endOffset": 68
      },
      "flows": [],
      "status": "OPEN",
      "message": "Complete the task associated to this \"TODO\" comment.",
      "effort": "0min",
      "debt": "0min",
      "author": "user@comma.ai",
      "tags": [
        "cwe"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "580ccdf0-1db8-472f-85f9-8a4bfc1ac87b",
      "rule": "python:S1135",
      "severity": "INFO",
      "component": "openpilot:panda/python/xcp.py",
      "project": "openpilot",
      "line": 219,
      "hash": "28f105fd5905414742da294c98774f86",
      "textRange": {
        "startLine": 219,
        "endLine": 219,
        "startOffset": 4,
        "endOffset": 67
      },
      "flows": [],
      "status": "OPEN",
      "message": "Complete the task associated to this \"TODO\" comment.",
      "effort": "0min",
      "debt": "0min",
      "author": "user@comma.ai",
      "tags": [
        "cwe"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "abd282a8-954a-4386-906f-e1451aaf4d0d",
      "rule": "python:S1135",
      "severity": "INFO",
      "component": "openpilot:panda/python/xcp.py",
      "project": "openpilot",
      "line": 226,
      "hash": "f43688e26337cf3003f20d3c99f9afd8",
      "textRange": {
        "startLine": 226,
        "endLine": 226,
        "startOffset": 4,
        "endOffset": 54
      },
      "flows": [],
      "status": "OPEN",
      "message": "Complete the task associated to this \"TODO\" comment.",
      "effort": "0min",
      "debt": "0min",
      "author": "user@comma.ai",
      "tags": [
        "cwe"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "610e17c9-0192-4a1d-8b60-d1d0d0575566",
      "rule": "python:S112",
      "severity": "MAJOR",
      "component": "openpilot:panda/tests/black_white_loopback_test.py",
      "project": "openpilot",
      "line": 30,
      "hash": "6726b1570910ae3a19e45a94ba324fc5",
      "textRange": {
        "startLine": 30,
        "endLine": 30,
        "startOffset": 10,
        "endOffset": 75
      },
      "flows": [],
      "status": "OPEN",
      "message": "Replace this generic exception class with a more specific one.",
      "effort": "20min",
      "debt": "20min",
      "author": "user@comma.ai",
      "tags": [
        "cwe",
        "error-handling"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "1f2acce1-0966-4df1-8f6b-a0700a09f6c5",
      "rule": "python:S112",
      "severity": "MAJOR",
      "component": "openpilot:panda/tests/black_white_loopback_test.py",
      "project": "openpilot",
      "line": 47,
      "hash": "6726b1570910ae3a19e45a94ba324fc5",
      "textRange": {
        "startLine": 47,
        "endLine": 47,
        "startOffset": 10,
        "endOffset": 75
      },
      "flows": [],
      "status": "OPEN",
      "message": "Replace this generic exception class with a more specific one.",
      "effort": "20min",
      "debt": "20min",
      "author": "user@comma.ai",
      "tags": [
        "cwe",
        "error-handling"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "f26e9530-2b1c-4001-962d-fedd0a60a058",
      "rule": "python:S3776",
      "severity": "CRITICAL",
      "component": "openpilot:panda/tests/black_white_loopback_test.py",
      "project": "openpilot",
      "line": 71,
      "hash": "4570c67f59ddda40135f1b5876dd18f8",
      "textRange": {
        "startLine": 71,
        "endLine": 71,
        "startOffset": 4,
        "endOffset": 14
      },
      "flows": [
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_loopback_test.py",
              "textRange": {
                "startLine": 74,
                "endLine": 74,
                "startOffset": 2,
                "endOffset": 4
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_loopback_test.py",
              "textRange": {
                "startLine": 76,
                "endLine": 76,
                "startOffset": 2,
                "endOffset": 6
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_loopback_test.py",
              "textRange": {
                "startLine": 79,
                "endLine": 79,
                "startOffset": 2,
                "endOffset": 5
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_loopback_test.py",
              "textRange": {
                "startLine": 85,
                "endLine": 85,
                "startOffset": 29,
                "endOffset": 31
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_loopback_test.py",
              "textRange": {
                "startLine": 88,
                "endLine": 88,
                "startOffset": 4,
                "endOffset": 6
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_loopback_test.py",
              "textRange": {
                "startLine": 90,
                "endLine": 90,
                "startOffset": 4,
                "endOffset": 8
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_loopback_test.py",
              "textRange": {
                "startLine": 93,
                "endLine": 93,
                "startOffset": 4,
                "endOffset": 7
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_loopback_test.py",
              "textRange": {
                "startLine": 94,
                "endLine": 94,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_loopback_test.py",
              "textRange": {
                "startLine": 96,
                "endLine": 96,
                "startOffset": 6,
                "endOffset": 10
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_loopback_test.py",
              "textRange": {
                "startLine": 105,
                "endLine": 105,
                "startOffset": 4,
                "endOffset": 6
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_loopback_test.py",
              "textRange": {
                "startLine": 107,
                "endLine": 107,
                "startOffset": 4,
                "endOffset": 8
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_loopback_test.py",
              "textRange": {
                "startLine": 112,
                "endLine": 112,
                "startOffset": 4,
                "endOffset": 6
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_loopback_test.py",
              "textRange": {
                "startLine": 115,
                "endLine": 115,
                "startOffset": 4,
                "endOffset": 8
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_loopback_test.py",
              "textRange": {
                "startLine": 120,
                "endLine": 120,
                "startOffset": 4,
                "endOffset": 7
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_loopback_test.py",
              "textRange": {
                "startLine": 121,
                "endLine": 121,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_loopback_test.py",
              "textRange": {
                "startLine": 121,
                "endLine": 121,
                "startOffset": 25,
                "endOffset": 27
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_loopback_test.py",
              "textRange": {
                "startLine": 126,
                "endLine": 126,
                "startOffset": 4,
                "endOffset": 6
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_loopback_test.py",
              "textRange": {
                "startLine": 133,
                "endLine": 133,
                "startOffset": 4,
                "endOffset": 6
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_loopback_test.py",
              "textRange": {
                "startLine": 134,
                "endLine": 134,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_loopback_test.py",
              "textRange": {
                "startLine": 136,
                "endLine": 136,
                "startOffset": 6,
                "endOffset": 10
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_loopback_test.py",
              "textRange": {
                "startLine": 139,
                "endLine": 139,
                "startOffset": 4,
                "endOffset": 8
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Refactor this function to reduce its Cognitive Complexity from 35 to the 15 allowed.",
      "effort": "25min",
      "debt": "25min",
      "author": "user@comma.ai",
      "tags": [
        "brain-overload"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "FOCUSED",
      "cleanCodeAttributeCategory": "ADAPTABLE",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "HIGH"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "6d4db86b-6ecc-410c-b39f-32cdd70f9adf",
      "rule": "python:S112",
      "severity": "MAJOR",
      "component": "openpilot:panda/tests/black_white_relay_endurance.py",
      "project": "openpilot",
      "line": 31,
      "hash": "6726b1570910ae3a19e45a94ba324fc5",
      "textRange": {
        "startLine": 31,
        "endLine": 31,
        "startOffset": 10,
        "endOffset": 75
      },
      "flows": [],
      "status": "OPEN",
      "message": "Replace this generic exception class with a more specific one.",
      "effort": "20min",
      "debt": "20min",
      "author": "user@comma.ai",
      "tags": [
        "cwe",
        "error-handling"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "f7beee3d-aa87-4ffa-a69f-526f122bbb42",
      "rule": "python:S112",
      "severity": "MAJOR",
      "component": "openpilot:panda/tests/black_white_relay_endurance.py",
      "project": "openpilot",
      "line": 48,
      "hash": "6726b1570910ae3a19e45a94ba324fc5",
      "textRange": {
        "startLine": 48,
        "endLine": 48,
        "startOffset": 10,
        "endOffset": 75
      },
      "flows": [],
      "status": "OPEN",
      "message": "Replace this generic exception class with a more specific one.",
      "effort": "20min",
      "debt": "20min",
      "author": "user@comma.ai",
      "tags": [
        "cwe",
        "error-handling"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "00be8cb5-5bd6-4c40-b6ce-28901ab77684",
      "rule": "python:S3776",
      "severity": "CRITICAL",
      "component": "openpilot:panda/tests/black_white_relay_endurance.py",
      "project": "openpilot",
      "line": 79,
      "hash": "4570c67f59ddda40135f1b5876dd18f8",
      "textRange": {
        "startLine": 79,
        "endLine": 79,
        "startOffset": 4,
        "endOffset": 14
      },
      "flows": [
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_relay_endurance.py",
              "textRange": {
                "startLine": 82,
                "endLine": 82,
                "startOffset": 2,
                "endOffset": 4
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_relay_endurance.py",
              "textRange": {
                "startLine": 84,
                "endLine": 84,
                "startOffset": 2,
                "endOffset": 6
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_relay_endurance.py",
              "textRange": {
                "startLine": 87,
                "endLine": 87,
                "startOffset": 2,
                "endOffset": 5
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_relay_endurance.py",
              "textRange": {
                "startLine": 93,
                "endLine": 93,
                "startOffset": 29,
                "endOffset": 31
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_relay_endurance.py",
              "textRange": {
                "startLine": 96,
                "endLine": 96,
                "startOffset": 4,
                "endOffset": 6
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_relay_endurance.py",
              "textRange": {
                "startLine": 98,
                "endLine": 98,
                "startOffset": 4,
                "endOffset": 8
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_relay_endurance.py",
              "textRange": {
                "startLine": 101,
                "endLine": 101,
                "startOffset": 4,
                "endOffset": 7
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_relay_endurance.py",
              "textRange": {
                "startLine": 102,
                "endLine": 102,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_relay_endurance.py",
              "textRange": {
                "startLine": 104,
                "endLine": 104,
                "startOffset": 6,
                "endOffset": 10
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_relay_endurance.py",
              "textRange": {
                "startLine": 113,
                "endLine": 113,
                "startOffset": 4,
                "endOffset": 6
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_relay_endurance.py",
              "textRange": {
                "startLine": 115,
                "endLine": 115,
                "startOffset": 4,
                "endOffset": 8
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_relay_endurance.py",
              "textRange": {
                "startLine": 120,
                "endLine": 120,
                "startOffset": 4,
                "endOffset": 6
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_relay_endurance.py",
              "textRange": {
                "startLine": 123,
                "endLine": 123,
                "startOffset": 4,
                "endOffset": 8
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_relay_endurance.py",
              "textRange": {
                "startLine": 128,
                "endLine": 128,
                "startOffset": 4,
                "endOffset": 7
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_relay_endurance.py",
              "textRange": {
                "startLine": 129,
                "endLine": 129,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_relay_endurance.py",
              "textRange": {
                "startLine": 129,
                "endLine": 129,
                "startOffset": 25,
                "endOffset": 27
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_relay_endurance.py",
              "textRange": {
                "startLine": 134,
                "endLine": 134,
                "startOffset": 4,
                "endOffset": 6
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_relay_endurance.py",
              "textRange": {
                "startLine": 141,
                "endLine": 141,
                "startOffset": 4,
                "endOffset": 6
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_relay_endurance.py",
              "textRange": {
                "startLine": 142,
                "endLine": 142,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_relay_endurance.py",
              "textRange": {
                "startLine": 144,
                "endLine": 144,
                "startOffset": 6,
                "endOffset": 10
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/black_white_relay_endurance.py",
              "textRange": {
                "startLine": 147,
                "endLine": 147,
                "startOffset": 4,
                "endOffset": 8
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Refactor this function to reduce its Cognitive Complexity from 35 to the 15 allowed.",
      "effort": "25min",
      "debt": "25min",
      "author": "user@comma.ai",
      "tags": [
        "brain-overload"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "FOCUSED",
      "cleanCodeAttributeCategory": "ADAPTABLE",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "HIGH"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "6ca1678f-daf1-44f9-a72d-5b9fea06b6b6",
      "rule": "python:S1172",
      "severity": "MAJOR",
      "component": "openpilot:panda/tests/black_white_relay_test.py",
      "project": "openpilot",
      "line": 22,
      "hash": "2494ad9e23adab7302a2085429ba66f5",
      "textRange": {
        "startLine": 22,
        "endLine": 22,
        "startOffset": 13,
        "endOffset": 27
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove the unused function parameter \"sleep_duration\".",
      "effort": "5min",
      "debt": "5min",
      "author": "user@comma.ai",
      "tags": [
        "unused"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "CLEAR",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "b7537769-f8d7-403d-b1d7-29bdfe6cdf33",
      "rule": "python:S112",
      "severity": "MAJOR",
      "component": "openpilot:panda/tests/black_white_relay_test.py",
      "project": "openpilot",
      "line": 30,
      "hash": "6726b1570910ae3a19e45a94ba324fc5",
      "textRange": {
        "startLine": 30,
        "endLine": 30,
        "startOffset": 10,
        "endOffset": 75
      },
      "flows": [],
      "status": "OPEN",
      "message": "Replace this generic exception class with a more specific one.",
      "effort": "20min",
      "debt": "20min",
      "author": "user@comma.ai",
      "tags": [
        "cwe",
        "error-handling"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "b54ecb24-0b7c-4dc7-a2fb-3265eeeb4bb5",
      "rule": "python:S112",
      "severity": "MAJOR",
      "component": "openpilot:panda/tests/black_white_relay_test.py",
      "project": "openpilot",
      "line": 50,
      "hash": "6726b1570910ae3a19e45a94ba324fc5",
      "textRange": {
        "startLine": 50,
        "endLine": 50,
        "startOffset": 10,
        "endOffset": 75
      },
      "flows": [],
      "status": "OPEN",
      "message": "Replace this generic exception class with a more specific one.",
      "effort": "20min",
      "debt": "20min",
      "author": "user@comma.ai",
      "tags": [
        "cwe",
        "error-handling"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "c750b27e-6cec-4008-97a9-0ae77bd70909",
      "rule": "python:S112",
      "severity": "MAJOR",
      "component": "openpilot:panda/tests/black_white_relay_test.py",
      "project": "openpilot",
      "line": 68,
      "hash": "2d29409f7522a4832ea318b417261355",
      "textRange": {
        "startLine": 68,
        "endLine": 68,
        "startOffset": 12,
        "endOffset": 35
      },
      "flows": [],
      "status": "OPEN",
      "message": "Replace this generic exception class with a more specific one.",
      "effort": "20min",
      "debt": "20min",
      "author": "user@comma.ai",
      "tags": [
        "cwe",
        "error-handling"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "5b50e725-51f2-4082-b209-927c5760ae74",
      "rule": "python:S112",
      "severity": "MAJOR",
      "component": "openpilot:panda/tests/black_white_relay_test.py",
      "project": "openpilot",
      "line": 76,
      "hash": "15ac1d99ea409372b845531a60a4a506",
      "textRange": {
        "startLine": 76,
        "endLine": 76,
        "startOffset": 12,
        "endOffset": 36
      },
      "flows": [],
      "status": "OPEN",
      "message": "Replace this generic exception class with a more specific one.",
      "effort": "20min",
      "debt": "20min",
      "author": "user@comma.ai",
      "tags": [
        "cwe",
        "error-handling"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "c651cdc1-0f9c-4915-9fda-b365f809dc1a",
      "rule": "python:S112",
      "severity": "MAJOR",
      "component": "openpilot:panda/tests/bulk_write_test.py",
      "project": "openpilot",
      "line": 30,
      "hash": "fd59d54405a17ffa69e338194d92f198",
      "textRange": {
        "startLine": 30,
        "endLine": 30,
        "startOffset": 12,
        "endOffset": 65
      },
      "flows": [],
      "status": "OPEN",
      "message": "Replace this generic exception class with a more specific one.",
      "effort": "20min",
      "debt": "20min",
      "author": "user@comma.ai",
      "tags": [
        "cwe",
        "error-handling"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "ce080aa3-84c3-4a73-9bbc-a248e4d453ca",
      "rule": "python:S3776",
      "severity": "CRITICAL",
      "component": "openpilot:panda/tests/canfd/test_canfd.py",
      "project": "openpilot",
      "line": 78,
      "hash": "3901bb6944a3581d387534517b2dab02",
      "textRange": {
        "startLine": 78,
        "endLine": 78,
        "startOffset": 4,
        "endOffset": 14
      },
      "flows": [
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/canfd/test_canfd.py",
              "textRange": {
                "startLine": 79,
                "endLine": 79,
                "startOffset": 2,
                "endOffset": 5
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/canfd/test_canfd.py",
              "textRange": {
                "startLine": 82,
                "endLine": 82,
                "startOffset": 4,
                "endOffset": 7
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/canfd/test_canfd.py",
              "textRange": {
                "startLine": 84,
                "endLine": 84,
                "startOffset": 6,
                "endOffset": 9
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/canfd/test_canfd.py",
              "textRange": {
                "startLine": 87,
                "endLine": 87,
                "startOffset": 8,
                "endOffset": 10
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/canfd/test_canfd.py",
              "textRange": {
                "startLine": 95,
                "endLine": 95,
                "startOffset": 4,
                "endOffset": 9
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/canfd/test_canfd.py",
              "textRange": {
                "startLine": 95,
                "endLine": 95,
                "startOffset": 46,
                "endOffset": 49
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/canfd/test_canfd.py",
              "textRange": {
                "startLine": 97,
                "endLine": 97,
                "startOffset": 6,
                "endOffset": 9
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/canfd/test_canfd.py",
              "textRange": {
                "startLine": 99,
                "endLine": 99,
                "startOffset": 8,
                "endOffset": 10
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/canfd/test_canfd.py",
              "textRange": {
                "startLine": 105,
                "endLine": 105,
                "startOffset": 4,
                "endOffset": 7
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Refactor this function to reduce its Cognitive Complexity from 22 to the 15 allowed.",
      "effort": "12min",
      "debt": "12min",
      "author": "user@comma.ai",
      "tags": [
        "brain-overload"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "FOCUSED",
      "cleanCodeAttributeCategory": "ADAPTABLE",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "HIGH"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "1602d7b6-ce39-4443-957e-2a0b798fee9d",
      "rule": "python:S3776",
      "severity": "CRITICAL",
      "component": "openpilot:panda/tests/check_fw_size.py",
      "project": "openpilot",
      "line": 6,
      "hash": "81dbc02cecc7bde6ccc305d749185808",
      "textRange": {
        "startLine": 6,
        "endLine": 6,
        "startOffset": 4,
        "endOffset": 15
      },
      "flows": [
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/check_fw_size.py",
              "textRange": {
                "startLine": 55,
                "endLine": 55,
                "startOffset": 2,
                "endOffset": 5
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/check_fw_size.py",
              "textRange": {
                "startLine": 58,
                "endLine": 58,
                "startOffset": 4,
                "endOffset": 6
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/check_fw_size.py",
              "textRange": {
                "startLine": 58,
                "endLine": 58,
                "startOffset": 22,
                "endOffset": 25
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/check_fw_size.py",
              "textRange": {
                "startLine": 59,
                "endLine": 59,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/check_fw_size.py",
              "textRange": {
                "startLine": 62,
                "endLine": 62,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/check_fw_size.py",
              "textRange": {
                "startLine": 65,
                "endLine": 65,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/check_fw_size.py",
              "textRange": {
                "startLine": 68,
                "endLine": 68,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/check_fw_size.py",
              "textRange": {
                "startLine": 71,
                "endLine": 71,
                "startOffset": 2,
                "endOffset": 4
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/check_fw_size.py",
              "textRange": {
                "startLine": 72,
                "endLine": 72,
                "startOffset": 4,
                "endOffset": 7
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/check_fw_size.py",
              "textRange": {
                "startLine": 76,
                "endLine": 76,
                "startOffset": 2,
                "endOffset": 5
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/check_fw_size.py",
              "textRange": {
                "startLine": 77,
                "endLine": 77,
                "startOffset": 4,
                "endOffset": 6
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/check_fw_size.py",
              "textRange": {
                "startLine": 80,
                "endLine": 80,
                "startOffset": 4,
                "endOffset": 8
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Refactor this function to reduce its Cognitive Complexity from 23 to the 15 allowed.",
      "effort": "13min",
      "debt": "13min",
      "author": "user@comma.ai",
      "tags": [
        "brain-overload"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "FOCUSED",
      "cleanCodeAttributeCategory": "ADAPTABLE",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "HIGH"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "c64c6c34-da45-46ec-a469-2a29bc815623",
      "rule": "python:S1192",
      "severity": "CRITICAL",
      "component": "openpilot:panda/tests/check_fw_size.py",
      "project": "openpilot",
      "line": 9,
      "hash": "3c4846e526007b40fdfbfa885a35441c",
      "textRange": {
        "startLine": 9,
        "endLine": 9,
        "startOffset": 6,
        "endOffset": 14
      },
      "flows": [
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/check_fw_size.py",
              "textRange": {
                "startLine": 18,
                "endLine": 18,
                "startOffset": 6,
                "endOffset": 14
              },
              "msg": "Duplication",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/check_fw_size.py",
              "textRange": {
                "startLine": 63,
                "endLine": 63,
                "startOffset": 14,
                "endOffset": 22
              },
              "msg": "Duplication",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Define a constant instead of duplicating this literal \".flash\" 3 times.",
      "effort": "6min",
      "debt": "6min",
      "author": "user@comma.ai",
      "tags": [
        "design"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "DISTINCT",
      "cleanCodeAttributeCategory": "ADAPTABLE",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "HIGH"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "dfff3b57-f058-494d-b5ba-20f45e0d55be",
      "rule": "python:S1192",
      "severity": "CRITICAL",
      "component": "openpilot:panda/tests/check_fw_size.py",
      "project": "openpilot",
      "line": 10,
      "hash": "c40bfacc1156628076b42094e29fb40d",
      "textRange": {
        "startLine": 10,
        "endLine": 10,
        "startOffset": 6,
        "endOffset": 16
      },
      "flows": [
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/check_fw_size.py",
              "textRange": {
                "startLine": 19,
                "endLine": 19,
                "startOffset": 6,
                "endOffset": 16
              },
              "msg": "Duplication",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/check_fw_size.py",
              "textRange": {
                "startLine": 66,
                "endLine": 66,
                "startOffset": 14,
                "endOffset": 24
              },
              "msg": "Duplication",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Define a constant instead of duplicating this literal \".dtcmram\" 3 times.",
      "effort": "6min",
      "debt": "6min",
      "author": "user@comma.ai",
      "tags": [
        "design"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "DISTINCT",
      "cleanCodeAttributeCategory": "ADAPTABLE",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "HIGH"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "61ef7bf9-53c4-4973-a41b-ba4faede9112",
      "rule": "python:S4487",
      "severity": "CRITICAL",
      "component": "openpilot:panda/tests/elm_car_simulator.py",
      "project": "openpilot",
      "line": 28,
      "hash": "eb1b0d0dc179863ef2908c9678c8154b",
      "textRange": {
        "startLine": 28,
        "endLine": 28,
        "startOffset": 13,
        "endOffset": 25
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove this unread private attribute '__lin_active' or refactor the code to use its value.",
      "effort": "5min",
      "debt": "5min",
      "author": "user@comma.ai",
      "tags": [
        "cwe",
        "unused"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "CLEAR",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "HIGH"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "730c8608-90c5-43a0-b46a-f668fa94a58f",
      "rule": "python:S1172",
      "severity": "MAJOR",
      "component": "openpilot:panda/tests/elm_car_simulator.py",
      "project": "openpilot",
      "line": 123,
      "hash": "c465100ac58695a34cb868cf198c3de6",
      "textRange": {
        "startLine": 123,
        "endLine": 123,
        "startOffset": 52,
        "endOffset": 54
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove the unused function parameter \"ts\".",
      "effort": "5min",
      "debt": "5min",
      "author": "user@comma.ai",
      "tags": [
        "unused"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "CLEAR",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "79a0b021-bafe-4fd8-ae64-ded1ebc22b3d",
      "rule": "python:S1172",
      "severity": "MAJOR",
      "component": "openpilot:panda/tests/elm_car_simulator.py",
      "project": "openpilot",
      "line": 123,
      "hash": "c465100ac58695a34cb868cf198c3de6",
      "textRange": {
        "startLine": 123,
        "endLine": 123,
        "startOffset": 62,
        "endOffset": 65
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove the unused function parameter \"src\".",
      "effort": "5min",
      "debt": "5min",
      "author": "user@comma.ai",
      "tags": [
        "unused"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "CLEAR",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "ccb1bb09-32f0-4bc7-a55b-c4c4960805b6",
      "rule": "python:S3776",
      "severity": "CRITICAL",
      "component": "openpilot:panda/tests/elm_car_simulator.py",
      "project": "openpilot",
      "line": 123,
      "hash": "c465100ac58695a34cb868cf198c3de6",
      "textRange": {
        "startLine": 123,
        "endLine": 123,
        "startOffset": 8,
        "endOffset": 25
      },
      "flows": [
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 124,
                "endLine": 124,
                "startOffset": 8,
                "endOffset": 10
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 130,
                "endLine": 130,
                "startOffset": 8,
                "endOffset": 10
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 130,
                "endLine": 130,
                "startOffset": 43,
                "endOffset": 46
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 132,
                "endLine": 132,
                "startOffset": 12,
                "endOffset": 14
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 132,
                "endLine": 132,
                "startOffset": 43,
                "endOffset": 46
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 133,
                "endLine": 133,
                "startOffset": 16,
                "endOffset": 18
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 135,
                "endLine": 135,
                "startOffset": 32,
                "endOffset": 34
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 135,
                "endLine": 135,
                "startOffset": 52,
                "endOffset": 54
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 137,
                "endLine": 137,
                "startOffset": 16,
                "endOffset": 21
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 145,
                "endLine": 145,
                "startOffset": 12,
                "endOffset": 16
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 148,
                "endLine": 148,
                "startOffset": 12,
                "endOffset": 14
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 149,
                "endLine": 149,
                "startOffset": 32,
                "endOffset": 34
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 149,
                "endLine": 149,
                "startOffset": 52,
                "endOffset": 54
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 151,
                "endLine": 151,
                "startOffset": 16,
                "endOffset": 18
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 154,
                "endLine": 154,
                "startOffset": 16,
                "endOffset": 20
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Refactor this function to reduce its Cognitive Complexity from 27 to the 15 allowed.",
      "effort": "17min",
      "debt": "17min",
      "author": "user@comma.ai",
      "tags": [
        "brain-overload"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "FOCUSED",
      "cleanCodeAttributeCategory": "ADAPTABLE",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "HIGH"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "d1d36eed-df99-4e56-b4bb-2c629f05d766",
      "rule": "python:S3776",
      "severity": "CRITICAL",
      "component": "openpilot:panda/tests/elm_car_simulator.py",
      "project": "openpilot",
      "line": 167,
      "hash": "b7288f2b3e44a86f7350c125d60a38d3",
      "textRange": {
        "startLine": 167,
        "endLine": 167,
        "startOffset": 8,
        "endOffset": 20
      },
      "flows": [
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 168,
                "endLine": 168,
                "startOffset": 8,
                "endOffset": 10
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 169,
                "endLine": 169,
                "startOffset": 12,
                "endOffset": 14
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 171,
                "endLine": 171,
                "startOffset": 12,
                "endOffset": 16
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 173,
                "endLine": 173,
                "startOffset": 12,
                "endOffset": 16
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 175,
                "endLine": 175,
                "startOffset": 12,
                "endOffset": 16
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 177,
                "endLine": 177,
                "startOffset": 12,
                "endOffset": 16
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 179,
                "endLine": 179,
                "startOffset": 12,
                "endOffset": 16
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 181,
                "endLine": 181,
                "startOffset": 12,
                "endOffset": 16
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 183,
                "endLine": 183,
                "startOffset": 12,
                "endOffset": 16
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 185,
                "endLine": 185,
                "startOffset": 12,
                "endOffset": 16
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 187,
                "endLine": 187,
                "startOffset": 12,
                "endOffset": 16
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 189,
                "endLine": 189,
                "startOffset": 8,
                "endOffset": 12
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 190,
                "endLine": 190,
                "startOffset": 12,
                "endOffset": 14
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 192,
                "endLine": 192,
                "startOffset": 12,
                "endOffset": 14
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 194,
                "endLine": 194,
                "startOffset": 12,
                "endOffset": 14
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 197,
                "endLine": 197,
                "startOffset": 12,
                "endOffset": 14
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/elm_car_simulator.py",
              "textRange": {
                "startLine": 200,
                "endLine": 200,
                "startOffset": 12,
                "endOffset": 14
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Refactor this function to reduce its Cognitive Complexity from 23 to the 15 allowed.",
      "effort": "13min",
      "debt": "13min",
      "author": "user@comma.ai",
      "tags": [
        "brain-overload"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "FOCUSED",
      "cleanCodeAttributeCategory": "ADAPTABLE",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "HIGH"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "ba8faa1d-b3fb-4bec-9b1b-d514db3bbb62",
      "rule": "python:S125",
      "severity": "MAJOR",
      "component": "openpilot:panda/tests/elm_car_simulator.py",
      "project": "openpilot",
      "line": 203,
      "hash": "1000d49e2405f4e3bda297efb16d0fe2",
      "textRange": {
        "startLine": 203,
        "endLine": 203,
        "startOffset": 16,
        "endOffset": 45
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove this commented out code.",
      "effort": "5min",
      "debt": "5min",
      "author": "user@comma.ai",
      "tags": [
        "unused"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "CLEAR",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "2d8e3346-395d-4b6d-8cb6-47e727c9aa1d",
      "rule": "python:S1135",
      "severity": "INFO",
      "component": "openpilot:panda/tests/hitl/1_program.py",
      "project": "openpilot",
      "line": 30,
      "hash": "a37c2ea5a0f55b61dd760760a402f34e",
      "textRange": {
        "startLine": 30,
        "endLine": 30,
        "startOffset": 0,
        "endOffset": 89
      },
      "flows": [],
      "status": "OPEN",
      "message": "Complete the task associated to this \"TODO\" comment.",
      "effort": "0min",
      "debt": "0min",
      "author": "user@comma.ai",
      "tags": [
        "cwe"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "a62423a5-67e2-4728-8ef0-bd3ae95a03cf",
      "rule": "python:S1135",
      "severity": "INFO",
      "component": "openpilot:panda/tests/hitl/1_program.py",
      "project": "openpilot",
      "line": 31,
      "hash": "af63b6ac1bd4629dd4d3e8d0ef78018e",
      "textRange": {
        "startLine": 31,
        "endLine": 31,
        "startOffset": 0,
        "endOffset": 36
      },
      "flows": [],
      "status": "OPEN",
      "message": "Complete the task associated to this \"TODO\" comment.",
      "effort": "0min",
      "debt": "0min",
      "author": "user@comma.ai",
      "tags": [
        "cwe"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "7eb54e89-1932-4d83-abbc-04d44740e108",
      "rule": "python:S1135",
      "severity": "INFO",
      "component": "openpilot:panda/tests/hitl/2_health.py",
      "project": "openpilot",
      "line": 38,
      "hash": "28e445ec72c0fb37cb242a034baa475d",
      "textRange": {
        "startLine": 38,
        "endLine": 38,
        "startOffset": 2,
        "endOffset": 62
      },
      "flows": [],
      "status": "OPEN",
      "message": "Complete the task associated to this \"TODO\" comment.",
      "effort": "0min",
      "debt": "0min",
      "author": "user@comma.ai",
      "tags": [
        "cwe"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "d08670b7-f12a-4edd-a029-1d7b5940bbdf",
      "rule": "python:S3776",
      "severity": "CRITICAL",
      "component": "openpilot:panda/tests/hitl/4_can_loopback.py",
      "project": "openpilot",
      "line": 37,
      "hash": "90750e7a9b9c8e8ed9acc4475a2d70ac",
      "textRange": {
        "startLine": 37,
        "endLine": 37,
        "startOffset": 4,
        "endOffset": 16
      },
      "flows": [
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/4_can_loopback.py",
              "textRange": {
                "startLine": 39,
                "endLine": 39,
                "startOffset": 4,
                "endOffset": 7
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/4_can_loopback.py",
              "textRange": {
                "startLine": 40,
                "endLine": 40,
                "startOffset": 6,
                "endOffset": 9
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/4_can_loopback.py",
              "textRange": {
                "startLine": 50,
                "endLine": 50,
                "startOffset": 8,
                "endOffset": 11
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/4_can_loopback.py",
              "textRange": {
                "startLine": 54,
                "endLine": 54,
                "startOffset": 10,
                "endOffset": 15
              },
              "msg": "+5 (incl 4 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/4_can_loopback.py",
              "textRange": {
                "startLine": 54,
                "endLine": 54,
                "startOffset": 27,
                "endOffset": 30
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/4_can_loopback.py",
              "textRange": {
                "startLine": 58,
                "endLine": 58,
                "startOffset": 10,
                "endOffset": 15
              },
              "msg": "+5 (incl 4 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/4_can_loopback.py",
              "textRange": {
                "startLine": 58,
                "endLine": 58,
                "startOffset": 32,
                "endOffset": 35
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/4_can_loopback.py",
              "textRange": {
                "startLine": 61,
                "endLine": 61,
                "startOffset": 10,
                "endOffset": 12
              },
              "msg": "+5 (incl 4 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/4_can_loopback.py",
              "textRange": {
                "startLine": 61,
                "endLine": 61,
                "startOffset": 25,
                "endOffset": 27
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Refactor this function to reduce its Cognitive Complexity from 27 to the 15 allowed.",
      "effort": "17min",
      "debt": "17min",
      "author": "user@comma.ai",
      "tags": [
        "brain-overload"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "FOCUSED",
      "cleanCodeAttributeCategory": "ADAPTABLE",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "HIGH"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "61db0126-d24e-4b12-b937-1209e21bf218",
      "rule": "python:S1135",
      "severity": "INFO",
      "component": "openpilot:panda/tests/hitl/4_can_loopback.py",
      "project": "openpilot",
      "line": 138,
      "hash": "058650a0b352572047901b49d98e3291",
      "textRange": {
        "startLine": 138,
        "endLine": 138,
        "startOffset": 2,
        "endOffset": 54
      },
      "flows": [],
      "status": "OPEN",
      "message": "Complete the task associated to this \"TODO\" comment.",
      "effort": "0min",
      "debt": "0min",
      "author": "user@comma.ai",
      "tags": [
        "cwe"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "e1f27996-2fb5-4b22-877c-4afe2fc56be9",
      "rule": "python:S112",
      "severity": "MAJOR",
      "component": "openpilot:panda/tests/hitl/4_can_loopback.py",
      "project": "openpilot",
      "line": 175,
      "hash": "b559c877c66af5980170cc7ce97b621e",
      "textRange": {
        "startLine": 175,
        "endLine": 175,
        "startOffset": 10,
        "endOffset": 52
      },
      "flows": [],
      "status": "OPEN",
      "message": "Replace this generic exception class with a more specific one.",
      "effort": "20min",
      "debt": "20min",
      "author": "user@comma.ai",
      "tags": [
        "cwe",
        "error-handling"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "ce930bef-0f3b-45d1-bf65-a23a710c37f7",
      "rule": "python:S3776",
      "severity": "CRITICAL",
      "component": "openpilot:panda/tests/hitl/4_can_loopback.py",
      "project": "openpilot",
      "line": 177,
      "hash": "bf7f6c48681456d6aba7cf76ea6c2515",
      "textRange": {
        "startLine": 177,
        "endLine": 177,
        "startOffset": 4,
        "endOffset": 26
      },
      "flows": [
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/4_can_loopback.py",
              "textRange": {
                "startLine": 180,
                "endLine": 180,
                "startOffset": 2,
                "endOffset": 5
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/4_can_loopback.py",
              "textRange": {
                "startLine": 182,
                "endLine": 182,
                "startOffset": 4,
                "endOffset": 7
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/4_can_loopback.py",
              "textRange": {
                "startLine": 184,
                "endLine": 184,
                "startOffset": 6,
                "endOffset": 9
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/4_can_loopback.py",
              "textRange": {
                "startLine": 189,
                "endLine": 189,
                "startOffset": 4,
                "endOffset": 9
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/4_can_loopback.py",
              "textRange": {
                "startLine": 189,
                "endLine": 189,
                "startOffset": 44,
                "endOffset": 47
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/4_can_loopback.py",
              "textRange": {
                "startLine": 191,
                "endLine": 191,
                "startOffset": 6,
                "endOffset": 9
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/4_can_loopback.py",
              "textRange": {
                "startLine": 192,
                "endLine": 192,
                "startOffset": 8,
                "endOffset": 10
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/4_can_loopback.py",
              "textRange": {
                "startLine": 199,
                "endLine": 199,
                "startOffset": 4,
                "endOffset": 7
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Refactor this function to reduce its Cognitive Complexity from 18 to the 15 allowed.",
      "effort": "8min",
      "debt": "8min",
      "author": "user@comma.ai",
      "tags": [
        "brain-overload"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "FOCUSED",
      "cleanCodeAttributeCategory": "ADAPTABLE",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "HIGH"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "49240049-10d3-410f-8ef7-a64c55a17b39",
      "rule": "python:S1135",
      "severity": "INFO",
      "component": "openpilot:panda/tests/hitl/9_harness.py",
      "project": "openpilot",
      "line": 8,
      "hash": "4afc83b2837dbbc99107e2b4446b3737",
      "textRange": {
        "startLine": 8,
        "endLine": 8,
        "startOffset": 0,
        "endOffset": 18
      },
      "flows": [],
      "status": "OPEN",
      "message": "Complete the task associated to this \"TODO\" comment.",
      "effort": "0min",
      "debt": "0min",
      "author": "user@comma.ai",
      "tags": [
        "cwe"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "932f752c-1f83-4dea-87db-f9c15983d403",
      "rule": "python:S3776",
      "severity": "CRITICAL",
      "component": "openpilot:panda/tests/hitl/9_harness.py",
      "project": "openpilot",
      "line": 12,
      "hash": "fa7d54e4a028403348186add78d7e747",
      "textRange": {
        "startLine": 12,
        "endLine": 12,
        "startOffset": 4,
        "endOffset": 23
      },
      "flows": [
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/9_harness.py",
              "textRange": {
                "startLine": 20,
                "endLine": 20,
                "startOffset": 2,
                "endOffset": 5
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/9_harness.py",
              "textRange": {
                "startLine": 33,
                "endLine": 33,
                "startOffset": 4,
                "endOffset": 6
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/9_harness.py",
              "textRange": {
                "startLine": 45,
                "endLine": 45,
                "startOffset": 45,
                "endOffset": 47
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/9_harness.py",
              "textRange": {
                "startLine": 48,
                "endLine": 48,
                "startOffset": 4,
                "endOffset": 6
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/9_harness.py",
              "textRange": {
                "startLine": 49,
                "endLine": 49,
                "startOffset": 6,
                "endOffset": 9
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/9_harness.py",
              "textRange": {
                "startLine": 59,
                "endLine": 59,
                "startOffset": 28,
                "endOffset": 30
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/9_harness.py",
              "textRange": {
                "startLine": 60,
                "endLine": 60,
                "startOffset": 28,
                "endOffset": 30
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/9_harness.py",
              "textRange": {
                "startLine": 63,
                "endLine": 63,
                "startOffset": 29,
                "endOffset": 31
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/9_harness.py",
              "textRange": {
                "startLine": 65,
                "endLine": 65,
                "startOffset": 4,
                "endOffset": 6
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/9_harness.py",
              "textRange": {
                "startLine": 68,
                "endLine": 68,
                "startOffset": 4,
                "endOffset": 8
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/9_harness.py",
              "textRange": {
                "startLine": 69,
                "endLine": 69,
                "startOffset": 37,
                "endOffset": 39
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/9_harness.py",
              "textRange": {
                "startLine": 70,
                "endLine": 70,
                "startOffset": 40,
                "endOffset": 42
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/9_harness.py",
              "textRange": {
                "startLine": 74,
                "endLine": 74,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/9_harness.py",
              "textRange": {
                "startLine": 76,
                "endLine": 76,
                "startOffset": 6,
                "endOffset": 10
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Refactor this function to reduce its Cognitive Complexity from 31 to the 15 allowed.",
      "effort": "21min",
      "debt": "21min",
      "author": "user@comma.ai",
      "tags": [
        "brain-overload"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "FOCUSED",
      "cleanCodeAttributeCategory": "ADAPTABLE",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "HIGH"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "3159fda4-9b97-4bbb-8c66-8b4d1828da2f",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "openpilot:panda/tests/hitl/9_harness.py",
      "project": "openpilot",
      "line": 63,
      "hash": "fa4982669adb591f5266153d7ccf75c0",
      "textRange": {
        "startLine": 63,
        "endLine": 63,
        "startOffset": 4,
        "endOffset": 21
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"supply_voltage_mV\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "user@comma.ai",
      "tags": [
        "convention"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "IDENTIFIABLE",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "7ee3df00-88e3-4e42-9f3c-e172bbdab7aa",
      "rule": "python:S1135",
      "severity": "INFO",
      "component": "openpilot:panda/tests/hitl/conftest.py",
      "project": "openpilot",
      "line": 106,
      "hash": "f2ec703cfd155a2b0bb071a57508cf96",
      "textRange": {
        "startLine": 106,
        "endLine": 106,
        "startOffset": 4,
        "endOffset": 42
      },
      "flows": [],
      "status": "OPEN",
      "message": "Complete the task associated to this \"TODO\" comment.",
      "effort": "0min",
      "debt": "0min",
      "author": "user@comma.ai",
      "tags": [
        "cwe"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "ab262ff7-0591-44ef-9c84-a115857fa0ff",
      "rule": "python:S1135",
      "severity": "INFO",
      "component": "openpilot:panda/tests/hitl/conftest.py",
      "project": "openpilot",
      "line": 159,
      "hash": "85d5d283bd468ba01b57c043d233963b",
      "textRange": {
        "startLine": 159,
        "endLine": 159,
        "startOffset": 2,
        "endOffset": 67
      },
      "flows": [],
      "status": "OPEN",
      "message": "Complete the task associated to this \"TODO\" comment.",
      "effort": "0min",
      "debt": "0min",
      "author": "user@comma.ai",
      "tags": [
        "cwe"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "f7a93e01-1bd5-4796-91bd-3994ddd1da1a",
      "rule": "python:S3776",
      "severity": "CRITICAL",
      "component": "openpilot:panda/tests/hitl/helpers.py",
      "project": "openpilot",
      "line": 15,
      "hash": "c48eebabdfa8d0f59d27ecb20b579f81",
      "textRange": {
        "startLine": 15,
        "endLine": 15,
        "startOffset": 4,
        "endOffset": 19
      },
      "flows": [
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/helpers.py",
              "textRange": {
                "startLine": 16,
                "endLine": 16,
                "startOffset": 2,
                "endOffset": 4
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/helpers.py",
              "textRange": {
                "startLine": 18,
                "endLine": 18,
                "startOffset": 2,
                "endOffset": 4
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/helpers.py",
              "textRange": {
                "startLine": 18,
                "endLine": 18,
                "startOffset": 17,
                "endOffset": 20
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/helpers.py",
              "textRange": {
                "startLine": 28,
                "endLine": 28,
                "startOffset": 29,
                "endOffset": 31
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/helpers.py",
              "textRange": {
                "startLine": 29,
                "endLine": 29,
                "startOffset": 33,
                "endOffset": 35
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/helpers.py",
              "textRange": {
                "startLine": 31,
                "endLine": 31,
                "startOffset": 2,
                "endOffset": 7
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/helpers.py",
              "textRange": {
                "startLine": 31,
                "endLine": 31,
                "startOffset": 32,
                "endOffset": 35
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/helpers.py",
              "textRange": {
                "startLine": 34,
                "endLine": 34,
                "startOffset": 2,
                "endOffset": 4
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/helpers.py",
              "textRange": {
                "startLine": 35,
                "endLine": 35,
                "startOffset": 4,
                "endOffset": 9
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/helpers.py",
              "textRange": {
                "startLine": 35,
                "endLine": 35,
                "startOffset": 43,
                "endOffset": 46
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/helpers.py",
              "textRange": {
                "startLine": 38,
                "endLine": 38,
                "startOffset": 50,
                "endOffset": 53
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/helpers.py",
              "textRange": {
                "startLine": 39,
                "endLine": 39,
                "startOffset": 60,
                "endOffset": 63
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/helpers.py",
              "textRange": {
                "startLine": 40,
                "endLine": 40,
                "startOffset": 38,
                "endOffset": 41
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/helpers.py",
              "textRange": {
                "startLine": 42,
                "endLine": 42,
                "startOffset": 68,
                "endOffset": 70
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/hitl/helpers.py",
              "textRange": {
                "startLine": 42,
                "endLine": 42,
                "startOffset": 51,
                "endOffset": 54
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Refactor this function to reduce its Cognitive Complexity from 16 to the 15 allowed.",
      "effort": "6min",
      "debt": "6min",
      "author": "user@comma.ai",
      "tags": [
        "brain-overload"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "FOCUSED",
      "cleanCodeAttributeCategory": "ADAPTABLE",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "HIGH"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "e6448ed9-428b-47fb-8f54-5367ae285a87",
      "rule": "python:S112",
      "severity": "MAJOR",
      "component": "openpilot:panda/tests/hitl/helpers.py",
      "project": "openpilot",
      "line": 71,
      "hash": "591d8ff415ea96b45206f1180ebe05b1",
      "textRange": {
        "startLine": 71,
        "endLine": 71,
        "startOffset": 12,
        "endOffset": 83
      },
      "flows": [],
      "status": "OPEN",
      "message": "Replace this generic exception class with a more specific one.",
      "effort": "20min",
      "debt": "20min",
      "author": "user@comma.ai",
      "tags": [
        "cwe",
        "error-handling"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "741b66bd-68ab-4eab-ba68-4e5eac519988",
      "rule": "python:S5890",
      "severity": "MAJOR",
      "component": "openpilot:panda/tests/libpanda/libpanda_py.py",
      "project": "openpilot",
      "line": 82,
      "hash": "4cc4f30058ef4501c17c0d07cc57cdfe",
      "textRange": {
        "startLine": 82,
        "endLine": 82,
        "startOffset": 18,
        "endOffset": 41
      },
      "flows": [
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/libpanda/libpanda_py.py",
              "textRange": {
                "startLine": 82,
                "endLine": 82,
                "startOffset": 10,
                "endOffset": 15
              },
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Assign to \"libpanda\" a value of type \"Panda\" instead of \"Lib\" or update its type hint.",
      "effort": "5min",
      "debt": "5min",
      "author": "user@comma.ai",
      "tags": [],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "LOGICAL",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "70ce70b4-e5e5-44d1-acdb-947cebfe3259",
      "rule": "python:S1542",
      "severity": "MAJOR",
      "component": "openpilot:panda/tests/libpanda/libpanda_py.py",
      "project": "openpilot",
      "line": 87,
      "hash": "e224e6ca7940e0136c1bdea1991a66a4",
      "textRange": {
        "startLine": 87,
        "endLine": 87,
        "startOffset": 4,
        "endOffset": 18
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename function \"make_CANPacket\" to match the regular expression ^[a-z_][a-z0-9_]*$.",
      "effort": "10min",
      "debt": "10min",
      "author": "user@comma.ai",
      "tags": [
        "convention"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "IDENTIFIABLE",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "bfb20e51-c9a4-4add-a6a8-da0064729ebf",
      "rule": "python:S112",
      "severity": "MAJOR",
      "component": "openpilot:panda/tests/loopback_test.py",
      "project": "openpilot",
      "line": 19,
      "hash": "bfc5847dd9e8e6e38e3e441db42d7264",
      "textRange": {
        "startLine": 19,
        "endLine": 19,
        "startOffset": 10,
        "endOffset": 61
      },
      "flows": [],
      "status": "OPEN",
      "message": "Replace this generic exception class with a more specific one.",
      "effort": "20min",
      "debt": "20min",
      "author": "user@comma.ai",
      "tags": [
        "cwe",
        "error-handling"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "f74c50f5-73ad-4e8d-8ba1-43cbe7ee81c4",
      "rule": "python:S1854",
      "severity": "MAJOR",
      "component": "openpilot:panda/tests/loopback_test.py",
      "project": "openpilot",
      "line": 43,
      "hash": "9d9dce908d0eb69472f2bef2dbf4c87b",
      "textRange": {
        "startLine": 43,
        "endLine": 43,
        "startOffset": 6,
        "endOffset": 35
      },
      "flows": [
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/loopback_test.py",
              "textRange": {
                "startLine": 61,
                "endLine": 61,
                "startOffset": 6,
                "endOffset": 35
              },
              "msg": "'cans_echo' is reassigned here.",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Remove this assignment to local variable 'cans_echo'; the value is never used.",
      "effort": "1min",
      "debt": "1min",
      "author": "user@comma.ai",
      "tags": [
        "cwe",
        "unused"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "LOGICAL",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "4ed185eb-8ed5-4e55-a6f7-8ee2190727fd",
      "rule": "python:S1854",
      "severity": "MAJOR",
      "component": "openpilot:panda/tests/loopback_test.py",
      "project": "openpilot",
      "line": 44,
      "hash": "fb9559e3e269b189b8f5ff0a994aea74",
      "textRange": {
        "startLine": 44,
        "endLine": 44,
        "startOffset": 6,
        "endOffset": 35
      },
      "flows": [
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/loopback_test.py",
              "textRange": {
                "startLine": 62,
                "endLine": 62,
                "startOffset": 6,
                "endOffset": 35
              },
              "msg": "'cans_loop' is reassigned here.",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Remove this assignment to local variable 'cans_loop'; the value is never used.",
      "effort": "1min",
      "debt": "1min",
      "author": "user@comma.ai",
      "tags": [
        "cwe",
        "unused"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "LOGICAL",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "463ababa-8da9-479f-9381-759117046705",
      "rule": "python:S112",
      "severity": "MAJOR",
      "component": "openpilot:panda/tests/message_drop_test.py",
      "project": "openpilot",
      "line": 44,
      "hash": "fd59d54405a17ffa69e338194d92f198",
      "textRange": {
        "startLine": 44,
        "endLine": 44,
        "startOffset": 12,
        "endOffset": 65
      },
      "flows": [],
      "status": "OPEN",
      "message": "Replace this generic exception class with a more specific one.",
      "effort": "20min",
      "debt": "20min",
      "author": "user@comma.ai",
      "tags": [
        "cwe",
        "error-handling"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "5193e67b-d034-4a60-a7d8-9b6ab9ca1af2",
      "rule": "python:S3776",
      "severity": "CRITICAL",
      "component": "openpilot:panda/tests/safety_replay/replay_drive.py",
      "project": "openpilot",
      "line": 10,
      "hash": "8166aadfc47b80fa38e1c0a1f7b91c4d",
      "textRange": {
        "startLine": 10,
        "endLine": 10,
        "startOffset": 4,
        "endOffset": 16
      },
      "flows": [
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/safety_replay/replay_drive.py",
              "textRange": {
                "startLine": 17,
                "endLine": 17,
                "startOffset": 2,
                "endOffset": 4
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/safety_replay/replay_drive.py",
              "textRange": {
                "startLine": 29,
                "endLine": 29,
                "startOffset": 2,
                "endOffset": 5
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/safety_replay/replay_drive.py",
              "textRange": {
                "startLine": 33,
                "endLine": 33,
                "startOffset": 4,
                "endOffset": 6
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/safety_replay/replay_drive.py",
              "textRange": {
                "startLine": 33,
                "endLine": 33,
                "startOffset": 39,
                "endOffset": 42
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/safety_replay/replay_drive.py",
              "textRange": {
                "startLine": 35,
                "endLine": 35,
                "startOffset": 65,
                "endOffset": 67
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/safety_replay/replay_drive.py",
              "textRange": {
                "startLine": 37,
                "endLine": 37,
                "startOffset": 4,
                "endOffset": 6
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/safety_replay/replay_drive.py",
              "textRange": {
                "startLine": 38,
                "endLine": 38,
                "startOffset": 6,
                "endOffset": 9
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/safety_replay/replay_drive.py",
              "textRange": {
                "startLine": 41,
                "endLine": 41,
                "startOffset": 8,
                "endOffset": 10
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/safety_replay/replay_drive.py",
              "textRange": {
                "startLine": 46,
                "endLine": 46,
                "startOffset": 10,
                "endOffset": 12
              },
              "msg": "+5 (incl 4 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/safety_replay/replay_drive.py",
              "textRange": {
                "startLine": 50,
                "endLine": 50,
                "startOffset": 4,
                "endOffset": 8
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/safety_replay/replay_drive.py",
              "textRange": {
                "startLine": 52,
                "endLine": 52,
                "startOffset": 6,
                "endOffset": 9
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/safety_replay/replay_drive.py",
              "textRange": {
                "startLine": 55,
                "endLine": 55,
                "startOffset": 8,
                "endOffset": 10
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/safety_replay/replay_drive.py",
              "textRange": {
                "startLine": 72,
                "endLine": 72,
                "startOffset": 54,
                "endOffset": 57
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Refactor this function to reduce its Cognitive Complexity from 29 to the 15 allowed.",
      "effort": "19min",
      "debt": "19min",
      "author": "user@comma.ai",
      "tags": [
        "brain-overload"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "FOCUSED",
      "cleanCodeAttributeCategory": "ADAPTABLE",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "HIGH"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "bf8c88a2-5feb-4c85-8b1a-35f23e8ecc93",
      "rule": "python:S112",
      "severity": "MAJOR",
      "component": "openpilot:panda/tests/safety_replay/replay_drive.py",
      "project": "openpilot",
      "line": 98,
      "hash": "19abff82cdb85808b00d751a2a551e1b",
      "textRange": {
        "startLine": 98,
        "endLine": 98,
        "startOffset": 12,
        "endOffset": 88
      },
      "flows": [],
      "status": "OPEN",
      "message": "Replace this generic exception class with a more specific one.",
      "effort": "20min",
      "debt": "20min",
      "author": "user@comma.ai",
      "tags": [
        "cwe",
        "error-handling"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "8b97b5f0-98f0-48db-8021-d1d791a79681",
      "rule": "python:S112",
      "severity": "MAJOR",
      "component": "openpilot:panda/tests/som/test_bootkick.py",
      "project": "openpilot",
      "line": 63,
      "hash": "4248b46d6a8378fb2cfe59e617f62334",
      "textRange": {
        "startLine": 63,
        "endLine": 63,
        "startOffset": 12,
        "endOffset": 52
      },
      "flows": [],
      "status": "OPEN",
      "message": "Replace this generic exception class with a more specific one.",
      "effort": "20min",
      "debt": "20min",
      "author": "user@comma.ai",
      "tags": [
        "cwe",
        "error-handling"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "9e59bfc3-b573-4633-b20c-312239ab5132",
      "rule": "python:S112",
      "severity": "MAJOR",
      "component": "openpilot:panda/tests/som/test_bootkick.py",
      "project": "openpilot",
      "line": 65,
      "hash": "22fa42c766669402723b5adef4a9ed19",
      "textRange": {
        "startLine": 65,
        "endLine": 65,
        "startOffset": 12,
        "endOffset": 84
      },
      "flows": [],
      "status": "OPEN",
      "message": "Replace this generic exception class with a more specific one.",
      "effort": "20min",
      "debt": "20min",
      "author": "user@comma.ai",
      "tags": [
        "cwe",
        "error-handling"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "8986f39f-ba1e-424f-b987-890ae783afef",
      "rule": "python:S112",
      "severity": "MAJOR",
      "component": "openpilot:panda/tests/som/test_bootkick.py",
      "project": "openpilot",
      "line": 78,
      "hash": "c9e4bd1bcf1adf2359c2e14026a997ab",
      "textRange": {
        "startLine": 78,
        "endLine": 78,
        "startOffset": 12,
        "endOffset": 61
      },
      "flows": [],
      "status": "OPEN",
      "message": "Replace this generic exception class with a more specific one.",
      "effort": "20min",
      "debt": "20min",
      "author": "user@comma.ai",
      "tags": [
        "cwe",
        "error-handling"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "5dfaadff-79a4-4440-807b-6167a33b5877",
      "rule": "python:S1481",
      "severity": "MINOR",
      "component": "openpilot:panda/tests/som/test_bootkick.py",
      "project": "openpilot",
      "line": 100,
      "hash": "eacf1a41b1ed520e835b9094ede2019c",
      "textRange": {
        "startLine": 100,
        "endLine": 100,
        "startOffset": 6,
        "endOffset": 7
      },
      "flows": [],
      "status": "OPEN",
      "message": "Replace the unused loop index \"i\" with \"_\".",
      "effort": "5min",
      "debt": "5min",
      "author": "user@comma.ai",
      "tags": [
        "unused"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "CLEAR",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "79d47789-8067-4478-8fd2-fa332e914de0",
      "rule": "python:S112",
      "severity": "MAJOR",
      "component": "openpilot:panda/tests/som/test_bootkick.py",
      "project": "openpilot",
      "line": 107,
      "hash": "b2a8636e7db82b0c1fccbfa6b45c0871",
      "textRange": {
        "startLine": 107,
        "endLine": 107,
        "startOffset": 12,
        "endOffset": 48
      },
      "flows": [],
      "status": "OPEN",
      "message": "Replace this generic exception class with a more specific one.",
      "effort": "20min",
      "debt": "20min",
      "author": "user@comma.ai",
      "tags": [
        "cwe",
        "error-handling"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "005c0cfb-3057-4c45-900e-9969be91dad9",
      "rule": "python:S3776",
      "severity": "CRITICAL",
      "component": "openpilot:panda/tests/usbprotocol/test_comms.py",
      "project": "openpilot",
      "line": 127,
      "hash": "4f3b5491f3a5fba1d98a8414bef8dc57",
      "textRange": {
        "startLine": 127,
        "endLine": 127,
        "startOffset": 6,
        "endOffset": 26
      },
      "flows": [
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/usbprotocol/test_comms.py",
              "textRange": {
                "startLine": 133,
                "endLine": 133,
                "startOffset": 4,
                "endOffset": 9
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/usbprotocol/test_comms.py",
              "textRange": {
                "startLine": 135,
                "endLine": 135,
                "startOffset": 6,
                "endOffset": 11
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/usbprotocol/test_comms.py",
              "textRange": {
                "startLine": 135,
                "endLine": 135,
                "startOffset": 46,
                "endOffset": 49
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/usbprotocol/test_comms.py",
              "textRange": {
                "startLine": 141,
                "endLine": 141,
                "startOffset": 6,
                "endOffset": 11
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/usbprotocol/test_comms.py",
              "textRange": {
                "startLine": 143,
                "endLine": 143,
                "startOffset": 8,
                "endOffset": 13
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/usbprotocol/test_comms.py",
              "textRange": {
                "startLine": 147,
                "endLine": 147,
                "startOffset": 10,
                "endOffset": 12
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:panda/tests/usbprotocol/test_comms.py",
              "textRange": {
                "startLine": 150,
                "endLine": 150,
                "startOffset": 8,
                "endOffset": 10
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Refactor this function to reduce its Cognitive Complexity from 16 to the 15 allowed.",
      "effort": "6min",
      "debt": "6min",
      "author": "user@comma.ai",
      "tags": [
        "brain-overload"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "FOCUSED",
      "cleanCodeAttributeCategory": "ADAPTABLE",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "HIGH"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "293d3d9f-4fe2-4235-8edd-f140072220ec",
      "rule": "python:S116",
      "severity": "MINOR",
      "component": "openpilot:rednose_repo/examples/live_kf.py",
      "project": "openpilot",
      "line": 107,
      "hash": "fceea2ebfba762b0c91a0439b036470d",
      "textRange": {
        "startLine": 107,
        "endLine": 107,
        "startOffset": 2,
        "endOffset": 16
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this field \"initial_P_diag\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "user@comma.ai",
      "tags": [
        "convention"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "IDENTIFIABLE",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "ed97cb76-0593-4b3d-9337-14439ef7b90d",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "openpilot:rednose_repo/examples/live_kf.py",
      "project": "openpilot",
      "line": 187,
      "hash": "94c6fea222fdfd0560cbf7a988a08fdd",
      "textRange": {
        "startLine": 187,
        "endLine": 187,
        "startOffset": 4,
        "endOffset": 13
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"H_mod_sym\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "user@comma.ai",
      "tags": [
        "convention"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "IDENTIFIABLE",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "edd9ba41-4010-44c7-820f-f259c216cd4c",
      "rule": "python:S100",
      "severity": "MINOR",
      "component": "openpilot:rednose_repo/examples/live_kf.py",
      "project": "openpilot",
      "line": 272,
      "hash": "751a5ddea69a95ccb350a2611a85c180",
      "textRange": {
        "startLine": 272,
        "endLine": 272,
        "startOffset": 6,
        "endOffset": 7
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename method \"P\" to match the regular expression ^[a-z_][a-z0-9_]*$.",
      "effort": "5min",
      "debt": "5min",
      "author": "user@comma.ai",
      "tags": [
        "convention"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "IDENTIFIABLE",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "303e6e88-6a01-49e1-afba-ce6942662957",
      "rule": "python:S100",
      "severity": "MINOR",
      "component": "openpilot:rednose_repo/examples/live_kf.py",
      "project": "openpilot",
      "line": 310,
      "hash": "e73e237ad1869993a0bec1f2773558ab",
      "textRange": {
        "startLine": 310,
        "endLine": 310,
        "startOffset": 6,
        "endOffset": 11
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename method \"get_R\" to match the regular expression ^[a-z_][a-z0-9_]*$.",
      "effort": "5min",
      "debt": "5min",
      "author": "user@comma.ai",
      "tags": [
        "convention"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "IDENTIFIABLE",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "a4f7afda-5bfe-43b8-9095-e6b98ea773de",
      "rule": "python:S116",
      "severity": "MINOR",
      "component": "openpilot:rednose_repo/examples/test_compare.py",
      "project": "openpilot",
      "line": 43,
      "hash": "896d9b1cdab48a112bd1a2503ffda5a5",
      "textRange": {
        "startLine": 43,
        "endLine": 43,
        "startOffset": 2,
        "endOffset": 16
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this field \"initial_P_diag\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "user@comma.ai",
      "tags": [
        "convention"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "IDENTIFIABLE",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "a849e3d3-4449-4dd7-90bd-66e92adfec22",
      "rule": "python:S100",
      "severity": "MINOR",
      "component": "openpilot:rednose_repo/examples/test_compare.py",
      "project": "openpilot",
      "line": 77,
      "hash": "e73e237ad1869993a0bec1f2773558ab",
      "textRange": {
        "startLine": 77,
        "endLine": 77,
        "startOffset": 6,
        "endOffset": 11
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename method \"get_R\" to match the regular expression ^[a-z_][a-z0-9_]*$.",
      "effort": "5min",
      "debt": "5min",
      "author": "user@comma.ai",
      "tags": [
        "convention"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "IDENTIFIABLE",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "20c8a71d-aee9-4b8b-b93c-d2c1f9616c69",
      "rule": "python:S6711",
      "severity": "MAJOR",
      "component": "openpilot:rednose_repo/examples/test_compare.py",
      "project": "openpilot",
      "line": 110,
      "hash": "bc593f7ad27b1c251240d272c143849e",
      "textRange": {
        "startLine": 110,
        "endLine": 110,
        "startOffset": 13,
        "endOffset": 29
      },
      "flows": [],
      "status": "OPEN",
      "message": "Use a \"numpy.random.Generator\" here instead of this legacy function.",
      "effort": "5min",
      "debt": "5min",
      "author": "user@comma.ai",
      "tags": [
        "data-science",
        "numpy"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "CONVENTIONAL",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "44895c28-efa4-4233-aa49-675d6f145481",
      "rule": "python:S6711",
      "severity": "MAJOR",
      "component": "openpilot:rednose_repo/examples/test_kinematic_kf.py",
      "project": "openpilot",
      "line": 35,
      "hash": "bc593f7ad27b1c251240d272c143849e",
      "textRange": {
        "startLine": 35,
        "endLine": 35,
        "startOffset": 13,
        "endOffset": 29
      },
      "flows": [],
      "status": "OPEN",
      "message": "Use a \"numpy.random.Generator\" here instead of this legacy function.",
      "effort": "5min",
      "debt": "5min",
      "author": "user@comma.ai",
      "tags": [
        "data-science",
        "numpy"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "CONVENTIONAL",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "6f5b983f-6d2f-459e-8ce8-43d0db72180b",
      "rule": "python:S1172",
      "severity": "MAJOR",
      "component": "openpilot:rednose_repo/site_scons/site_tools/cython.py",
      "project": "openpilot",
      "line": 71,
      "hash": "5dca0729d07cde85396f8b77345324ae",
      "textRange": {
        "startLine": 71,
        "endLine": 71,
        "startOffset": 11,
        "endOffset": 14
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove the unused function parameter \"env\".",
      "effort": "5min",
      "debt": "5min",
      "author": "user@comma.ai",
      "tags": [
        "unused"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "CLEAR",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "MEDIUM"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "d48e1a5d-8186-4d46-91ec-10833a617d10",
      "rule": "python:S1135",
      "severity": "INFO",
      "component": "openpilot:release/release_files.py",
      "project": "openpilot",
      "line": 78,
      "hash": "6badbdf6c38151ea0011b0d2e9b7f5ff",
      "textRange": {
        "startLine": 78,
        "endLine": 78,
        "startOffset": 2,
        "endOffset": 31
      },
      "flows": [],
      "status": "OPEN",
      "message": "Complete the task associated to this \"TODO\" comment.",
      "effort": "0min",
      "debt": "0min",
      "author": "user@comma.ai",
      "tags": [
        "cwe"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "943114b1-00d1-4ba2-8fd7-3bc9e0aef425",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "openpilot:selfdrive/car/__init__.py",
      "project": "openpilot",
      "line": 183,
      "hash": "2694a2078170ac7b7b094dd313c89a7d",
      "textRange": {
        "startLine": 183,
        "endLine": 183,
        "startOffset": 21,
        "endOffset": 23
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this parameter \"CP\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "user@comma.ai",
      "tags": [
        "convention"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "IDENTIFIABLE",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "96df9723-a3fa-4d9b-8046-ccfa78abe74b",
      "rule": "python:S116",
      "severity": "MINOR",
      "component": "openpilot:selfdrive/car/__init__.py",
      "project": "openpilot",
      "line": 217,
      "hash": "b7a37046cc149883aae4d800f7b996ba",
      "textRange": {
        "startLine": 217,
        "endLine": 217,
        "startOffset": 2,
        "endOffset": 12
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this field \"steerRatio\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "user@comma.ai",
      "tags": [
        "convention"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "IDENTIFIABLE",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "f80e776b-e051-45b8-8cd4-0449cbf594d9",
      "rule": "python:S116",
      "severity": "MINOR",
      "component": "openpilot:selfdrive/car/__init__.py",
      "project": "openpilot",
      "line": 218,
      "hash": "444979bc5af827718c3b182a4a4fffa3",
      "textRange": {
        "startLine": 218,
        "endLine": 218,
        "startOffset": 2,
        "endOffset": 20
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this field \"centerToFrontRatio\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "user@comma.ai",
      "tags": [
        "convention"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "IDENTIFIABLE",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "a4f328f6-acd9-4f02-aabf-0a665c6c2f10",
      "rule": "python:S116",
      "severity": "MINOR",
      "component": "openpilot:selfdrive/car/__init__.py",
      "project": "openpilot",
      "line": 219,
      "hash": "105113f44b916c48438af3d5a8d08ac8",
      "textRange": {
        "startLine": 219,
        "endLine": 219,
        "startOffset": 2,
        "endOffset": 15
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this field \"minSteerSpeed\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "user@comma.ai",
      "tags": [
        "convention"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "IDENTIFIABLE",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "8dcda42e-b465-41e5-9007-fffb3a8ab4b5",
      "rule": "python:S116",
      "severity": "MINOR",
      "component": "openpilot:selfdrive/car/__init__.py",
      "project": "openpilot",
      "line": 220,
      "hash": "0491de86069a91c59fa6a0757c08c958",
      "textRange": {
        "startLine": 220,
        "endLine": 220,
        "startOffset": 2,
        "endOffset": 16
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this field \"minEnableSpeed\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "user@comma.ai",
      "tags": [
        "convention"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "IDENTIFIABLE",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "728edf05-760d-47dc-ada1-1103d6d2e7e8",
      "rule": "python:S116",
      "severity": "MINOR",
      "component": "openpilot:selfdrive/car/__init__.py",
      "project": "openpilot",
      "line": 221,
      "hash": "937249429565fe1aca63fa153a4f5cee",
      "textRange": {
        "startLine": 221,
        "endLine": 221,
        "startOffset": 2,
        "endOffset": 21
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this field \"tireStiffnessFactor\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "user@comma.ai",
      "tags": [
        "convention"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "IDENTIFIABLE",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "36786c08-894d-4e5f-9e6b-094257e3c643",
      "rule": "python:S1186",
      "severity": "CRITICAL",
      "component": "openpilot:selfdrive/car/__init__.py",
      "project": "openpilot",
      "line": 244,
      "hash": "d4738c3fb827f77d82d0699b69d45692",
      "textRange": {
        "startLine": 244,
        "endLine": 244,
        "startOffset": 6,
        "endOffset": 10
      },
      "flows": [],
      "status": "OPEN",
      "message": "Add a nested comment explaining why this method is empty, or complete the implementation.",
      "effort": "5min",
      "debt": "5min",
      "author": "user@comma.ai",
      "tags": [
        "suspicious"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "COMPLETE",
      "cleanCodeAttributeCategory": "INTENTIONAL",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "HIGH"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "162b583f-5af8-42ac-9884-ca4c00baf6e9",
      "rule": "python:S3776",
      "severity": "CRITICAL",
      "component": "openpilot:selfdrive/car/car_helpers.py",
      "project": "openpilot",
      "line": 72,
      "hash": "b00d52a978cbfbecb50e645664f65048",
      "textRange": {
        "startLine": 72,
        "endLine": 72,
        "startOffset": 4,
        "endOffset": 19
      },
      "flows": [
        {
          "locations": [
            {
              "component": "openpilot:selfdrive/car/car_helpers.py",
              "textRange": {
                "startLine": 79,
                "endLine": 79,
                "startOffset": 2,
                "endOffset": 7
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:selfdrive/car/car_helpers.py",
              "textRange": {
                "startLine": 82,
                "endLine": 82,
                "startOffset": 4,
                "endOffset": 7
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:selfdrive/car/car_helpers.py",
              "textRange": {
                "startLine": 85,
                "endLine": 85,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:selfdrive/car/car_helpers.py",
              "textRange": {
                "startLine": 86,
                "endLine": 86,
                "startOffset": 8,
                "endOffset": 10
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:selfdrive/car/car_helpers.py",
              "textRange": {
                "startLine": 90,
                "endLine": 90,
                "startOffset": 6,
                "endOffset": 9
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:selfdrive/car/car_helpers.py",
              "textRange": {
                "startLine": 92,
                "endLine": 92,
                "startOffset": 8,
                "endOffset": 10
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:selfdrive/car/car_helpers.py",
              "textRange": {
                "startLine": 92,
                "endLine": 92,
                "startOffset": 48,
                "endOffset": 51
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:selfdrive/car/car_helpers.py",
              "textRange": {
                "startLine": 97,
                "endLine": 97,
                "startOffset": 4,
                "endOffset": 7
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:selfdrive/car/car_helpers.py",
              "textRange": {
                "startLine": 98,
                "endLine": 98,
                "startOffset": 6,
                "endOffset": 8
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:selfdrive/car/car_helpers.py",
              "textRange": {
                "startLine": 98,
                "endLine": 98,
                "startOffset": 37,
                "endOffset": 40
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:selfdrive/car/car_helpers.py",
              "textRange": {
                "startLine": 103,
                "endLine": 103,
                "startOffset": 97,
                "endOffset": 99
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:selfdrive/car/car_helpers.py",
              "textRange": {
                "startLine": 103,
                "endLine": 103,
                "startOffset": 66,
                "endOffset": 69
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "openpilot:selfdrive/car/car_helpers.py",
              "textRange": {
                "startLine": 105,
                "endLine": 105,
                "startOffset": 18,
                "endOffset": 20
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Refactor this function to reduce its Cognitive Complexity from 27 to the 15 allowed.",
      "effort": "17min",
      "debt": "17min",
      "author": "user@comma.ai",
      "tags": [
        "brain-overload"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "FOCUSED",
      "cleanCodeAttributeCategory": "ADAPTABLE",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "HIGH"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "bb51aa2b-8b3d-4f29-8314-53bcbd4202a3",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "openpilot:selfdrive/car/car_helpers.py",
      "project": "openpilot",
      "line": 188,
      "hash": "9ba4cdc0832ec7d22c2363af85db70ed",
      "textRange": {
        "startLine": 188,
        "endLine": 188,
        "startOffset": 22,
        "endOffset": 24
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this parameter \"CP\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "user@comma.ai",
      "tags": [
        "convention"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "IDENTIFIABLE",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "4d6dd1be-c16c-44f8-bd23-16ad2e5496e8",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "openpilot:selfdrive/car/car_helpers.py",
      "project": "openpilot",
      "line": 189,
      "hash": "2bd1e44a9406af7781f8c49fb676d8a6",
      "textRange": {
        "startLine": 189,
        "endLine": 189,
        "startOffset": 16,
        "endOffset": 29
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"CarController\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "user@comma.ai",
      "tags": [
        "convention"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "IDENTIFIABLE",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "54d55c4b-f19c-44e1-8f3c-280f727b9a0d",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "openpilot:selfdrive/car/car_helpers.py",
      "project": "openpilot",
      "line": 189,
      "hash": "2bd1e44a9406af7781f8c49fb676d8a6",
      "textRange": {
        "startLine": 189,
        "endLine": 189,
        "startOffset": 2,
        "endOffset": 14
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"CarInterface\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "user@comma.ai",
      "tags": [
        "convention"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "IDENTIFIABLE",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "e3e66028-668b-4a37-874d-a6a0170a74fb",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "openpilot:selfdrive/car/car_helpers.py",
      "project": "openpilot",
      "line": 189,
      "hash": "2bd1e44a9406af7781f8c49fb676d8a6",
      "textRange": {
        "startLine": 189,
        "endLine": 189,
        "startOffset": 31,
        "endOffset": 39
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"CarState\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "user@comma.ai",
      "tags": [
        "convention"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "IDENTIFIABLE",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "3da7d8b1-8464-497e-bf3a-e942f46f1ffb",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "openpilot:selfdrive/car/car_helpers.py",
      "project": "openpilot",
      "line": 200,
      "hash": "87762f71721b90572d6984ea277d32eb",
      "textRange": {
        "startLine": 200,
        "endLine": 200,
        "startOffset": 2,
        "endOffset": 14
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"CarInterface\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "user@comma.ai",
      "tags": [
        "convention"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "IDENTIFIABLE",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "7f7bacf4-bf19-4fb5-b701-7d449460de3b",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "openpilot:selfdrive/car/car_helpers.py",
      "project": "openpilot",
      "line": 211,
      "hash": "87a8a0fffb40aac02c560eaf9a76802c",
      "textRange": {
        "startLine": 211,
        "endLine": 211,
        "startOffset": 2,
        "endOffset": 14
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"CarInterface\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "user@comma.ai",
      "tags": [
        "convention"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "IDENTIFIABLE",
      "cleanCodeAttributeCategory": "CONSISTENT",
      "impacts": [
        {
          "softwareQuality": "MAINTAINABILITY",
          "severity": "LOW"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    },
    {
      "key": "750b38ec-ed20-4ed0-8d16-6359a3e098ee",
      "rule": "python:S4830",
      "severity": "CRITICAL",
      "component": "openpilot:system/hardware/tici/esim.py",
      "project": "openpilot",
      "line": 17,
      "hash": "d020ff1938032de1397d4a20f655c88d",
      "textRange": {
        "startLine": 17,
        "endLine": 17,
        "startOffset": 11,
        "endOffset": 16
      },
      "flows": [],
      "status": "OPEN",
      "message": "Enable server certificate validation on this SSL/TLS connection.",
      "effort": "5min",
      "debt": "5min",
      "author": "user@comma.ai",
      "tags": [
        "cwe",
        "privacy",
        "ssl"
      ],
      "creationDate": "2024-06-11T23:32:27+0000",
      "updateDate": "2024-07-14T18:52:06+0000",
      "type": "VULNERABILITY",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": [],
      "codeVariants": [],
      "cleanCodeAttribute": "TRUSTWORTHY",
      "cleanCodeAttributeCategory": "RESPONSIBLE",
      "impacts": [
        {
          "softwareQuality": "SECURITY",
          "severity": "HIGH"
        }
      ],
      "issueStatus": "OPEN",
      "prioritizedRule": false
    }
  ],
  "components": [
    {
      "key": "openpilot:panda/tests/hitl/1_program.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "1_program.py",
      "longName": "panda/tests/hitl/1_program.py",
      "path": "panda/tests/hitl/1_program.py"
    },
    {
      "key": "openpilot:common/markdown.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "markdown.py",
      "longName": "common/markdown.py",
      "path": "common/markdown.py"
    },
    {
      "key": "openpilot:panda/tests/loopback_test.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "loopback_test.py",
      "longName": "panda/tests/loopback_test.py",
      "path": "panda/tests/loopback_test.py"
    },
    {
      "key": "openpilot:msgq_repo/msgq/tests/test_messaging.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "test_messaging.py",
      "longName": "msgq_repo/msgq/tests/test_messaging.py",
      "path": "msgq_repo/msgq/tests/test_messaging.py"
    },
    {
      "key": "openpilot:msgq_repo/msgq/tests/test_fake.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "test_fake.py",
      "longName": "msgq_repo/msgq/tests/test_fake.py",
      "path": "msgq_repo/msgq/tests/test_fake.py"
    },
    {
      "key": "openpilot:panda/tests/safety_replay/replay_drive.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "replay_drive.py",
      "longName": "panda/tests/safety_replay/replay_drive.py",
      "path": "panda/tests/safety_replay/replay_drive.py"
    },
    {
      "key": "openpilot:msgq_repo/site_scons/site_tools/cython.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "cython.py",
      "longName": "msgq_repo/site_scons/site_tools/cython.py",
      "path": "msgq_repo/site_scons/site_tools/cython.py"
    },
    {
      "key": "openpilot:opendbc/site_scons/site_tools/cython.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "cython.py",
      "longName": "opendbc/site_scons/site_tools/cython.py",
      "path": "opendbc/site_scons/site_tools/cython.py"
    },
    {
      "key": "openpilot:rednose_repo/examples/test_compare.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "test_compare.py",
      "longName": "rednose_repo/examples/test_compare.py",
      "path": "rednose_repo/examples/test_compare.py"
    },
    {
      "key": "openpilot",
      "enabled": true,
      "qualifier": "TRK",
      "name": "openpilot",
      "longName": "openpilot"
    },
    {
      "key": "openpilot:panda/tests/elm_car_simulator.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "elm_car_simulator.py",
      "longName": "panda/tests/elm_car_simulator.py",
      "path": "panda/tests/elm_car_simulator.py"
    },
    {
      "key": "openpilot:selfdrive/car/car_helpers.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "car_helpers.py",
      "longName": "selfdrive/car/car_helpers.py",
      "path": "selfdrive/car/car_helpers.py"
    },
    {
      "key": "openpilot:panda/tests/black_white_loopback_test.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "black_white_loopback_test.py",
      "longName": "panda/tests/black_white_loopback_test.py",
      "path": "panda/tests/black_white_loopback_test.py"
    },
    {
      "key": "openpilot:panda/tests/black_white_relay_test.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "black_white_relay_test.py",
      "longName": "panda/tests/black_white_relay_test.py",
      "path": "panda/tests/black_white_relay_test.py"
    },
    {
      "key": "openpilot:panda/tests/canfd/test_canfd.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "test_canfd.py",
      "longName": "panda/tests/canfd/test_canfd.py",
      "path": "panda/tests/canfd/test_canfd.py"
    },
    {
      "key": "openpilot:panda/tests/hitl/9_harness.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "9_harness.py",
      "longName": "panda/tests/hitl/9_harness.py",
      "path": "panda/tests/hitl/9_harness.py"
    },
    {
      "key": "openpilot:panda/tests/bulk_write_test.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "bulk_write_test.py",
      "longName": "panda/tests/bulk_write_test.py",
      "path": "panda/tests/bulk_write_test.py"
    },
    {
      "key": "openpilot:selfdrive/car/__init__.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "__init__.py",
      "longName": "selfdrive/car/__init__.py",
      "path": "selfdrive/car/__init__.py"
    },
    {
      "key": "openpilot:common/mock/generators.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "generators.py",
      "longName": "common/mock/generators.py",
      "path": "common/mock/generators.py"
    },
    {
      "key": "openpilot:panda/tests/check_fw_size.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "check_fw_size.py",
      "longName": "panda/tests/check_fw_size.py",
      "path": "panda/tests/check_fw_size.py"
    },
    {
      "key": "openpilot:release/release_files.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "release_files.py",
      "longName": "release/release_files.py",
      "path": "release/release_files.py"
    },
    {
      "key": "openpilot:conftest.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "conftest.py",
      "longName": "conftest.py",
      "path": "conftest.py"
    },
    {
      "key": "openpilot:panda/tests/hitl/2_health.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "2_health.py",
      "longName": "panda/tests/hitl/2_health.py",
      "path": "panda/tests/hitl/2_health.py"
    },
    {
      "key": "openpilot:opendbc/can/tests/test_packer_parser.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "test_packer_parser.py",
      "longName": "opendbc/can/tests/test_packer_parser.py",
      "path": "opendbc/can/tests/test_packer_parser.py"
    },
    {
      "key": "openpilot:panda/python/uds.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "uds.py",
      "longName": "panda/python/uds.py",
      "path": "panda/python/uds.py"
    },
    {
      "key": "openpilot:rednose_repo/examples/test_kinematic_kf.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "test_kinematic_kf.py",
      "longName": "rednose_repo/examples/test_kinematic_kf.py",
      "path": "rednose_repo/examples/test_kinematic_kf.py"
    },
    {
      "key": "openpilot:rednose_repo/examples/live_kf.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "live_kf.py",
      "longName": "rednose_repo/examples/live_kf.py",
      "path": "rednose_repo/examples/live_kf.py"
    },
    {
      "key": "openpilot:docs/conf.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "conf.py",
      "longName": "docs/conf.py",
      "path": "docs/conf.py"
    },
    {
      "key": "openpilot:panda/tests/hitl/conftest.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "conftest.py",
      "longName": "panda/tests/hitl/conftest.py",
      "path": "panda/tests/hitl/conftest.py"
    },
    {
      "key": "openpilot:cereal/messaging/__init__.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "__init__.py",
      "longName": "cereal/messaging/__init__.py",
      "path": "cereal/messaging/__init__.py"
    },
    {
      "key": "openpilot:panda/python/xcp.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "xcp.py",
      "longName": "panda/python/xcp.py",
      "path": "panda/python/xcp.py"
    },
    {
      "key": "openpilot:panda/tests/hitl/4_can_loopback.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "4_can_loopback.py",
      "longName": "panda/tests/hitl/4_can_loopback.py",
      "path": "panda/tests/hitl/4_can_loopback.py"
    },
    {
      "key": "openpilot:panda/tests/black_white_relay_endurance.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "black_white_relay_endurance.py",
      "longName": "panda/tests/black_white_relay_endurance.py",
      "path": "panda/tests/black_white_relay_endurance.py"
    },
    {
      "key": "openpilot:panda/tests/hitl/helpers.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "helpers.py",
      "longName": "panda/tests/hitl/helpers.py",
      "path": "panda/tests/hitl/helpers.py"
    },
    {
      "key": "openpilot:panda/tests/libpanda/libpanda_py.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "libpanda_py.py",
      "longName": "panda/tests/libpanda/libpanda_py.py",
      "path": "panda/tests/libpanda/libpanda_py.py"
    },
    {
      "key": "openpilot:panda/tests/usbprotocol/test_comms.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "test_comms.py",
      "longName": "panda/tests/usbprotocol/test_comms.py",
      "path": "panda/tests/usbprotocol/test_comms.py"
    },
    {
      "key": "openpilot:common/transformations/tests/test_orientation.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "test_orientation.py",
      "longName": "common/transformations/tests/test_orientation.py",
      "path": "common/transformations/tests/test_orientation.py"
    },
    {
      "key": "openpilot:rednose_repo/site_scons/site_tools/cython.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "cython.py",
      "longName": "rednose_repo/site_scons/site_tools/cython.py",
      "path": "rednose_repo/site_scons/site_tools/cython.py"
    },
    {
      "key": "openpilot:common/utils.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "utils.py",
      "longName": "common/utils.py",
      "path": "common/utils.py"
    },
    {
      "key": "openpilot:panda/tests/message_drop_test.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "message_drop_test.py",
      "longName": "panda/tests/message_drop_test.py",
      "path": "panda/tests/message_drop_test.py"
    },
    {
      "key": "openpilot:panda/tests/som/test_bootkick.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "test_bootkick.py",
      "longName": "panda/tests/som/test_bootkick.py",
      "path": "panda/tests/som/test_bootkick.py"
    }
  ],
  "facets": []
}