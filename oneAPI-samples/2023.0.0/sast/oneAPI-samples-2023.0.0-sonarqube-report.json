{
  "total": 1499,
  "p": 1,
  "ps": 100,
  "paging": { "pageIndex": 1, "pageSize": 100, "total": 1499 },
  "effortTotal": 6824,
  "issues": [
    {
      "key": "AYdc8m-l4AbzNsQ0HHvM",
      "rule": "python:S116",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
      "project": "oneAPI-samples",
      "line": 29,
      "hash": "b43d5402c9d421183057497def1bf5e6",
      "textRange": {
        "startLine": 29,
        "endLine": 29,
        "startOffset": 13,
        "endOffset": 23
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this field \"sampleRate\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-l4AbzNsQ0HHvN",
      "rule": "python:S116",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
      "project": "oneAPI-samples",
      "line": 30,
      "hash": "4e42f9ded00846d6d3d8f0dba0ef1d99",
      "textRange": {
        "startLine": 30,
        "endLine": 30,
        "startOffset": 13,
        "endOffset": 21
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this field \"waveData\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-l4AbzNsQ0HHvO",
      "rule": "python:S3626",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
      "project": "oneAPI-samples",
      "line": 41,
      "hash": "e70c4df10ef0983b9c8c31bd06b2a2c3",
      "textRange": {
        "startLine": 41,
        "endLine": 41,
        "startOffset": 8,
        "endOffset": 14
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove this redundant return.",
      "effort": "1min",
      "debt": "1min",
      "author": "",
      "tags": ["clumsy", "redundant"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-l4AbzNsQ0HHvQ",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
      "project": "oneAPI-samples",
      "line": 43,
      "hash": "078918fc8bcf605989b46dcc9cc51e96",
      "textRange": {
        "startLine": 43,
        "endLine": 43,
        "startOffset": 23,
        "endOffset": 33
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this parameter \"newWavPath\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-l4AbzNsQ0HHvR",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
      "project": "oneAPI-samples",
      "line": 44,
      "hash": "2250f7323938716c363e36602cea2591",
      "textRange": {
        "startLine": 44,
        "endLine": 44,
        "startOffset": 8,
        "endOffset": 19
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"startSample\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-l4AbzNsQ0HHvP",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
      "project": "oneAPI-samples",
      "line": 45,
      "hash": "8e2607ff5b2e394e73a8a29d558cc676",
      "textRange": {
        "startLine": 45,
        "endLine": 45,
        "startOffset": 8,
        "endOffset": 17
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"endSample\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-l4AbzNsQ0HHvT",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
      "project": "oneAPI-samples",
      "line": 58,
      "hash": "80868104a2c77ae869df9caa5052aeb5",
      "textRange": {
        "startLine": 58,
        "endLine": 58,
        "startOffset": 12,
        "endOffset": 23
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"sampleInput\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-l4AbzNsQ0HHvS",
      "rule": "python:S3626",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
      "project": "oneAPI-samples",
      "line": 62,
      "hash": "e70c4df10ef0983b9c8c31bd06b2a2c3",
      "textRange": {
        "startLine": 62,
        "endLine": 62,
        "startOffset": 8,
        "endOffset": 14
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove this redundant return.",
      "effort": "1min",
      "debt": "1min",
      "author": "",
      "tags": ["clumsy", "redundant"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-l4AbzNsQ0HHvU",
      "rule": "python:S1172",
      "severity": "MAJOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
      "project": "oneAPI-samples",
      "line": 78,
      "hash": "bbde90e7a85512c6b2c99814c6466708",
      "textRange": {
        "startLine": 78,
        "endLine": 78,
        "startOffset": 9,
        "endOffset": 13
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove the unused function parameter \"argv\".",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["unused"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-l4AbzNsQ0HHvb",
      "rule": "python:S3776",
      "severity": "CRITICAL",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
      "project": "oneAPI-samples",
      "line": 78,
      "hash": "bbde90e7a85512c6b2c99814c6466708",
      "textRange": {
        "startLine": 78,
        "endLine": 78,
        "startOffset": 4,
        "endOffset": 8
      },
      "flows": [
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
              "textRange": {
                "startLine": 107,
                "endLine": 107,
                "startOffset": 4,
                "endOffset": 7
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
              "textRange": {
                "startLine": 112,
                "endLine": 112,
                "startOffset": 8,
                "endOffset": 11
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
              "textRange": {
                "startLine": 114,
                "endLine": 114,
                "startOffset": 12,
                "endOffset": 14
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
              "textRange": {
                "startLine": 114,
                "endLine": 114,
                "startOffset": 72,
                "endOffset": 75
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
              "textRange": {
                "startLine": 114,
                "endLine": 114,
                "startOffset": 42,
                "endOffset": 44
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
              "textRange": {
                "startLine": 119,
                "endLine": 119,
                "startOffset": 16,
                "endOffset": 18
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
              "textRange": {
                "startLine": 123,
                "endLine": 123,
                "startOffset": 16,
                "endOffset": 20
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
              "textRange": {
                "startLine": 126,
                "endLine": 126,
                "startOffset": 20,
                "endOffset": 23
              },
              "msg": "+5 (incl 4 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
              "textRange": {
                "startLine": 128,
                "endLine": 128,
                "startOffset": 16,
                "endOffset": 19
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
              "textRange": {
                "startLine": 129,
                "endLine": 129,
                "startOffset": 20,
                "endOffset": 22
              },
              "msg": "+5 (incl 4 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
              "textRange": {
                "startLine": 131,
                "endLine": 131,
                "startOffset": 20,
                "endOffset": 24
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
              "textRange": {
                "startLine": 136,
                "endLine": 136,
                "startOffset": 24,
                "endOffset": 26
              },
              "msg": "+5 (incl 4 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
              "textRange": {
                "startLine": 139,
                "endLine": 139,
                "startOffset": 20,
                "endOffset": 26
              },
              "msg": "+5 (incl 4 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
              "textRange": {
                "startLine": 145,
                "endLine": 145,
                "startOffset": 16,
                "endOffset": 18
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
              "textRange": {
                "startLine": 157,
                "endLine": 157,
                "startOffset": 16,
                "endOffset": 18
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Refactor this function to reduce its Cognitive Complexity from 46 to the 15 allowed.",
      "effort": "36min",
      "debt": "36min",
      "author": "",
      "tags": ["brain-overload"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-l4AbzNsQ0HHva",
      "rule": "python:S1481",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
      "project": "oneAPI-samples",
      "line": 96,
      "hash": "7ccc063004a92271fae62ef740c35663",
      "textRange": {
        "startLine": 96,
        "endLine": 96,
        "startOffset": 4,
        "endOffset": 20
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove the unused local variable \"CURR_WORKING_DIR\".",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["unused"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-l4AbzNsQ0HHvV",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
      "project": "oneAPI-samples",
      "line": 97,
      "hash": "bc981f69edea207c7ed1e76c111bda3a",
      "textRange": {
        "startLine": 97,
        "endLine": 97,
        "startOffset": 4,
        "endOffset": 16
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"languageList\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-l4AbzNsQ0HHvX",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
      "project": "oneAPI-samples",
      "line": 109,
      "hash": "2831f962c1d128a253326d25809e2164",
      "textRange": {
        "startLine": 109,
        "endLine": 109,
        "startOffset": 8,
        "endOffset": 25
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"testDataDirectory\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-l4AbzNsQ0HHvZ",
      "rule": "python:S1481",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
      "project": "oneAPI-samples",
      "line": 126,
      "hash": "797a30569583feecb7f76d386e0e5027",
      "textRange": {
        "startLine": 126,
        "endLine": 126,
        "startOffset": 24,
        "endOffset": 25
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove the unused local variable \"i\".",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["unused"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-l4AbzNsQ0HHvW",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
      "project": "oneAPI-samples",
      "line": 130,
      "hash": "50cabba81a90b1c032ec33ac51ce7885",
      "textRange": {
        "startLine": 130,
        "endLine": 130,
        "startOffset": 24,
        "endOffset": 34
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"newWavPath\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-l4AbzNsQ0HHvd",
      "rule": "python:S5754",
      "severity": "CRITICAL",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
      "project": "oneAPI-samples",
      "line": 139,
      "hash": "3e264f5fbab10735799511f21ca70842",
      "textRange": {
        "startLine": 139,
        "endLine": 139,
        "startOffset": 20,
        "endOffset": 26
      },
      "flows": [],
      "status": "OPEN",
      "message": "Specify an exception class to catch or reraise the exception",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["bad-practice", "error-handling", "suspicious"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-l4AbzNsQ0HHve",
      "rule": "python:S2772",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
      "project": "oneAPI-samples",
      "line": 142,
      "hash": "1a1dc91c907325c69271ddf0c944bc72",
      "textRange": {
        "startLine": 142,
        "endLine": 142,
        "startOffset": 24,
        "endOffset": 28
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove this unneeded \"pass\".",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["unused"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-l4AbzNsQ0HHvY",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
      "project": "oneAPI-samples",
      "line": 153,
      "hash": "b9edff011812f81b4d3ff535e5a6975f",
      "textRange": {
        "startLine": 153,
        "endLine": 153,
        "startOffset": 16,
        "endOffset": 29
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"topPercentage\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-K4AbzNsQ0HHuw",
      "rule": "python:S116",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
      "project": "oneAPI-samples",
      "line": 30,
      "hash": "b43d5402c9d421183057497def1bf5e6",
      "textRange": {
        "startLine": 30,
        "endLine": 30,
        "startOffset": 13,
        "endOffset": 23
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this field \"sampleRate\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-K4AbzNsQ0HHux",
      "rule": "python:S116",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
      "project": "oneAPI-samples",
      "line": 31,
      "hash": "4e42f9ded00846d6d3d8f0dba0ef1d99",
      "textRange": {
        "startLine": 31,
        "endLine": 31,
        "startOffset": 13,
        "endOffset": 21
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this field \"waveData\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-K4AbzNsQ0HHuy",
      "rule": "python:S3626",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
      "project": "oneAPI-samples",
      "line": 42,
      "hash": "e70c4df10ef0983b9c8c31bd06b2a2c3",
      "textRange": {
        "startLine": 42,
        "endLine": 42,
        "startOffset": 8,
        "endOffset": 14
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove this redundant return.",
      "effort": "1min",
      "debt": "1min",
      "author": "",
      "tags": ["clumsy", "redundant"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-K4AbzNsQ0HHu0",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
      "project": "oneAPI-samples",
      "line": 44,
      "hash": "078918fc8bcf605989b46dcc9cc51e96",
      "textRange": {
        "startLine": 44,
        "endLine": 44,
        "startOffset": 23,
        "endOffset": 33
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this parameter \"newWavPath\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-K4AbzNsQ0HHu1",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
      "project": "oneAPI-samples",
      "line": 45,
      "hash": "2250f7323938716c363e36602cea2591",
      "textRange": {
        "startLine": 45,
        "endLine": 45,
        "startOffset": 8,
        "endOffset": 19
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"startSample\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-K4AbzNsQ0HHuz",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
      "project": "oneAPI-samples",
      "line": 46,
      "hash": "8e2607ff5b2e394e73a8a29d558cc676",
      "textRange": {
        "startLine": 46,
        "endLine": 46,
        "startOffset": 8,
        "endOffset": 17
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"endSample\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-K4AbzNsQ0HHu3",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
      "project": "oneAPI-samples",
      "line": 60,
      "hash": "80868104a2c77ae869df9caa5052aeb5",
      "textRange": {
        "startLine": 60,
        "endLine": 60,
        "startOffset": 12,
        "endOffset": 23
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"sampleInput\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-K4AbzNsQ0HHu2",
      "rule": "python:S3626",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
      "project": "oneAPI-samples",
      "line": 64,
      "hash": "e70c4df10ef0983b9c8c31bd06b2a2c3",
      "textRange": {
        "startLine": 64,
        "endLine": 64,
        "startOffset": 8,
        "endOffset": 14
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove this redundant return.",
      "effort": "1min",
      "debt": "1min",
      "author": "",
      "tags": ["clumsy", "redundant"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-K4AbzNsQ0HHu4",
      "rule": "python:S1172",
      "severity": "MAJOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
      "project": "oneAPI-samples",
      "line": 81,
      "hash": "bbde90e7a85512c6b2c99814c6466708",
      "textRange": {
        "startLine": 81,
        "endLine": 81,
        "startOffset": 9,
        "endOffset": 13
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove the unused function parameter \"argv\".",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["unused"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-K4AbzNsQ0HHvC",
      "rule": "python:S3776",
      "severity": "CRITICAL",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
      "project": "oneAPI-samples",
      "line": 81,
      "hash": "bbde90e7a85512c6b2c99814c6466708",
      "textRange": {
        "startLine": 81,
        "endLine": 81,
        "startOffset": 4,
        "endOffset": 8
      },
      "flows": [
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 104,
                "endLine": 104,
                "startOffset": 4,
                "endOffset": 6
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 108,
                "endLine": 108,
                "startOffset": 8,
                "endOffset": 10
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 112,
                "endLine": 112,
                "startOffset": 16,
                "endOffset": 19
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 113,
                "endLine": 113,
                "startOffset": 20,
                "endOffset": 22
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 117,
                "endLine": 117,
                "startOffset": 20,
                "endOffset": 24
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 119,
                "endLine": 119,
                "startOffset": 8,
                "endOffset": 12
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 123,
                "endLine": 123,
                "startOffset": 4,
                "endOffset": 6
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 132,
                "endLine": 132,
                "startOffset": 4,
                "endOffset": 6
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 152,
                "endLine": 152,
                "startOffset": 8,
                "endOffset": 11
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 154,
                "endLine": 154,
                "startOffset": 12,
                "endOffset": 14
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 154,
                "endLine": 154,
                "startOffset": 72,
                "endOffset": 75
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 154,
                "endLine": 154,
                "startOffset": 42,
                "endOffset": 44
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 156,
                "endLine": 156,
                "startOffset": 16,
                "endOffset": 18
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 157,
                "endLine": 157,
                "startOffset": 20,
                "endOffset": 22
              },
              "msg": "+5 (incl 4 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 159,
                "endLine": 159,
                "startOffset": 20,
                "endOffset": 24
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 165,
                "endLine": 165,
                "startOffset": 16,
                "endOffset": 18
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 171,
                "endLine": 171,
                "startOffset": 20,
                "endOffset": 22
              },
              "msg": "+5 (incl 4 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 172,
                "endLine": 172,
                "startOffset": 24,
                "endOffset": 26
              },
              "msg": "+6 (incl 5 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 179,
                "endLine": 179,
                "startOffset": 20,
                "endOffset": 22
              },
              "msg": "+5 (incl 4 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 182,
                "endLine": 182,
                "startOffset": 20,
                "endOffset": 22
              },
              "msg": "+5 (incl 4 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 192,
                "endLine": 192,
                "startOffset": 20,
                "endOffset": 23
              },
              "msg": "+5 (incl 4 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 197,
                "endLine": 197,
                "startOffset": 20,
                "endOffset": 22
              },
              "msg": "+5 (incl 4 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 202,
                "endLine": 202,
                "startOffset": 16,
                "endOffset": 18
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 204,
                "endLine": 204,
                "startOffset": 16,
                "endOffset": 18
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 206,
                "endLine": 206,
                "startOffset": 20,
                "endOffset": 22
              },
              "msg": "+5 (incl 4 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 212,
                "endLine": 212,
                "startOffset": 16,
                "endOffset": 20
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 219,
                "endLine": 219,
                "startOffset": 16,
                "endOffset": 18
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 223,
                "endLine": 223,
                "startOffset": 16,
                "endOffset": 20
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 226,
                "endLine": 226,
                "startOffset": 20,
                "endOffset": 23
              },
              "msg": "+5 (incl 4 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 228,
                "endLine": 228,
                "startOffset": 16,
                "endOffset": 19
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 229,
                "endLine": 229,
                "startOffset": 20,
                "endOffset": 22
              },
              "msg": "+5 (incl 4 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 231,
                "endLine": 231,
                "startOffset": 20,
                "endOffset": 24
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 236,
                "endLine": 236,
                "startOffset": 24,
                "endOffset": 26
              },
              "msg": "+5 (incl 4 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 240,
                "endLine": 240,
                "startOffset": 20,
                "endOffset": 26
              },
              "msg": "+5 (incl 4 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 247,
                "endLine": 247,
                "startOffset": 16,
                "endOffset": 18
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 251,
                "endLine": 251,
                "startOffset": 16,
                "endOffset": 18
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 263,
                "endLine": 263,
                "startOffset": 16,
                "endOffset": 18
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 269,
                "endLine": 269,
                "startOffset": 16,
                "endOffset": 18
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 272,
                "endLine": 272,
                "startOffset": 20,
                "endOffset": 22
              },
              "msg": "+5 (incl 4 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 275,
                "endLine": 275,
                "startOffset": 20,
                "endOffset": 24
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 293,
                "endLine": 293,
                "startOffset": 8,
                "endOffset": 10
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 298,
                "endLine": 298,
                "startOffset": 4,
                "endOffset": 8
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 300,
                "endLine": 300,
                "startOffset": 4,
                "endOffset": 8
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Refactor this function to reduce its Cognitive Complexity from 136 to the 15 allowed.",
      "effort": "2h6min",
      "debt": "2h6min",
      "author": "",
      "tags": ["brain-overload"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-K4AbzNsQ0HHu6",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
      "project": "oneAPI-samples",
      "line": 111,
      "hash": "8b908db6f809cfa083ba954d1a658461",
      "textRange": {
        "startLine": 111,
        "endLine": 111,
        "startOffset": 16,
        "endOffset": 23
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"lineNum\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-K4AbzNsQ0HHu5",
      "rule": "python:S3626",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
      "project": "oneAPI-samples",
      "line": 116,
      "hash": "7aa28ed115707345d0274032757e8991",
      "textRange": {
        "startLine": 116,
        "endLine": 116,
        "startOffset": 24,
        "endOffset": 32
      },
      "flows": [
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
              "textRange": {
                "startLine": 112,
                "endLine": 112,
                "startOffset": 16,
                "endOffset": 19
              },
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Remove this redundant continue.",
      "effort": "1min",
      "debt": "1min",
      "author": "",
      "tags": ["clumsy", "redundant"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-K4AbzNsQ0HHvD",
      "rule": "python:S112",
      "severity": "MAJOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
      "project": "oneAPI-samples",
      "line": 120,
      "hash": "e277d524e49773dfab8c9d560660afd3",
      "textRange": {
        "startLine": 120,
        "endLine": 120,
        "startOffset": 18,
        "endOffset": 71
      },
      "flows": [],
      "status": "OPEN",
      "message": "Replace this generic exception class with a more specific one.",
      "effort": "20min",
      "debt": "20min",
      "author": "",
      "tags": ["cwe", "error-handling"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-K4AbzNsQ0HHu_",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
      "project": "oneAPI-samples",
      "line": 190,
      "hash": "2d7109d4fcfb54ce062f30ce5fd6f292",
      "textRange": {
        "startLine": 190,
        "endLine": 190,
        "startOffset": 20,
        "endOffset": 38
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"wavfile_sampleRate\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-K4AbzNsQ0HHvA",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
      "project": "oneAPI-samples",
      "line": 190,
      "hash": "2d7109d4fcfb54ce062f30ce5fd6f292",
      "textRange": {
        "startLine": 190,
        "endLine": 190,
        "startOffset": 40,
        "endOffset": 55
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"wavfile_wavData\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-K4AbzNsQ0HHu-",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
      "project": "oneAPI-samples",
      "line": 191,
      "hash": "f8e523ad7afd13908e32b95a417b9835",
      "textRange": {
        "startLine": 191,
        "endLine": 191,
        "startOffset": 20,
        "endOffset": 37
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"vad_final_wavData\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-K4AbzNsQ0HHvB",
      "rule": "python:S1481",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
      "project": "oneAPI-samples",
      "line": 226,
      "hash": "797a30569583feecb7f76d386e0e5027",
      "textRange": {
        "startLine": 226,
        "endLine": 226,
        "startOffset": 24,
        "endOffset": 25
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove the unused local variable \"i\".",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["unused"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-K4AbzNsQ0HHu7",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
      "project": "oneAPI-samples",
      "line": 230,
      "hash": "50cabba81a90b1c032ec33ac51ce7885",
      "textRange": {
        "startLine": 230,
        "endLine": 230,
        "startOffset": 24,
        "endOffset": 34
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"newWavPath\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-K4AbzNsQ0HHvF",
      "rule": "python:S5754",
      "severity": "CRITICAL",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
      "project": "oneAPI-samples",
      "line": 240,
      "hash": "3e264f5fbab10735799511f21ca70842",
      "textRange": {
        "startLine": 240,
        "endLine": 240,
        "startOffset": 20,
        "endOffset": 26
      },
      "flows": [],
      "status": "OPEN",
      "message": "Specify an exception class to catch or reraise the exception",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["bad-practice", "error-handling", "suspicious"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-K4AbzNsQ0HHvG",
      "rule": "python:S2772",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
      "project": "oneAPI-samples",
      "line": 243,
      "hash": "1a1dc91c907325c69271ddf0c944bc72",
      "textRange": {
        "startLine": 243,
        "endLine": 243,
        "startOffset": 24,
        "endOffset": 28
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove this unneeded \"pass\".",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["unused"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-K4AbzNsQ0HHu9",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
      "project": "oneAPI-samples",
      "line": 259,
      "hash": "b9edff011812f81b4d3ff535e5a6975f",
      "textRange": {
        "startLine": 259,
        "endLine": 259,
        "startOffset": 16,
        "endOffset": 29
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"topPercentage\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-K4AbzNsQ0HHu8",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
      "project": "oneAPI-samples",
      "line": 262,
      "hash": "4881e2ebf15f25b61e779d976c85e2fb",
      "textRange": {
        "startLine": 262,
        "endLine": 262,
        "startOffset": 16,
        "endOffset": 29
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"secPercentage\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-Y4AbzNsQ0HHvH",
      "rule": "python:S1172",
      "severity": "MAJOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/quantize_model.py",
      "project": "oneAPI-samples",
      "line": 32,
      "hash": "bbde90e7a85512c6b2c99814c6466708",
      "textRange": {
        "startLine": 32,
        "endLine": 32,
        "startOffset": 9,
        "endOffset": 13
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove the unused function parameter \"argv\".",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["unused"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-Y4AbzNsQ0HHvI",
      "rule": "python:S101",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/quantize_model.py",
      "project": "oneAPI-samples",
      "line": 46,
      "hash": "d73dd2a1dcad0fe98944e8c32bc0b504",
      "textRange": {
        "startLine": 46,
        "endLine": 46,
        "startOffset": 10,
        "endOffset": 24
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename class \"INC_DataLoader\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-Y4AbzNsQ0HHvJ",
      "rule": "python:S5754",
      "severity": "CRITICAL",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/quantize_model.py",
      "project": "oneAPI-samples",
      "line": 55,
      "hash": "3e264f5fbab10735799511f21ca70842",
      "textRange": {
        "startLine": 55,
        "endLine": 55,
        "startOffset": 16,
        "endOffset": 22
      },
      "flows": [],
      "status": "OPEN",
      "message": "Specify an exception class to catch or reraise the exception",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["bad-practice", "error-handling", "suspicious"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-Y4AbzNsQ0HHvK",
      "rule": "python:S1481",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/quantize_model.py",
      "project": "oneAPI-samples",
      "line": 82,
      "hash": "31eafb9dd2712ce9df1014c420ed4b6d",
      "textRange": {
        "startLine": 82,
        "endLine": 82,
        "startOffset": 16,
        "endOffset": 17
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove the unused local variable \"i\".",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["unused"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-Y4AbzNsQ0HHvL",
      "rule": "python:S1481",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/quantize_model.py",
      "project": "oneAPI-samples",
      "line": 86,
      "hash": "4d5dad5d759cc9bceeaa55ab03dff85d",
      "textRange": {
        "startLine": 86,
        "endLine": 86,
        "startOffset": 16,
        "endOffset": 17
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove the unused local variable \"i\".",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["unused"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-o4AbzNsQ0HHvh",
      "rule": "python:S1542",
      "severity": "MAJOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Training/prepareAllCommonVoice.py",
      "project": "oneAPI-samples",
      "line": 25,
      "hash": "6aae424217721399454a956d3857f87f",
      "textRange": {
        "startLine": 25,
        "endLine": 25,
        "startOffset": 4,
        "endOffset": 17
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename function \"createCsvFile\" to match the regular expression ^[a-z_][a-z0-9_]*$.",
      "effort": "10min",
      "debt": "10min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-o4AbzNsQ0HHvg",
      "rule": "python:S3626",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Training/prepareAllCommonVoice.py",
      "project": "oneAPI-samples",
      "line": 31,
      "hash": "e70c4df10ef0983b9c8c31bd06b2a2c3",
      "textRange": {
        "startLine": 31,
        "endLine": 31,
        "startOffset": 4,
        "endOffset": 10
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove this redundant return.",
      "effort": "1min",
      "debt": "1min",
      "author": "",
      "tags": ["clumsy", "redundant"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-o4AbzNsQ0HHvk",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Training/prepareAllCommonVoice.py",
      "project": "oneAPI-samples",
      "line": 34,
      "hash": "2776f5935e28be59a16b5840a8d42af0",
      "textRange": {
        "startLine": 34,
        "endLine": 34,
        "startOffset": 41,
        "endOffset": 51
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this parameter \"maxSamples\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-o4AbzNsQ0HHvm",
      "rule": "python:S1542",
      "severity": "MAJOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Training/prepareAllCommonVoice.py",
      "project": "oneAPI-samples",
      "line": 34,
      "hash": "2776f5935e28be59a16b5840a8d42af0",
      "textRange": {
        "startLine": 34,
        "endLine": 34,
        "startOffset": 4,
        "endOffset": 21
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename function \"createAllCsvFiles\" to match the regular expression ^[a-z_][a-z0-9_]*$.",
      "effort": "10min",
      "debt": "10min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-o4AbzNsQ0HHvj",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Training/prepareAllCommonVoice.py",
      "project": "oneAPI-samples",
      "line": 42,
      "hash": "e4268e5eb387b54f77ca33c74911906c",
      "textRange": {
        "startLine": 42,
        "endLine": 42,
        "startOffset": 8,
        "endOffset": 18
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"audioClips\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-o4AbzNsQ0HHvl",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Training/prepareAllCommonVoice.py",
      "project": "oneAPI-samples",
      "line": 43,
      "hash": "4c19e85d91b46e497d8597bc400ab1a2",
      "textRange": {
        "startLine": 43,
        "endLine": 43,
        "startOffset": 8,
        "endOffset": 21
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"numAudioClips\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-o4AbzNsQ0HHvi",
      "rule": "python:S3626",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Training/prepareAllCommonVoice.py",
      "project": "oneAPI-samples",
      "line": 70,
      "hash": "e70c4df10ef0983b9c8c31bd06b2a2c3",
      "textRange": {
        "startLine": 70,
        "endLine": 70,
        "startOffset": 4,
        "endOffset": 10
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove this redundant return.",
      "effort": "1min",
      "debt": "1min",
      "author": "",
      "tags": ["clumsy", "redundant"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-o4AbzNsQ0HHvr",
      "rule": "python:S1542",
      "severity": "MAJOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Training/prepareAllCommonVoice.py",
      "project": "oneAPI-samples",
      "line": 73,
      "hash": "f9da2aff6fb4d9c862669b8e8bae542c",
      "textRange": {
        "startLine": 73,
        "endLine": 73,
        "startOffset": 4,
        "endOffset": 12
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename function \"prepData\" to match the regular expression ^[a-z_][a-z0-9_]*$.",
      "effort": "10min",
      "debt": "10min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-o4AbzNsQ0HHvq",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Training/prepareAllCommonVoice.py",
      "project": "oneAPI-samples",
      "line": 80,
      "hash": "36fcf20c6c5044a5fcf8f10a15b1e51f",
      "textRange": {
        "startLine": 80,
        "endLine": 80,
        "startOffset": 8,
        "endOffset": 15
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"numRows\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-o4AbzNsQ0HHvs",
      "rule": "python:S1481",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Training/prepareAllCommonVoice.py",
      "project": "oneAPI-samples",
      "line": 83,
      "hash": "accf05f2a26a8e8f61488c2252793613",
      "textRange": {
        "startLine": 83,
        "endLine": 83,
        "startOffset": 32,
        "endOffset": 35
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove the unused local variable \"row\".",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["unused"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-o4AbzNsQ0HHvp",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Training/prepareAllCommonVoice.py",
      "project": "oneAPI-samples",
      "line": 88,
      "hash": "11beedbe8b3157886822d24a4012009b",
      "textRange": {
        "startLine": 88,
        "endLine": 88,
        "startOffset": 12,
        "endOffset": 19
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"dataCnt\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-o4AbzNsQ0HHvo",
      "rule": "python:S3626",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Training/prepareAllCommonVoice.py",
      "project": "oneAPI-samples",
      "line": 107,
      "hash": "e70c4df10ef0983b9c8c31bd06b2a2c3",
      "textRange": {
        "startLine": 107,
        "endLine": 107,
        "startOffset": 4,
        "endOffset": 10
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove this redundant return.",
      "effort": "1min",
      "debt": "1min",
      "author": "",
      "tags": ["clumsy", "redundant"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-o4AbzNsQ0HHvt",
      "rule": "python:S1172",
      "severity": "MAJOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Training/prepareAllCommonVoice.py",
      "project": "oneAPI-samples",
      "line": 109,
      "hash": "bbde90e7a85512c6b2c99814c6466708",
      "textRange": {
        "startLine": 109,
        "endLine": 109,
        "startOffset": 9,
        "endOffset": 13
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove the unused function parameter \"argv\".",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["unused"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-o4AbzNsQ0HHvv",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Training/prepareAllCommonVoice.py",
      "project": "oneAPI-samples",
      "line": 119,
      "hash": "93a761eaf5578097f8186d16548915c0",
      "textRange": {
        "startLine": 119,
        "endLine": 119,
        "startOffset": 4,
        "endOffset": 19
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"commonVoicePath\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-o4AbzNsQ0HHvx",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Training/prepareAllCommonVoice.py",
      "project": "oneAPI-samples",
      "line": 120,
      "hash": "04d4f7aa2547118e1212977c8a8bf16e",
      "textRange": {
        "startLine": 120,
        "endLine": 120,
        "startOffset": 4,
        "endOffset": 14
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"maxSamples\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-o4AbzNsQ0HHv0",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Training/prepareAllCommonVoice.py",
      "project": "oneAPI-samples",
      "line": 121,
      "hash": "e7feed01b5097f5cc0c7281ef95a1451",
      "textRange": {
        "startLine": 121,
        "endLine": 121,
        "startOffset": 4,
        "endOffset": 17
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"prepTrainData\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-o4AbzNsQ0HHvy",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Training/prepareAllCommonVoice.py",
      "project": "oneAPI-samples",
      "line": 122,
      "hash": "73231fdbdb8a21cb558ff7a3d689163e",
      "textRange": {
        "startLine": 122,
        "endLine": 122,
        "startOffset": 4,
        "endOffset": 15
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"prepDevData\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-o4AbzNsQ0HHvz",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Training/prepareAllCommonVoice.py",
      "project": "oneAPI-samples",
      "line": 123,
      "hash": "c495849bc14dd1a1ec252d48ba471df8",
      "textRange": {
        "startLine": 123,
        "endLine": 123,
        "startOffset": 4,
        "endOffset": 16
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"prepTestData\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-o4AbzNsQ0HHvw",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Training/prepareAllCommonVoice.py",
      "project": "oneAPI-samples",
      "line": 124,
      "hash": "9ad6f3228f6fe090c162a7f37c864d65",
      "textRange": {
        "startLine": 124,
        "endLine": 124,
        "startOffset": 4,
        "endOffset": 13
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"createCsv\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-o4AbzNsQ0HHvf",
      "rule": "python:S1192",
      "severity": "CRITICAL",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Training/prepareAllCommonVoice.py",
      "project": "oneAPI-samples",
      "line": 136,
      "hash": "e67e1b386406fffb1c73d5e49ea9b129",
      "textRange": {
        "startLine": 136,
        "endLine": 136,
        "startOffset": 18,
        "endOffset": 41
      },
      "flows": [
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Training/prepareAllCommonVoice.py",
              "textRange": {
                "startLine": 141,
                "endLine": 141,
                "startOffset": 18,
                "endOffset": 41
              },
              "msg": "Duplication",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Training/prepareAllCommonVoice.py",
              "textRange": {
                "startLine": 146,
                "endLine": 146,
                "startOffset": 18,
                "endOffset": 41
              },
              "msg": "Duplication",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Define a constant instead of duplicating this literal \"Cleaning up %s folder\" 3 times.",
      "effort": "6min",
      "debt": "6min",
      "author": "",
      "tags": ["design"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m-o4AbzNsQ0HHvu",
      "rule": "python:S3626",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Training/prepareAllCommonVoice.py",
      "project": "oneAPI-samples",
      "line": 161,
      "hash": "e70c4df10ef0983b9c8c31bd06b2a2c3",
      "textRange": {
        "startLine": 161,
        "endLine": 161,
        "startOffset": 4,
        "endOffset": 10
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove this redundant return.",
      "effort": "1min",
      "debt": "1min",
      "author": "",
      "tags": ["clumsy", "redundant"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m7C4AbzNsQ0HHtY",
      "rule": "python:S1542",
      "severity": "MAJOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelPyTorch_Extensions_Inference_Optimization/scripts/ci_test.py",
      "project": "oneAPI-samples",
      "line": 1,
      "hash": "2a15c5abcb89419fea9220602c2b12dd",
      "textRange": {
        "startLine": 1,
        "endLine": 1,
        "startOffset": 4,
        "endOffset": 22
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename function \"runJupyterNotebook\" to match the regular expression ^[a-z_][a-z0-9_]*$.",
      "effort": "10min",
      "debt": "10min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m664AbzNsQ0HHtW",
      "rule": "python:S1481",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelPyTorch_Extensions_Inference_Optimization/scripts/resnet50.py",
      "project": "oneAPI-samples",
      "line": 14,
      "hash": "3d2c6a08d02565c2a62245062790dad3",
      "textRange": {
        "startLine": 14,
        "endLine": 14,
        "startOffset": 6,
        "endOffset": 12
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove the unused local variable \"output\".",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["unused"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m664AbzNsQ0HHtX",
      "rule": "python:S1481",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelPyTorch_Extensions_Inference_Optimization/scripts/resnet50.py",
      "project": "oneAPI-samples",
      "line": 41,
      "hash": "dc14502e039653d8821c9479724fdacf",
      "textRange": {
        "startLine": 41,
        "endLine": 41,
        "startOffset": 8,
        "endOffset": 9
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove the unused local variable \"i\".",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["unused"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m9Y4AbzNsQ0HHus",
      "rule": "python:S1940",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelPython_XGBoost_Performance/IntelPython_XGBoost_Performance.py",
      "project": "oneAPI-samples",
      "line": 170,
      "hash": "6a67e8c74403d0abff40ed69c00eccff",
      "textRange": {
        "startLine": 170,
        "endLine": 170,
        "startOffset": 7,
        "endOffset": 25
      },
      "flows": [],
      "status": "OPEN",
      "message": "Use the opposite operator (\"!\u003d\") instead.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["pitfall"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m9Y4AbzNsQ0HHut",
      "rule": "python:S905",
      "severity": "MAJOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelPython_XGBoost_Performance/IntelPython_XGBoost_Performance.py",
      "project": "oneAPI-samples",
      "line": 190,
      "hash": "eff7d5dba32b4da32d9a67a519434d3f",
      "textRange": {
        "startLine": 190,
        "endLine": 190,
        "startOffset": 0,
        "endOffset": 2
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove or refactor this statement; it has no side effects.",
      "effort": "10min",
      "debt": "10min",
      "author": "",
      "tags": ["cwe", "unused"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "BUG",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m9r4AbzNsQ0HHuu",
      "rule": "python:S1542",
      "severity": "MAJOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelPython_XGBoost_daal4pyPrediction/ci_test.py",
      "project": "oneAPI-samples",
      "line": 4,
      "hash": "2a15c5abcb89419fea9220602c2b12dd",
      "textRange": {
        "startLine": 4,
        "endLine": 4,
        "startOffset": 4,
        "endOffset": 22
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename function \"runJupyterNotebook\" to match the regular expression ^[a-z_][a-z0-9_]*$.",
      "effort": "10min",
      "debt": "10min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m8z4AbzNsQ0HHul",
      "rule": "python:S1542",
      "severity": "MAJOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/ci_test.py",
      "project": "oneAPI-samples",
      "line": 1,
      "hash": "2a15c5abcb89419fea9220602c2b12dd",
      "textRange": {
        "startLine": 1,
        "endLine": 1,
        "startOffset": 4,
        "endOffset": 22
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename function \"runJupyterNotebook\" to match the regular expression ^[a-z_][a-z0-9_]*$.",
      "effort": "10min",
      "debt": "10min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m8n4AbzNsQ0HHui",
      "rule": "python:S1172",
      "severity": "MAJOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/freeze_optimize_v2.py",
      "project": "oneAPI-samples",
      "line": 33,
      "hash": "43dddbb639f308cc2c776aed303c681c",
      "textRange": {
        "startLine": 33,
        "endLine": 33,
        "startOffset": 13,
        "endOffset": 24
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove the unused function parameter \"unused_args\".",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["unused"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m8n4AbzNsQ0HHuj",
      "rule": "python:S1481",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/freeze_optimize_v2.py",
      "project": "oneAPI-samples",
      "line": 57,
      "hash": "94447221b19bd641d42ec5e5fc52b71b",
      "textRange": {
        "startLine": 57,
        "endLine": 57,
        "startOffset": 2,
        "endOffset": 9
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove the unused local variable \"sig_def\".",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["unused"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m8n4AbzNsQ0HHuk",
      "rule": "python:S1481",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/freeze_optimize_v2.py",
      "project": "oneAPI-samples",
      "line": 104,
      "hash": "d8cc1853ecd16327c4409658838d3fa9",
      "textRange": {
        "startLine": 104,
        "endLine": 104,
        "startOffset": 4,
        "endOffset": 9
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove the unused local variable \"graph\".",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["unused"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m9B4AbzNsQ0HHun",
      "rule": "python:S3776",
      "severity": "CRITICAL",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/tf_benchmark.py",
      "project": "oneAPI-samples",
      "line": 30,
      "hash": "149071d85ee001febf658586d3c183a5",
      "textRange": {
        "startLine": 30,
        "endLine": 30,
        "startOffset": 4,
        "endOffset": 19
      },
      "flows": [
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/tf_benchmark.py",
              "textRange": {
                "startLine": 36,
                "endLine": 36,
                "startOffset": 4,
                "endOffset": 7
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/tf_benchmark.py",
              "textRange": {
                "startLine": 37,
                "endLine": 37,
                "startOffset": 8,
                "endOffset": 10
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/tf_benchmark.py",
              "textRange": {
                "startLine": 42,
                "endLine": 42,
                "startOffset": 12,
                "endOffset": 14
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/tf_benchmark.py",
              "textRange": {
                "startLine": 46,
                "endLine": 46,
                "startOffset": 20,
                "endOffset": 22
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/tf_benchmark.py",
              "textRange": {
                "startLine": 47,
                "endLine": 47,
                "startOffset": 51,
                "endOffset": 53
              },
              "msg": "+5 (incl 4 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/tf_benchmark.py",
              "textRange": {
                "startLine": 48,
                "endLine": 48,
                "startOffset": 20,
                "endOffset": 24
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/tf_benchmark.py",
              "textRange": {
                "startLine": 49,
                "endLine": 49,
                "startOffset": 57,
                "endOffset": 59
              },
              "msg": "+5 (incl 4 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/tf_benchmark.py",
              "textRange": {
                "startLine": 51,
                "endLine": 51,
                "startOffset": 20,
                "endOffset": 22
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/tf_benchmark.py",
              "textRange": {
                "startLine": 53,
                "endLine": 53,
                "startOffset": 20,
                "endOffset": 24
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/tf_benchmark.py",
              "textRange": {
                "startLine": 56,
                "endLine": 56,
                "startOffset": 16,
                "endOffset": 22
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/tf_benchmark.py",
              "textRange": {
                "startLine": 61,
                "endLine": 61,
                "startOffset": 12,
                "endOffset": 16
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/tf_benchmark.py",
              "textRange": {
                "startLine": 67,
                "endLine": 67,
                "startOffset": 12,
                "endOffset": 15
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/tf_benchmark.py",
              "textRange": {
                "startLine": 68,
                "endLine": 68,
                "startOffset": 16,
                "endOffset": 18
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/tf_benchmark.py",
              "textRange": {
                "startLine": 73,
                "endLine": 73,
                "startOffset": 8,
                "endOffset": 10
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/tf_benchmark.py",
              "textRange": {
                "startLine": 75,
                "endLine": 75,
                "startOffset": 12,
                "endOffset": 14
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/tf_benchmark.py",
              "textRange": {
                "startLine": 75,
                "endLine": 75,
                "startOffset": 48,
                "endOffset": 50
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/tf_benchmark.py",
              "textRange": {
                "startLine": 77,
                "endLine": 77,
                "startOffset": 12,
                "endOffset": 15
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/tf_benchmark.py",
              "textRange": {
                "startLine": 78,
                "endLine": 78,
                "startOffset": 16,
                "endOffset": 19
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/tf_benchmark.py",
              "textRange": {
                "startLine": 79,
                "endLine": 79,
                "startOffset": 20,
                "endOffset": 22
              },
              "msg": "+5 (incl 4 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/tf_benchmark.py",
              "textRange": {
                "startLine": 81,
                "endLine": 81,
                "startOffset": 12,
                "endOffset": 14
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Refactor this function to reduce its Cognitive Complexity from 59 to the 15 allowed.",
      "effort": "49min",
      "debt": "49min",
      "author": "",
      "tags": ["brain-overload"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m9B4AbzNsQ0HHuo",
      "rule": "python:S5754",
      "severity": "CRITICAL",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/tf_benchmark.py",
      "project": "oneAPI-samples",
      "line": 122,
      "hash": "3e264f5fbab10735799511f21ca70842",
      "textRange": {
        "startLine": 122,
        "endLine": 122,
        "startOffset": 8,
        "endOffset": 14
      },
      "flows": [],
      "status": "OPEN",
      "message": "Specify an exception class to catch or reraise the exception",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["bad-practice", "error-handling", "suspicious"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m9B4AbzNsQ0HHup",
      "rule": "python:S125",
      "severity": "MAJOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/tf_benchmark.py",
      "project": "oneAPI-samples",
      "line": 145,
      "hash": "b5602eda0945edd51420c17fb87e65a2",
      "textRange": {
        "startLine": 145,
        "endLine": 145,
        "startOffset": 8,
        "endOffset": 123
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove this commented out code.",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["unused"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m9B4AbzNsQ0HHuq",
      "rule": "python:S125",
      "severity": "MAJOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/tf_benchmark.py",
      "project": "oneAPI-samples",
      "line": 238,
      "hash": "aa550473e428a371c870aed6b980b7e1",
      "textRange": {
        "startLine": 238,
        "endLine": 238,
        "startOffset": 4,
        "endOffset": 64
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove this commented out code.",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["unused"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m9B4AbzNsQ0HHur",
      "rule": "python:S1135",
      "severity": "INFO",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/tf_benchmark.py",
      "project": "oneAPI-samples",
      "line": 288,
      "hash": "945dcb25bbbda58048d55f03ecdd2f13",
      "textRange": {
        "startLine": 288,
        "endLine": 288,
        "startOffset": 12,
        "endOffset": 56
      },
      "flows": [],
      "status": "OPEN",
      "message": "Complete the task associated to this \"TODO\" comment.",
      "effort": "0min",
      "debt": "0min",
      "author": "",
      "tags": ["cwe"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m7z4AbzNsQ0HHuZ",
      "rule": "python:S1542",
      "severity": "MAJOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/ci_test.py",
      "project": "oneAPI-samples",
      "line": 4,
      "hash": "2a15c5abcb89419fea9220602c2b12dd",
      "textRange": {
        "startLine": 4,
        "endLine": 4,
        "startOffset": 4,
        "endOffset": 22
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename function \"runJupyterNotebook\" to match the regular expression ^[a-z_][a-z0-9_]*$.",
      "effort": "10min",
      "debt": "10min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m7j4AbzNsQ0HHuW",
      "rule": "python:S1172",
      "severity": "MAJOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/freeze_optimize_v2.py",
      "project": "oneAPI-samples",
      "line": 33,
      "hash": "43dddbb639f308cc2c776aed303c681c",
      "textRange": {
        "startLine": 33,
        "endLine": 33,
        "startOffset": 13,
        "endOffset": 24
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove the unused function parameter \"unused_args\".",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["unused"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m7j4AbzNsQ0HHuY",
      "rule": "python:S1481",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/freeze_optimize_v2.py",
      "project": "oneAPI-samples",
      "line": 57,
      "hash": "94447221b19bd641d42ec5e5fc52b71b",
      "textRange": {
        "startLine": 57,
        "endLine": 57,
        "startOffset": 2,
        "endOffset": 9
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove the unused local variable \"sig_def\".",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["unused"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m7j4AbzNsQ0HHuX",
      "rule": "python:S1481",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/freeze_optimize_v2.py",
      "project": "oneAPI-samples",
      "line": 106,
      "hash": "d8cc1853ecd16327c4409658838d3fa9",
      "textRange": {
        "startLine": 106,
        "endLine": 106,
        "startOffset": 4,
        "endOffset": 9
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove the unused local variable \"graph\".",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["unused"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m7f4AbzNsQ0HHte",
      "rule": "python:S2772",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
      "project": "oneAPI-samples",
      "line": 18,
      "hash": "1a1dc91c907325c69271ddf0c944bc72",
      "textRange": {
        "startLine": 18,
        "endLine": 18,
        "startOffset": 4,
        "endOffset": 8
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove this unneeded \"pass\".",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["unused"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m7f4AbzNsQ0HHtf",
      "rule": "python:S101",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
      "project": "oneAPI-samples",
      "line": 48,
      "hash": "f284f1fc5e1fc9875d34c39f770fd591",
      "textRange": {
        "startLine": 48,
        "endLine": 48,
        "startOffset": 6,
        "endOffset": 15
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename class \"tfSession\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m7f4AbzNsQ0HHtg",
      "rule": "python:S1226",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
      "project": "oneAPI-samples",
      "line": 56,
      "hash": "ed7043962cbf2c169f1a84d83fe18ee6",
      "textRange": {
        "startLine": 56,
        "endLine": 56,
        "startOffset": 37,
        "endOffset": 49
      },
      "flows": [
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
              "textRange": {
                "startLine": 57,
                "endLine": 57,
                "startOffset": 8,
                "endOffset": 30
              },
              "msg": "\u0027options\u0027 is reassigned here.",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Introduce a new variable or use its initial value before reassigning \u0027options\u0027.",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": [],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "BUG",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m7f4AbzNsQ0HHth",
      "rule": "python:S1226",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
      "project": "oneAPI-samples",
      "line": 56,
      "hash": "ed7043962cbf2c169f1a84d83fe18ee6",
      "textRange": {
        "startLine": 56,
        "endLine": 56,
        "startOffset": 51,
        "endOffset": 68
      },
      "flows": [
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
              "textRange": {
                "startLine": 58,
                "endLine": 58,
                "startOffset": 8,
                "endOffset": 40
              },
              "msg": "\u0027run_metadata\u0027 is reassigned here.",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Introduce a new variable or use its initial value before reassigning \u0027run_metadata\u0027.",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": [],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "BUG",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m7f4AbzNsQ0HHti",
      "rule": "python:S101",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
      "project": "oneAPI-samples",
      "line": 67,
      "hash": "fd79a6556afa528d870a7a93bbd72ff6",
      "textRange": {
        "startLine": 67,
        "endLine": 67,
        "startOffset": 6,
        "endOffset": 19
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename class \"tfProfileHook\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m7f4AbzNsQ0HHtk",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
      "project": "oneAPI-samples",
      "line": 77,
      "hash": "939837ce6f6ff89fcea558b050e30e8a",
      "textRange": {
        "startLine": 77,
        "endLine": 77,
        "startOffset": 8,
        "endOffset": 24
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"ProfileUtilsRoot\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m7f4AbzNsQ0HHtj",
      "rule": "python:S1854",
      "severity": "MAJOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
      "project": "oneAPI-samples",
      "line": 80,
      "hash": "4db70ae4a90427541740903b514be0f2",
      "textRange": {
        "startLine": 80,
        "endLine": 80,
        "startOffset": 12,
        "endOffset": 50
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove this assignment to local variable \u0027output_dir\u0027; the value is never used.",
      "effort": "15min",
      "debt": "15min",
      "author": "",
      "tags": ["cwe", "unused"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m7f4AbzNsQ0HHtl",
      "rule": "python:S3626",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
      "project": "oneAPI-samples",
      "line": 127,
      "hash": "e70c4df10ef0983b9c8c31bd06b2a2c3",
      "textRange": {
        "startLine": 127,
        "endLine": 127,
        "startOffset": 8,
        "endOffset": 14
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove this redundant return.",
      "effort": "1min",
      "debt": "1min",
      "author": "",
      "tags": ["clumsy", "redundant"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m7f4AbzNsQ0HHtm",
      "rule": "python:S5754",
      "severity": "CRITICAL",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
      "project": "oneAPI-samples",
      "line": 141,
      "hash": "3e264f5fbab10735799511f21ca70842",
      "textRange": {
        "startLine": 141,
        "endLine": 141,
        "startOffset": 12,
        "endOffset": 18
      },
      "flows": [],
      "status": "OPEN",
      "message": "Specify an exception class to catch or reraise the exception",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["bad-practice", "error-handling", "suspicious"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m7f4AbzNsQ0HHtn",
      "rule": "python:S2772",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
      "project": "oneAPI-samples",
      "line": 143,
      "hash": "1a1dc91c907325c69271ddf0c944bc72",
      "textRange": {
        "startLine": 143,
        "endLine": 143,
        "startOffset": 16,
        "endOffset": 20
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove this unneeded \"pass\".",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["unused"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m7f4AbzNsQ0HHto",
      "rule": "python:S1144",
      "severity": "MAJOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
      "project": "oneAPI-samples",
      "line": 149,
      "hash": "b9f74c7966cca73b5934ed746d1371bd",
      "textRange": {
        "startLine": 149,
        "endLine": 149,
        "startOffset": 8,
        "endOffset": 15
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove this unused class-private \u0027__init_\u0027 method.",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["unused"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m7f4AbzNsQ0HHtp",
      "rule": "python:S3626",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
      "project": "oneAPI-samples",
      "line": 153,
      "hash": "e70c4df10ef0983b9c8c31bd06b2a2c3",
      "textRange": {
        "startLine": 153,
        "endLine": 153,
        "startOffset": 8,
        "endOffset": 14
      },
      "flows": [],
      "status": "OPEN",
      "message": "Remove this redundant return.",
      "effort": "1min",
      "debt": "1min",
      "author": "",
      "tags": ["clumsy", "redundant"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m7f4AbzNsQ0HHtq",
      "rule": "python:S117",
      "severity": "MINOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
      "project": "oneAPI-samples",
      "line": 190,
      "hash": "138035f3a7ef902047f4b8f55c574ff2",
      "textRange": {
        "startLine": 190,
        "endLine": 190,
        "startOffset": 8,
        "endOffset": 19
      },
      "flows": [],
      "status": "OPEN",
      "message": "Rename this local variable \"listOfFiles\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
      "effort": "2min",
      "debt": "2min",
      "author": "",
      "tags": ["convention"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m7f4AbzNsQ0HHtr",
      "rule": "python:S3776",
      "severity": "CRITICAL",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
      "project": "oneAPI-samples",
      "line": 238,
      "hash": "5c382e0a37cc06d33a0442082dac5bc5",
      "textRange": {
        "startLine": 238,
        "endLine": 238,
        "startOffset": 8,
        "endOffset": 30
      },
      "flows": [
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
              "textRange": {
                "startLine": 242,
                "endLine": 242,
                "startOffset": 8,
                "endOffset": 11
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
              "textRange": {
                "startLine": 244,
                "endLine": 244,
                "startOffset": 12,
                "endOffset": 15
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
              "textRange": {
                "startLine": 245,
                "endLine": 245,
                "startOffset": 16,
                "endOffset": 18
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
              "textRange": {
                "startLine": 246,
                "endLine": 246,
                "startOffset": 20,
                "endOffset": 22
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
              "textRange": {
                "startLine": 247,
                "endLine": 247,
                "startOffset": 24,
                "endOffset": 26
              },
              "msg": "+5 (incl 4 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
              "textRange": {
                "startLine": 247,
                "endLine": 247,
                "startOffset": 62,
                "endOffset": 65
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
              "textRange": {
                "startLine": 249,
                "endLine": 249,
                "startOffset": 16,
                "endOffset": 18
              },
              "msg": "+3 (incl 2 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
              "textRange": {
                "startLine": 250,
                "endLine": 250,
                "startOffset": 20,
                "endOffset": 22
              },
              "msg": "+4 (incl 3 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
              "textRange": {
                "startLine": 251,
                "endLine": 251,
                "startOffset": 24,
                "endOffset": 26
              },
              "msg": "+5 (incl 4 for nesting)",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
              "textRange": {
                "startLine": 251,
                "endLine": 251,
                "startOffset": 63,
                "endOffset": 66
              },
              "msg": "+1",
              "msgFormattings": []
            }
          ]
        },
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
              "textRange": {
                "startLine": 253,
                "endLine": 253,
                "startOffset": 12,
                "endOffset": 14
              },
              "msg": "+2 (incl 1 for nesting)",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Refactor this function to reduce its Cognitive Complexity from 31 to the 15 allowed.",
      "effort": "21min",
      "debt": "21min",
      "author": "",
      "tags": ["brain-overload"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    },
    {
      "key": "AYdc8m7f4AbzNsQ0HHtb",
      "rule": "python:S1066",
      "severity": "MAJOR",
      "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
      "project": "oneAPI-samples",
      "line": 246,
      "hash": "fe200b41e47d91662118d1da0020d7aa",
      "textRange": {
        "startLine": 246,
        "endLine": 246,
        "startOffset": 20,
        "endOffset": 22
      },
      "flows": [
        {
          "locations": [
            {
              "component": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
              "textRange": {
                "startLine": 245,
                "endLine": 245,
                "startOffset": 16,
                "endOffset": 18
              },
              "msg": "enclosing",
              "msgFormattings": []
            }
          ]
        }
      ],
      "status": "OPEN",
      "message": "Merge this if statement with the enclosing one.",
      "effort": "5min",
      "debt": "5min",
      "author": "",
      "tags": ["clumsy"],
      "creationDate": "2023-04-07T18:19:18+0000",
      "updateDate": "2023-04-07T18:19:18+0000",
      "type": "CODE_SMELL",
      "scope": "MAIN",
      "quickFixAvailable": false,
      "messageFormattings": []
    }
  ],
  "components": [
    {
      "key": "oneAPI-samples",
      "enabled": true,
      "qualifier": "TRK",
      "name": "oneAPI-samples",
      "longName": "oneAPI-samples"
    },
    {
      "key": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "inference_commonVoice.py",
      "longName": "oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py",
      "path": "oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_commonVoice.py"
    },
    {
      "key": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Training/prepareAllCommonVoice.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "prepareAllCommonVoice.py",
      "longName": "oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Training/prepareAllCommonVoice.py",
      "path": "oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Training/prepareAllCommonVoice.py"
    },
    {
      "key": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/tf_benchmark.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "tf_benchmark.py",
      "longName": "oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/tf_benchmark.py",
      "path": "oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/tf_benchmark.py"
    },
    {
      "key": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/freeze_optimize_v2.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "freeze_optimize_v2.py",
      "longName": "oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/freeze_optimize_v2.py",
      "path": "oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/freeze_optimize_v2.py"
    },
    {
      "key": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/ci_test.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "ci_test.py",
      "longName": "oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/ci_test.py",
      "path": "oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_Enabling_Auto_Mixed_Precision_for_TransferLearning/scripts/ci_test.py"
    },
    {
      "key": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/freeze_optimize_v2.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "freeze_optimize_v2.py",
      "longName": "oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/freeze_optimize_v2.py",
      "path": "oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/freeze_optimize_v2.py"
    },
    {
      "key": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/ci_test.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "ci_test.py",
      "longName": "oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/ci_test.py",
      "path": "oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/ci_test.py"
    },
    {
      "key": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelPython_XGBoost_Performance/IntelPython_XGBoost_Performance.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "IntelPython_XGBoost_Performance.py",
      "longName": "oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelPython_XGBoost_Performance/IntelPython_XGBoost_Performance.py",
      "path": "oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelPython_XGBoost_Performance/IntelPython_XGBoost_Performance.py"
    },
    {
      "key": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "profile_utils.py",
      "longName": "oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py",
      "path": "oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelTensorFlow_InferenceOptimization/scripts/profile_utils.py"
    },
    {
      "key": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelPython_XGBoost_daal4pyPrediction/ci_test.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "ci_test.py",
      "longName": "oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelPython_XGBoost_daal4pyPrediction/ci_test.py",
      "path": "oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelPython_XGBoost_daal4pyPrediction/ci_test.py"
    },
    {
      "key": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelPyTorch_Extensions_Inference_Optimization/scripts/resnet50.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "resnet50.py",
      "longName": "oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelPyTorch_Extensions_Inference_Optimization/scripts/resnet50.py",
      "path": "oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelPyTorch_Extensions_Inference_Optimization/scripts/resnet50.py"
    },
    {
      "key": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/quantize_model.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "quantize_model.py",
      "longName": "oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/quantize_model.py",
      "path": "oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/quantize_model.py"
    },
    {
      "key": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelPyTorch_Extensions_Inference_Optimization/scripts/ci_test.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "ci_test.py",
      "longName": "oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelPyTorch_Extensions_Inference_Optimization/scripts/ci_test.py",
      "path": "oneAPI-samples/AI-and-Analytics/Features-and-Functionality/IntelPyTorch_Extensions_Inference_Optimization/scripts/ci_test.py"
    },
    {
      "key": "oneAPI-samples:oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
      "enabled": true,
      "qualifier": "FIL",
      "name": "inference_custom.py",
      "longName": "oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py",
      "path": "oneAPI-samples/AI-and-Analytics/End-to-end-Workloads/LanguageIdentification/Inference/inference_custom.py"
    }
  ],
  "facets": []
}
