{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "javascript/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "PT",
                  "Security",
                  "SourceNonServer",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "<unknown>",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/eclipse-vertx/vert.x/commit/d1183271de193b6bef158e2b1dfb5ba65a15cbc9?diff=split#diff-fa3b44a1f7fa945e9aedd043ef316ad52d191aef30871789663bea3426ba14baL-1",
                    "lines": [
                      {
                        "line": "} else if (req.path.indexOf('..') == -1) {\n",
                        "lineNumber": 8,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  req.response.sendFile(\".\" + req.path);\n",
                        "lineNumber": 9,
                        "lineChange": "removed"
                      },
                      {
                        "line": "} else if (req.path().indexOf('..') == -1) {\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "  req.response.sendFile(\".\" + req.path());\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/iamfrntdv/adm-dev-kit/commit/8edeb067e703a642cb7ac7c88fb95fce8dd9c248?diff=split#diff-52baeef6a12dda5ae6078825eeb32958966ba6cbdd56792899f6273fecd26eabL-1",
                    "lines": [
                      {
                        "line": "const img = fs.readFileSync(filePath);\n",
                        "lineNumber": 7,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.end(img);\n",
                        "lineNumber": 8,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.sendFile(filePath, {root: './'});\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/substack/shipboard/commit/e2722480410eea3f3d7b51730dcdea49df649cd2?diff=split#diff-e727e4bdf3657fd1d798edcd6b099d6e092f8573cba266154583a746bba0f346L-1",
                    "lines": [
                      {
                        "line": "    if (has(pages, req.url)) {\n",
                        "lineNumber": 14,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    var p = req.url.split(/[#?]/)[0];\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (p === '/') {\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "        html('layout.html').pipe(hyperstream({\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "            '#content': html(pages[req.url])\n",
                        "lineNumber": 16,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            '[page=create]': html('create.html'),\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "            '[page=view]': html('view.html'),\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "            '[page=edit]': html('edit.html')\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "        })).pipe(res);\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else st(req, res);\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "};\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "function html (file) {\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return fs.createReadStream(path.join(__dirname, 'html', file));\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 40,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "python/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "PT",
                  "Security",
                  "SourceNonServer",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/Guad/fuwa/commit/955baf1c0e8824f08a96e48a350ee3cd0e3c5493?diff=split#diff-568470d013cd12e4f388206520da39ab9a4e4c3c6b95846cbc281abc1ba3c959L-1",
                    "lines": [
                      {
                        "line": "import string, random\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "import string, random, hashlib, os\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      },
                      {
                        "line": "from werkzeug import secure_filename\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      },
                      {
                        "line": "#Load config file\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "config = {}\n",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "with open('config.ini', 'r') as file:\n",
                        "lineNumber": 6,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tfor line in file.read().splitlines():\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tline = line.split('==')\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tconfig[line[0]] = line[1]\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "app = flask.Flask(__name__) #Initialize our application\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.config['MAX_CONTENT_LENGTH'] = 10 * 1024 * 1024 #Set the upload limit to 10MiB\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "def genHash(seed): #Generate five letter filenames for our files\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "    base = string.ascii_lowercase+string.digits \n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "    random.seed(seed)\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "    hash_value = \"\"\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for i in range(5):\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "        hash_value += random.choice(base)\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return hash_value\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "@app.route('/', methods=['GET', 'POST'])\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "def index():\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tif flask.request.method == 'POST':\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\"\"\"\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tFile upload happens here.\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tWe get your filename and convert it to our hash with your extension.\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tThen we redirect to the file itself.\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\"\"\"\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tf = flask.request.files['file']\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\textension = f.filename.split('.')[-1]\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tfilename = genHash(f.filename) + '.' + extension\n",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tf.save('static/files/%s' % filename)\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tprint 'Uploaded file \\'%s\\'' % filename #Log what file was uploaded\n",
                        "lineNumber": 27,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\treturn flask.redirect(flask.url_for('getFile', filename=filename))\n",
                        "lineNumber": 28,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\thasher = hashlib.md5() \t\t\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tbuf = f.read()\t\t   \t\t\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tf.seek(0) #Set cursor back to position 0 so we can read it again in the save function.\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\t\t\t\t\t\t\t# We hash the file to get its filename.\t   \t\t\n",
                        "lineNumber": 37,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\t\t\t\t\t\t\t# So that we can upload two different images with the same filename,\n",
                        "lineNumber": 38,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\thasher.update(buf)\t   \t\t# But not two same images with different filenames.\n",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tdirname = genHash(hasher.hexdigest())\n",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tif not os.path.exists(\"static/files/%s\" % dirname): # Check if the folder already exists\n",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tos.mkdir('static/files/%s' % dirname) #Make it\n",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tf.save('static/files/%s/%s' % (dirname, secure_filename(f.filename)))\n",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tprint 'Uploaded file \\'%s\\'' % secure_filename(f.filename) #Log what file was uploaded\n",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\treturn flask.redirect(flask.url_for('getFile', dirname=dirname,filename=secure_filename(f.filename)))\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\telse:\n",
                        "lineNumber": 46,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tflask.flash('File already exists in %s!' % dirname) #Display a message for the user.\n",
                        "lineNumber": 47,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\treturn flask.redirect(flask.url_for('index'))\n",
                        "lineNumber": 48,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/fonttools/fonttools/commit/0b99c8968e04e2e36c6c46ad8bb1a550d25969b4?diff=split#diff-e8b6161353c7ce5b13e62df1da329a85de0ef80ce8f039d283c25bf892b2b600L-1",
                    "lines": [
                      {
                        "line": "os.system('gzip -9v %s' % tar)\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "os.rename(gz, tgz)\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "if destdir:\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tprint \"destination directory:\", destdir\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tos.system('mv %s %s' % (gz, destdir))\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Chenwe-i-lin/KnowledgeFruits/commit/?diff=split#diff-ab8c675e5b4b07c550455b0884835f1df471bb69ad7142f6ad43b26cf33eb4e6L-1",
                    "lines": [
                      {
                        "line": "base_path = os.path.abspath(os.path.dirname(__file__))\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "base_path_for_data =  os.path.join(base_path,'data/texture')\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "file = os.path.join(base_path_for_data, image + '.png')\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "if os.path.abspath(file).startswith(base_path_for_data):\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "with open(os.getcwd() + \"/data/texture/\" + image + '.png', \"rb\") as f:\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 36,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "javascript/NoRateLimitingForExpensiveWebOperation",
              "name": "NoRateLimitingForExpensiveWebOperation",
              "shortDescription": {
                "text": "Allocation of Resources Without Limits or Throttling"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nWithout unlimited resources, software operating in the real world is inherently limited in the resources it may consume; similarly, servers are limited by the number of simultaneous sessions they can handle. Therefore, it is important for developers to design software that considers these real-world physical (or virtual) limitations and limits user sessions accordingly, both in terms of the number of user sessions and in the quantity of resources each user may demand. Software with this weakness does not include such limitations and as a result, individual user sessions may consume too many resources, leading to unintended software behavior including, potentially, denial of service. This can be compared to a single restaurant customer emptying out the entire buffet, leaving no food for other customers--or an entire busload mobbing the buffet all at once, with a similar effect. This may happen inadvertently or as a result of an attack by a malicious user.\n\n## Best practices for prevention\n* Test extensively to obtain baseline values indicating how the software performs in the real world under various conditions (normal and peak); use these values to determine reasonable software limits.\n* Set clear limits for all flexible parameters such as maximum allocable memory, number of processes within a given timeframe, file descriptors, requests per client, number of records per request, etc. This is particularly true for any parameters within user control.\n* Release all resources when no longer in use, including incorporating timeouts for inactive users, processes, and resources.\n* Familiarize Dev, Ops, and IT teams with best practices for recognizing and preventing DoS attacks and out-of-control resource allocation to prevent catastrophic failures.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "NoRateLimitingForExpensiveWebOperation",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/natsukagami/themis-web-interface/commit/e1ef34f8b95e7eefab54c204b78fbdee70169a6d?diff=split#diff-cd0e12b228a7dea99a7346adf68cfc7a6a2c321846cc8a90fc6cd92cf8066d5eL-1",
                    "lines": [
                      {
                        "line": "router.post('/', (req, res, next) => {\n",
                        "lineNumber": 8,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const rateLimiter = require('../controls/rate-limiter')({\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t// Allow 3 submits, then slows down\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tfreeRetries: 30,\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tminWait: 2 * 60 * 60,\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tmaxWait: 2 * 60 * 60,\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tlifetime: 60 * 60\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      },
                      {
                        "line": "router.post('/', rateLimiter.prevent, (req, res, next) => {\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Waifu-pics/waifu-api/commit/da0d3b4ee8dd4e2ab0a789dfd04cb304a537368e?diff=split#diff-0eddd48e85f4f98a238d49bfe0b4cf514b1430322bcdc196b1a97786e0ec30c8L-1",
                    "lines": [
                      {
                        "line": "const rateLimit = require(\"express-rate-limit\")\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "module.exports = ({ db, app, config, s3 }) => {\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      },
                      {
                        "line": "    // Checking if user is Admin to prevent rate limit middleware\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "    const chkAdmin = async (req, res, next) => {\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "        const { token } = req.headers\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "        const Admins = db.collection('admins')\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "        req.chkAdmin = Boolean(req.headers.token && typeof token === \"string\" && Boolean(await Admins.findOne({token})))\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "        \n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "        next()\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "    // Rate limit middleware\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "    const limiter = rateLimit({\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "        windowMs: 10 * 60 * 1000, // 10 minutes\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "        max: 15,\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "        message: \"You can only upload 15 files per 10 minutes!\",\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "        statusCode: 400,\n",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "        skip: function (req) {\n",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "            return req.chkAdmin\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "    })\n",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "    // Do shit to upload\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "    app.use(\"/api/upload\", chkAdmin, limiter)\n",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "    app.use(fileUpload({\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "        limits: { fileSize: config.maxUploadSize * 1024 * 1024 },\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "        abortOnLimit: true,\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "        createParentPath: true\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }))\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "    app.post('/api/upload', async (req, res) => {\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/davidmerfield/Blot/commit/f2bcb51b129075c8ebe5c1c23fac36dee35e800c?diff=split#diff-31b7f0d966974821a84da24ef72a8b290d5b82d34861dbdf7be2743821b2f4f5L-1",
                    "lines": [
                      {
                        "line": "// stores state locally, don't use this in production\n",
                        "lineNumber": 10,
                        "lineChange": "removed"
                      },
                      {
                        "line": "// var brute = require('express-brute');\n",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": "// var store = new brute.MemoryStore();\n",
                        "lineNumber": 12,
                        "lineChange": "removed"
                      },
                      {
                        "line": "// var limiter = new brute(store);\n",
                        "lineNumber": 13,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var client = require('client');\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "var Brute = require('express-brute');\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "var RedisStore = require('express-brute-redis');\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "var store = new RedisStore({\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "    client: client,\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      },
                      {
                        "line": "    prefix: 'brute:'\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "var limiter = new Brute(store, {\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "  freeRetries: 200,\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "  failCallback: onLimit,\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "var login = Express.Router();\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "var form = login.route('/');\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "form.all(limiter.prevent);\n",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "form.get(checkToken, function(req, res){\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.render('log-in-email');\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "form.post(parse, checkEmail, checkReset, checkPassword);\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "form.all(errorHandler);\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "function onLimit (req, res, next, until) {\n",
                        "lineNumber": 37,
                        "lineChange": "added"
                      },
                      {
                        "line": "  res.status(429).send('Log in rate limit hit. Please wait ' + moment(until).toNow(true) + ' before retrying.');\n",
                        "lineNumber": 38,
                        "lineChange": "added"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 40,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 27,
                "cwe": [
                  "CWE-770"
                ]
              }
            },
            {
              "id": "javascript/HardcodedNonCryptoSecret/test",
              "name": "HardcodedNonCryptoSecret/test",
              "shortDescription": {
                "text": "Hardcoded Secret"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n## Best practices for prevention\n- Never hard code security-related constants; use symbolic names or configuration lookup files.\n- As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n- Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "HardcodedNonCryptoSecret",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/markstock7/FileManager/commit/50572778825dea6b6fdb34c9ae950d9915743e4c?diff=split#diff-408990876524f4737b49693cedc52fd267e31f665d0a7f71792dcb986d6a8268L-1",
                    "lines": [
                      {
                        "line": "accessKeyId: 'pT3KujnBPxc0ey7G',\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "secretAccessKey: 'CcHjh2y7tIFljxgUT4U8sQLctkMBHu',\n",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "accessKeyId: '',\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      },
                      {
                        "line": "secretAccessKey: '',\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/rodrigotamura/go-stack-2019/commit/26e020dfc2272fe76c82c28d86f492c3c84a94c5?diff=split#diff-92f76c0bccc1f970244da3b50449f200d4787cf60a87be14ff4f250d0ba1a590L-1",
                    "lines": [
                      {
                        "line": "secret: '632ca4dfc8b2269e6fdf03ab5a55d2ec',\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "secret: process.env.APP_SECRET,\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/appcypher/events-manager-io/commit/656fdf6bfb902894db36b4b3ea98441ee607b75e?diff=split#diff-0cd5bb6f9779938a122d3bfef4a22f6fc66e59742c3a377dde667d8a6c5f5e16L-1",
                    "lines": [
                      {
                        "line": "password: bcrypt.hashSync('admin', 10),\n",
                        "lineNumber": 6,
                        "lineChange": "removed"
                      },
                      {
                        "line": "password: bcrypt.hashSync(process.env.ADMIN_SEED_PASSWORD, 10),\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 68,
                "cwe": [
                  "CWE-547"
                ]
              }
            },
            {
              "id": "javascript/InsecureCipherNoIntegrity",
              "name": "InsecureCipherNoIntegrity",
              "shortDescription": {
                "text": "Use of a Broken or Risky Cryptographic Algorithm"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nWhen sensitive information is transmitted with weak encryption, attackers are potentially able to intercept the information and decrypt it, with a wide range of negative consequences. This includes accessing code or content they are not authorized to view and changing or taking down a site or app, often with a demand for ransom. Every developer is aware of the risks of transmitting sensitive information in plain text. Yet many still use outdated or inferior cryptographic methods to protect information under their control. As cryptographic methods grow stronger with time, code must be updated to incorporate more modern and secure cryptography.\n\n## Best practices for prevention\n* Avoid using DES, and use AES (in a secure mode, such as Galois/Counter Mode) or another strong encryption algorithm instead.\n* Be aware of outdated hashes, such as MD5 and SHA1 (along with many others); recognize and implement current cryptographic standards instead.\n* Never use custom or DIY security and cryptographic methods; instead, use methods that are part of an accepted library or framework.\n* Ensure that code dealing with cryptographic methods is highly modular and can be easily replaced as security standards change.\n* Increase developer awareness of proper encryption key management and protection to ensure best practices throughout the application.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "InsecureCipherNoIntegrity",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/itsKaynine/thailand-post/commit/80b30882327162ece012ffeb493b53776459386f?diff=split#diff-e727e4bdf3657fd1d798edcd6b099d6e092f8573cba266154583a746bba0f346L-1",
                    "lines": [
                      {
                        "line": "secureOptions: constants.SSL_OP_NO_TLSv1_2,\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Mostafa-Samir/klyng/commit/649a00feefd08f390b1378131cd375b948bc87c3?diff=split#diff-838f679324e8a8634f7020a2a667c36445c757066562d295ade365ecfb9b8bf3L-1",
                    "lines": [
                      {
                        "line": "        var decipher = crypto.createDecipher('aes-256-ctr', secret);\n",
                        "lineNumber": 39,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        var decrypted = '' + decipher.update(data.payload, 'base64', 'utf8') + decipher.final('utf8');\n",
                        "lineNumber": 40,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 41,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        ipc.server.emit(socket, 'AUTH:STATUS', {status: decrypted === password});\n",
                        "lineNumber": 42,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        var decrypted = utils.verify(data, secret);\n",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "        ipc.server.emit(socket, 'AUTH:STATUS', {status: decrypted.data === password});\n",
                        "lineNumber": 41,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/mgrybyk/node-tunnel/commit/70698c62ef2c19d0070027ad1765529294a671fe?diff=split#diff-fda8f0e13abe3d5c5685ad895fa528dd6067c41b66b6ebc6d1de71ca9a704d8dL-1",
                    "lines": [
                      {
                        "line": "if (!process.env.N_T_CRYPT_KEY) {\n",
                        "lineNumber": 56,
                        "lineChange": "added"
                      },
                      {
                        "line": "  console.log('WARNING: default CRYPT KEY is used!!!')\n",
                        "lineNumber": 57,
                        "lineChange": "added"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 58,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 59,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 40,
                "cwe": [
                  "CWE-327"
                ]
              }
            },
            {
              "id": "javascript/XSS",
              "name": "XSS",
              "shortDescription": {
                "text": "Cross-site Scripting (XSS)"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser's Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they've been correctly escaped in the application code and in this way the attempted attack is diverted.\n\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware.\n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user's browser.|\n|**DOM-based**|Client|The attacker forces the user's browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n## Best practices for prevention\nThis section describes the top best practices designed to specifically protect your code:\n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches.\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents.\n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "XSS",
                  "Security",
                  "SourceServer",
                  "SourceHttpParam",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/mockyeah/mockyeah/commit/24e0243bfde18396637ba0bfca681c2cf2d2be33?diff=split#diff-8fef0ae737443178f9c7da5682af7782959b12df701f054731a31e4238049341L-1",
                    "lines": [
                      {
                        "line": "mockyeah.post('/', (req, res) => {\n",
                        "lineNumber": 4,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  res.send(req.body.hey);\n",
                        "lineNumber": 5,
                        "lineChange": "removed"
                      },
                      {
                        "line": "mockyeah.post('/', {\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "  text: req => req.body.hey\n",
                        "lineNumber": 5,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/spmjs/spmjs.io/commit/7ef27fc5ab515b9b7b2ed55b5797d87f78c027e4?diff=split#diff-494245839b096ba21695a9461e8c619198001b9ecd9d129c5c9af193ae9d67fbL-1",
                    "lines": [
                      {
                        "line": "res.set('Content-Type', 'application/json');\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "res.send(JSON.stringify(p));\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/MROS/infinite-city/commit/e44f362054f1d95d6e266d6448cc333b5564c87d?diff=split#diff-2fe53c2b142a276b20739b3145462cc926666764b0a5b4fcd1605be1d316e4d2L-1",
                    "lines": [
                      {
                        "line": "res.status(400).send(err.message);\n",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.status(400).send(\"FAIL\");\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 141,
                "cwe": [
                  "CWE-79"
                ]
              }
            },
            {
              "id": "javascript/OR",
              "name": "OR",
              "shortDescription": {
                "text": "Open Redirect"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\nAn open redirect attack takes place when a web application redirects the user to an unauthorized and untrusted site. In general, URL redirection refers to the ability of a website or application to redirect users to another site. This is often a benign and useful feature. For example, if a resource has moved to a new location, URL redirection can transfer the user to that location rather than displaying an error message.\nHowever, this ability can be exploited through social engineering, tricking the user into believing they are accessing one site when, in reality, they are being redirected to a dangerous site, such as a phishing site. Once there, the user may be further tricked into entering credentials or personally identifiable information (PII), believing they are still within the original, trusted domain. Attackers can then use these credentials to gain unauthorized access or leverage the user's PII for sale or ransom.\n\n## Best practices for prevention\n* When developing a site or web app, consider implementing a disclaimer page to remind users that they are leaving a secure site.\n* Adopt a zero-trust approach in which all input is treated with suspicion.\n* Validate all input against deny-lists to ensure it does not contain code to redirect the user. This method is good but inherently incomplete.\n* Be aware of all sources of untrusted input being sent to the server that could be used to redirect the user, such as cookies, URL components, filenames, query results, request headers, and more.\n* In particular, be aware of potential API calls that could send input indirectly to redirect the user.\n* To protect end users, use a firewall to block known malicious sites, train users to recognize basic signs of a phishing attack, and ensure that all network endpoints are patched with the most current updates.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "OR",
                  "Security",
                  "SourceServer",
                  "SourceHttpHeader",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/deanoemcke/thegreatsuspender/commit/a2d115a3f1762534fcbb2526f485cc5b2e7ee34f?diff=split#diff-7522343359c6bd41f5a1feb5740b34c1ac3a3767f53b91a523f6bb0b81e55fe6L-1",
                    "lines": [
                      {
                        "line": "const backgroundPage = chrome.extension.getBackgroundPage();\n",
                        "lineNumber": 3,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if (!backgroundPage || !backgroundPage.tgs) {\n",
                        "lineNumber": 4,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  setTimeout(() => location.replace(location.href), 1000);\n",
                        "lineNumber": 5,
                        "lineChange": "removed"
                      },
                      {
                        "line": "try {\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      },
                      {
                        "line": "  chrome.extension.getBackgroundPage().tgs.setViewGlobals(global, 'options');\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "} catch (e) {\n",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "  window.setTimeout(() => window.location.reload(), 1000);\n",
                        "lineNumber": 6,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/davidmerfield/Blot/commit/f304c11a46c1b7fb152a07def70a97dc893bc64f?diff=split#diff-99f770f613cdd250d6d39a092a5ab3a5ac4031a3c23500e88d3e18410166a2bcL-1",
                    "lines": [
                      {
                        "line": "res.message({error: message});\n",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.redirect(req.path);\n",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.message(req.path, err);\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Midburn/spark/commit/a4ed80954090d9869d7e384e8b23567642b25fa8?diff=split#diff-d995cd46019e674b6792d7cc828b99307a9c05ce2f862e2f417e3eccea8a9707L-1",
                    "lines": [
                      {
                        "line": "if (r) {\n",
                        "lineNumber": 97,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if (r && constants.LOGIN_REDIRECT_URL_WHITELIST.indexOf(r) > 0) {\n",
                        "lineNumber": 97,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return res.redirect(r);\n",
                        "lineNumber": 98,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 68,
                "cwe": [
                  "CWE-601"
                ]
              }
            },
            {
              "id": "javascript/HttpToHttps",
              "name": "HttpToHttps",
              "shortDescription": {
                "text": "Cleartext Transmission of Sensitive Information"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\nThis weakness occurs when software transmits sensitive information, such as passwords or credit card numbers, in unencrypted form. This information may then be intercepted by threat actors using sniffer tools or interception techniques such as man-in-the-middle (MITM) attacks (often involving social engineering). Attackers can then use information gleaned to perform a variety of actions, depending on the information type. Possible actions include gaining unauthorized access, impersonating a user, moving laterally within the organization's network, or retrieving and potentially modifying files. This weakness is almost completely avoidable through intelligent architecture and design.\n\n## Best practices for prevention\n* Build web applications around a security mindset and the awareness that sniffers may be present at any time.\n* Ensure that all sensitive data transmission uses reliable encryption.\n* Implement security measures so that sensitive results are never returned in plain text.\n* Implement multiple-factor authentication methods to validate remote instances.\n* Use SSL not only at logon but throughout communications.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "HttpToHttps",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/eserozvataf/apibone/commit/bbac9343971a20f4fee124b6f0a2f6a80895fb35?diff=split#diff-8b733ca241b0609b1fc0f2e60d14f911b3a82997a939e7eb01fe6c25b759c234L-1",
                    "lines": [
                      {
                        "line": "const http = require('http'),\n",
                        "lineNumber": 0,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const https = require('https'),\n",
                        "lineNumber": 0,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/RetireJS/retire.js/commit/82d44d60c98acba0e4c3772709e76b989c4274bb?diff=split#diff-89d400752fb89d946a43778e9f0b3dba25968dcdf8604ae08adbb3ecb236338fL-1",
                    "lines": [
                      {
                        "line": "var http = require('http'),\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var http = require('https'),\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Rich-Harris/packd/commit/c14d17da80ed075ee007de3121422fb2c5b77e4d?diff=split#diff-1821d11fbffbab2187701c42616688d46bf66d7b2cf6eaf363548dd66caa6ebaL-1",
                    "lines": [
                      {
                        "line": "const http = require( 'http' );\n",
                        "lineNumber": 0,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const https = require( 'https' );\n",
                        "lineNumber": 0,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 1,
                        "lineChange": "none"
                      },
                      {
                        "line": "module.exports = function get ( url ) {\n",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "\treturn new Promise( ( fulfil, reject ) => {\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\thttp.get( url, response => {\n",
                        "lineNumber": 4,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\thttps.get( url, response => {\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 122,
                "cwe": [
                  "CWE-319"
                ]
              }
            },
            {
              "id": "python/Ssrf",
              "name": "Ssrf",
              "shortDescription": {
                "text": "Server-Side Request Forgery (SSRF)"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\nIn a server-side request forgery attack, a malicious user supplies a URL (an external URL or a network IP address such as 127.0.0.1) to the application's back end. The server then accesses the URL and shares its results, which may include sensitive information such as AWS metadata, internal configuration information, or database contents with the attacker. Because the request comes from the back end, it bypasses access controls, potentially exposing information the user does not have sufficient privileges to receive. The attacker can then exploit this information to gain access, modify the web application, or demand a ransom payment.\n\n## Best practices for prevention\n* Blacklists are problematic and attackers have numerous ways to bypass them; ideally, use a whitelist of all permitted domains and IP addresses.\n* Use authentication even within your own network to prevent exploitation of server-side requests.\n* Implement zero trust and sanitize and validate all URL and header data returning to the server from the user. Strip invalid or suspect characters, then inspect to be certain it contains a valid and expected value.\n* Ideally, avoid sending server requests based on user-provided data altogether.\n* Ensure that you are not sending raw response bodies from the server directly to the client. Only deliver expected responses.\n* Disable suspect and exploitable URL schemas. Common culprits include obscure and little-used schemas such as `file://`, `dict://`, `ftp://`, and `gopher://`.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "Ssrf",
                  "Security",
                  "SourceNonServer",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/rowanlupton/pylodon/commit/6d2e152f41f5073d6b224307690087ebdce3df12?diff=split#diff-0c2bad94cd303c5944a38a94f62a63355b8bed2e102dc87c0f44de95cf135b8aL-1",
                    "lines": [
                      {
                        "line": "import json, requests\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "from flask_pymongo import PyMongo\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "from activipy import vocab\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "from .forms import userLogin, userRegister, composePost\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "from .users import User\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "# from .emails import lostPassword, checkToken\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "mongo = PyMongo(app)\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "SERVER_URL = 'http://populator.smilodon.social/'\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "API_HEADERS = {'Content-Type': 'application/ld+json', 'profile': 'https://www.w3.org/ns/activitystreams'}\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "@lm.user_loader\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "def load_user(handle):\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    u = mongo.db.users.find_one({\"id\": handle})\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if not u:\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return None\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return User(u['id'])\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "@app.route('/', methods=['GET', 'POST'])\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "@login_required\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "def index():\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tuser = mongo.db.users.find_one({'id': current_user.get_id()})\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tr = requests.get(user['inbox'], headers=API_HEADERS)\n",
                        "lineNumber": 29,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\tr = requests.get('http://localhost:5000/api/roo/inbox', headers=API_HEADERS)\n",
                        "lineNumber": 30,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/ARM-software/vulkan_best_practice_for_mobile_developers/commit/23ad832af741f0354949a72e6c6f799eb9d2bace?diff=split#diff-7efee2ee97af01f846ed5818e84c955c51bd8efe06588e0dfa341c68966d945fL-1",
                    "lines": [
                      {
                        "line": "    parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter, description=\"Downloads and unpacks assets\")\n",
                        "lineNumber": 31,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    parser.add_argument(\"zip_url\", action=\"store\", type=str, help=\"URL of the assets package\")\n",
                        "lineNumber": 32,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    args = parser.parse_args()\n",
                        "lineNumber": 33,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    url = \"https://github.com/ARM-software/vulkan_best_practice_for_mobile_developers/releases/download/v1.1.2/scenes.zip\"\n",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try:\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "        request = requests.get(args.zip_url, stream=True)\n",
                        "lineNumber": 36,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        request = requests.get(url, stream=True)\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/schlosser/eventum/commit/?diff=split#diff-f4729fea0d9ecf9950ff3b36ce5dfba2ab27cf3fffa642b9e0d176234cdfc8a1L-1",
                    "lines": [
                      {
                        "line": "old_site_url = 'http://adicu.github.com' + request.path\n",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": "old_site_url = 'http://adicu.github.com/' + request.path\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "response = requests.get(old_site_url)\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 25,
                "cwe": [
                  "CWE-918"
                ]
              }
            },
            {
              "id": "python/InsecureXmlParser",
              "name": "InsecureXmlParser",
              "shortDescription": {
                "text": "Insecure Xml Parser"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nFor convenience, XML documents can use system identifiers to enable access to stored content, whether local or remote. The XML processor then uses the system identifier to access the resource rather than using the URI. When this weakness exists, the application permits user-supplied data, which could include the address of an XML external identity, to be passed directly to the XML parser. The application will then attempt to retrieve documents from outside of secure, controlled areas.\n\nAttackers can exploit this weakness to expose sensitive data, execute port scanning on the server side, or launch a denial-of-service attack (DoS) such as Billion Laughs.\n\n## Best practices for prevention\n* Avoid using vulnerable APIs\n* When possible, disable loading of data from external entities. The method of doing this will vary based on the language and XML parser being used.\n* Use a local, static document type definitions (DTDs) and ensure that external DTDs are disallowed entirely.\n* If user input cannot be avoided, perform validation against an allowlist of possible data sources. However, as long as external DTDs are allowed, XML code remains inherently vulnerable to attacks exploiting this weakness.\n\n\n## References\n* [XML vulnerabilities](https://docs.python.org/3/library/xml.html#xml-vulnerabilities)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "InsecureXmlParser",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/DefectDojo/django-DefectDojo/commit/3bb6173ce1db621ebd99a1cb361e7da7cbaf1925?diff=split#diff-ef1e087c75390ecb8efe1b3990802470d172cb27c62e76392ba87bdae855ca2cL-1",
                    "lines": [
                      {
                        "line": "from xml.dom import NamespaceErr\n",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "from xml.etree import ElementTree\n",
                        "lineNumber": 3,
                        "lineChange": "removed"
                      },
                      {
                        "line": "from defusedxml.dom import NamespaceErr\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": "from defusedxml.etree import ElementTree\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      },
                      {
                        "line": "from datetime import datetime\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "from dojo.models import Finding\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "class CheckmarxXMLParser(object):\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def __init__(self, filename, test):\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "        cxscan = ElementTree.parse(filename)\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/oVirt/vdsm/commit/bebc0dff76115e11a0d8d3be2971d17dd2898711?diff=split#diff-c8191175dae739bf1111cc700f07f7d2ec4e6254ab286559bda259ea3abec251L-1",
                    "lines": [
                      {
                        "line": "actual = ET.fromstring(xml)\n",
                        "lineNumber": 308,
                        "lineChange": "removed"
                      },
                      {
                        "line": "actual = xmlutils.fromstring(xml)\n",
                        "lineNumber": 308,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/GovReady/compliancelib-python/commit/ba892b563bb4c329387a983109caa84382eea0e8?diff=split#diff-50428a83950457170bb17ab641987e84903af63e6263dbf3940fb12d17ea0359L-1",
                    "lines": [
                      {
                        "line": "import xml.etree.ElementTree as ET\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "import defusedxml.ElementTree as ET\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "class NIST800_53(object):\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"represent 800-53 security controls\"\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def __init__(self, id):\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.xmlfile = os.path.join(os.path.dirname(__file__), 'data/800-53-controls.xml')\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.id = id\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if \"(\" in self.id:\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "            self._load_control_enhancement_from_xml()\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "        else:\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "            self._load_control_from_xml()\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # split description\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.set_description_sections()\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self._get_control_json_dict()\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def _load_control_from_xml(self):\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "        \"load control detail from 800-53 xml using a pure python process\"\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "        tree = ET.parse(self.xmlfile)\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 23,
                "cwe": [
                  "CWE-611"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "javascript/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into fs.readFileSync, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[fs.readFileSync](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "utils/DragonExtractor/DragonThreatExtractor.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 13,
                  "startColumn": 16,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3f0292b0ec671fa3914d6247b255c104a9cad77296d2d13ae35c4c0d4208f8ad",
            "1": "1aaa4c25.4773f344.39496519.c8688b2b.ef9f7d82.8020cfdf.df7e59ba.16c17486.6e283998.9b0e350b.39496519.152d4968.3f452f8c.5fce695c.9196a6c6.83183368"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/DragonExtractor/DragonThreatExtractor.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 22,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/DragonExtractor/DragonThreatExtractor.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 22,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/DragonExtractor/DragonThreatExtractor.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 14,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/DragonExtractor/DragonThreatExtractor.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 27,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/DragonExtractor/DragonThreatExtractor.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 5,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/DragonExtractor/DragonThreatExtractor.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 5,
                            "endLine": 5,
                            "startColumn": 5,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/DragonExtractor/DragonThreatExtractor.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 32,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/DragonExtractor/DragonThreatExtractor.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 32,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/DragonExtractor/DragonThreatExtractor.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 16,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 504,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[open](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "utils/threat-mvp/itmj.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 55,
                  "endLine": 55,
                  "startColumn": 22,
                  "endColumn": 44
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ec78635b51af5d1d87674def7d5a9ecd2c7b340b07d7de4bc298c811d2a3b943",
            "1": "e4d20981.c5dd491e.79e62dc9.139c59a8.40f2ce4a.ba14daf2.91bcb739.3a7e96c5.e4d20981.c5dd491e.79e62dc9.c80b20fe.ce5da160.ba14daf2.91bcb739.0f34fe5c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/itmj.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 27,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/itmj.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 27,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/itmj.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 27,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/itmj.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 9,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/itmj.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 18,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/itmj.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 17,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/itmj.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 9,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/itmj.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 45,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/read_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 5,
                            "endLine": 5,
                            "startColumn": 15,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/read_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 26,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/read_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 21,
                            "endColumn": 25
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 558,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)",
              "[open](12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "utils/threat-mvp/itmj.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 56,
                  "endLine": 56,
                  "startColumn": 9,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "235ca14c8a6518eab4407a4e1f4e5a4da4db706b66e3d1baff496070044def1d",
            "1": "2d06e3d6.2abfec5d.79e62dc9.139c59a8.02bf7937.ba14daf2.91bcb739.545e9171.e06468b8.c5dd491e.badb9c1d.139c59a8.c8b7d5cc.73cfdf26.91bcb739.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/itmj.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 27,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/itmj.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 27,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/itmj.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 27,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/itmj.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 9,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/itmj.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 18,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/itmj.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 17,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/itmj.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 9,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/itmj.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 45,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/itmj.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 45,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 20,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 53,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 198,
                            "endLine": 198,
                            "startColumn": 34,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 198,
                            "endLine": 198,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 558,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "td.server/src/controllers/homecontroller.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 20,
                  "endLine": 23,
                  "startColumn": 15,
                  "endColumn": 2
                }
              }
            }
          ],
          "fingerprints": {
            "0": "97589cd75bd86ef27d60c2bdbbbc205931e067a1e6606c31ed7c634172ae4b95",
            "1": "ae77ea27.4773f344.8b18f948.c559ebce.79a7d027.5fce695c.83265159.89d75565.87ba341e.4773f344.8b18f948.c559ebce.79a7d027.5fce695c.83265159.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/homecontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 23,
                            "startColumn": 15,
                            "endColumn": 2
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/homecontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 504,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "td.server/test/repositories/bitbucketrepo.spec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 61,
                  "endLine": 61,
                  "startColumn": 11,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "658c883612e33d625a6cef4f78dde18f083f99bc8e6f2c1150c4a238c9215988",
            "1": "46b7c801.3f481afb.c562f41b.72a8f743.79a7d027.f7edcf51.cd61fc56.5691ba88.46b7c801.3f481afb.c562f41b.72a8f743.79a7d027.f7edcf51.cd61fc56.5691ba88"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/test/repositories/bitbucketrepo.spec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 25,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/test/repositories/bitbucketrepo.spec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 11,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 398,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "td.vue/tests/unit/store/modules/auth.spec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 17,
                  "startColumn": 9,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "16a5a0401b36811031ccb7c4ccf6ac70c27f85a5a52f5ea88191b96171ade33e",
            "1": "f561cdd9.4773f344.607187b5.174696f0.79a7d027.8020cfdf.e3f4cdbb.d74d2ccb.e0fda459.4773f344.8b18f948.174696f0.79a7d027.8020cfdf.e3f4cdbb.af5a8a4e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.vue/tests/unit/store/modules/auth.spec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 22,
                            "endColumn": 93
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.vue/tests/unit/store/modules/auth.spec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 9,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 398,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "td.server/test/providers/gitlab.spec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 93,
                  "endLine": 93,
                  "startColumn": 13,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bf287df6c29d0489847f06cba956137ddea5e29ba56fd149df60f6ad8d1ecfb8",
            "1": "735c13ab.93dc32e3.49c7f7dc.d7919eeb.79a7d027.8020cfdf.bbe83754.01e5927a.735c13ab.93dc32e3.cd2d2426.d7919eeb.026ea9a1.4e095f41.869d38bd.01e5927a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/test/providers/gitlab.spec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 35,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/test/providers/gitlab.spec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 13,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 448,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "td.server/test/providers/gitlab.spec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 110,
                  "endLine": 110,
                  "startColumn": 17,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a6416ba79a9cd670dc9ca8e503670f1fd548d28947d1958caefdee33bab43962",
            "1": "3df95e84.93dc32e3.49c7f7dc.d7919eeb.79a7d027.8020cfdf.bbe83754.01e5927a.da8cee02.93dc32e3.8b18f948.d7919eeb.79a7d027.4e095f41.bbe83754.01e5927a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/test/providers/gitlab.spec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 35,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/test/providers/gitlab.spec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 110,
                            "endLine": 110,
                            "startColumn": 17,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 448,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "td.server/test/helpers/encryption.helper.spec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 148,
                  "endLine": 148,
                  "startColumn": 17,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "66626197ecd4aaeea788602eea4e540a27a0849b4e44b2887b843f325bf5d413",
            "1": "12567ef6.4773f344.fc42da51.e052b9a9.79a7d027.fcf3002d.c645d455.3cee0341.3df95e84.4773f344.fc42da51.d7919eeb.79a7d027.8020cfdf.cd61fc56.d69e2302"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/test/helpers/encryption.helper.spec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 22,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/test/helpers/encryption.helper.spec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 17,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 398,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "td.server/test/providers/github.spec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 93,
                  "endLine": 93,
                  "startColumn": 13,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fb3306c4e998964c863bcdfb6d1476ee7c0ce57d2368044b5f649e0bc577b420",
            "1": "735c13ab.93dc32e3.c763b80e.d7919eeb.79a7d027.b919d049.bbe83754.01e5927a.735c13ab.93dc32e3.cd2d2426.d7919eeb.026ea9a1.b919d049.869d38bd.01e5927a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/test/providers/github.spec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 35,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/test/providers/github.spec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 13,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 448,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "td.server/test/providers/github.spec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 110,
                  "endLine": 110,
                  "startColumn": 21,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7717556af00c3efc6dd66ecd3e44f124f48e579e27e10d1d9b0e917024ba382d",
            "1": "735c13ab.93dc32e3.607187b5.e052b9a9.79a7d027.b919d049.bbe83754.01e5927a.da8cee02.93dc32e3.607187b5.d7919eeb.25e0b7e7.b919d049.bbe83754.01e5927a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/test/providers/github.spec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 35,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/test/providers/github.spec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 110,
                            "endLine": 110,
                            "startColumn": 21,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 448,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "td.server/test/helpers/jwt.helper.spec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 12,
                  "endLine": 12,
                  "startColumn": 9,
                  "endColumn": 35
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f37699a1a430bfba2dba5f176d37b05521741da29ec7d07fe9441ffb5d07bb5a",
            "1": "d8f3db25.93dc32e3.3e6e0d54.d7919eeb.79a7d027.3a32f42e.6977003a.3cee0341.921bd560.93dc32e3.3e6e0d54.15b09b1f.79a7d027.3a32f42e.cd61fc56.617f6606"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/test/helpers/jwt.helper.spec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 37,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/test/helpers/jwt.helper.spec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 9,
                            "endColumn": 35
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 398,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "td.server/test/repositories/githubrepo.spec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 22,
                  "startColumn": 11,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9a02082672754e14897383f2a8751697116a935ad37e3b9f2f7a752b294d8afa",
            "1": "e0fda459.4773f344.c9330245.d7919eeb.ef9f7d82.8020cfdf.cd61fc56.d087f7d7.e0fda459.4773f344.c9330245.d7919eeb.8d22f254.8020cfdf.cd61fc56.d087f7d7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/test/repositories/githubrepo.spec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 25,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/test/repositories/githubrepo.spec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 11,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 398,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "td.server/test/repositories/gitlabrepo.spec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "startColumn": 11,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7142b1bb5483cd8f12fbfe69cee9a5d02e1780f1aa76bcc61f3a8a8928396ffa",
            "1": "e0fda459.3f481afb.c562f41b.d7919eeb.79a7d027.f7edcf51.cd61fc56.26517fec.e0fda459.3f481afb.c562f41b.d7919eeb.79a7d027.f7edcf51.cd61fc56.26517fec"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/test/repositories/gitlabrepo.spec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 25,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/test/repositories/gitlabrepo.spec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 11,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 448,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "td.server/test/repositories/gitlabrepo.spec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 154,
                  "endLine": 154,
                  "startColumn": 21,
                  "endColumn": 41
                }
              }
            }
          ],
          "fingerprints": {
            "0": "06e3051b7b1f6c9b3fcdfffbb0ae114f7f22a7630c41108740a08ea3b233916b",
            "1": "8765d46c.93dc32e3.49c7f7dc.e052b9a9.79a7d027.fcf3002d.ce4a9d89.01e5927a.d9993452.93dc32e3.cd2d2426.e052b9a9.026ea9a1.4e095f41.869d38bd.01e5927a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/test/repositories/gitlabrepo.spec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 154,
                            "endLine": 154,
                            "startColumn": 43,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/test/repositories/gitlabrepo.spec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 154,
                            "endLine": 154,
                            "startColumn": 21,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 448,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "td.server/test/providers/bitbucket.spec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 93,
                  "endLine": 93,
                  "startColumn": 13,
                  "endColumn": 36
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c5848f25413ca48eba8903300edaeffb6fb58b96c9e96ce498a9a973414abae7",
            "1": "a52bc374.93dc32e3.607187b5.2cdfb530.79a7d027.8020cfdf.6977003a.01e5927a.a52bc374.93dc32e3.cd2d2426.2cdfb530.026ea9a1.f80f2df6.869d38bd.01e5927a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/test/providers/bitbucket.spec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 38,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/test/providers/bitbucket.spec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 13,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 398,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/InsecureCipherNoIntegrity",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Cipher Block Chaining mode (used in crypto.default.createCipheriv) does not provide integrity. Consider using  Galois/Counter mode.",
            "markdown": "{0} mode (used in {1}) does not provide integrity. Consider using  Galois/Counter mode.",
            "arguments": [
              "[Cipher Block Chaining](0)",
              "[crypto.default.createCipheriv](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "td.server/src/helpers/encryption.helper.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 64,
                  "startColumn": 30,
                  "endColumn": 44
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e0fc755e893bcd15d73e5c805fcc9304c5028455daa20b64f333a0882987c07a",
            "1": "37bc1bfe.4bbe55b4.191eaf2b.8f3c2a81.ac82cb7b.8020cfdf.ea4b1c47.71520ffe.9ff0579e.4bbe55b4.191eaf2b.8f3c2a81.86190c81.5fce695c.bded2dab.71520ffe"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/helpers/encryption.helper.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 19,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/helpers/encryption.helper.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 30,
                            "endColumn": 44
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 558,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/InsecureCipherNoIntegrity",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Cipher Block Chaining mode (used in crypto.default.createDecipheriv) does not provide integrity. Consider using  Galois/Counter mode.",
            "markdown": "{0} mode (used in {1}) does not provide integrity. Consider using  Galois/Counter mode.",
            "arguments": [
              "[Cipher Block Chaining](0)",
              "[crypto.default.createDecipheriv](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "td.server/src/helpers/encryption.helper.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 82,
                  "endLine": 82,
                  "startColumn": 30,
                  "endColumn": 46
                }
              }
            }
          ],
          "fingerprints": {
            "0": "02add3bd8faff85019835b06dcda7405f47fbeec9e8c67e651d2a22428083a35",
            "1": "9302ffdf.4773f344.191eaf2b.d7919eeb.ac82cb7b.8020cfdf.86f84afc.71520ffe.9302ffdf.4bbe55b4.191eaf2b.8f3c2a81.86190c81.5fce695c.86f84afc.71520ffe"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/helpers/encryption.helper.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 19,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/helpers/encryption.helper.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 30,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 558,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/XSS",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into send, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[send](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "td.server/src/controllers/threatmodelcontroller.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 116,
                  "endLine": 116,
                  "startColumn": 32,
                  "endColumn": 36
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a36f4cffdf46a6069cc47dbec4fa73fa22f6dd14337db0589cf2a5c1709142a0",
            "1": "e0fda459.4773f344.c9330245.d7919eeb.ef9f7d82.8020cfdf.cd61fc56.2f05c567.67e7998e.4a0d8710.c9330245.c559ebce.93ebab71.f8890b3c.c0a0d45c.2f05c567"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 106,
                            "endLine": 106,
                            "startColumn": 27,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 106,
                            "endLine": 106,
                            "startColumn": 27,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 106,
                            "endLine": 106,
                            "startColumn": 23,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 106,
                            "endLine": 106,
                            "startColumn": 9,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 105,
                            "endLine": 105,
                            "startColumn": 11,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 57,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 45,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 15,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 37,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 32,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 812,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/XSS",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into send, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[send](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "td.server/src/controllers/threatmodelcontroller.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 137,
                  "endLine": 137,
                  "startColumn": 20,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c8175ce28c1c22734faddef76eaff132f56c1c19dd5d3f152b89c978814ff5c3",
            "1": "d7483e75.4773f344.c9330245.d7919eeb.ef9f7d82.8020cfdf.0b39cb71.2f05c567.5a562d4f.4a0d8710.c9330245.c559ebce.93ebab71.f8890b3c.c0a0d45c.2f05c567"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 27,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 27,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 23,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 9,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 126,
                            "endLine": 126,
                            "startColumn": 11,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 57,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 45,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 15,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 137,
                            "endLine": 137,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 137,
                            "endLine": 137,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 812,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/XSS",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into send, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[send](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "td.server/src/controllers/threatmodelcontroller.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 157,
                  "endLine": 157,
                  "startColumn": 20,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0e5392edb50fa931cdd87bf79cec16c31453aedc140d57f78555f853eb2d16d9",
            "1": "e0fda459.4773f344.c9330245.d7919eeb.ef9f7d82.08a009d5.cd61fc56.2f05c567.5a562d4f.4a0d8710.c9330245.bdd2dff7.93ebab71.f8890b3c.c0a0d45c.2f05c567"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 27,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 27,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 23,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 9,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 147,
                            "endLine": 147,
                            "startColumn": 11,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 156,
                            "endLine": 156,
                            "startColumn": 57,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 156,
                            "endLine": 156,
                            "startColumn": 45,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 156,
                            "endLine": 156,
                            "startColumn": 15,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 157,
                            "endLine": 157,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/controllers/threatmodelcontroller.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 157,
                            "endLine": 157,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 812,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/OR",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an HTTP header flows into redirect, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
            "arguments": [
              "[an HTTP header](0)",
              "[flows](1),(2)",
              "[redirect](3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "td.server/src/config/https.config.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6,
                  "startColumn": 20,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7e8b32b9c7bdb7ae8318ed66573d2b6980b302ca3c85b9d1f8183156a5289884",
            "1": "8981fa39.4773f344.1ec824b2.7da15f0a.b6be8b13.171e9f19.cd61fc56.b20a940a.7cb99f84.4773f344.1ec824b2.c4a00efd.b6be8b13.171e9f19.83265159.3357ef26"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/config/https.config.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6,
                            "endLine": 6,
                            "startColumn": 46,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/config/https.config.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6,
                            "endLine": 6,
                            "startColumn": 46,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/config/https.config.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6,
                            "endLine": 6,
                            "startColumn": 29,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/config/https.config.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6,
                            "endLine": 6,
                            "startColumn": 20,
                            "endColumn": 28
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 504,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HttpToHttps",
          "ruleIndex": 7,
          "level": "warning",
          "message": {
            "text": "http.get uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.",
            "markdown": "{0} uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.",
            "arguments": [
              "[http.get](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "td.server/src/healthcheck.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 11,
                  "startColumn": 1,
                  "endColumn": 9
                }
              }
            }
          ],
          "fingerprints": {
            "0": "eb8c11bd37a2e5351de0e33b90b139582f587134350bbaca543c47e5a6bc4985",
            "1": "75ab1887.70dd3b3b.568208f0.c559ebce.2fce9a75.a362d65a.cd61fc56.547c27b0.ccb457b9.70dd3b3b.568208f0.c559ebce.f7b6c27c.5fce695c.cd61fc56.8164be99"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "td.server/src/healthcheck.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 1,
                            "endColumn": 9
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 504,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/Ssrf",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into requests.request, where it is used as an URL to perform a request. This may result in a Server Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server Side Request Forgery vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52)",
              "[requests.request](53)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "utils/threat-mvp/itmj.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 56,
                  "endLine": 56,
                  "startColumn": 9,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c9dd7cb262270118590f828c8149793bdb361d03c7cf398a79cfa08f7963f648",
            "1": "f39fd327.0eeb960c.79e62dc9.139c59a8.02bf7937.ba14daf2.c1e6a8d6.ebed174f.e06468b8.c5dd491e.badb9c1d.c80b20fe.c8b7d5cc.73cfdf26.91bcb739.0f34fe5c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/itmj.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 27,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/itmj.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 27,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/itmj.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 27,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/itmj.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 9,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/itmj.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 18,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/itmj.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 17,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/itmj.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 9,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/itmj.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 45,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/itmj.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 22,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/itmj.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 9,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/itmj.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 33,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 15,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 25,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 44,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 24,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 46,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 20,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 20,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 14,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 38,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 102,
                            "endLine": 102,
                            "startColumn": 28,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 102,
                            "endLine": 102,
                            "startColumn": 28,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 102,
                            "endLine": 102,
                            "startColumn": 28,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 102,
                            "endLine": 102,
                            "startColumn": 22,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 36,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 104,
                            "startColumn": 38,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 107,
                            "endLine": 107,
                            "startColumn": 24,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 109,
                            "endLine": 109,
                            "startColumn": 41,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 40,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 40,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 34,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 53,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 49,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 49,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 37,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 124,
                            "endLine": 124,
                            "startColumn": 63,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 22,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 14,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 20,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 20,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 9,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 20,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 45,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 124,
                            "endLine": 124,
                            "startColumn": 33,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 46,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 126,
                            "endLine": 126,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 47,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/parse_json_td.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 168,
                            "endLine": 168,
                            "startColumn": 81,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 48,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/third_party_integration.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 15,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 49,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/third_party_integration.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 66,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 50,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/third_party_integration.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 29,
                            "endColumn": 76
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 51,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/third_party_integration.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 23,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 52,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/third_party_integration.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 13,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 53,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/threat-mvp/third_party_integration.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 13,
                            "endColumn": 29
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 554,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureXmlParser",
          "ruleIndex": 9,
          "level": "warning",
          "message": {
            "text": "xml.etree.ElementTree.parse is considered insecure. Use an analog from the defusedxml package.",
            "markdown": "{0} is considered insecure. Use an analog from the defusedxml package.",
            "arguments": [
              "[xml.etree.ElementTree.parse](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "utils/TMT2TD/TMT2TD.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 394,
                  "endLine": 394,
                  "startColumn": 12,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fc642d24416495a94ca95b80b7c602288a42d9610d7caa788eba42e40115baa2",
            "1": "129db901.d8435ddf.ec35cf50.139c59a8.4647856d.ba14daf2.f8c3f5ac.61547892.129db901.d8435ddf.ec35cf50.139c59a8.4647856d.ba14daf2.f8c3f5ac.61547892"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/TMT2TD/TMT2TD.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 394,
                            "endLine": 394,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 504,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "isSupported": true,
            "lang": "Python",
            "files": 8,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Vue",
            "files": 37,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "HTML",
            "files": 3,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "JavaScript",
            "files": 308,
            "type": "SUPPORTED"
          },
          {
            "isSupported": false,
            "lang": "HTML",
            "files": 1,
            "type": "FAILED_PARSING"
          }
        ]
      }
    }
  ]
}
