[
  {
    "FileName": "PackageName: spring-kafka.zip - PackageFileName: spring-kafka.zip",
    "SPDXID": "",
    "LicenseConcluded": "",
    "LicenseComment": "",
    "LicenseInfoInFile": "",
    "FileCopyrightText": ""
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-05/.mvn/wrapper/maven-wrapper.jar/META-INF/LICENSE",
    "SPDXID": "SPDXRef-item23403",
    "LicenseConcluded": "Apache-2.0",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "copyright owner or by an individual or Legal Entity authorized to submit on behalf of;(c) You must retain, in the Source form of any Derivative Works;copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and;Copyright [yyyy] [name of copyright owner]"
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/LICENCE.txt",
    "SPDXID": "SPDXRef-item23254",
    "LicenseConcluded": "Apache-2.0",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "copyright owner or by an individual or Legal Entity authorized to submit on behalf of;(c) You must retain, in the Source form of any Derivative Works;copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and;Copyright [yyyy] [testData1 of copyright owner]"
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/MissingTopicsTests.java",
    "SPDXID": "SPDXRef-item25168",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/CommonMixedErrorHandler.java",
    "SPDXID": "SPDXRef-item25406",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/retrytopic/DltStartupTests.java",
    "SPDXID": "SPDXRef-item25269",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/annotation/BatchListenerConversion2Tests.java",
    "SPDXID": "SPDXRef-item25251",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/requestreply/RequestReplyFuture.java",
    "SPDXID": "SPDXRef-item25317",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/SeekToCurrentOnErrorBatchModeTests.java",
    "SPDXID": "SPDXRef-item25158",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/annotation/DltHandler.java",
    "SPDXID": "SPDXRef-item25536",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/retrytopic/EndpointCustomizerFactory.java",
    "SPDXID": "SPDXRef-item25573",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/AbstractKafkaHeaderMapper.java",
    "SPDXID": "SPDXRef-item25321",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/retrytopic/DeliveryHeaderTests.java",
    "SPDXID": "SPDXRef-item25270",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/config/ContainerPostProcessor.java",
    "SPDXID": "SPDXRef-item25597",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/ConsumerAwareRebalanceListener.java",
    "SPDXID": "SPDXRef-item25421",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/annotation/PartitionOffset.java",
    "SPDXID": "SPDXRef-item25548",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/event/KafkaEvent.java",
    "SPDXID": "SPDXRef-item25611",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2015-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/RemainingRecordsErrorHandlerTests.java",
    "SPDXID": "SPDXRef-item25166",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/config/CompositeKafkaStreamsInfrastructureCustomizer.java",
    "SPDXID": "SPDXRef-item25600",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/test/java/org/springframework/kafka/test/utils/KafkaTestUtilsTests.java",
    "SPDXID": "SPDXRef-item23172",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/retrytopic/DeadLetterPublishingRecovererFactoryTests.java",
    "SPDXID": "SPDXRef-item25258",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/ContainerGroup.java",
    "SPDXID": "SPDXRef-item25490",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/KafkaMessageHeaderAccessor.java",
    "SPDXID": "SPDXRef-item25367",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/annotation/KafkaStreamsDefaultConfiguration.java",
    "SPDXID": "SPDXRef-item25539",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/event/ListenerContainerNoLongerIdleEvent.java",
    "SPDXID": "SPDXRef-item25613",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/event/ContainerStoppedEvent.java",
    "SPDXID": "SPDXRef-item25614",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/main/java/org/springframework/kafka/test/assertj/KafkaConditions.java",
    "SPDXID": "SPDXRef-item23200",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/adapter/BatchMessagingMessageListenerAdapter.java",
    "SPDXID": "SPDXRef-item25441",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/retrytopic/DestinationTopicContainer.java",
    "SPDXID": "SPDXRef-item25565",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/annotation/EnableKafkaStreams.java",
    "SPDXID": "SPDXRef-item25549",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/core/KafkaTemplate.java",
    "SPDXID": "SPDXRef-item25501",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2015-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/KafkaNull.java",
    "SPDXID": "SPDXRef-item25336",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/ManualNackBatchTxTests.java",
    "SPDXID": "SPDXRef-item25165",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/DefaultErrorHandlerSeekAfterCommitExceptionBatchListenerTests.java",
    "SPDXID": "SPDXRef-item25216",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/MessageListener.java",
    "SPDXID": "SPDXRef-item25479",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2015-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/LoggingProducerListener.java",
    "SPDXID": "SPDXRef-item25395",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2015-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/retrytopic/RetryTopicExceptionRoutingIntegrationTests.java",
    "SPDXID": "SPDXRef-item25262",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-03/src/main/java/com/common/Foo2.java",
    "SPDXID": "SPDXRef-item23584",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/core/KafkaResourceFactory.java",
    "SPDXID": "SPDXRef-item25510",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/main/java/org/springframework/kafka/test/utils/KafkaTestUtils.java",
    "SPDXID": "SPDXRef-item23202",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/event/ConsumerStoppingEvent.java",
    "SPDXID": "SPDXRef-item25629",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/requestreply/RequestReplyMessageFuture.java",
    "SPDXID": "SPDXRef-item25314",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/security/jaas/KafkaJaasLoginModuleInitializerTests.java",
    "SPDXID": "SPDXRef-item25249",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/config/KafkaListenerEndpointRegistry.java",
    "SPDXID": "SPDXRef-item25602",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2014-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/config/ConcurrentKafkaListenerContainerFactory.java",
    "SPDXID": "SPDXRef-item25601",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2014-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/ExceptionClassifierTests.java",
    "SPDXID": "SPDXRef-item25210",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/retrytopic/RetryTopicConfigurationSupportTests.java",
    "SPDXID": "SPDXRef-item25261",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/ConsumerProperties.java",
    "SPDXID": "SPDXRef-item25460",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/aot/KafkaAvroBeanRegistrationAotProcessor.java",
    "SPDXID": "SPDXRef-item25552",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/ThreadStateProcessor.java",
    "SPDXID": "SPDXRef-item25423",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/SeekToCurrentOnErrorRecordModeTXTests.java",
    "SPDXID": "SPDXRef-item25229",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/converter/MessagingMessageConverter.java",
    "SPDXID": "SPDXRef-item25361",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/CompositeProducerListener.java",
    "SPDXID": "SPDXRef-item25348",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/core/ConsumerFactory.java",
    "SPDXID": "SPDXRef-item25500",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/ListenerExecutionFailedException.java",
    "SPDXID": "SPDXRef-item25482",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/annotation/ContainerFactoryTests.java",
    "SPDXID": "SPDXRef-item25252",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/config/MultiMethodKafkaListenerEndpoint.java",
    "SPDXID": "SPDXRef-item25598",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/adapter/BatchAdapterConversionErrorsTests.java",
    "SPDXID": "SPDXRef-item25201",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/DeadLetterPublishingRecovererTests.java",
    "SPDXID": "SPDXRef-item25196",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/core/reactive/ReactiveKafkaConsumerTemplate.java",
    "SPDXID": "SPDXRef-item25516",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/ManualNackRecordTests.java",
    "SPDXID": "SPDXRef-item25174",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/retrytopic/DestinationTopicPropertiesFactory.java",
    "SPDXID": "SPDXRef-item25575",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/ErrorHandlingUtilsTest.java",
    "SPDXID": "SPDXRef-item25182",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/config/CompositeKafkaStreamsCustomizer.java",
    "SPDXID": "SPDXRef-item25588",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/FallbackBatchErrorHandler.java",
    "SPDXID": "SPDXRef-item25400",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/mapping/Jackson2JavaTypeMapper.java",
    "SPDXID": "SPDXRef-item25325",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/test/java/org/springframework/kafka/test/condition/WithSpringTestContextTests.java",
    "SPDXID": "SPDXRef-item23176",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/ManualNackRecordZeroSleepTests.java",
    "SPDXID": "SPDXRef-item25184",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/DefaultErrorHandlerNoSeeksBatchAckTests.java",
    "SPDXID": "SPDXRef-item25183",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/core/DefaultKafkaProducerFactory.java",
    "SPDXID": "SPDXRef-item25503",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-01/src/main/java/com/common/Foo1.java",
    "SPDXID": "SPDXRef-item23337",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-docs/src/main/kotlin/org/springframework/kafka/kdocs/topics/Config.kt",
    "SPDXID": "SPDXRef-item23857",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/retrytopic/CircularDltHandlerTests.java",
    "SPDXID": "SPDXRef-item25282",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/SubBatchPerPartitionTxTests.java",
    "SPDXID": "SPDXRef-item25169",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/retrytopic/DestinationTopicTests.java",
    "SPDXID": "SPDXRef-item25274",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/test/java/org/springframework/kafka/test/hamcrest/KafkaMatchersTests.java",
    "SPDXID": "SPDXRef-item23181",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/adapter/KafkaBackoffAwareMessageListenerAdapter.java",
    "SPDXID": "SPDXRef-item25451",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-05/src/test/java/com/example/Sample05Application2Tests.java",
    "SPDXID": "SPDXRef-item23414",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/retrytopic/EndpointCustomizer.java",
    "SPDXID": "SPDXRef-item25572",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/annotation/KafkaListeners.java",
    "SPDXID": "SPDXRef-item25531",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/serializer/DelegatingByTopicDeserializer.java",
    "SPDXID": "SPDXRef-item25382",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/AcknowledgingMessageListener.java",
    "SPDXID": "SPDXRef-item25466",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2015-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/MessageListenerContainer.java",
    "SPDXID": "SPDXRef-item25432",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/ConcurrentMessageListenerContainerMockTests.java",
    "SPDXID": "SPDXRef-item25167",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/annotation/KafkaBootstrapConfiguration.java",
    "SPDXID": "SPDXRef-item25543",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2002-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/AcknowledgingConsumerAwareMessageListener.java",
    "SPDXID": "SPDXRef-item25465",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/mapping/ClassMapper.java",
    "SPDXID": "SPDXRef-item25324",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-01/src/main/java/com/example/Application.java",
    "SPDXID": "SPDXRef-item23340",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-docs/src/main/kotlin/org/springframework/kafka/kdocs/requestreply/Application.kt",
    "SPDXID": "SPDXRef-item23844",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/retrytopic/RetryTopicConfigurationManualAssignmentIntegrationTests.java",
    "SPDXID": "SPDXRef-item25265",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/retrytopic/ListenerContainerFactoryConfigurerTests.java",
    "SPDXID": "SPDXRef-item25279",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/streams/Configurer1Tests.java",
    "SPDXID": "SPDXRef-item25292",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/ConsumerAwareRecordRecoverer.java",
    "SPDXID": "SPDXRef-item25416",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/transaction/ChainedKafkaTransactionManager.java",
    "SPDXID": "SPDXRef-item25529",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/retrytopic/DefaultDestinationTopicResolver.java",
    "SPDXID": "SPDXRef-item25570",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-02/src/main/java/com/example/Application.java",
    "SPDXID": "SPDXRef-item23514",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/CompositeBatchInterceptor.java",
    "SPDXID": "SPDXRef-item25418",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/converter/ConversionException.java",
    "SPDXID": "SPDXRef-item25356",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/requestreply/CorrelationKeyTests.java",
    "SPDXID": "SPDXRef-item25124",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-docs/src/main/java/org/springframework/kafka/jdocs/topics/Config.java",
    "SPDXID": "SPDXRef-item23965",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/AbstractConsumerSeekAware.java",
    "SPDXID": "SPDXRef-item25481",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/kotlin/org/springframework/kafka/listener/EnableKafkaKotlinTests.kt",
    "SPDXID": "SPDXRef-item25112",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/TestOOMError.java",
    "SPDXID": "SPDXRef-item25212",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/gradlew",
    "SPDXID": "SPDXRef-item23593",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright © 2015-2021 the original authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/KafkaListenerEndpointRegistryLifecycleTests.java",
    "SPDXID": "SPDXRef-item25213",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/annotation/BatchListenerConversionTests.java",
    "SPDXID": "SPDXRef-item25253",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/SubBatchPerPartitionTxRollbackTests.java",
    "SPDXID": "SPDXRef-item25189",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/KafkaMessageListenerContainer.java",
    "SPDXID": "SPDXRef-item25478",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/support/ExponentialBackOffWithMaxRetriesTests.java",
    "SPDXID": "SPDXRef-item25128",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/config/KafkaListenerEndpointAdapter.java",
    "SPDXID": "SPDXRef-item25591",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/converter/StringJsonMessageConverter.java",
    "SPDXID": "SPDXRef-item25363",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/annotation/KafkaListenerConfigurationSelector.java",
    "SPDXID": "SPDXRef-item25546",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/streams/messaging/MessagingProcessorTests.java",
    "SPDXID": "SPDXRef-item25299",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/support/serializer/StringOrBytesSerializerTests.java",
    "SPDXID": "SPDXRef-item25147",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/ExponentialBackOffWithMaxRetries.java",
    "SPDXID": "SPDXRef-item25338",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/core/TransactionSynchronizationTests.java",
    "SPDXID": "SPDXRef-item25239",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/serializer/ParseStringDeserializer.java",
    "SPDXID": "SPDXRef-item25383",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/annotation/EnableKafka.java",
    "SPDXID": "SPDXRef-item25535",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/Suffixer.java",
    "SPDXID": "SPDXRef-item25392",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-docs/src/main/kotlin/org/springframework/kafka/kdocs/started/noboot/Config.kt",
    "SPDXID": "SPDXRef-item23851",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/support/serializer/SerializationTestUtils.java",
    "SPDXID": "SPDXRef-item25143",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-docs/src/main/java/org/springframework/kafka/jdocs/started/noboot/Listener.java",
    "SPDXID": "SPDXRef-item23959",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/event/ConsumerStoppedEvent.java",
    "SPDXID": "SPDXRef-item25623",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/SeekToCurrentOnErrorBatchModeTXTests.java",
    "SPDXID": "SPDXRef-item25172",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-02/src/main/java/com/example/MultiMethods.java",
    "SPDXID": "SPDXRef-item23515",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/MockConsumerTests.java",
    "SPDXID": "SPDXRef-item25179",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-01/src/main/java/com/example/Controller.java",
    "SPDXID": "SPDXRef-item23339",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/core/KafkaTemplateTransactionTests.java",
    "SPDXID": "SPDXRef-item25241",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/config/KafkaStreamsConfiguration.java",
    "SPDXID": "SPDXRef-item25592",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/HeaderMethodArgumentResolverTests.java",
    "SPDXID": "SPDXRef-item25214",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/retrytopic/RetryTopicHeaders.java",
    "SPDXID": "SPDXRef-item25579",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/Acknowledgment.java",
    "SPDXID": "SPDXRef-item25335",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2015-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-02/src/main/java/com/common/Bar1.java",
    "SPDXID": "SPDXRef-item23509",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/core/reactive/ReactiveKafkaProducerTemplateIntegrationTests.java",
    "SPDXID": "SPDXRef-item25244",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/main/java/org/springframework/kafka/test/EmbeddedKafkaZKBroker.java",
    "SPDXID": "SPDXRef-item23217",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/main/java/org/springframework/kafka/test/utils/JUnitUtils.java",
    "SPDXID": "SPDXRef-item23204",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/serializer/DelegatingByTopicSerializer.java",
    "SPDXID": "SPDXRef-item25377",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/annotation/EnableKafkaIntegrationTests.java",
    "SPDXID": "SPDXRef-item25254",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/converter/BatchMessageConverter.java",
    "SPDXID": "SPDXRef-item25358",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/streams/KafkaStreamsTests.java",
    "SPDXID": "SPDXRef-item25294",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/aot/KafkaRuntimeHints.java",
    "SPDXID": "SPDXRef-item25553",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/adapter/FilteringAdapterTests.java",
    "SPDXID": "SPDXRef-item25199",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/retrytopic/RetryableTopicAnnotationProcessorTests.java",
    "SPDXID": "SPDXRef-item25259",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/ListenerContainerPauseServiceTests.java",
    "SPDXID": "SPDXRef-item25215",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/requestreply/AggregatingReplyingKafkaTemplate.java",
    "SPDXID": "SPDXRef-item25315",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/CommonLoggingErrorHandler.java",
    "SPDXID": "SPDXRef-item25484",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/adapter/ReplyHeadersConfigurer.java",
    "SPDXID": "SPDXRef-item25450",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/core/DefaultKafkaProducerFactoryTests.java",
    "SPDXID": "SPDXRef-item25236",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/core/RoutingKafkaTemplate.java",
    "SPDXID": "SPDXRef-item25519",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/converter/KafkaMessageHeaders.java",
    "SPDXID": "SPDXRef-item25360",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/ConsumerPauseResumeEventPublisher.java",
    "SPDXID": "SPDXRef-item25412",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/ListenerContainerPauseService.java",
    "SPDXID": "SPDXRef-item25420",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/CommonContainerStoppingErrorHandler1Tests.java",
    "SPDXID": "SPDXRef-item25173",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/micrometer/KafkaTemplateObservationConvention.java",
    "SPDXID": "SPDXRef-item25346",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/src/dist/notice.txt",
    "SPDXID": "SPDXRef-item23257",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright (c) 2016-${copyright} Pivotal, Inc."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/ManualNackBatchTests.java",
    "SPDXID": "SPDXRef-item25228",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/annotation/KafkaListener.java",
    "SPDXID": "SPDXRef-item25544",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/main/java/org/springframework/kafka/test/EmbeddedKafkaKraftBroker.java",
    "SPDXID": "SPDXRef-item23216",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/retrytopic/RetryTopicConfigurerTests.java",
    "SPDXID": "SPDXRef-item25280",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/adapter/AbstractRetryingMessageListenerAdapter.java",
    "SPDXID": "SPDXRef-item25448",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/GenericMessageListener.java",
    "SPDXID": "SPDXRef-item25488",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/support/serializer/ToStringSerializationTests.java",
    "SPDXID": "SPDXRef-item25153",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/serializer/JsonSerde.java",
    "SPDXID": "SPDXRef-item25381",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/MissingGroupIdTests.java",
    "SPDXID": "SPDXRef-item25208",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/BatchAcknowledgingConsumerAwareMessageListener.java",
    "SPDXID": "SPDXRef-item25474",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/DefaultErrorHandler.java",
    "SPDXID": "SPDXRef-item25413",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/retrytopic/DeadLetterPublishingRecovererFactory.java",
    "SPDXID": "SPDXRef-item25563",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/KafkaException.java",
    "SPDXID": "SPDXRef-item25398",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/kotlin/org/springframework/kafka/core/KotlinProducerFactoryTests.kt",
    "SPDXID": "SPDXRef-item25114",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/support/LoggingProducerListenerTests.java",
    "SPDXID": "SPDXRef-item25155",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/adapter/MessagingMessageListenerAdapterTests.java",
    "SPDXID": "SPDXRef-item25198",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/ContainerPausingBackOffHandler.java",
    "SPDXID": "SPDXRef-item25486",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/streams/KafkaStreamsJsonSerializationTests.java",
    "SPDXID": "SPDXRef-item25295",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/SeekToCurrentRecovererTests.java",
    "SPDXID": "SPDXRef-item25211",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/ListenerType.java",
    "SPDXID": "SPDXRef-item25417",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/adapter/AbstractDelegatingMessageListenerAdapter.java",
    "SPDXID": "SPDXRef-item25457",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/config/AbstractKafkaListenerContainerFactory.java",
    "SPDXID": "SPDXRef-item25589",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2014-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/ListenerUtilsTests.java",
    "SPDXID": "SPDXRef-item25185",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/CommonMixedErrorHandlerTests.java",
    "SPDXID": "SPDXRef-item25205",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/adapter/HandlerAdapter.java",
    "SPDXID": "SPDXRef-item25454",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2015-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/src/checkstyle/checkstyle-header.txt",
    "SPDXID": "SPDXRef-item23260",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright \\E20\\d\\d(\\-20\\d\\d)?\\Q the original author or authors.\\E$"
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/CONTRIBUTING.adoc",
    "SPDXID": "SPDXRef-item23834",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016 the original author or authors.;Copyright 2002-2011 the original author or authors.;Copyright 2002-2016 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/BatchConsumerAwareMessageListener.java",
    "SPDXID": "SPDXRef-item25492",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/main/java/org/springframework/kafka/test/EmbeddedKafkaBroker.java",
    "SPDXID": "SPDXRef-item23220",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/config/KafkaStreamsInfrastructureCustomizer.java",
    "SPDXID": "SPDXRef-item25599",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/ManualAssignmentInitialSeekTests.java",
    "SPDXID": "SPDXRef-item25187",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/test/java/org/springframework/kafka/test/EmbeddedKafkaZKBrokerTests.java",
    "SPDXID": "SPDXRef-item23182",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/test/java/org/springframework/kafka/test/condition/EmbeddedKafkaConditionTests.java",
    "SPDXID": "SPDXRef-item23174",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/ContainerGroupSequencer.java",
    "SPDXID": "SPDXRef-item25491",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/serializer/ErrorHandlingDeserializer.java",
    "SPDXID": "SPDXRef-item25376",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-docs/src/main/kotlin/org/springframework/kafka/kdocs/started/producer/Application.kt",
    "SPDXID": "SPDXRef-item23849",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-05/src/main/java/com/example/Sample05Application.java",
    "SPDXID": "SPDXRef-item23422",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/RetryListener.java",
    "SPDXID": "SPDXRef-item25435",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/adapter/AbstractFilteringMessageListener.java",
    "SPDXID": "SPDXRef-item25442",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/config/KafkaListenerEndpoint.java",
    "SPDXID": "SPDXRef-item25593",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2002-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/retrytopic/DestinationTopicProcessor.java",
    "SPDXID": "SPDXRef-item25576",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/ContainerCustomizationTests.java",
    "SPDXID": "SPDXRef-item25180",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/adapter/BatchListenerWithRecordAdapterTests.java",
    "SPDXID": "SPDXRef-item25204",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/retrytopic/RetryTopicIntegrationTests.java",
    "SPDXID": "SPDXRef-item25277",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/event/ConsumerRetryAuthEvent.java",
    "SPDXID": "SPDXRef-item25617",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/TimestampedException.java",
    "SPDXID": "SPDXRef-item25487",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/DefaultKafkaHeaderMapper.java",
    "SPDXID": "SPDXRef-item25366",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/DefaultErrorHandlerRecordTests.java",
    "SPDXID": "SPDXRef-item25186",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/core/KafkaProducerException.java",
    "SPDXID": "SPDXRef-item25520",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/converter/MessageConverter.java",
    "SPDXID": "SPDXRef-item25364",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/mock/MockProducerFactory.java",
    "SPDXID": "SPDXRef-item25607",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/core/KafkaAdminOperations.java",
    "SPDXID": "SPDXRef-item25517",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/KafkaHeaderMapper.java",
    "SPDXID": "SPDXRef-item25368",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/BackOffHandler.java",
    "SPDXID": "SPDXRef-item25483",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/LoggingCommitCallback.java",
    "SPDXID": "SPDXRef-item25462",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/FailedRecordProcessorTests.java",
    "SPDXID": "SPDXRef-item25206",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/test/java/org/springframework/kafka/test/junit/GlobalEmbeddedKafkaTestExecutionListenerTests.java",
    "SPDXID": "SPDXRef-item23166",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/ConsumerSeekAwareTests.java",
    "SPDXID": "SPDXRef-item25171",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/main/java/org/springframework/kafka/test/context/EmbeddedKafka.java",
    "SPDXID": "SPDXRef-item23215",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/config/StreamsBuilderFactoryBeanTests.java",
    "SPDXID": "SPDXRef-item25287",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/config/KafkaListenerContainerFactory.java",
    "SPDXID": "SPDXRef-item25585",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2002-2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/serializer/FailedDeserializationInfo.java",
    "SPDXID": "SPDXRef-item25372",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/AbstractMessageListenerContainer.java",
    "SPDXID": "SPDXRef-item25414",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/DelegatingMessageListener.java",
    "SPDXID": "SPDXRef-item25404",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/support/transaction/ResourcelessTransactionManager.java",
    "SPDXID": "SPDXRef-item25135",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/ManualAckPartialBatchTests.java",
    "SPDXID": "SPDXRef-item25193",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/main/java/org/springframework/kafka/test/junit/GlobalEmbeddedKafkaTestExecutionListener.java",
    "SPDXID": "SPDXRef-item23195",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/ListenerUtils.java",
    "SPDXID": "SPDXRef-item25471",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/annotation/RetryTopicConfigurationProvider.java",
    "SPDXID": "SPDXRef-item25541",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/ListenerContainerRegistry.java",
    "SPDXID": "SPDXRef-item25408",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/core/KafkaAdminTests.java",
    "SPDXID": "SPDXRef-item25240",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/security/jaas/KafkaJaasLoginModuleInitializer.java",
    "SPDXID": "SPDXRef-item25524",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/core/KafkaOperations.java",
    "SPDXID": "SPDXRef-item25507",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2015-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/converter/BytesJsonMessageConverter.java",
    "SPDXID": "SPDXRef-item25359",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/retrytopic/RetryTopicNamesProviderFactory.java",
    "SPDXID": "SPDXRef-item25558",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/core/KafkaAdminBadContextTests.java",
    "SPDXID": "SPDXRef-item25246",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/support/DefaultKafkaHeaderMapperTests.java",
    "SPDXID": "SPDXRef-item25136",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/streams/Configurer2Tests.java",
    "SPDXID": "SPDXRef-item25293",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/requestreply/CorrelationKey.java",
    "SPDXID": "SPDXRef-item25312",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/SendResult.java",
    "SPDXID": "SPDXRef-item25320",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-02/src/main/java/com/example/Controller.java",
    "SPDXID": "SPDXRef-item23513",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/event/ConsumerResumedEvent.java",
    "SPDXID": "SPDXRef-item25624",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/RecoveryStrategy.java",
    "SPDXID": "SPDXRef-item25473",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/requestreply/ReplyingKafkaTemplate.java",
    "SPDXID": "SPDXRef-item25316",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/retrytopic/RetryTopicHeadersTests.java",
    "SPDXID": "SPDXRef-item25271",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/config/TopicBuilder.java",
    "SPDXID": "SPDXRef-item25596",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/core/ABSwitchCluster.java",
    "SPDXID": "SPDXRef-item25502",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/KafkaListenerErrorHandler.java",
    "SPDXID": "SPDXRef-item25405",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/micrometer/KafkaListenerObservationConvention.java",
    "SPDXID": "SPDXRef-item25345",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/event/ConsumerFailedToStartEvent.java",
    "SPDXID": "SPDXRef-item25618",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-04/src/main/java/com/example/Application.java",
    "SPDXID": "SPDXRef-item23439",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/BatchAcknowledgingMessageListener.java",
    "SPDXID": "SPDXRef-item25415",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2015-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/event/ConsumerPartitionPausedEvent.java",
    "SPDXID": "SPDXRef-item25621",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/config/RecordMessagingMessageListenerAdapterTests.java",
    "SPDXID": "SPDXRef-item25289",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/FailedRecordProcessor.java",
    "SPDXID": "SPDXRef-item25402",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/SimpleKafkaHeaderMapper.java",
    "SPDXID": "SPDXRef-item25330",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/adapter/MessagingMessageListenerAdapter.java",
    "SPDXID": "SPDXRef-item25440",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/core/ProducerFactoryUtils.java",
    "SPDXID": "SPDXRef-item25499",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2002-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/EndpointHandlerMethod.java",
    "SPDXID": "SPDXRef-item25350",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/transaction/KafkaAwareTransactionManager.java",
    "SPDXID": "SPDXRef-item25528",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/DefaultErrorHandlerNoSeeksRecordAckNoResumePartitionTests.java",
    "SPDXID": "SPDXRef-item25163",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/retrytopic/ListenerContainerFactoryResolver.java",
    "SPDXID": "SPDXRef-item25567",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/KafkaStreamBrancher.java",
    "SPDXID": "SPDXRef-item25349",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/main/java/org/springframework/kafka/test/condition/EmbeddedKafkaCondition.java",
    "SPDXID": "SPDXRef-item23207",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/annotation/KafkaListenerAnnotationBeanPostProcessor.java",
    "SPDXID": "SPDXRef-item25533",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2014-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/retrytopic/RetryTopicConstantsTests.java",
    "SPDXID": "SPDXRef-item25281",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/streams/KafkaStreamsMicrometerListener.java",
    "SPDXID": "SPDXRef-item25631",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-docs/src/main/kotlin/org/springframework/kafka/kdocs/dynamic/Application.kt",
    "SPDXID": "SPDXRef-item23846",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/support/micrometer/ObservationIntegrationTests.java",
    "SPDXID": "SPDXRef-item25133",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/ContainerPartitionPausingBackOffManagerFactory.java",
    "SPDXID": "SPDXRef-item25468",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/CommonDelegatingErrorHandlerTests.java",
    "SPDXID": "SPDXRef-item25221",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/config/ContainerCustomizer.java",
    "SPDXID": "SPDXRef-item25604",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/DefaultErrorHandlerBatchTests.java",
    "SPDXID": "SPDXRef-item25232",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/adapter/RecordMessagingMessageListenerAdapter.java",
    "SPDXID": "SPDXRef-item25444",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2002-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/retrytopic/BackOffValuesGeneratorTests.java",
    "SPDXID": "SPDXRef-item25266",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-03/src/main/java/com/common/Foo1.java",
    "SPDXID": "SPDXRef-item23585",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/DefaultErrorHandlerNoSeeksBatchListenerTests.java",
    "SPDXID": "SPDXRef-item25209",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/main/java/org/springframework/kafka/test/context/EmbeddedKafkaContextCustomizerFactory.java",
    "SPDXID": "SPDXRef-item23213",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/CompositeRecordInterceptor.java",
    "SPDXID": "SPDXRef-item25489",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/ErrorHandlingCoverageTests.java",
    "SPDXID": "SPDXRef-item25223",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/support/LogIfLevelEnabledTests.java",
    "SPDXID": "SPDXRef-item25129",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/FailedBatchProcessor.java",
    "SPDXID": "SPDXRef-item25470",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/DefaultErrorHandlerSeekAfterCommitExceptionTests.java",
    "SPDXID": "SPDXRef-item25207",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/retrytopic/DltStrategy.java",
    "SPDXID": "SPDXRef-item25574",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/BatchInterceptor.java",
    "SPDXID": "SPDXRef-item25428",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-docs/src/main/kotlin/org/springframework/kafka/kdocs/started/noboot/Listener.kt",
    "SPDXID": "SPDXRef-item23852",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-docs/src/main/java/org/springframework/kafka/jdocs/dynamic/MyListener.java",
    "SPDXID": "SPDXRef-item23952",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/config/MethodKafkaListenerEndpoint.java",
    "SPDXID": "SPDXRef-item25584",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/ListenerMetadata.java",
    "SPDXID": "SPDXRef-item25410",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/adapter/InvocationResult.java",
    "SPDXID": "SPDXRef-item25455",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/serializer/SerializationUtils.java",
    "SPDXID": "SPDXRef-item25373",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/serializer/JsonTypeResolver.java",
    "SPDXID": "SPDXRef-item25375",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/JacksonMimeTypeModule.java",
    "SPDXID": "SPDXRef-item25396",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/config/AbstractKafkaListenerEndpoint.java",
    "SPDXID": "SPDXRef-item25586",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2014-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/adapter/FilteringMessageListenerAdapter.java",
    "SPDXID": "SPDXRef-item25449",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/FailedBatchProcessorTests.java",
    "SPDXID": "SPDXRef-item25226",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/main/java/org/springframework/kafka/test/context/EmbeddedKafkaContextCustomizer.java",
    "SPDXID": "SPDXRef-item23214",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/OffsetAndMetadataProvider.java",
    "SPDXID": "SPDXRef-item25433",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/retrytopic/RetryTopicComponentFactory.java",
    "SPDXID": "SPDXRef-item25555",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/micrometer/KafkaRecordSenderContext.java",
    "SPDXID": "SPDXRef-item25341",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/FallbackBatchErrorHandlerIntegrationTests.java",
    "SPDXID": "SPDXRef-item25234",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/support/micrometer/MicrometerHolderTests.java",
    "SPDXID": "SPDXRef-item25131",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/annotation/EnableKafkaRetryTopic.java",
    "SPDXID": "SPDXRef-item25547",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/ExceptionClassifier.java",
    "SPDXID": "SPDXRef-item25425",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-05/src/test/java/com/example/Sample05Application1Tests.java",
    "SPDXID": "SPDXRef-item23415",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/TopicForRetryable.java",
    "SPDXID": "SPDXRef-item25370",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/requestreply/RequestReplyTypedMessageFuture.java",
    "SPDXID": "SPDXRef-item25310",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/core/ConsumerPostProcessor.java",
    "SPDXID": "SPDXRef-item25509",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/DefaultAfterRollbackProcessorTests.java",
    "SPDXID": "SPDXRef-item25175",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/support/serializer/DelegatingSerializationTests.java",
    "SPDXID": "SPDXRef-item25144",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/serializer/DelegatingSerializer.java",
    "SPDXID": "SPDXRef-item25390",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/event/ConsumerStartingEvent.java",
    "SPDXID": "SPDXRef-item25615",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/event/ConsumerStartedEvent.java",
    "SPDXID": "SPDXRef-item25625",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/retrytopic/DefaultDestinationTopicResolverTests.java",
    "SPDXID": "SPDXRef-item25267",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/DefaultBackOffHandler.java",
    "SPDXID": "SPDXRef-item25409",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/serializer/DelegatingByTopicSerialization.java",
    "SPDXID": "SPDXRef-item25378",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/support/KafkaStreamBrancherTests.java",
    "SPDXID": "SPDXRef-item25156",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/KafkaBackOffManagerFactory.java",
    "SPDXID": "SPDXRef-item25407",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/streams/HeaderEnricherProcessor.java",
    "SPDXID": "SPDXRef-item25638",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/retrytopic/EndpointCustomizerFactoryTests.java",
    "SPDXID": "SPDXRef-item25257",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-docs/src/main/java/org/springframework/kafka/jdocs/dynamic/MyPojo.java",
    "SPDXID": "SPDXRef-item23954",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/config/KafkaListenerConfigUtils.java",
    "SPDXID": "SPDXRef-item25595",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/gradle/publish-maven.gradle",
    "SPDXID": "SPDXRef-item22985",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "NOASSERTION"
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/SubBatchPerPartitionTests.java",
    "SPDXID": "SPDXRef-item25220",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/test/java/org/springframework/kafka/test/assertj/KafkaConditionsTests.java",
    "SPDXID": "SPDXRef-item23170",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/serializer/DeserializationException.java",
    "SPDXID": "SPDXRef-item25389",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/AllowDenyCollectionManager.java",
    "SPDXID": "SPDXRef-item25331",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/support/serializer/RetryingDeserializerTests.java",
    "SPDXID": "SPDXRef-item25146",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/event/ListenerContainerIdleEvent.java",
    "SPDXID": "SPDXRef-item25627",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/streams/RecoveringDeserializationExceptionHandlerTests.java",
    "SPDXID": "SPDXRef-item25291",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/config/StreamsBuilderFactoryBean.java",
    "SPDXID": "SPDXRef-item25587",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/annotation/RetryableTopic.java",
    "SPDXID": "SPDXRef-item25534",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/CommonErrorHandler.java",
    "SPDXID": "SPDXRef-item25467",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/retrytopic/ExistingRetryTopicIntegrationTests.java",
    "SPDXID": "SPDXRef-item25264",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/core/CleanupConfig.java",
    "SPDXID": "SPDXRef-item25505",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/DefaultAfterRollbackProcessor.java",
    "SPDXID": "SPDXRef-item25427",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/main/java/org/springframework/kafka/test/utils/ContainerTestUtils.java",
    "SPDXID": "SPDXRef-item23203",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/streams/messaging/MessagingFunction.java",
    "SPDXID": "SPDXRef-item25637",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/ConsumerAwareRebalanceListenerTests.java",
    "SPDXID": "SPDXRef-item25233",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/ErrorHandlingDeserializerTests.java",
    "SPDXID": "SPDXRef-item25191",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/retrytopic/RetryTopicSameContainerFactoryIntegrationTests.java",
    "SPDXID": "SPDXRef-item25275",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/support/SimpleKafkaHeaderMapperTests.java",
    "SPDXID": "SPDXRef-item25137",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-docs/src/main/kotlin/org/springframework/kafka/kdocs/started/noboot/Sender.kt",
    "SPDXID": "SPDXRef-item23853",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/adapter/ConvertingMessageListenerTests.java",
    "SPDXID": "SPDXRef-item25203",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/BatchListenerFailedException.java",
    "SPDXID": "SPDXRef-item25461",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/SeekUtils.java",
    "SPDXID": "SPDXRef-item25494",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/core/reactive/ReactiveKafkaProducerTemplate.java",
    "SPDXID": "SPDXRef-item25515",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/DeliveryAttemptAware.java",
    "SPDXID": "SPDXRef-item25475",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/support/converter/BatchMessageConverterTests.java",
    "SPDXID": "SPDXRef-item25139",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/requestreply/KafkaReplyTimeoutException.java",
    "SPDXID": "SPDXRef-item25318",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/FailedRecordTrackerTests.java",
    "SPDXID": "SPDXRef-item25176",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/annotation/TopicPartition.java",
    "SPDXID": "SPDXRef-item25537",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/annotation/AliasPropertiesTests.java",
    "SPDXID": "SPDXRef-item25255",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/core/KafkaResourceHolder.java",
    "SPDXID": "SPDXRef-item25508",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/core/MicrometerConsumerListener.java",
    "SPDXID": "SPDXRef-item25498",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/main/java/org/springframework/kafka/test/hamcrest/KafkaMatchers.java",
    "SPDXID": "SPDXRef-item23219",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-04/src/main/java/com/example/Controller.java",
    "SPDXID": "SPDXRef-item23438",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/ConsumerAwareMessageListener.java",
    "SPDXID": "SPDXRef-item25469",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/retrytopic/RetryTopicConfigurationBuilderTests.java",
    "SPDXID": "SPDXRef-item25268",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/adapter/ConvertingMessageListener.java",
    "SPDXID": "SPDXRef-item25446",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/SeekToCurrentOnErrorRecordModeTests.java",
    "SPDXID": "SPDXRef-item25224",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/test/java/org/springframework/kafka/test/rule/AddressableEmbeddedBrokerTests.java",
    "SPDXID": "SPDXRef-item23168",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/LoggingErrorHandlerTests.java",
    "SPDXID": "SPDXRef-item25218",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/adapter/BatchMessagingMessageListenerAdapterTests.java",
    "SPDXID": "SPDXRef-item25200",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/support/micrometer/ObservationTests.java",
    "SPDXID": "SPDXRef-item25132",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/CommonContainerStoppingErrorHandler2Tests.java",
    "SPDXID": "SPDXRef-item25227",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/DefaultErrorHandlerBatchIntegrationTests.java",
    "SPDXID": "SPDXRef-item25219",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/AsyncAckAfterHandleTests.java",
    "SPDXID": "SPDXRef-item25164",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/support/serializer/JsonSerializationTests.java",
    "SPDXID": "SPDXRef-item25154",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/support/TopicPartitionOffsetTests.java",
    "SPDXID": "SPDXRef-item25127",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-01/src/main/java/com/common/Foo2.java",
    "SPDXID": "SPDXRef-item23336",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/KafkaUtils.java",
    "SPDXID": "SPDXRef-item25328",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/streams/KafkaStreamsBranchTests.java",
    "SPDXID": "SPDXRef-item25297",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/micrometer/KafkaTemplateObservation.java",
    "SPDXID": "SPDXRef-item25344",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/retrytopic/DestinationTopic.java",
    "SPDXID": "SPDXRef-item25562",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/config/KafkaStreamsCustomizer.java",
    "SPDXID": "SPDXRef-item25594",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/retrytopic/ListenerContainerFactoryConfigurer.java",
    "SPDXID": "SPDXRef-item25560",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-02/src/main/java/com/common/Bar2.java",
    "SPDXID": "SPDXRef-item23510",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/support/serializer/JsonSerdeTests.java",
    "SPDXID": "SPDXRef-item25148",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/streams/HeaderEnricherProcessorTests.java",
    "SPDXID": "SPDXRef-item25296",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/ConsumerAwareListenerErrorHandler.java",
    "SPDXID": "SPDXRef-item25485",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-docs/src/main/antora/modules/ROOT/pages/kafka/container-props.adoc",
    "SPDXID": "SPDXRef-item23910",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "LicenseRef-fossology-See-URL",
    "FileCopyrightText": "NOASSERTION"
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/retrytopic/DefaultDestinationTopicProcessor.java",
    "SPDXID": "SPDXRef-item25561",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/retrytopic/DestinationTopicResolver.java",
    "SPDXID": "SPDXRef-item25557",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/LogIfLevelEnabled.java",
    "SPDXID": "SPDXRef-item25369",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/PauseContainerManualAssignmentTests.java",
    "SPDXID": "SPDXRef-item25181",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-docs/src/main/java/org/springframework/kafka/jdocs/requestreply/Application.java",
    "SPDXID": "SPDXRef-item23950",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-docs/src/main/java/org/springframework/kafka/jdocs/started/noboot/Sender.java",
    "SPDXID": "SPDXRef-item23960",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/config/KafkaListenerEndpointRegistryTests.java",
    "SPDXID": "SPDXRef-item25285",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/README.md",
    "SPDXID": "SPDXRef-item22973",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "NOASSERTION"
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/core/MicrometerProducerListener.java",
    "SPDXID": "SPDXRef-item25518",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/serializer/ToStringSerializer.java",
    "SPDXID": "SPDXRef-item25388",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/converter/JsonMessageConverter.java",
    "SPDXID": "SPDXRef-item25353",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/annotation/KafkaHandler.java",
    "SPDXID": "SPDXRef-item25540",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2015-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/ConsumerSeekAware.java",
    "SPDXID": "SPDXRef-item25493",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/DefaultErrorHandlerNoSeeksRecordAckTests.java",
    "SPDXID": "SPDXRef-item25222",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/main/java/org/springframework/kafka/test/core/BrokerAddress.java",
    "SPDXID": "SPDXRef-item23211",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2015-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/ContainerProperties.java",
    "SPDXID": "SPDXRef-item25463",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/support/serializer/testentities/DummyEntity.java",
    "SPDXID": "SPDXRef-item25151",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/AfterRollbackProcessor.java",
    "SPDXID": "SPDXRef-item25459",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/adapter/DefaultBatchToRecordAdapter.java",
    "SPDXID": "SPDXRef-item25453",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/retrytopic/RetryTopicSchedulerWrapper.java",
    "SPDXID": "SPDXRef-item25571",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/KafkaBackoffException.java",
    "SPDXID": "SPDXRef-item25434",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/annotation/KafkaNullAwarePayloadArgumentResolver.java",
    "SPDXID": "SPDXRef-item25542",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-02/src/test/java/com/example/ApplicationTests.java",
    "SPDXID": "SPDXRef-item23501",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-02/src/main/java/com/common/Foo2.java",
    "SPDXID": "SPDXRef-item23508",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-docs/src/main/java/org/springframework/kafka/jdocs/started/producer/Application.java",
    "SPDXID": "SPDXRef-item23957",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/test/java/org/springframework/kafka/test/context/EmbeddedKafkaContextCustomizerTests.java",
    "SPDXID": "SPDXRef-item23178",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/TransactionalContainerTests.java",
    "SPDXID": "SPDXRef-item25188",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/core/KafkaTemplateTests.java",
    "SPDXID": "SPDXRef-item25237",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/DeadLetterPublishingRecoverer.java",
    "SPDXID": "SPDXRef-item25477",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/support/serializer/DelegatingByTopicSerializationTests.java",
    "SPDXID": "SPDXRef-item25149",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/annotation/RetryableTopicAnnotationProcessor.java",
    "SPDXID": "SPDXRef-item25532",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/ManualNackPauseResumeTests.java",
    "SPDXID": "SPDXRef-item25177",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/config/KafkaStreamsCustomizerTests.java",
    "SPDXID": "SPDXRef-item25288",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/KafkaHeaders.java",
    "SPDXID": "SPDXRef-item25393",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2014-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/streams/RecoveringDeserializationExceptionHandler.java",
    "SPDXID": "SPDXRef-item25633",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/CommonDelegatingErrorHandler.java",
    "SPDXID": "SPDXRef-item25458",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/retrytopic/RetryTopicConfigurationSupport.java",
    "SPDXID": "SPDXRef-item25582",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/manifest.spdx.json",
    "SPDXID": "SPDXRef-item25639",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "CC0-1.0",
    "FileCopyrightText": "copyrightText\": \"NOASSERTION\", versionInfo\": \"2.4.8\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"6.0.3\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"6.0.3\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"2.1.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"6.0.3\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"2.4.8\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"3.2\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"3.23.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"3.0.1-SNAPSHOT\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"2.0.6\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"4.8.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"1.0.2\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"1.4\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"2.8\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"2.7.0\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"4.0.0\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"1.5.2-1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"1.4.5\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"3.0.1-SNAPSHOT\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"1.8.0\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"3.0.2\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"2.13.8\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"3.3.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"4.1.86.Final\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"4.1.86.Final\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"2.14.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"3.0.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"5.9.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"3.0.1-SNAPSHOT\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"2.19.0\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"5.9.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"2.19.0\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"0.0.20131108.vaadin1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"2.6.0\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"2.14.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"3.3.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"4.1.86.Final\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"3.0.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"1.4.5\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"3.0.1-SNAPSHOT\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"2.9.0\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"3.0.1-SNAPSHOT\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"2.2\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"1.10.2\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"1.10.2\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"3.3.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"5.0.4\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"2.14.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"3.6.3\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"3.9.4\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"3.3.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"1.5.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"6.0.3\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"1.12.20\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"6.0.3\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"6.0.3\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"3.0.1-SNAPSHOT\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"1.9.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"2.13.8\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"0.7.0\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"4.2.0\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"4.1.86.Final\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"4.1.86.Final\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"1.1.2\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"1.9.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"6.0.3\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"5.9.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"1.1.8.4\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"1.12.20\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"3.0.2-SNAPSHOT\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"2.14.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"3.3.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"3.3.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"4.1.86.Final\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"0.5.0\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"4.1.86.Final\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"3.3.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"6.29.4.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"1.2.0\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"2.1.0\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"5.9.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"6.0.3\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"1.9.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"2.0.0\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"1.33\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"4.1.86.Final\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"2.2.0\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"4.2.14\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"3.3.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"3.3.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"3.0.2-SNAPSHOT\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"3.0.1-SNAPSHOT\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"3.0.1-SNAPSHOT\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"6.0.3\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"4.8.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"2.0.6\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"9.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"4.1.86.Final\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"2.14.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"3.6.3\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"2.14.1\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"0.7.9\", externalRefs\": [;copyrightText\": \"NOASSERTION\", versionInfo\": \"v3.1.0_release\", externalRefs\": ["
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/main/java/org/springframework/kafka/test/condition/LogLevelsCondition.java",
    "SPDXID": "SPDXRef-item23209",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/event/ListenerContainerPartitionIdleEvent.java",
    "SPDXID": "SPDXRef-item25619",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/retrytopic/SuffixingRetryTopicNamesProviderFactory.java",
    "SPDXID": "SPDXRef-item25577",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/mock/MockConsumerFactory.java",
    "SPDXID": "SPDXRef-item25609",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/ConcurrentMessageListenerContainerTests.java",
    "SPDXID": "SPDXRef-item25161",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/FallbackBatchErrorHandlerTests.java",
    "SPDXID": "SPDXRef-item25231",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/retrytopic/ListenerContainerFactoryResolverTests.java",
    "SPDXID": "SPDXRef-item25272",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/serializer/StringOrBytesSerializer.java",
    "SPDXID": "SPDXRef-item25386",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/transaction/KafkaTransactionManager.java",
    "SPDXID": "SPDXRef-item25526",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/ContainerPauseImmediateTests.java",
    "SPDXID": "SPDXRef-item25192",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/adapter/DelegatingInvocableHandler.java",
    "SPDXID": "SPDXRef-item25443",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/JavaUtils.java",
    "SPDXID": "SPDXRef-item25337",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/DefaultErrorHandlerSeekAfterCommitExceptionBatchAckTests.java",
    "SPDXID": "SPDXRef-item25217",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/micrometer/KafkaListenerObservation.java",
    "SPDXID": "SPDXRef-item25340",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/retrytopic/TestClockUtils.java",
    "SPDXID": "SPDXRef-item25283",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/adapter/FilteringBatchMessageListenerAdapter.java",
    "SPDXID": "SPDXRef-item25438",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/ContainerPartitionPausingBackOffManager.java",
    "SPDXID": "SPDXRef-item25430",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-03/src/main/java/com/example/Application.java",
    "SPDXID": "SPDXRef-item23588",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/core/DefaultKafkaConsumerFactory.java",
    "SPDXID": "SPDXRef-item25497",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/event/ConsumerRetryAuthSuccessfulEvent.java",
    "SPDXID": "SPDXRef-item25620",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/BatchMessageListener.java",
    "SPDXID": "SPDXRef-item25422",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2015-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/retrytopic/RetryTopicConfigurationProviderTests.java",
    "SPDXID": "SPDXRef-item25276",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/retrytopic/RetryTopicConfigurationIntegrationTests.java",
    "SPDXID": "SPDXRef-item25263",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/serializer/RetryingDeserializer.java",
    "SPDXID": "SPDXRef-item25379",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/retrytopic/BackOffValuesGenerator.java",
    "SPDXID": "SPDXRef-item25578",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/MissingTopicCheckOverrideAdminConfigTests.java",
    "SPDXID": "SPDXRef-item25195",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/config/StreamsBuilderFactoryBeanConfigurer.java",
    "SPDXID": "SPDXRef-item25603",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/retrytopic/RetryTopicConfigurationBuilder.java",
    "SPDXID": "SPDXRef-item25566",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/retrytopic/RetryTopicConfiguration.java",
    "SPDXID": "SPDXRef-item25564",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/core/RoutingKafkaTemplateTests.java",
    "SPDXID": "SPDXRef-item25238",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/main/java/org/springframework/kafka/test/rule/Log4j2LevelAdjuster.java",
    "SPDXID": "SPDXRef-item23197",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2002-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-05/mvnw.cmd",
    "SPDXID": "SPDXRef-item23345",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "copyright ownership. The ASF licenses this file REM to you under the Apache License, Version 2.0 (the REM \"License\"); you may not use this file except in compliance REM with the License. You may obtain a copy of the License at REM REM https://www.apache.org/licenses/LICENSE-2.0 REM REM U"
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-01/src/test/java/com/example/ApplicationTests.java",
    "SPDXID": "SPDXRef-item23329",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/converter/ByteArrayJsonMessageConverter.java",
    "SPDXID": "SPDXRef-item25354",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/event/ConsumerPartitionResumedEvent.java",
    "SPDXID": "SPDXRef-item25616",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/main/java/org/springframework/kafka/test/condition/LogLevels.java",
    "SPDXID": "SPDXRef-item23208",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-docs/src/main/kotlin/org/springframework/kafka/kdocs/started/consumer/Application.kt",
    "SPDXID": "SPDXRef-item23855",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/serializer/JsonDeserializer.java",
    "SPDXID": "SPDXRef-item25374",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2015-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/main/java/org/springframework/kafka/test/rule/EmbeddedKafkaRule.java",
    "SPDXID": "SPDXRef-item23198",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2015-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/DefaultListenerMetadata.java",
    "SPDXID": "SPDXRef-item25403",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-docs/src/main/java/org/springframework/kafka/jdocs/started/noboot/Config.java",
    "SPDXID": "SPDXRef-item23961",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/GenericMessageListenerContainer.java",
    "SPDXID": "SPDXRef-item25464",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/serializer/ToFromStringSerde.java",
    "SPDXID": "SPDXRef-item25385",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/retrytopic/RetryTopicConfigurer.java",
    "SPDXID": "SPDXRef-item25580",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/KafkaConsumerBackoffManager.java",
    "SPDXID": "SPDXRef-item25429",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/ErrorHandlingUtils.java",
    "SPDXID": "SPDXRef-item25424",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/support/converter/ProjectingMessageConverterTests.java",
    "SPDXID": "SPDXRef-item25140",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/ManualAckListenerErrorHandler.java",
    "SPDXID": "SPDXRef-item25419",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/core/ProducerPostProcessor.java",
    "SPDXID": "SPDXRef-item25511",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/serializer/DeserializationExceptionHeader.java",
    "SPDXID": "SPDXRef-item25391",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/serializer/DelegatingDeserializer.java",
    "SPDXID": "SPDXRef-item25384",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/AbstractKafkaBackOffManagerFactory.java",
    "SPDXID": "SPDXRef-item25426",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/config/KafkaListenerEndpointRegistrar.java",
    "SPDXID": "SPDXRef-item25605",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2014-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/converter/BatchMessagingMessageConverter.java",
    "SPDXID": "SPDXRef-item25352",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/adapter/AdapterUtils.java",
    "SPDXID": "SPDXRef-item25452",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/mapping/DefaultJackson2JavaTypeMapper.java",
    "SPDXID": "SPDXRef-item25323",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/KafkaMessageListenerContainerTests.java",
    "SPDXID": "SPDXRef-item25170",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/JacksonUtils.java",
    "SPDXID": "SPDXRef-item25397",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/DefaultErrorHandlerNoSeeksRecordAckNoResumeContainerPausedTests.java",
    "SPDXID": "SPDXRef-item25162",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/ListenerErrorHandlerTests.java",
    "SPDXID": "SPDXRef-item25178",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/event/NonResponsiveConsumerEvent.java",
    "SPDXID": "SPDXRef-item25628",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-03/src/main/java/com/example/Controller.java",
    "SPDXID": "SPDXRef-item23587",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/requestreply/ReplyingKafkaOperations.java",
    "SPDXID": "SPDXRef-item25311",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/ConsumerRecordRecoverer.java",
    "SPDXID": "SPDXRef-item25401",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/ConcurrentMessageListenerContainer.java",
    "SPDXID": "SPDXRef-item25476",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2015-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/event/ConsumerPausedEvent.java",
    "SPDXID": "SPDXRef-item25612",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/micrometer/KafkaRecordReceiverContext.java",
    "SPDXID": "SPDXRef-item25347",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/support/converter/MessagingMessageConverterTests.java",
    "SPDXID": "SPDXRef-item25141",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-docs/src/main/java/org/springframework/kafka/jdocs/started/consumer/Application.java",
    "SPDXID": "SPDXRef-item23963",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/retrytopic/DestinationTopicPropertiesFactoryTests.java",
    "SPDXID": "SPDXRef-item25278",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/ABSwitchClusterTests.java",
    "SPDXID": "SPDXRef-item25194",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/JacksonPresent.java",
    "SPDXID": "SPDXRef-item25329",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/adapter/ConsumerRecordMetadata.java",
    "SPDXID": "SPDXRef-item25445",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/adapter/KafkaBackoffAwareMessageListenerAdapterTests.java",
    "SPDXID": "SPDXRef-item25202",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/TopicPartitionOffset.java",
    "SPDXID": "SPDXRef-item25332",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/CompositeProducerInterceptor.java",
    "SPDXID": "SPDXRef-item25394",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/config/StreamsBuilderFactoryLateConfigTests.java",
    "SPDXID": "SPDXRef-item25286",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/FailedRecordTracker.java",
    "SPDXID": "SPDXRef-item25472",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/support/serializer/SerializationUtilsTests.java",
    "SPDXID": "SPDXRef-item25152",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-02/src/main/java/com/common/Foo1.java",
    "SPDXID": "SPDXRef-item23511",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/annotation/KafkaListenerConfigurer.java",
    "SPDXID": "SPDXRef-item25545",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2002-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-04/src/test/java/com/example/ApplicationTests.java",
    "SPDXID": "SPDXRef-item23431",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/KafkaExceptionLogLevelAware.java",
    "SPDXID": "SPDXRef-item25411",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-05/mvnw",
    "SPDXID": "SPDXRef-item23346",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at"
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/retrytopic/RetryTopicConstants.java",
    "SPDXID": "SPDXRef-item25581",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/adapter/BatchToRecordAdapter.java",
    "SPDXID": "SPDXRef-item25439",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/test/java/org/springframework/kafka/test/EmbeddedKafkaKraftBrokerTests.java",
    "SPDXID": "SPDXRef-item23179",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/event/ListenerContainerPartitionNoLongerIdleEvent.java",
    "SPDXID": "SPDXRef-item25626",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/RecordInterceptor.java",
    "SPDXID": "SPDXRef-item25480",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/CommonContainerStoppingErrorHandler.java",
    "SPDXID": "SPDXRef-item25436",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/retrytopic/DefaultDestinationTopicProcessorTests.java",
    "SPDXID": "SPDXRef-item25260",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/core/DefaultKafkaConsumerFactoryTests.java",
    "SPDXID": "SPDXRef-item25242",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/converter/MappingJacksonParameterizedConverter.java",
    "SPDXID": "SPDXRef-item25362",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/core/ProducerFactory.java",
    "SPDXID": "SPDXRef-item25506",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/converter/ProjectingMessageConverter.java",
    "SPDXID": "SPDXRef-item25357",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/src/test/java/org/springframework/kafka/test/condition/WithNestedClassContextTests.java",
    "SPDXID": "SPDXRef-item23175",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/core/reactive/ReactiveKafkaProducerTemplateTransactionIntegrationTests.java",
    "SPDXID": "SPDXRef-item25245",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/ManualImmediateNackBatchTests.java",
    "SPDXID": "SPDXRef-item25190",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/gradlew.bat",
    "SPDXID": "SPDXRef-item22972",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2015 the original author or authors. rem rem Licensed under the Apache License, Version 2.0 (the \"License\"); rem you may not use this file except in compliance with the License. rem You may obtain a copy of the License at rem rem https://www.apache.org/licenses/LICENSE-2.0"
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/CommitOnAssignmentTests.java",
    "SPDXID": "SPDXRef-item25230",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/retrytopic/TopicSuffixingStrategy.java",
    "SPDXID": "SPDXRef-item25559",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/streams/messaging/MessagingProcessor.java",
    "SPDXID": "SPDXRef-item25636",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2019-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-docs/src/main/java/org/springframework/kafka/jdocs/dynamic/Application.java",
    "SPDXID": "SPDXRef-item23953",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-05/.mvn/wrapper/maven-wrapper.jar/META-INF/maven/org.apache.maven.wrapper/maven-wrapper/pom.xml",
    "SPDXID": "SPDXRef-item23401",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at"
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/retrytopic/SameIntervalTopicReuseStrategy.java",
    "SPDXID": "SPDXRef-item25556",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/ContainerGroupSequencerTests.java",
    "SPDXID": "SPDXRef-item25160",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/core/KafkaAdmin.java",
    "SPDXID": "SPDXRef-item25512",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/converter/RecordMessageConverter.java",
    "SPDXID": "SPDXRef-item25365",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2019 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/mapping/AbstractJavaTypeMapper.java",
    "SPDXID": "SPDXRef-item25327",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/support/serializer/SerializationIntegrationTests.java",
    "SPDXID": "SPDXRef-item25145",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/ProducerListener.java",
    "SPDXID": "SPDXRef-item25333",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2015-2020 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/retrytopic/PartitionResolverTests.java",
    "SPDXID": "SPDXRef-item25273",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/serializer/DelegatingByTypeSerializer.java",
    "SPDXID": "SPDXRef-item25387",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2021-2022 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-03/src/test/java/com/example/ApplicationTests.java",
    "SPDXID": "SPDXRef-item23577",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/listener/adapter/RecordFilterStrategy.java",
    "SPDXID": "SPDXRef-item25456",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/requestreply/ReplyingKafkaTemplateTests.java",
    "SPDXID": "SPDXRef-item25125",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2018-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/retrytopic/RetryTopicBeanNames.java",
    "SPDXID": "SPDXRef-item25569",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2022-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/serializer/JsonSerializer.java",
    "SPDXID": "SPDXRef-item25380",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2016-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/CommonContainerStoppingErrorHandler3Tests.java",
    "SPDXID": "SPDXRef-item25225",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2017-2021 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/test/java/org/springframework/kafka/listener/PauseContainerWhileErrorHandlerIsRetryingTests.java",
    "SPDXID": "SPDXRef-item25159",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2023-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/src/main/java/org/springframework/kafka/support/micrometer/MicrometerHolder.java",
    "SPDXID": "SPDXRef-item25343",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "Apache-2.0",
    "FileCopyrightText": "Copyright 2020-2023 the original author or authors."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/.git/hooks/pre-rebase.sample",
    "SPDXID": "SPDXRef-item23759",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "NOASSERTION",
    "FileCopyrightText": "Copyright (c) 2006, 2008 Junio C Hamano"
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/build/tmp/compileJava/previous-compilation-data.bin",
    "SPDXID": "SPDXRef-item23060",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "NOASSERTION",
    "FileCopyrightText": "$\tD\tR \tR¡\tP¢\tAà?£\tlter{¤\teassignmentsÓ?ã ¥\teassignableô ¤J?nò"
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-test/build/tmp/compileTestJava/previous-compilation-data.bin",
    "SPDXID": "SPDXRef-item23062",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "NOASSERTION",
    "FileCopyrightText": "©\tLíu$îuSïuSðuBñuWòuOóuTôuI¤h«?!!ú?Ê,Ù?µ?Ê ÔĊI4 íþ\"?癐?éõu$öuI÷uDe  >õ¿ äè?%?Ë?cøuPùuMÅL·?0?BAR/PûÚQ3ì߫]?úuSûuRüu.4?ýuestrictsþuuspension?:¢ ¹AáG&Oýªÿu$vCvSv.v.û?vjavaapi?¿?û á»Mè?%;AmAÝßB)vSvPv.v.þ?vplacement?vlacementº Gק?[¢²ê?Ñé?%òÇþvSvFvP?¦?"
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/build.gradle",
    "SPDXID": "SPDXRef-item23266",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "NOASSERTION",
    "FileCopyrightText": "Copyrights { onlyIf { !isCI } if (gitPresent) { inputs.files(modifiedFiles.map(files -> files.filter { f -> f.path.contains(subproject.name) }));Copyright (20\\d\\d)-?(20\\d\\d)?/ if (matcher.count) { def beginningYear = matcher[0][1] if (now != beginningYear && now != matcher[0][2]) { def years = \"$beginningYear-$now\" def sourceCode = file.text sourceCode = sourceCode.replaceFirst(/20\\d\\d(-20\\d\\d)?/,;Copyright updated for file: $file\";Copyrights;copyright: new Date().format('yyyy'), version: project.version)"
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/samples/sample-05/.mvn/wrapper/maven-wrapper.jar/META-INF/NOTICE",
    "SPDXID": "SPDXRef-item23404",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "NOASSERTION",
    "FileCopyrightText": "Copyright 2016-2021 The Apache Software Foundation"
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/.git/objects/pack/pack-d4a51e5ee1f497ef8b3c75781d72b13d94978deb.pack",
    "SPDXID": "SPDXRef-item23635",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "NOASSERTION",
    "FileCopyrightText": "©\tXIVbY\"G¹zfÀ®kíoN©Ùݾ3C«£?\"_ǐݢ»Íîì±óϿ?r¶éq=âü?QPZ_ZZ̠¹oMĖM Åü?>?iگÝø?»?FÖ9@®?x31?â¢dî9vlzÊ?}MÎ̏Í<8Ѽ;å)Ö?ó®?x31?ÜÄÌ<k\"76¦?Tþð֌?b?ù?XMÀÒ%©Å%åªΦßb¹ T=3ó¦0hÿÛ.µ\t®??¯?x31?¬ĲD?eÕi?Ó??½?º-ëÒ&¶Wþ«êÕ?¼g?-®?x31?ü¢t ¯?['ݗô¹W>7¼ÅPåýÎD¡?äª?x31?₢̼;© 8ç¹d8PtÊpÝ?ƓÍÌTË?©kç?å³Lx{¢Ô(³á:Óf5æ팓?Y?ٜóóÒ2Ó'obÝ1ù?[&«Ï~gr(#'«`«0¹C*¹y=3#]ÉåÁÊTË?uB?âjå´?x{¢tX~ÃA~¦Z.?@?òê?fx?:Åÿ?ê?°  ©?author Gary Russell©?峣 £?&³ø?M?Z\tͳ m?oM?{ïHx{%uQvC<ëdNV5?çü¼´ÌôҢɍl?\"0Nj?eÍÅÅ9ù!³øä2V·É?bw²?0épM~Æj5YÍqr2??Ã&b?³y>&£>gIFf±^ZbrI~Q;©\tRéWZ rfpiZZf?Ðj¸ļ¼|òóôJ°«Q_ZâVZ¢ \"?W\\4ù/ßJ>?}}??ÿ`??Ç  øäÛü?ñ/`ôٜ, ÏÈè3¹Y0 ¬sò?!¥ɼB¥.j?«¸?m?òJsr?ÔÔ?6Ï?ÎeB?ÈÍÌS@âNf?}'¦ $?;Copyright 2015-±?Ð?³ 7?y?L?Marius Bogoevici¹?&?1.1â?=O B??n³ë?: );;Copyright 2015-±?Ï?³ 7?x?L?Marius Bogoevici¸?&?1.1á?=N A??n³ê?: );;©\tG$H?W(Fbñc«U2%+?H\"?U&J\\Ò'Rç pRH?§RO(1¥j Âi&U?Ó «Tó±cu?IvlHÚ?þã?¾µ4?Îøõ$?ø' v?ْ\\?ÅÝÝ?ã\tµZ?ÊÝóv¸G??7åÇ¯í\\?)¥0?¾?èÛU°µ½²<¡F·áªR5ã0OÌ9S8zãäZwe?G?¢uo֖ÝÓ{?SÑť;Ì\tµÓ?ö ôöôuö)¼?Hrëì¹Ǌ-ð?¿*x˺; åÉõOÆTe?LhÛà`C?¼³ß?¯íYÃk?RIºïûþMðíH\t|?ß?/ôäe9QÅXh¹\t`ÂÂÞrԜ?·],rô?âi??BÃ4;©\tx?i[6?gµNÌ_?é<àÉ@ Éq/?¢´u ¹4*£tÎö«tóp¿ EáÉQ^  ?ì16òðºi3ù?ͷ?nfÅ?¢6IØÉ?ꧼbëBõ/w?ý+?µ$ٛ½«Â{\\'M9l#¯ú3,?ÐÍ\"osl pú7<: ¼×g u?-åT«Fg¯?¾§¼&|é?&'1M§°¼æè?y±ÖÛôeݜ¡?yR \"j 7ß\",&Þ!K|?;?R?#?)B«â`a?ö!åIRT\\GÅHq¶¤$·Î_Dà_[½3?YӾI?wdd??Ý?O?½µDÑÊ?ā¥>żùÆêðçÖ/Ç÷ѿ_2²Ë1}Kø½¹V;© 7iZ Uc\\ujϠ®!sÎijºúMªÄꂴßp-× #KQë?AÆùJե򽲽çt¢é»|ç?O?ê??íÌdU?§Sö¥7^Ö?ÇÀ4»:õ0v¶dB­ä]ÑÁ-YÆ^¤JDIi ׉Dv®31«®Míe/eãΎdꗵö?Ðåð+?ä#ÕÆ?ŋµ\"Æ÷¥6÷'©Váò¸àÍ??]ҍÇ6o¡å?í?-Mýy?;©\t6L?zÐ^p7W³MÚ?¤ÿÒEWKq?>?ñ?Ó(?#ÇLÝLæhÆé ĺü:(F÷§¶§??X +Q¼p`±Å p@Ò2,\\2r+F?u$?ê{'R?zÓ +fڻ(·\t¨óRËÒ?s1É _úÖÍaõÏ7 ?@ÊWL˴H$ޏåÉ)*ÁûJ¸>?Oâ L9ÖH?eä?¢d%á&[± í?z?Ê?áTQ?T2U¸298ê=þôNÊkHâ Qâɐö\"l?^b-\t<±?E\t*4J?hP.ÙU?CZCä?òº-K?(á??Ü?ôÄ&?ôF/?O«xú&٪mõ£æVܞTóÊßҨ?QÜíRXh}`;©\t0ä?hAÃZ]Ö7ª(p.}è2#ËÖP³ÉkÌü<\t5c'ú?:?Éι?ÛÀâ?Dîñ?j=¼h©õ0?©©¿ìá?ñýÊ[Ãðæ?¿?8Ôçyk¢ü;jû?þÆ1×?ûþÿ?µ7;©\tfq2^\\gs3¬Jê«?cM?>èºÛ7¸AÌDO£?_ۺÂZñ .?]áèÓdI{¿#@Vhi?d¹?ÔÉ?(=Q8\"°٧Æ^Ú Nu7®Ä 4ÝԱ:ìå?Þ?|/\\Ýç¡A«ì Îr{=3{ýá¦d.Àä[?wK"
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/.git/objects/pack/pack-d4a51e5ee1f497ef8b3c75781d72b13d94978deb.idx",
    "SPDXID": "SPDXRef-item23636",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "NOASSERTION",
    "FileCopyrightText": "© IRûtv#UÀvg.m¿±®©m <?9d;©\ts?6ÖtMbC*`?k\"?x㪎#®¿Ýåõè#5=zq¤½?㬩?TÒ؄ ¾ûtÄpxB>Úq㮏è£?òØ,ïÃOÐÌME?ÕÅã¯?ôn\\¶?Ì:?$?Ùá{)ã°$E©¤?8\t§¶ÖS±>3¹ã²?ÿ¸?*ÚE?Önu[?% ²ã¶bâ5¿?8o³2j>?lÔoã¸Î?c¦'uIjd¯H?ÒB=gé6ãº9^tò³caè?P?å?½?qs㺵,?H?É?#á«?hHä/?Aã¼EB?£=¢S½0|`O ã½#|ßÐʮu?U¿eùÀ?$㽪*}íu»/?«Td¶Qi®@ã¾ Ã?ʪ3ÂÐåúF\">Î?ã"
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka-docs/src/main/antora/modules/ROOT/pages/index.adoc",
    "SPDXID": "SPDXRef-item23922",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "NOASSERTION",
    "FileCopyrightText": "(C) 2016 - 2023 VMware, Inc."
  },
  {
    "FileName": "spring-kafka.zip/spring-kafka/spring-kafka/build/tmp/compileJava/previous-compilation-data.bin",
    "SPDXID": "SPDXRef-item24065",
    "LicenseConcluded": "NOASSERTION",
    "LicenseComment": "",
    "LicenseInfoInFile": "NOASSERTION",
    "FileCopyrightText": "© Oª G« C¬ A¼?ª?2ý??+L?f¬N?59_[õ¡ó.­ P® M¯ F° $± L² AÊ?×?¹?"
  }
]