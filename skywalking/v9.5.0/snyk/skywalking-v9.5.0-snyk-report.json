{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "java/NoHardcodedCredentials/test",
              "name": "NoHardcodedCredentials/test",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n## Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "NoHardcodedCredentials",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-798"
                ]
              }
            },
            {
              "id": "python/TooPermissiveCors/test",
              "name": "TooPermissiveCors/test",
              "shortDescription": {
                "text": "Origin Validation Error"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nAs a legacy of early web design and site limitations, most web applications default, for security reasons, to a \"same origin policy\". This means that browsers can only retrieve data from another site if the two sites share the same domain. In today's complex online environment, however, sites and applications often need to retrieve data from other domains. This is done under fairly limited conditions through an exception to the same origin policy known as \"cross-origin resource sharing\".\n\nDevelopers may create definitions of trusted domains that are broader than absolutely necessary, inadvertently opening up wider access than intended. This weakness could result in data exposure or loss, or even allow an attacker to take over the site or application.\n\n## Best practices for prevention\n* Avoid using wildcards for cross-origin resource sharing. Instead, define intended domains explicitly.\n* Ensure that your site or app is well defended against cross-site scripting attacks (XSS), which could lead to takeover via an overly permissive cross-domain policy.\n* Do not mix secure and insecure protocols when defining cross-domain policies.\n* Consider defining a clear approved list to specify which domains will be given resource-level access; use this approved list to validate all domain access requests.\n* Clearly define which methods (view, read, and update) are permitted for each resource and domain to avoid abuse.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "TooPermissiveCors",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-942",
                  "CWE-346"
                ]
              }
            },
            {
              "id": "java/Sqli",
              "name": "Sqli",
              "shortDescription": {
                "text": "SQL Injection"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nIn an SQL injection attack, the user can submit an SQL query directly to the database, gaining access without providing appropriate credentials. Attackers can then view, export, modify, and delete confidential information; change passwords and other authentication information; and possibly gain access to other systems within the network. This is one of the most commonly exploited categories of vulnerability, but can largely be avoided through good coding practices.\n\n## Best practices for prevention\n* Avoid passing user-entered parameters directly to the SQL server.\n* Avoid using string concatenation to build SQL queries from user-entered parameters.\n* When coding, define SQL code first, then pass in parameters. Use prepared statements with parameterized queries. Examples include `SqlCommand()` in .NET and `bindParam()` in PHP.\n* Use strong typing for all parameters so unexpected user data will be rejected.\n* Where direct user input cannot be avoided for performance reasons, validate input against a very strict allowlist of permitted characters, avoiding special characters such as `? & / < > ; - ' \" \\` and spaces. Use a vendor-supplied escaping routine if possible.\n* Develop your application in an environment and/or using libraries that provide protection against SQL injection.\n* Harden your entire environment around a least-privilege model, ideally with isolated accounts with privileges only for particular tasks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "Sqli",
                  "Security",
                  "SourceResourceAccess",
                  "SourceDatabase",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/anHALytics/anhalytics-core/commit/f7016be371db42f6216aebf395a613c216e3f4a6?diff=split#diff-90e93a6f34fe039d5f46f84e69b727c58302f76229dff116eb0a1f3b76a48494L-1",
                    "lines": [
                      {
                        "line": "    private static final String SQL_SELECT_DOC_BY_ID = \"SELECT * FROM DOCUMENT WHERE docID = ?\";\n",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public DocumentDAO(Connection conn) {\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "        super(conn);\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public boolean create(Document obj) throws SQLException {\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "        boolean result = false;\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if (obj.getDocID() == null) {\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "            throw new IllegalArgumentException(\"The document ID is null, an ID should be provided.\");\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "        PreparedStatement statement;\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "        statement = connect.prepareStatement(SQL_INSERT);\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "        statement.setString(1, obj.getDocID());\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "        statement.setString(2, obj.getVersion());\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "        statement.setString(3, obj.getUri());\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "        int code = statement.executeUpdate();\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "        result = true;\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return result;\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public boolean delete(Document obj) {\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return false;\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public boolean update(Document obj) {\n",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return false;\n",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public Document find(String doc_id) {\n",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Document document = null;\n",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try {\n",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "            ResultSet result = this.connect.createStatement(\n",
                        "lineNumber": 63,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                    ResultSet.TYPE_SCROLL_INSENSITIVE,\n",
                        "lineNumber": 64,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                    ResultSet.CONCUR_READ_ONLY).executeQuery(\"SELECT * FROM DOCUMENT WHERE docID = '\" + doc_id + \"'\");\n",
                        "lineNumber": 65,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            if (result.first()) {\n",
                        "lineNumber": 66,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 64,
                        "lineChange": "added"
                      },
                      {
                        "line": "            PreparedStatement preparedStatement = this.connect.prepareStatement(SQL_SELECT_DOC_BY_ID);\n",
                        "lineNumber": 65,
                        "lineChange": "added"
                      },
                      {
                        "line": "            //preparedStatement.setFetchSize(Integer.MIN_VALUE);\n",
                        "lineNumber": 66,
                        "lineChange": "added"
                      },
                      {
                        "line": "            preparedStatement.setString(1, doc_id);\n",
                        "lineNumber": 67,
                        "lineChange": "added"
                      },
                      {
                        "line": "            ResultSet rs = preparedStatement.executeQuery();\n",
                        "lineNumber": 68,
                        "lineChange": "added"
                      },
                      {
                        "line": "            if (rs.first()) {\n",
                        "lineNumber": 69,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/kontalk/androidclient/commit/2c9977b588e3f6db2571244751f2d1770051bbfb?diff=split#diff-f54f8e21b34d52ece64739f7f07a013d7b357a7ed4642c6b4ba8e992c0fb69c2L-1",
                    "lines": [
                      {
                        "line": "import android.database.DatabaseUtils;\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "import android.database.SQLException;\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "import android.database.sqlite.SQLiteDatabase;\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "import android.database.sqlite.SQLiteOpenHelper;\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "import android.database.sqlite.SQLiteQueryBuilder;\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "import android.net.Uri;\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "import android.util.Log;\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "public class UsersProvider extends ContentProvider {\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "    private static final String TAG = MessagesProvider.class.getSimpleName();\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public static final String AUTHORITY = \"org.nuntius.users\";\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "    private static final int DATABASE_VERSION = 1;\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "    private static final String DATABASE_NAME = \"users.db\";\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "    private static final String TABLE_USERS = \"users\";\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "    private static final int USERS = 1;\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "    private static final int USERS_HASH = 2;\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "    private static final int USERS_NUMBER = 3;\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "    private DatabaseHelper dbHelper;\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "    private static final UriMatcher sUriMatcher;\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "    private static HashMap<String, String> usersProjectionMap;\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "    private static class DatabaseHelper extends SQLiteOpenHelper {\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "        private static final String SCHEMA_USERS =\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "            \"CREATE TABLE \" + TABLE_USERS + \" (\" +\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "            \"hash TEXT PRIMARY KEY, \" +\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "            \"number TEXT NOT NULL UNIQUE\" +\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "            \");\";\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "        DatabaseHelper(Context context) {\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "            super(context, DATABASE_NAME, null, DATABASE_VERSION);\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "        @Override\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "        public void onCreate(SQLiteDatabase db) {\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "            db.execSQL(SCHEMA_USERS);\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "        @Override\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "            // no upgrade for now (this is version 1 :)\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "    @Override\n",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public boolean onCreate() {\n",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "        dbHelper = new DatabaseHelper(getContext());\n",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return true;\n",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "    @Override\n",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public Cursor query(Uri uri, String[] projection, String selection,\n",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "            String[] selectionArgs, String sortOrder) {\n",
                        "lineNumber": 65,
                        "lineChange": "none"
                      },
                      {
                        "line": "        SQLiteQueryBuilder qb = new SQLiteQueryBuilder();\n",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "        switch (sUriMatcher.match(uri)) {\n",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "            case USERS:\n",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "                qb.setTables(TABLE_USERS);\n",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "                qb.setProjectionMap(usersProjectionMap);\n",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "                break;\n",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "            case USERS_HASH:\n",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "                qb.setTables(TABLE_USERS);\n",
                        "lineNumber": 75,
                        "lineChange": "none"
                      },
                      {
                        "line": "                qb.setProjectionMap(usersProjectionMap);\n",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "                qb.appendWhere(Users.HASH + \"='\" + uri.getPathSegments().get(1) + \"'\");\n",
                        "lineNumber": 76,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                qb.appendWhere(Users.HASH + \"='\" + DatabaseUtils.sqlEscapeString(uri.getPathSegments().get(1)) + \"'\");\n",
                        "lineNumber": 77,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/kontalk/androidclient/commit/2c9977b588e3f6db2571244751f2d1770051bbfb?diff=split#diff-f54f8e21b34d52ece64739f7f07a013d7b357a7ed4642c6b4ba8e992c0fb69c2L-1",
                    "lines": [
                      {
                        "line": "qb.appendWhere(Users.NUMBER + \"='\" + uri.getPathSegments().get(1) + \"'\");\n",
                        "lineNumber": 82,
                        "lineChange": "removed"
                      },
                      {
                        "line": "qb.appendWhere(Users.NUMBER + \"='\" + DatabaseUtils.sqlEscapeString(uri.getPathSegments().get(1)) + \"'\");\n",
                        "lineNumber": 83,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 9,
                "cwe": [
                  "CWE-89"
                ]
              }
            },
            {
              "id": "javascript/Ssrf/test",
              "name": "Ssrf/test",
              "shortDescription": {
                "text": "Server-Side Request Forgery (SSRF)"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\nIn a server-side request forgery attack, a malicious user supplies a URL (an external URL or a network IP address such as 127.0.0.1) to the application's back end. The server then accesses the URL and shares its results, which may include sensitive information such as AWS metadata, internal configuration information, or database contents with the attacker. Because the request comes from the back end, it bypasses access controls, potentially exposing information the user does not have sufficient privileges to receive. The attacker can then exploit this information to gain access, modify the web application, or demand a ransom payment.\n\n## Best practices for prevention\n* Blacklists are problematic and attackers have numerous ways to bypass them; ideally, use a whitelist of all permitted domains and IP addresses.\n* Use authentication even within your own network to prevent exploitation of server-side requests.\n* Implement zero trust and sanitize and validate all URL and header data returning to the server from the user. Strip invalid or suspect characters, then inspect to be certain it contains a valid and expected value.\n* Ideally, avoid sending server requests based on user-provided data altogether.\n* Ensure that you are not sending raw response bodies from the server directly to the client. Only deliver expected responses.\n* Disable suspect and exploitable URL schemas. Common culprits include obscure and little-used schemas such as `file://`, `dict://`, `ftp://`, and `gopher://`.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "Ssrf",
                  "Security",
                  "InTest",
                  "SourceRequestUrl",
                  "Taint"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/brislink/specter/commit/2b9c8046b4b1670e76011dad9c23dc67884f310a?diff=split#diff-b82186eeba82312da558b62cb554e48a69ad2768b38736aed0640d42fa7230a1L-1",
                    "lines": [
                      {
                        "line": "\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "\trequest(headers,function(error,response,body){\t\t\n",
                        "lineNumber": 13,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t\t\t\n",
                        "lineNumber": 14,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t\n",
                        "lineNumber": 15,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        var resultCount = paginationSize - 1;\n",
                        "lineNumber": 16,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        var results = body.hits;\n",
                        "lineNumber": 17,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\tif(results.hits.length===0) return res.send(404);\n",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tvar total = body.hits.hits.length;\n",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tvar common = {\n",
                        "lineNumber": 21,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t\t\n",
                        "lineNumber": 22,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t\tdata : results.hits.slice(0,resultCount),\n",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t\tpageNo : pageNo,\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t\ttotal: total,\n",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t\tpreferences : preferences,\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t\tindex: preferences.tagIndex\n",
                        "lineNumber": 27,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t};\n",
                        "lineNumber": 28,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t\n",
                        "lineNumber": 29,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        var dataToRender = helpers.buildResponse(common);\n",
                        "lineNumber": 30,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tdataToRender.tag = tag;\n",
                        "lineNumber": 31,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\treturn res.render(constants.views.tagResults,dataToRender);\n",
                        "lineNumber": 32,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    });\n",
                        "lineNumber": 33,
                        "lineChange": "removed"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/IoTKETI/Mobius/commit/df05de87c5d8c6f5f8625558c02e57b3260cf361?diff=split#diff-9c349b5d37e276e7b4ed18ad832fbe3772d2135fbca2d6dde6861d8cebb7a842L-1",
                    "lines": [
                      {
                        "line": "    else if(usesecure === 'enable') {\n",
                        "lineNumber": 230,
                        "lineChange": "none"
                      },
                      {
                        "line": "        options = {\n",
                        "lineNumber": 229,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            hostname: usecoapcbhost,\n",
                        "lineNumber": 230,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            port: usecsebaseport,\n",
                        "lineNumber": 231,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            path: request.url,\n",
                        "lineNumber": 232,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            method: request.method,\n",
                        "lineNumber": 233,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            headers: headers,\n",
                        "lineNumber": 234,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            ca: fs.readFileSync('ca-crt.pem')\n",
                        "lineNumber": 235,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        };\n",
                        "lineNumber": 236,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        options.ca = fs.readFileSync('ca-crt.pem');\n",
                        "lineNumber": 231,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 237,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 2,
                "cwe": [
                  "CWE-918"
                ]
              }
            },
            {
              "id": "java/Ssrf/test",
              "name": "Ssrf/test",
              "shortDescription": {
                "text": "Server-Side Request Forgery (SSRF)"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\nIn a server-side request forgery attack, a malicious user supplies a URL (an external URL or a network IP address such as 127.0.0.1) to the application's back end. The server then accesses the URL and shares its results, which may include sensitive information such as AWS metadata, internal configuration information, or database contents with the attacker. Because the request comes from the back end, it bypasses access controls, potentially exposing information the user does not have sufficient privileges to receive. The attacker can then exploit this information to gain access, modify the web application, or demand a ransom payment.\n\n## Best practices for prevention\n* Blacklists are problematic and attackers have numerous ways to bypass them; ideally, use a whitelist of all permitted domains and IP addresses.\n* Use authentication even within your own network to prevent exploitation of server-side requests.\n* Implement zero trust and sanitize and validate all URL and header data returning to the server from the user. Strip invalid or suspect characters, then inspect to be certain it contains a valid and expected value.\n* Ideally, avoid sending server requests based on user-provided data altogether.\n* Ensure that you are not sending raw response bodies from the server directly to the client. Only deliver expected responses.\n* Disable suspect and exploitable URL schemas. Common culprits include obscure and little-used schemas such as `file://`, `dict://`, `ftp://`, and `gopher://`.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "Ssrf",
                  "Security",
                  "InTest",
                  "SourceHttpParam",
                  "Taint"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-918"
                ]
              }
            },
            {
              "id": "java/SpringCSRF/test",
              "name": "SpringCSRF/test",
              "shortDescription": {
                "text": "Spring Cross-Site Request Forgery (CSRF)"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nWhen a web server is designed to receive a request from a client without any mechanism for verifying that it was intentionally sent, then it might be possible for an attacker to trick a client into making an unintentional request to the web server which will be treated as an authentic request. This can be done via a URL, image load, XMLHttpRequest, etc. and can result in exposure of data or unintended code execution.\n\n## Best practices for prevention\n* Use a vetted library or framework which has anti-CSRF packages that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Consider including Spring Security library within your application.\n\n\n## References\n* [Spring Security Docs](https://docs.spring.io/spring-security/site/docs/5.0.x/reference/html/csrf.html)\n* [A Guide to CSRF Protection in Spring Security](https://www.baeldung.com/spring-security-csrf)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "SpringCSRF",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-352"
                ]
              }
            },
            {
              "id": "javascript/HttpToHttps/test",
              "name": "HttpToHttps/test",
              "shortDescription": {
                "text": "Cleartext Transmission of Sensitive Information"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\nThis weakness occurs when software transmits sensitive information, such as passwords or credit card numbers, in unencrypted form. This information may then be intercepted by threat actors using sniffer tools or interception techniques such as man-in-the-middle (MITM) attacks (often involving social engineering). Attackers can then use information gleaned to perform a variety of actions, depending on the information type. Possible actions include gaining unauthorized access, impersonating a user, moving laterally within the organization's network, or retrieving and potentially modifying files. This weakness is almost completely avoidable through intelligent architecture and design.\n\n## Best practices for prevention\n* Build web applications around a security mindset and the awareness that sniffers may be present at any time.\n* Ensure that all sensitive data transmission uses reliable encryption.\n* Implement security measures so that sensitive results are never returned in plain text.\n* Implement multiple-factor authentication methods to validate remote instances.\n* Use SSL not only at logon but throughout communications.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "HttpToHttps",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/medic/couch2pg/commit/062eaa0f53d2cd2327232a695c60bf4c9fd589f6?diff=split#diff-e727e4bdf3657fd1d798edcd6b099d6e092f8573cba266154583a746bba0f346L-1",
                    "lines": [
                      {
                        "line": "var httplib = require('http');\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var httplib = require('https');\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/dondi/GRNsight/commit/01e7d39d55ea9c18348a48aac5954183d825e834?diff=split#diff-65890f102baa526da3cc5d65e0528ea728fa9fa63659a7f2e1d523686240359cL-1",
                    "lines": [
                      {
                        "line": "var https = require(\"http\");\n",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var https = require(\"https\");\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/watilde/npmbrew/commit/968a0cd04e732ede4552e60e86762ce77f7f0a5c?diff=split#diff-94469ba7812da76fe341041375403897426443f146321489331bb46bb45faf5bL-1",
                    "lines": [
                      {
                        "line": "var http = require(\"http\")\n",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var http = require(\"https\")\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 4,
                "cwe": [
                  "CWE-319"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "java/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code.",
            "markdown": "Do not hardcode credentials in code.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "oap-server/server-cluster-plugin/cluster-nacos-plugin/src/test/java/org/apache/skywalking/oap/server/cluster/plugin/nacos/ClusterModuleNacosProviderFunctionalIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 62,
                  "endLine": 62,
                  "startColumn": 37,
                  "endColumn": 44
                }
              }
            }
          ],
          "fingerprints": {
            "0": "be672c9a00bda58894b625dcfafe00537465dfa0c765ed2363340c9ea4a49f28",
            "1": "416089e6.dd05ec30.3c7d90aa.de031890.8b2d3351.ce109560.12d3d73e.ca5e7fd8.5387ee68.e8c02a15.1338484f.de031890.bb61bed7.ce109560.c66d287d.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "oap-server/server-cluster-plugin/cluster-nacos-plugin/src/test/java/org/apache/skywalking/oap/server/cluster/plugin/nacos/ClusterModuleNacosProviderFunctionalIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 37,
                            "endColumn": 44
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 175,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code.",
            "markdown": "Do not hardcode credentials in code.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "oap-server/server-library/library-client/src/test/java/org/apache/skywalking/library/elasticsearch/bulk/ElasticSearchIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 144,
                  "endLine": 144,
                  "startColumn": 64,
                  "endColumn": 72
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b4d31085a330643b379741171eadfef27f085c89a83046cf8c96f8d5804b96ed",
            "1": "ac4e7c8b.97acdc08.c02cf26b.8474e2a5.c00dd336.989bc0fb.240f8bf2.1e717551.158ea29e.1cbd3ff4.c02cf26b.30877db4.20a0872a.989bc0fb.8f56baa6.1e717551"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "oap-server/server-library/library-client/src/test/java/org/apache/skywalking/library/elasticsearch/bulk/ElasticSearchIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 64,
                            "endColumn": 72
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 225,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code.",
            "markdown": "Do not hardcode credentials in code.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "oap-server/server-library/library-client/src/test/java/org/apache/skywalking/library/elasticsearch/bulk/ElasticSearchIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 156,
                  "endLine": 156,
                  "startColumn": 70,
                  "endColumn": 78
                }
              }
            }
          ],
          "fingerprints": {
            "0": "417c693c22ce0ab0370d60655924a045ac1e568f53cb5fd735b33c3a2de15b7a",
            "1": "ac4e7c8b.5b3c8516.c02cf26b.731e8c78.c00dd336.989bc0fb.a8643438.1e717551.ca9876a9.1cbd3ff4.33fa5dbe.731e8c78.4a9c8cbc.7fda7c5e.a8643438.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "oap-server/server-library/library-client/src/test/java/org/apache/skywalking/library/elasticsearch/bulk/ElasticSearchIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 156,
                            "endLine": 156,
                            "startColumn": 70,
                            "endColumn": 78
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 225,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/TooPermissiveCors/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "CORS policy \"*\" might be too permissive. This allows malicious code on other domains to communicate with the application, which is a security risk",
            "markdown": "{0} {1} might be too permissive. This allows malicious code on other domains to communicate with the application, which is a security risk",
            "arguments": [
              "[CORS policy](0)",
              "[\"*\"](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e-v2/cases/browser/docker/provider.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 35,
                  "endLine": 35,
                  "startColumn": 13,
                  "endColumn": 29
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ccb05b2bcbcc753daf90146f70bbfc8feee29a36c199d33cb8c4fb6ac06ef38d",
            "1": "031ade08.577bab1d.de357c34.139c59a8.b0e4b9f9.57d888ee.5b297f23.ebed174f.031ade08.577bab1d.de357c34.139c59a8.b0e4b9f9.ba14daf2.081ac3f4.545e9171"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e-v2/cases/browser/docker/provider.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 35,
                            "endLine": 35,
                            "startColumn": 30,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e-v2/cases/browser/docker/provider.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 35,
                            "endLine": 35,
                            "startColumn": 61,
                            "endColumn": 64
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 159,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/Sqli",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a database flows into executeQuery, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "arguments": [
              "[a database](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[executeQuery](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/common/dao/JDBCSQLExecutor.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 79,
                  "endLine": 79,
                  "startColumn": 32,
                  "endColumn": 53
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ef0570d466455bf9e004dc9e0aac895d92ea1cebfacd915dc54cfdeb61d1272c",
            "1": "e6fcc0e0.6f391d93.bda3096e.03f3d3f3.f2a5bca1.dbcb6904.f4666f67.54d46e25.e1d7cd7c.6f391d93.2159a181.e22980a8.408180c7.0d476878.bae646e8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/common/dao/JDBCSQLExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 262,
                            "endLine": 262,
                            "startColumn": 28,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/common/dao/JDBCSQLExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 262,
                            "endLine": 262,
                            "startColumn": 28,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/common/dao/JDBCSQLExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 262,
                            "endLine": 262,
                            "startColumn": 17,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/common/dao/JDBCSQLExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 265,
                            "endLine": 265,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/common/dao/JDBCSQLExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 19,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/common/dao/JDBCSQLExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/common/dao/JDBCSQLExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 18,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/common/dao/JDBCSQLExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 17,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/common/dao/JDBCSQLExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 17,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/common/dao/JDBCSQLExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 32,
                            "endColumn": 53
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 509,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/Ssrf/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Unsanitized input from the request URL flows into axios.default.post, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2)",
              "[axios.default.post](3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e-v2/cases/nodejs/consumer.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 31,
                  "endLine": 31,
                  "startColumn": 4,
                  "endColumn": 8
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0da3d0aa257104c4460c441ee95b83e5d289e33cbf9b29ba933c5bddacb1b4ea",
            "1": "cf7733e4.4773f344.aa4dda5f.1f269b07.b6be8b13.34a4d81a.0aa030df.b20a940a.cf7733e4.4773f344.aa4dda5f.c559ebce.b6be8b13.34a4d81a.83265159.5605294d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e-v2/cases/nodejs/consumer.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 64,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e-v2/cases/nodejs/consumer.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 64,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e-v2/cases/nodejs/consumer.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 9,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e-v2/cases/nodejs/consumer.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 4,
                            "endColumn": 8
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 409,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/Ssrf/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into postForEntity, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[postForEntity](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e-v2/java-test-service/e2e-service-consumer/src/main/java/org/apache/skywalking/e2e/controller/UserController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 68,
                  "endLine": 68,
                  "startColumn": 38,
                  "endColumn": 64
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6e9fc5c47485c7d9b6b048df433e19504029341c375c61decd0af74ac3f41145",
            "1": "88f131a7.1de183c7.0edc111a.2c4a035a.0bf67f0b.63f35502.1728803a.54d46e25.d876d4f1.76771dc5.d2ca99bd.de031890.f0e1baa5.ce109560.2cd4068c.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e-v2/java-test-service/e2e-service-consumer/src/main/java/org/apache/skywalking/e2e/controller/UserController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 32,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e-v2/java-test-service/e2e-service-consumer/src/main/java/org/apache/skywalking/e2e/controller/UserController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 32,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e-v2/java-test-service/e2e-service-consumer/src/main/java/org/apache/skywalking/e2e/controller/UserController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 38,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e-v2/java-test-service/e2e-service-consumer/src/main/java/org/apache/skywalking/e2e/controller/UserController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 27,
                            "endColumn": 102
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e-v2/java-test-service/e2e-service-consumer/src/main/java/org/apache/skywalking/e2e/controller/UserController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 68,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e-v2/java-test-service/e2e-service-consumer/src/main/java/org/apache/skywalking/e2e/controller/UserController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 27,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e-v2/java-test-service/e2e-service-consumer/src/main/java/org/apache/skywalking/e2e/controller/UserController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 65,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e-v2/java-test-service/e2e-service-consumer/src/main/java/org/apache/skywalking/e2e/controller/UserController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 65,
                            "endColumn": 83
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e-v2/java-test-service/e2e-service-consumer/src/main/java/org/apache/skywalking/e2e/controller/UserController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 38,
                            "endColumn": 64
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 209,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF/test",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "The createUser parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[createUser](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e-v2/java-test-service/e2e-service-provider/src/main/java/test/apache/skywalking/e2e/profile/ProfileController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 35,
                  "endLine": 35,
                  "startColumn": 30,
                  "endColumn": 70
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b80fcc41d7a6353cc913a0042cdbbe67f02021f1be7838ec1dd766a72a534bfa",
            "1": "cb724ed2.7f413d6f.8c6b61e1.3519ac88.f0e1baa5.58c3080a.5b1ccecb.a74646b3.cb724ed2.7f413d6f.8c6b61e1.3519ac88.f0e1baa5.58c3080a.1a0c7c19.a74646b3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e-v2/java-test-service/e2e-service-provider/src/main/java/test/apache/skywalking/e2e/profile/ProfileController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 35,
                            "endLine": 35,
                            "startColumn": 30,
                            "endColumn": 70
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 184,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF/test",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "The user parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[user](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e-v2/java-test-service/e2e-service-provider/src/main/java/org/apache/skywalking/e2e/controller/UserController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 62,
                  "endLine": 62,
                  "startColumn": 30,
                  "endColumn": 58
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5c401aed2e212d9d78d65d055f4058a69512b423b4b8a81f16dc87531e7e5109",
            "1": "cb724ed2.7f413d6f.a134f350.93b226d2.f0e1baa5.58c3080a.5b1ccecb.a2c5909a.cb724ed2.7f413d6f.a134f350.93b226d2.f0e1baa5.58c3080a.1a0c7c19.a2c5909a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e-v2/java-test-service/e2e-service-provider/src/main/java/org/apache/skywalking/e2e/controller/UserController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 30,
                            "endColumn": 58
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 184,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF/test",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "The user parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[user](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e-v2/java-test-service/e2e-service-consumer/src/main/java/org/apache/skywalking/e2e/controller/UserController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 64,
                  "startColumn": 32,
                  "endColumn": 60
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9739839c0310f526fa0cd287973eae53b54e284c3fcfbfa823879690645f2ca8",
            "1": "e6fcc0e0.7f413d6f.a224ef38.93b226d2.f0e1baa5.58c3080a.5b1ccecb.a2c5909a.e6fcc0e0.7f413d6f.a224ef38.93b226d2.f0e1baa5.58c3080a.1a0c7c19.a2c5909a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e-v2/java-test-service/e2e-service-consumer/src/main/java/org/apache/skywalking/e2e/controller/UserController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 32,
                            "endColumn": 60
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 234,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF/test",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "The data parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[data](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e-v2/java-test-service/e2e-service-provider/src/main/java/org/apache/skywalking/e2e/controller/AlarmController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 43,
                  "endLine": 43,
                  "startColumn": 39,
                  "endColumn": 75
                }
              }
            }
          ],
          "fingerprints": {
            "0": "531d29611326c65b474da522025d64a770a9b1d7f3966c85a0e2f06c87f9abdd",
            "1": "e1d7cd7c.7f413d6f.a224ef38.c81e2a8c.f0e1baa5.58c3080a.2014273a.6bb2cf48.e1d7cd7c.7f413d6f.a224ef38.c81e2a8c.f0e1baa5.58c3080a.2014273a.6bb2cf48"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e-v2/java-test-service/e2e-service-provider/src/main/java/org/apache/skywalking/e2e/controller/AlarmController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 39,
                            "endColumn": 75
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 184,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HttpToHttps/test",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "http.createServer uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.",
            "markdown": "{0} uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.",
            "arguments": [
              "[http.createServer](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e-v2/cases/nodejs/consumer.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 29,
                  "endLine": 29,
                  "startColumn": 16,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "73137dfc0e6ec9a08f46db80119c0d9b38e9168777404e06c0e07e2984a4dd35",
            "1": "ae77ea27.883ce888.8b18f948.c559ebce.2fce9a75.5fce695c.cd61fc56.89d75565.9ff0579e.706318d0.72aa1700.c559ebce.ac82cb7b.5fce695c.cd61fc56.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e-v2/cases/nodejs/consumer.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 16,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 409,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "isSupported": true,
            "lang": "Java",
            "files": 1841,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "XML",
            "files": 126,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Go",
            "files": 4,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "TypeScript",
            "files": 2,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "PHP",
            "files": 1,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "JavaScript",
            "files": 1,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Python",
            "files": 5,
            "type": "SUPPORTED"
          },
          {
            "isSupported": false,
            "lang": ".config",
            "files": 1,
            "type": "FAILED_PARSING"
          },
          {
            "isSupported": false,
            "lang": "Go",
            "files": 1,
            "type": "FAILED_PARSING"
          }
        ]
      }
    }
  ]
}
