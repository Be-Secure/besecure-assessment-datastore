{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "python/SSLVerificationBypass",
              "name": "SSLVerificationBypass",
              "shortDescription": {
                "text": "Improper Certificate Validation"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "\n## Details\n\nCommunication through encrypted TLS/SSL protocols can only take place when the server bears a valid certificate associating that server with a valid public-key identity issued by a third-party authority. If certificate validation is cursory or incomplete, this creates a weakness whereby an attacker can spoof one or more certificate details (e.g., expiration date), gaining unauthorized access to confidential data and privileged actions.\n\n## Best practices for prevention\n* Verify all aspects of any certificate provided, particularly chain of trust (issuing authority), host identity, and expiration.\n* Limit the validity period for certificates.\n* Avoid using self-signed certificates, certificate pinning, and wildcard certificates, as these all add levels of convenience but can also lead to loss of control over site/app security.\n* Disable older and insecure protocols (for example, SSL 2.0/3.0, MD5, and 3DES).\n* Ensure that all team members are familiar with current best practices and approaches, such as current TLS protocols.\n* Implement automated and manual testing using current tools and techniques designed to reveal this and related SSL weaknesses (for example, web application scanners).",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "SSLVerificationBypass",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/saltstack/salt/commit/a43daeebd2010e0ea2285b764f688e06983cb30a?diff=split#diff-e33953a605fc0f20737a2e8afa89e062fc39a87e7b5de43d6ba51744ba6592ebL-1",
                    "lines": [
                      {
                        "line": "requests.post(_req_url, auth=auth, verify=False, data=data)\n",
                        "lineNumber": 162,
                        "lineChange": "removed"
                      },
                      {
                        "line": "requests.post(_req_url, auth=auth, verify=True, data=data)\n",
                        "lineNumber": 162,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/NCI-GDC/gdc-client/commit/e032eab7a4be2fe7389b910b34ed0582e996135f?diff=split#diff-98965be157c846c44bd23d5de704f8d7a2b54884f480418b9f8a48e455c85f48L-1",
                    "lines": [
                      {
                        "line": "r_active = requests.post(active_meta_url, json=metadata_query, verify=False)\n",
                        "lineNumber": 75,
                        "lineChange": "removed"
                      },
                      {
                        "line": "r_legacy = requests.post(legacy_meta_url, json=metadata_query, verify=False)\n",
                        "lineNumber": 76,
                        "lineChange": "removed"
                      },
                      {
                        "line": "r_active = requests.post(active_meta_url, json=metadata_query, verify=True)\n",
                        "lineNumber": 75,
                        "lineChange": "added"
                      },
                      {
                        "line": "r_legacy = requests.post(legacy_meta_url, json=metadata_query, verify=True)\n",
                        "lineNumber": 76,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/dannyvai/reddit_crawlers/commit/83db219d1c107e22c2cecb9cf836e94b71430500?diff=split#diff-fd9fb75d9f2b2eb8e0e1d23554f907bd76215571d34021767216a0b10b1df96eL-1",
                    "lines": [
                      {
                        "line": "r = requests.get(url,verify=False,stream=True)\n",
                        "lineNumber": 77,
                        "lineChange": "removed"
                      },
                      {
                        "line": "r = requests.get(url,verify=True,stream=True)\n",
                        "lineNumber": 77,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 40,
                "cwe": [
                  "CWE-295"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "python/SSLVerificationBypass",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "Certificate verification is disabled by setting verify to False in post. This may lead to Man-in-the-middle attacks.",
            "markdown": "Certificate verification is disabled by setting {0} to {1} in {2}. This may lead to Man-in-the-middle attacks.",
            "arguments": [
              "[verify](0)",
              "[False](1)",
              "[post](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/src/python-client/swarmlearning/swci.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 169,
                  "endLine": 169,
                  "startColumn": 17,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2d82f51a442951ba9a82a1729e6566e854e9795e39f5b9cca62d54cae14e009c",
            "1": "747e3084.a5b6e475.3b7b86da.3456c081.25ac000c.c7570064.cbfa2b68.773acf30.747e3084.a5b6e475.3b7b86da.3456c081.25ac000c.ba14daf2.cbfa2b68.773acf30"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/src/python-client/swarmlearning/swci.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 169,
                            "endLine": 169,
                            "startColumn": 39,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/src/python-client/swarmlearning/swci.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 169,
                            "endLine": 169,
                            "startColumn": 46,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/src/python-client/swarmlearning/swci.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 169,
                            "endLine": 169,
                            "startColumn": 17,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 900,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/SSLVerificationBypass",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "Certificate verification is disabled by setting verify to False in post. This may lead to Man-in-the-middle attacks.",
            "markdown": "Certificate verification is disabled by setting {0} to {1} in {2}. This may lead to Man-in-the-middle attacks.",
            "arguments": [
              "[verify](0)",
              "[False](1)",
              "[post](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/src/python-client/swarmlearning/swci.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 529,
                  "endLine": 529,
                  "startColumn": 17,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "06141b3f1ad8ce4f909104d510a4607c41582b2cae08070869a12fa41a726965",
            "1": "747e3084.a5b6e475.3b7b86da.edcf1db9.56acd337.c7570064.cbfa2b68.773acf30.747e3084.277c621c.3b7b86da.edcf1db9.5ef953d3.ba14daf2.cbfa2b68.773acf30"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/src/python-client/swarmlearning/swci.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 529,
                            "endLine": 529,
                            "startColumn": 65,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/src/python-client/swarmlearning/swci.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 529,
                            "endLine": 529,
                            "startColumn": 72,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/src/python-client/swarmlearning/swci.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 529,
                            "endLine": 529,
                            "startColumn": 17,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 900,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "isSupported": true,
            "lang": "Python",
            "files": 22,
            "type": "SUPPORTED"
          },
          {
            "isSupported": false,
            "lang": "Python",
            "files": 1,
            "type": "FAILED_PARSING"
          }
        ]
      }
    }
  ]
}
