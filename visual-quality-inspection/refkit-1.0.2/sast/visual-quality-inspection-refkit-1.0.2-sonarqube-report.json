{
    "total": 4,
    "p": 1,
    "ps": 100,
    "paging": {
        "pageIndex": 1,
        "pageSize": 100,
        "total": 4
    },
    "effortTotal": 22,
    "issues": [
        {
            "key": "AYmwqefvIPhR0ZTTRfwD",
            "rule": "python:S1066",
            "severity": "MAJOR",
            "component": "visual-quality-inspection:src/intel_neural_compressor/utils/helper.py",
            "project": "visual-quality-inspection",
            "line": 103,
            "hash": "558a2892ca0d45c2fb478a16ec5ba770",
            "textRange": {
                "startLine": 103,
                "endLine": 103,
                "startOffset": 12,
                "endOffset": 14
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "visual-quality-inspection:src/intel_neural_compressor/utils/helper.py",
                            "textRange": {
                                "startLine": 102,
                                "endLine": 102,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "enclosing",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Merge this if statement with the enclosing one.",
            "effort": "5min",
            "debt": "5min",
            "author": "richard.jiang@accenture.com",
            "tags": [
                "clumsy"
            ],
            "creationDate": "2022-07-09T00:48:34+0530",
            "updateDate": "2023-08-01T16:04:02+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmwqeqZIPhR0ZTTRfwG",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "visual-quality-inspection:src/intel_openvino/openvino_inference.py",
            "project": "visual-quality-inspection",
            "line": 54,
            "hash": "36999f0b7d2b4dd75cc52066ae8a601f",
            "textRange": {
                "startLine": 54,
                "endLine": 54,
                "startOffset": 4,
                "endOffset": 8
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "visual-quality-inspection:src/intel_openvino/openvino_inference.py",
                            "textRange": {
                                "startLine": 66,
                                "endLine": 66,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "visual-quality-inspection:src/intel_openvino/openvino_inference.py",
                            "textRange": {
                                "startLine": 66,
                                "endLine": 66,
                                "startOffset": 22,
                                "endOffset": 25
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "visual-quality-inspection:src/intel_openvino/openvino_inference.py",
                            "textRange": {
                                "startLine": 70,
                                "endLine": 70,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "visual-quality-inspection:src/intel_openvino/openvino_inference.py",
                            "textRange": {
                                "startLine": 70,
                                "endLine": 70,
                                "startOffset": 19,
                                "endOffset": 22
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "visual-quality-inspection:src/intel_openvino/openvino_inference.py",
                            "textRange": {
                                "startLine": 79,
                                "endLine": 79,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "visual-quality-inspection:src/intel_openvino/openvino_inference.py",
                            "textRange": {
                                "startLine": 116,
                                "endLine": 116,
                                "startOffset": 4,
                                "endOffset": 7
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "visual-quality-inspection:src/intel_openvino/openvino_inference.py",
                            "textRange": {
                                "startLine": 119,
                                "endLine": 119,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "visual-quality-inspection:src/intel_openvino/openvino_inference.py",
                            "textRange": {
                                "startLine": 131,
                                "endLine": 131,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "visual-quality-inspection:src/intel_openvino/openvino_inference.py",
                            "textRange": {
                                "startLine": 143,
                                "endLine": 143,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "visual-quality-inspection:src/intel_openvino/openvino_inference.py",
                            "textRange": {
                                "startLine": 146,
                                "endLine": 146,
                                "startOffset": 4,
                                "endOffset": 8
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "visual-quality-inspection:src/intel_openvino/openvino_inference.py",
                            "textRange": {
                                "startLine": 152,
                                "endLine": 152,
                                "startOffset": 4,
                                "endOffset": 7
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "visual-quality-inspection:src/intel_openvino/openvino_inference.py",
                            "textRange": {
                                "startLine": 159,
                                "endLine": 159,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "visual-quality-inspection:src/intel_openvino/openvino_inference.py",
                            "textRange": {
                                "startLine": 160,
                                "endLine": 160,
                                "startOffset": 40,
                                "endOffset": 42
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 17 to the 15 allowed.",
            "effort": "7min",
            "debt": "7min",
            "author": "richard.jiang@accenture.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2022-07-09T00:48:34+0530",
            "updateDate": "2023-08-01T16:04:02+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmwqepqIPhR0ZTTRfwE",
            "rule": "python:S1066",
            "severity": "MAJOR",
            "component": "visual-quality-inspection:src/utils/helper.py",
            "project": "visual-quality-inspection",
            "line": 103,
            "hash": "558a2892ca0d45c2fb478a16ec5ba770",
            "textRange": {
                "startLine": 103,
                "endLine": 103,
                "startOffset": 12,
                "endOffset": 14
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "visual-quality-inspection:src/utils/helper.py",
                            "textRange": {
                                "startLine": 102,
                                "endLine": 102,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "enclosing",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Merge this if statement with the enclosing one.",
            "effort": "5min",
            "debt": "5min",
            "author": "richard.jiang@accenture.com",
            "tags": [
                "clumsy"
            ],
            "creationDate": "2022-07-09T00:48:34+0530",
            "updateDate": "2023-08-01T16:04:02+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmwqepqIPhR0ZTTRfwF",
            "rule": "python:S125",
            "severity": "MAJOR",
            "component": "visual-quality-inspection:src/utils/helper.py",
            "project": "visual-quality-inspection",
            "line": 118,
            "hash": "936b46d1a8c940411ca60b737611d1d0",
            "textRange": {
                "startLine": 118,
                "endLine": 118,
                "startOffset": 4,
                "endOffset": 46
            },
            "flows": [],
            "status": "OPEN",
            "message": "Remove this commented out code.",
            "effort": "5min",
            "debt": "5min",
            "author": "richard.jiang@accenture.com",
            "tags": [
                "unused"
            ],
            "creationDate": "2022-07-09T00:48:34+0530",
            "updateDate": "2023-08-01T16:04:02+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        }
    ],
    "components": [
        {
            "key": "visual-quality-inspection:src/intel_openvino/openvino_inference.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "openvino_inference.py",
            "longName": "src/intel_openvino/openvino_inference.py",
            "path": "src/intel_openvino/openvino_inference.py"
        },
        {
            "key": "visual-quality-inspection:src/intel_neural_compressor/utils/helper.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "helper.py",
            "longName": "src/intel_neural_compressor/utils/helper.py",
            "path": "src/intel_neural_compressor/utils/helper.py"
        },
        {
            "key": "visual-quality-inspection:src/utils/helper.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "helper.py",
            "longName": "src/utils/helper.py",
            "path": "src/utils/helper.py"
        },
        {
            "key": "visual-quality-inspection",
            "enabled": true,
            "qualifier": "TRK",
            "name": "visual-quality-inspection",
            "longName": "visual-quality-inspection"
        }
    ],
    "facets": []
}