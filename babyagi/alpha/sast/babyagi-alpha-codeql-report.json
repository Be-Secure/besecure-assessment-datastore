[
  {
    "number": 58,
    "created_at": "2025-07-11T12:11:59Z",
    "updated_at": "2025-07-11T12:11:59Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/58",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/58",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "rust/cleartext-logging",
      "severity": "warning",
      "description": "Cleartext logging of sensitive information",
      "name": "rust/cleartext-logging",
      "tags": ["external/cwe/cwe-312","external/cwe/cwe-359","external/cwe/cwe-532","security"],
      "full_description": "Logging sensitive information in plaintext can expose it to an attacker.",
      "help": "# Cleartext logging of sensitive information\nSensitive user data and system information that is logged could be exposed to an attacker when it is displayed. Also, external processes often store the standard output and standard error streams of an application, which will include logged sensitive information.\n\n\n## Recommendation\nDo not log sensitive data. If it is necessary to log sensitive data, encrypt it before logging.\n\n\n## Example\nThe following example code logs user credentials (in this case, their password) in plaintext:\n\n\n```rust\nlet password = \"P@ssw0rd\";\ninfo!(\"User password changed to {password}\");\n\n```\nInstead, you should encrypt the credentials, or better still, omit them entirely:\n\n\n```rust\nlet password = \"P@ssw0rd\";\ninfo!(\"User password changed\");\n\n```\n\n## References\n* M. Dowd, J. McDonald and J. Schuhm, *The Art of Software Security Assessment*, 1st Edition, Chapter 2 - 'Common Vulnerabilities of Encryption', p. 43. Addison Wesley, 2006.\n* M. Howard and D. LeBlanc, *Writing Secure Code*, 2nd Edition, Chapter 9 - 'Protecting Secret Data', p. 299. Microsoft, 2002.\n* OWASP: [Logging Cheat Sheet - Data to exclude](https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html#data-to-exclude).\n* Common Weakness Enumeration: [CWE-312](https://cwe.mitre.org/data/definitions/312.html).\n* Common Weakness Enumeration: [CWE-359](https://cwe.mitre.org/data/definitions/359.html).\n* Common Weakness Enumeration: [CWE-532](https://cwe.mitre.org/data/definitions/532.html).\n",
      "security_severity_level": "high"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"rust\"}",
      "category": "/language:rust",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "This operation writes uuid to a log file."
      },
      "location": {
        "path": "rust/load/src/bin/chroma-load-start.rs",
        "start_line": 97,
        "end_line": 97,
        "start_column": 1,
        "end_column": 15
      },
      "classifications": []
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/58/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 57,
    "created_at": "2025-07-11T12:11:59Z",
    "updated_at": "2025-07-11T12:11:59Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/57",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/57",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "rust/cleartext-logging",
      "severity": "warning",
      "description": "Cleartext logging of sensitive information",
      "name": "rust/cleartext-logging",
      "tags": ["external/cwe/cwe-312","external/cwe/cwe-359","external/cwe/cwe-532","security"],
      "full_description": "Logging sensitive information in plaintext can expose it to an attacker.",
      "help": "# Cleartext logging of sensitive information\nSensitive user data and system information that is logged could be exposed to an attacker when it is displayed. Also, external processes often store the standard output and standard error streams of an application, which will include logged sensitive information.\n\n\n## Recommendation\nDo not log sensitive data. If it is necessary to log sensitive data, encrypt it before logging.\n\n\n## Example\nThe following example code logs user credentials (in this case, their password) in plaintext:\n\n\n```rust\nlet password = \"P@ssw0rd\";\ninfo!(\"User password changed to {password}\");\n\n```\nInstead, you should encrypt the credentials, or better still, omit them entirely:\n\n\n```rust\nlet password = \"P@ssw0rd\";\ninfo!(\"User password changed\");\n\n```\n\n## References\n* M. Dowd, J. McDonald and J. Schuhm, *The Art of Software Security Assessment*, 1st Edition, Chapter 2 - 'Common Vulnerabilities of Encryption', p. 43. Addison Wesley, 2006.\n* M. Howard and D. LeBlanc, *Writing Secure Code*, 2nd Edition, Chapter 9 - 'Protecting Secret Data', p. 299. Microsoft, 2002.\n* OWASP: [Logging Cheat Sheet - Data to exclude](https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html#data-to-exclude).\n* Common Weakness Enumeration: [CWE-312](https://cwe.mitre.org/data/definitions/312.html).\n* Common Weakness Enumeration: [CWE-359](https://cwe.mitre.org/data/definitions/359.html).\n* Common Weakness Enumeration: [CWE-532](https://cwe.mitre.org/data/definitions/532.html).\n",
      "security_severity_level": "high"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"rust\"}",
      "category": "/language:rust",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "This operation writes running.uuid to a log file."
      },
      "location": {
        "path": "rust/load/src/bin/chroma-load-status.rs",
        "start_line": 11,
        "end_line": 11,
        "start_column": 1,
        "end_column": 15
      },
      "classifications": []
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/57/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 56,
    "created_at": "2025-07-11T11:59:29Z",
    "updated_at": "2025-07-11T11:59:29Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/56",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/56",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "js/shell-command-injection-from-environment",
      "severity": "warning",
      "description": "Shell command built from environment values",
      "name": "js/shell-command-injection-from-environment",
      "tags": ["correctness","external/cwe/cwe-078","external/cwe/cwe-088","security"],
      "full_description": "Building a shell command string with values from the enclosing environment may cause subtle bugs or vulnerabilities.",
      "help": "# Shell command built from environment values\nDynamically constructing a shell command with values from the local environment, such as file paths, may inadvertently change the meaning of the shell command. Such changes can occur when an environment value contains characters that the shell interprets in a special way, for instance quotes and spaces. This can result in the shell command misbehaving, or even allowing a malicious user to execute arbitrary commands on the system.\n\n\n## Recommendation\nIf possible, use hard-coded string literals to specify the shell command to run, and provide the dynamic arguments to the shell command separately to avoid interpretation by the shell.\n\nAlternatively, if the shell command must be constructed dynamically, then add code to ensure that special characters in environment values do not alter the shell command unexpectedly.\n\n\n## Example\nThe following example shows a dynamically constructed shell command that recursively removes a temporary directory that is located next to the currently executing JavaScript file. Such utilities are often found in custom build scripts.\n\n\n```javascript\nvar cp = require(\"child_process\"),\n  path = require(\"path\");\nfunction cleanupTemp() {\n  let cmd = \"rm -rf \" + path.join(__dirname, \"temp\");\n  cp.execSync(cmd); // BAD\n}\n\n```\nThe shell command will, however, fail to work as intended if the absolute path of the script's directory contains spaces. In that case, the shell command will interpret the absolute path as multiple paths, instead of a single path.\n\nFor instance, if the absolute path of the temporary directory is `/home/username/important project/temp`, then the shell command will recursively delete `/home/username/important` and `project/temp`, where the latter path gets resolved relative to the working directory of the JavaScript process.\n\nEven worse, although less likely, a malicious user could provide the path `/home/username/; cat /etc/passwd #/important project/temp` in order to execute the command `cat /etc/passwd`.\n\nTo avoid such potentially catastrophic behaviors, provide the directory as an argument that does not get interpreted by a shell:\n\n\n```javascript\nvar cp = require(\"child_process\"),\n  path = require(\"path\");\nfunction cleanupTemp() {\n  let cmd = \"rm\",\n    args = [\"-rf\", path.join(__dirname, \"temp\")];\n  cp.execFileSync(cmd, args); // GOOD\n}\n\n```\n\n## References\n* OWASP: [Command Injection](https://www.owasp.org/index.php/Command_Injection).\n* Common Weakness Enumeration: [CWE-78](https://cwe.mitre.org/data/definitions/78.html).\n* Common Weakness Enumeration: [CWE-88](https://cwe.mitre.org/data/definitions/88.html).\n",
      "security_severity_level": "medium"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"javascript-typescript\"}",
      "category": "/language:javascript-typescript",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "This shell command depends on an uncontrolled absolute path.\nThis shell command depends on an uncontrolled absolute path.\nThis shell command depends on an uncontrolled absolute path."
      },
      "location": {
        "path": "clients/new-js/packages/chromadb/scripts/start-chroma-common.ts",
        "start_line": 20,
        "end_line": 20,
        "start_column": 14,
        "end_column": 26
      },
      "classifications": []
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/56/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 55,
    "created_at": "2025-07-11T11:59:29Z",
    "updated_at": "2025-07-11T11:59:29Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/55",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/55",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "js/shell-command-injection-from-environment",
      "severity": "warning",
      "description": "Shell command built from environment values",
      "name": "js/shell-command-injection-from-environment",
      "tags": ["correctness","external/cwe/cwe-078","external/cwe/cwe-088","security"],
      "full_description": "Building a shell command string with values from the enclosing environment may cause subtle bugs or vulnerabilities.",
      "help": "# Shell command built from environment values\nDynamically constructing a shell command with values from the local environment, such as file paths, may inadvertently change the meaning of the shell command. Such changes can occur when an environment value contains characters that the shell interprets in a special way, for instance quotes and spaces. This can result in the shell command misbehaving, or even allowing a malicious user to execute arbitrary commands on the system.\n\n\n## Recommendation\nIf possible, use hard-coded string literals to specify the shell command to run, and provide the dynamic arguments to the shell command separately to avoid interpretation by the shell.\n\nAlternatively, if the shell command must be constructed dynamically, then add code to ensure that special characters in environment values do not alter the shell command unexpectedly.\n\n\n## Example\nThe following example shows a dynamically constructed shell command that recursively removes a temporary directory that is located next to the currently executing JavaScript file. Such utilities are often found in custom build scripts.\n\n\n```javascript\nvar cp = require(\"child_process\"),\n  path = require(\"path\");\nfunction cleanupTemp() {\n  let cmd = \"rm -rf \" + path.join(__dirname, \"temp\");\n  cp.execSync(cmd); // BAD\n}\n\n```\nThe shell command will, however, fail to work as intended if the absolute path of the script's directory contains spaces. In that case, the shell command will interpret the absolute path as multiple paths, instead of a single path.\n\nFor instance, if the absolute path of the temporary directory is `/home/username/important project/temp`, then the shell command will recursively delete `/home/username/important` and `project/temp`, where the latter path gets resolved relative to the working directory of the JavaScript process.\n\nEven worse, although less likely, a malicious user could provide the path `/home/username/; cat /etc/passwd #/important project/temp` in order to execute the command `cat /etc/passwd`.\n\nTo avoid such potentially catastrophic behaviors, provide the directory as an argument that does not get interpreted by a shell:\n\n\n```javascript\nvar cp = require(\"child_process\"),\n  path = require(\"path\");\nfunction cleanupTemp() {\n  let cmd = \"rm\",\n    args = [\"-rf\", path.join(__dirname, \"temp\")];\n  cp.execFileSync(cmd, args); // GOOD\n}\n\n```\n\n## References\n* OWASP: [Command Injection](https://www.owasp.org/index.php/Command_Injection).\n* Common Weakness Enumeration: [CWE-78](https://cwe.mitre.org/data/definitions/78.html).\n* Common Weakness Enumeration: [CWE-88](https://cwe.mitre.org/data/definitions/88.html).\n",
      "security_severity_level": "medium"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"javascript-typescript\"}",
      "category": "/language:javascript-typescript",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "This shell command depends on an uncontrolled absolute path."
      },
      "location": {
        "path": "clients/js/packages/chromadb-core/test/startChromaContainer.ts",
        "start_line": 30,
        "end_line": 30,
        "start_column": 10,
        "end_column": 22
      },
      "classifications": ["test"]
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/55/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 54,
    "created_at": "2025-07-11T11:59:10Z",
    "updated_at": "2025-07-11T11:59:10Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/54",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/54",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "py/stack-trace-exposure",
      "severity": "error",
      "description": "Information exposure through an exception",
      "name": "py/stack-trace-exposure",
      "tags": ["external/cwe/cwe-209","external/cwe/cwe-497","security"],
      "full_description": "Leaking information about an exception, such as messages and stack traces, to an external user can expose implementation details that are useful to an attacker for developing a subsequent exploit.",
      "help": "# Information exposure through an exception\nSoftware developers often add stack traces to error messages, as a debugging aid. Whenever that error message occurs for an end user, the developer can use the stack trace to help identify how to fix the problem. In particular, stack traces can tell the developer more about the sequence of events that led to a failure, as opposed to merely the final state of the software when the error occurred.\n\nUnfortunately, the same information can be useful to an attacker. The sequence of class names in a stack trace can reveal the structure of the application as well as any internal components it relies on. Furthermore, the error message at the top of a stack trace can include information such as server-side file names and SQL code that the application relies on, allowing an attacker to fine-tune a subsequent injection attack.\n\n\n## Recommendation\nSend the user a more generic error message that reveals less information. Either suppress the stack trace entirely, or log it only on the server.\n\n\n## Example\nIn the following example, an exception is handled in two different ways. In the first version, labeled BAD, the exception is sent back to the remote user by returning it from the function. As such, the user is able to see a detailed stack trace, which may contain sensitive information. In the second version, the error message is logged only on the server, and a generic error message is displayed to the user. That way, the developers can still access and use the error log, but remote users will not see the information.\n\n\n```python\nfrom flask import Flask\napp = Flask(__name__)\n\n\nimport traceback\n\ndef do_computation():\n    raise Exception(\"Secret info\")\n\n# BAD\n@app.route('/bad')\ndef server_bad():\n    try:\n        do_computation()\n    except Exception as e:\n        return traceback.format_exc()\n\n# GOOD\n@app.route('/good')\ndef server_good():\n    try:\n        do_computation()\n    except Exception as e:\n        log(traceback.format_exc())\n        return \"An internal error has occurred!\"\n\n```\n\n## References\n* OWASP: [Improper Error Handling](https://owasp.org/www-community/Improper_Error_Handling).\n* Common Weakness Enumeration: [CWE-209](https://cwe.mitre.org/data/definitions/209.html).\n* Common Weakness Enumeration: [CWE-497](https://cwe.mitre.org/data/definitions/497.html).\n",
      "security_severity_level": "medium"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"python\"}",
      "category": "/language:python",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "Stack trace information flows to this location and may be exposed to an external user."
      },
      "location": {
        "path": "chromadb/server/fastapi/__init__.py",
        "start_line": 135,
        "end_line": 135,
        "start_column": 21,
        "end_column": 73
      },
      "classifications": []
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/54/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 53,
    "created_at": "2025-07-11T11:59:10Z",
    "updated_at": "2025-07-11T11:59:10Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/53",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/53",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "py/stack-trace-exposure",
      "severity": "error",
      "description": "Information exposure through an exception",
      "name": "py/stack-trace-exposure",
      "tags": ["external/cwe/cwe-209","external/cwe/cwe-497","security"],
      "full_description": "Leaking information about an exception, such as messages and stack traces, to an external user can expose implementation details that are useful to an attacker for developing a subsequent exploit.",
      "help": "# Information exposure through an exception\nSoftware developers often add stack traces to error messages, as a debugging aid. Whenever that error message occurs for an end user, the developer can use the stack trace to help identify how to fix the problem. In particular, stack traces can tell the developer more about the sequence of events that led to a failure, as opposed to merely the final state of the software when the error occurred.\n\nUnfortunately, the same information can be useful to an attacker. The sequence of class names in a stack trace can reveal the structure of the application as well as any internal components it relies on. Furthermore, the error message at the top of a stack trace can include information such as server-side file names and SQL code that the application relies on, allowing an attacker to fine-tune a subsequent injection attack.\n\n\n## Recommendation\nSend the user a more generic error message that reveals less information. Either suppress the stack trace entirely, or log it only on the server.\n\n\n## Example\nIn the following example, an exception is handled in two different ways. In the first version, labeled BAD, the exception is sent back to the remote user by returning it from the function. As such, the user is able to see a detailed stack trace, which may contain sensitive information. In the second version, the error message is logged only on the server, and a generic error message is displayed to the user. That way, the developers can still access and use the error log, but remote users will not see the information.\n\n\n```python\nfrom flask import Flask\napp = Flask(__name__)\n\n\nimport traceback\n\ndef do_computation():\n    raise Exception(\"Secret info\")\n\n# BAD\n@app.route('/bad')\ndef server_bad():\n    try:\n        do_computation()\n    except Exception as e:\n        return traceback.format_exc()\n\n# GOOD\n@app.route('/good')\ndef server_good():\n    try:\n        do_computation()\n    except Exception as e:\n        log(traceback.format_exc())\n        return \"An internal error has occurred!\"\n\n```\n\n## References\n* OWASP: [Improper Error Handling](https://owasp.org/www-community/Improper_Error_Handling).\n* Common Weakness Enumeration: [CWE-209](https://cwe.mitre.org/data/definitions/209.html).\n* Common Weakness Enumeration: [CWE-497](https://cwe.mitre.org/data/definitions/497.html).\n",
      "security_severity_level": "medium"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"python\"}",
      "category": "/language:python",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "Stack trace information flows to this location and may be exposed to an external user."
      },
      "location": {
        "path": "chromadb/server/fastapi/__init__.py",
        "start_line": 130,
        "end_line": 130,
        "start_column": 21,
        "end_column": 73
      },
      "classifications": []
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/53/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 52,
    "created_at": "2025-07-11T11:59:10Z",
    "updated_at": "2025-07-11T11:59:10Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/52",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/52",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "py/bind-socket-all-network-interfaces",
      "severity": "error",
      "description": "Binding a socket to all network interfaces",
      "name": "py/bind-socket-all-network-interfaces",
      "tags": ["external/cwe/cwe-200","security"],
      "full_description": "Binding a socket to all interfaces opens it up to traffic from any IPv4 address and is therefore associated with security risks.",
      "help": "# Binding a socket to all network interfaces\nSockets can be used to communicate with other machines on a network. You can use the (IP address, port) pair to define the access restrictions for the socket you create. When using the built-in Python `socket` module (for instance, when building a message sender service or an FTP server data transmitter), one has to bind the port to some interface. When you bind the port to all interfaces using `0.0.0.0` as the IP address, you essentially allow it to accept connections from any IPv4 address provided that it can get to the socket via routing. Binding to all interfaces is therefore associated with security risks.\n\n\n## Recommendation\nBind your service incoming traffic only to a dedicated interface. If you need to bind more than one interface using the built-in `socket` module, create multiple sockets (instead of binding to one socket to all interfaces).\n\n\n## Example\nIn this example, two sockets are insecure because they are bound to all interfaces; one through the `0.0.0.0` notation and another one through an empty string `''`.\n\n\n```python\nimport socket\n\n# binds to all interfaces, insecure\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\ns.bind(('0.0.0.0', 31137))\n\n# binds to all interfaces, insecure\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\ns.bind(('', 4040))\n\n# binds only to a dedicated interface, secure\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\ns.bind(('84.68.10.12', 8080))\n\n```\n\n## References\n* Python reference: [ Socket families](https://docs.python.org/3/library/socket.html#socket-families).\n* Python reference: [ Socket Programming HOWTO](https://docs.python.org/3.7/howto/sockets.html).\n* Common Vulnerabilities and Exposures: [ CVE-2018-1281 Detail](https://nvd.nist.gov/vuln/detail/CVE-2018-1281).\n* Common Weakness Enumeration: [CWE-200](https://cwe.mitre.org/data/definitions/200.html).\n",
      "security_severity_level": "medium"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"python\"}",
      "category": "/language:python",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "'' binds a socket to all interfaces."
      },
      "location": {
        "path": "chromadb/test/conftest.py",
        "start_line": 175,
        "end_line": 175,
        "start_column": 9,
        "end_column": 24
      },
      "classifications": ["test"]
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/52/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 51,
    "created_at": "2025-07-11T11:58:51Z",
    "updated_at": "2025-07-11T11:58:51Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/51",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/51",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "actions/missing-workflow-permissions",
      "severity": "warning",
      "description": "Workflow does not contain permissions",
      "name": "actions/missing-workflow-permissions",
      "tags": ["actions","external/cwe/cwe-275","maintainability","security"],
      "full_description": "Workflows should contain explicit permissions to restrict the scope of the default GITHUB_TOKEN.",
      "help": "# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n",
      "security_severity_level": "medium"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"actions\"}",
      "category": "/language:actions",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}"
      },
      "location": {
        "path": ".github/workflows/release-chromadb.yml",
        "start_line": 231,
        "end_line": 250,
        "start_column": 5,
        "end_column": 68
      },
      "classifications": []
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/51/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 50,
    "created_at": "2025-07-11T11:58:51Z",
    "updated_at": "2025-07-11T11:58:51Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/50",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/50",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "actions/missing-workflow-permissions",
      "severity": "warning",
      "description": "Workflow does not contain permissions",
      "name": "actions/missing-workflow-permissions",
      "tags": ["actions","external/cwe/cwe-275","maintainability","security"],
      "full_description": "Workflows should contain explicit permissions to restrict the scope of the default GITHUB_TOKEN.",
      "help": "# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n",
      "security_severity_level": "medium"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"actions\"}",
      "category": "/language:actions",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{}}"
      },
      "location": {
        "path": ".github/workflows/trigger-deploy.yaml",
        "start_line": 22,
        "end_line": 27,
        "start_column": 5,
        "end_column": 22
      },
      "classifications": []
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/50/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 49,
    "created_at": "2025-07-11T11:58:51Z",
    "updated_at": "2025-07-11T11:58:51Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/49",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/49",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "actions/missing-workflow-permissions",
      "severity": "warning",
      "description": "Workflow does not contain permissions",
      "name": "actions/missing-workflow-permissions",
      "tags": ["actions","external/cwe/cwe-275","maintainability","security"],
      "full_description": "Workflows should contain explicit permissions to restrict the scope of the default GITHUB_TOKEN.",
      "help": "# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n",
      "security_severity_level": "medium"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"actions\"}",
      "category": "/language:actions",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{}}"
      },
      "location": {
        "path": ".github/workflows/release-chromadb.yml",
        "start_line": 221,
        "end_line": 230,
        "start_column": 5,
        "end_column": 3
      },
      "classifications": []
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/49/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 48,
    "created_at": "2025-07-11T11:58:51Z",
    "updated_at": "2025-07-11T11:58:51Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/48",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/48",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "actions/missing-workflow-permissions",
      "severity": "warning",
      "description": "Workflow does not contain permissions",
      "name": "actions/missing-workflow-permissions",
      "tags": ["actions","external/cwe/cwe-275","maintainability","security"],
      "full_description": "Workflows should contain explicit permissions to restrict the scope of the default GITHUB_TOKEN.",
      "help": "# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n",
      "security_severity_level": "medium"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"actions\"}",
      "category": "/language:actions",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{}}"
      },
      "location": {
        "path": ".github/workflows/trigger-deploy.yaml",
        "start_line": 14,
        "end_line": 21,
        "start_column": 5,
        "end_column": 3
      },
      "classifications": []
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/48/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 47,
    "created_at": "2025-07-11T11:58:51Z",
    "updated_at": "2025-07-11T11:58:51Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/47",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/47",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "actions/missing-workflow-permissions",
      "severity": "warning",
      "description": "Workflow does not contain permissions",
      "name": "actions/missing-workflow-permissions",
      "tags": ["actions","external/cwe/cwe-275","maintainability","security"],
      "full_description": "Workflows should contain explicit permissions to restrict the scope of the default GITHUB_TOKEN.",
      "help": "# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n",
      "security_severity_level": "medium"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"actions\"}",
      "category": "/language:actions",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{}}"
      },
      "location": {
        "path": ".github/workflows/release-chromadb.yml",
        "start_line": 211,
        "end_line": 220,
        "start_column": 5,
        "end_column": 3
      },
      "classifications": []
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/47/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 46,
    "created_at": "2025-07-11T11:58:51Z",
    "updated_at": "2025-07-11T11:58:51Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/46",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/46",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "actions/missing-workflow-permissions",
      "severity": "warning",
      "description": "Workflow does not contain permissions",
      "name": "actions/missing-workflow-permissions",
      "tags": ["actions","external/cwe/cwe-275","maintainability","security"],
      "full_description": "Workflows should contain explicit permissions to restrict the scope of the default GITHUB_TOKEN.",
      "help": "# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n",
      "security_severity_level": "medium"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"actions\"}",
      "category": "/language:actions",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}"
      },
      "location": {
        "path": ".github/workflows/release-chromadb.yml",
        "start_line": 149,
        "end_line": 210,
        "start_column": 5,
        "end_column": 3
      },
      "classifications": []
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/46/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 45,
    "created_at": "2025-07-11T11:58:51Z",
    "updated_at": "2025-07-11T11:58:51Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/45",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/45",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "actions/missing-workflow-permissions",
      "severity": "warning",
      "description": "Workflow does not contain permissions",
      "name": "actions/missing-workflow-permissions",
      "tags": ["actions","external/cwe/cwe-275","maintainability","security"],
      "full_description": "Workflows should contain explicit permissions to restrict the scope of the default GITHUB_TOKEN.",
      "help": "# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n",
      "security_severity_level": "medium"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"actions\"}",
      "category": "/language:actions",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}"
      },
      "location": {
        "path": ".github/workflows/release-helm-chart.yml",
        "start_line": 13,
        "end_line": 41,
        "start_column": 5,
        "end_column": 3
      },
      "classifications": []
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/45/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 44,
    "created_at": "2025-07-11T11:58:51Z",
    "updated_at": "2025-07-11T11:58:51Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/44",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/44",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "actions/missing-workflow-permissions",
      "severity": "warning",
      "description": "Workflow does not contain permissions",
      "name": "actions/missing-workflow-permissions",
      "tags": ["actions","external/cwe/cwe-275","maintainability","security"],
      "full_description": "Workflows should contain explicit permissions to restrict the scope of the default GITHUB_TOKEN.",
      "help": "# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n",
      "security_severity_level": "medium"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"actions\"}",
      "category": "/language:actions",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{}}"
      },
      "location": {
        "path": ".github/workflows/pr.yml",
        "start_line": 239,
        "end_line": 255,
        "start_column": 5,
        "end_column": 151
      },
      "classifications": []
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/44/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 43,
    "created_at": "2025-07-11T11:58:51Z",
    "updated_at": "2025-07-11T11:58:51Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/43",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/43",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "actions/missing-workflow-permissions",
      "severity": "warning",
      "description": "Workflow does not contain permissions",
      "name": "actions/missing-workflow-permissions",
      "tags": ["actions","external/cwe/cwe-275","maintainability","security"],
      "full_description": "Workflows should contain explicit permissions to restrict the scope of the default GITHUB_TOKEN.",
      "help": "# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n",
      "security_severity_level": "medium"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"actions\"}",
      "category": "/language:actions",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}"
      },
      "location": {
        "path": ".github/workflows/pr.yml",
        "start_line": 198,
        "end_line": 238,
        "start_column": 5,
        "end_column": 3
      },
      "classifications": []
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/43/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 42,
    "created_at": "2025-07-11T11:58:51Z",
    "updated_at": "2025-07-11T11:58:51Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/42",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/42",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "actions/missing-workflow-permissions",
      "severity": "warning",
      "description": "Workflow does not contain permissions",
      "name": "actions/missing-workflow-permissions",
      "tags": ["actions","external/cwe/cwe-275","maintainability","security"],
      "full_description": "Workflows should contain explicit permissions to restrict the scope of the default GITHUB_TOKEN.",
      "help": "# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n",
      "security_severity_level": "medium"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"actions\"}",
      "category": "/language:actions",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{}}"
      },
      "location": {
        "path": ".github/workflows/pr.yml",
        "start_line": 191,
        "end_line": 197,
        "start_column": 5,
        "end_column": 3
      },
      "classifications": []
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/42/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 41,
    "created_at": "2025-07-11T11:58:51Z",
    "updated_at": "2025-07-11T11:58:51Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/41",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/41",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "actions/missing-workflow-permissions",
      "severity": "warning",
      "description": "Workflow does not contain permissions",
      "name": "actions/missing-workflow-permissions",
      "tags": ["actions","external/cwe/cwe-275","maintainability","security"],
      "full_description": "Workflows should contain explicit permissions to restrict the scope of the default GITHUB_TOKEN.",
      "help": "# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n",
      "security_severity_level": "medium"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"actions\"}",
      "category": "/language:actions",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{}}"
      },
      "location": {
        "path": ".github/workflows/pr.yml",
        "start_line": 184,
        "end_line": 190,
        "start_column": 5,
        "end_column": 3
      },
      "classifications": []
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/41/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 40,
    "created_at": "2025-07-11T11:58:51Z",
    "updated_at": "2025-07-11T11:58:51Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/40",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/40",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "actions/missing-workflow-permissions",
      "severity": "warning",
      "description": "Workflow does not contain permissions",
      "name": "actions/missing-workflow-permissions",
      "tags": ["actions","external/cwe/cwe-275","maintainability","security"],
      "full_description": "Workflows should contain explicit permissions to restrict the scope of the default GITHUB_TOKEN.",
      "help": "# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n",
      "security_severity_level": "medium"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"actions\"}",
      "category": "/language:actions",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}"
      },
      "location": {
        "path": ".github/workflows/release-cli.yml",
        "start_line": 124,
        "end_line": 207,
        "start_column": 5,
        "end_column": 56
      },
      "classifications": []
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/40/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 39,
    "created_at": "2025-07-11T11:58:51Z",
    "updated_at": "2025-07-11T11:58:51Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/39",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/39",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "actions/missing-workflow-permissions",
      "severity": "warning",
      "description": "Workflow does not contain permissions",
      "name": "actions/missing-workflow-permissions",
      "tags": ["actions","external/cwe/cwe-275","maintainability","security"],
      "full_description": "Workflows should contain explicit permissions to restrict the scope of the default GITHUB_TOKEN.",
      "help": "# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n",
      "security_severity_level": "medium"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"actions\"}",
      "category": "/language:actions",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}"
      },
      "location": {
        "path": ".github/workflows/release-chromadb.yml",
        "start_line": 111,
        "end_line": 148,
        "start_column": 5,
        "end_column": 3
      },
      "classifications": []
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/39/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 38,
    "created_at": "2025-07-11T11:58:51Z",
    "updated_at": "2025-07-11T11:58:51Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/38",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/38",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "actions/missing-workflow-permissions",
      "severity": "warning",
      "description": "Workflow does not contain permissions",
      "name": "actions/missing-workflow-permissions",
      "tags": ["actions","external/cwe/cwe-275","maintainability","security"],
      "full_description": "Workflows should contain explicit permissions to restrict the scope of the default GITHUB_TOKEN.",
      "help": "# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n",
      "security_severity_level": "medium"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"actions\"}",
      "category": "/language:actions",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{}}"
      },
      "location": {
        "path": ".github/workflows/release-chromadb.yml",
        "start_line": 94,
        "end_line": 110,
        "start_column": 5,
        "end_column": 3
      },
      "classifications": []
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/38/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 37,
    "created_at": "2025-07-11T11:58:51Z",
    "updated_at": "2025-07-11T11:58:51Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/37",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/37",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "actions/missing-workflow-permissions",
      "severity": "warning",
      "description": "Workflow does not contain permissions",
      "name": "actions/missing-workflow-permissions",
      "tags": ["actions","external/cwe/cwe-275","maintainability","security"],
      "full_description": "Workflows should contain explicit permissions to restrict the scope of the default GITHUB_TOKEN.",
      "help": "# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n",
      "security_severity_level": "medium"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"actions\"}",
      "category": "/language:actions",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{}}"
      },
      "location": {
        "path": ".github/workflows/pr.yml",
        "start_line": 178,
        "end_line": 183,
        "start_column": 5,
        "end_column": 3
      },
      "classifications": []
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/37/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 36,
    "created_at": "2025-07-11T11:58:51Z",
    "updated_at": "2025-07-11T11:58:51Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/36",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/36",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "actions/missing-workflow-permissions",
      "severity": "warning",
      "description": "Workflow does not contain permissions",
      "name": "actions/missing-workflow-permissions",
      "tags": ["actions","external/cwe/cwe-275","maintainability","security"],
      "full_description": "Workflows should contain explicit permissions to restrict the scope of the default GITHUB_TOKEN.",
      "help": "# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n",
      "security_severity_level": "medium"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"actions\"}",
      "category": "/language:actions",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{}}"
      },
      "location": {
        "path": ".github/workflows/pr.yml",
        "start_line": 172,
        "end_line": 177,
        "start_column": 5,
        "end_column": 3
      },
      "classifications": []
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/36/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 35,
    "created_at": "2025-07-11T11:58:51Z",
    "updated_at": "2025-07-11T11:58:51Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/35",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/35",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "actions/missing-workflow-permissions",
      "severity": "warning",
      "description": "Workflow does not contain permissions",
      "name": "actions/missing-workflow-permissions",
      "tags": ["actions","external/cwe/cwe-275","maintainability","security"],
      "full_description": "Workflows should contain explicit permissions to restrict the scope of the default GITHUB_TOKEN.",
      "help": "# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n",
      "security_severity_level": "medium"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"actions\"}",
      "category": "/language:actions",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{}}"
      },
      "location": {
        "path": ".github/workflows/pr.yml",
        "start_line": 163,
        "end_line": 171,
        "start_column": 5,
        "end_column": 3
      },
      "classifications": []
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/35/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 34,
    "created_at": "2025-07-11T11:58:51Z",
    "updated_at": "2025-07-11T11:58:51Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/34",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/34",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "actions/missing-workflow-permissions",
      "severity": "warning",
      "description": "Workflow does not contain permissions",
      "name": "actions/missing-workflow-permissions",
      "tags": ["actions","external/cwe/cwe-275","maintainability","security"],
      "full_description": "Workflows should contain explicit permissions to restrict the scope of the default GITHUB_TOKEN.",
      "help": "# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n",
      "security_severity_level": "medium"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"actions\"}",
      "category": "/language:actions",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{}}"
      },
      "location": {
        "path": ".github/workflows/release-dev-javascript-client.yml",
        "start_line": 9,
        "end_line": 11,
        "start_column": 5,
        "end_column": 3
      },
      "classifications": []
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/34/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 33,
    "created_at": "2025-07-11T11:58:51Z",
    "updated_at": "2025-07-11T11:58:51Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/33",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/33",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "actions/missing-workflow-permissions",
      "severity": "warning",
      "description": "Workflow does not contain permissions",
      "name": "actions/missing-workflow-permissions",
      "tags": ["actions","external/cwe/cwe-275","maintainability","security"],
      "full_description": "Workflows should contain explicit permissions to restrict the scope of the default GITHUB_TOKEN.",
      "help": "# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n",
      "security_severity_level": "medium"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"actions\"}",
      "category": "/language:actions",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{}}"
      },
      "location": {
        "path": ".github/workflows/release-chromadb.yml",
        "start_line": 77,
        "end_line": 93,
        "start_column": 5,
        "end_column": 3
      },
      "classifications": []
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/33/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 32,
    "created_at": "2025-07-11T11:58:51Z",
    "updated_at": "2025-07-11T11:58:51Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/32",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/32",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "actions/missing-workflow-permissions",
      "severity": "warning",
      "description": "Workflow does not contain permissions",
      "name": "actions/missing-workflow-permissions",
      "tags": ["actions","external/cwe/cwe-275","maintainability","security"],
      "full_description": "Workflows should contain explicit permissions to restrict the scope of the default GITHUB_TOKEN.",
      "help": "# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n",
      "security_severity_level": "medium"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"actions\"}",
      "category": "/language:actions",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{}}"
      },
      "location": {
        "path": ".github/workflows/release-chromadb.yml",
        "start_line": 72,
        "end_line": 76,
        "start_column": 5,
        "end_column": 3
      },
      "classifications": []
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/32/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 31,
    "created_at": "2025-07-11T11:58:51Z",
    "updated_at": "2025-07-11T11:58:51Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/31",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/31",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "actions/missing-workflow-permissions",
      "severity": "warning",
      "description": "Workflow does not contain permissions",
      "name": "actions/missing-workflow-permissions",
      "tags": ["actions","external/cwe/cwe-275","maintainability","security"],
      "full_description": "Workflows should contain explicit permissions to restrict the scope of the default GITHUB_TOKEN.",
      "help": "# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n",
      "security_severity_level": "medium"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"actions\"}",
      "category": "/language:actions",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}"
      },
      "location": {
        "path": ".github/workflows/release-cli.yml",
        "start_line": 77,
        "end_line": 123,
        "start_column": 5,
        "end_column": 3
      },
      "classifications": []
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/31/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 30,
    "created_at": "2025-07-11T11:58:51Z",
    "updated_at": "2025-07-11T11:58:51Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/30",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/30",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "actions/missing-workflow-permissions",
      "severity": "warning",
      "description": "Workflow does not contain permissions",
      "name": "actions/missing-workflow-permissions",
      "tags": ["actions","external/cwe/cwe-275","maintainability","security"],
      "full_description": "Workflows should contain explicit permissions to restrict the scope of the default GITHUB_TOKEN.",
      "help": "# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n",
      "security_severity_level": "medium"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"actions\"}",
      "category": "/language:actions",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{}}"
      },
      "location": {
        "path": ".github/workflows/release-chromadb.yml",
        "start_line": 67,
        "end_line": 71,
        "start_column": 5,
        "end_column": 3
      },
      "classifications": []
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/30/instances",
    "dismissal_approved_by": null
  },
  {
    "number": 29,
    "created_at": "2025-07-11T11:58:51Z",
    "updated_at": "2025-07-11T11:58:51Z",
    "url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/29",
    "html_url": "https://github.com/Be-Secure/chroma/security/code-scanning/29",
    "state": "open",
    "fixed_at": null,
    "dismissed_by": null,
    "dismissed_at": null,
    "dismissed_reason": null,
    "dismissed_comment": null,
    "rule": {
      "id": "actions/missing-workflow-permissions",
      "severity": "warning",
      "description": "Workflow does not contain permissions",
      "name": "actions/missing-workflow-permissions",
      "tags": ["actions","external/cwe/cwe-275","maintainability","security"],
      "full_description": "Workflows should contain explicit permissions to restrict the scope of the default GITHUB_TOKEN.",
      "help": "# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n",
      "security_severity_level": "medium"
    },
    "tool": {
      "name": "CodeQL",
      "guid": null,
      "version": "2.22.1"
    },
    "most_recent_instance": {
      "ref": "refs/heads/release-cli-1.1.4",
      "analysis_key": ".github/workflows/codeql.yml:analyze",
      "environment": "{\"build-mode\":\"none\",\"language\":\"actions\"}",
      "category": "/language:actions",
      "state": "open",
      "commit_sha": "c29b5bc1da7e2df5019255a2c3aea5e9299eef17",
      "message": {
        "text": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{}}"
      },
      "location": {
        "path": ".github/workflows/release-chromadb.yml",
        "start_line": 63,
        "end_line": 66,
        "start_column": 5,
        "end_column": 3
      },
      "classifications": []
    },
    "instances_url": "https://api.github.com/repos/Be-Secure/chroma/code-scanning/alerts/29/instances",
    "dismissal_approved_by": null
  }
]