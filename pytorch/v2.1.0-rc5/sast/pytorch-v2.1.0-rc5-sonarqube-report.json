{
    "total": 21655,
    "p": 1,
    "ps": 100,
    "paging": {
        "pageIndex": 1,
        "pageSize": 100,
        "total": 21655
    },
    "effortTotal": 145788,
    "issues": [
        {
            "key": "AYq8y-VUwgiYR050dYa1",
            "rule": "python:S1135",
            "severity": "INFO",
            "component": "pytorch:torch/ao/quantization/pt2e/utils.py",
            "project": "pytorch",
            "line": 399,
            "hash": "b289963e4fe7958b26a22c67006855f7",
            "textRange": {
                "startLine": 399,
                "endLine": 399,
                "startOffset": 0,
                "endOffset": 49
            },
            "flows": [],
            "status": "OPEN",
            "message": "Complete the task associated to this \"TODO\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "andrewor@fb.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-09-12T03:44:49+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y-VUwgiYR050dYa3",
            "rule": "python:S1135",
            "severity": "INFO",
            "component": "pytorch:torch/ao/quantization/pt2e/utils.py",
            "project": "pytorch",
            "line": 411,
            "hash": "e47b03d356b7e757a58a2b7c300f9e84",
            "textRange": {
                "startLine": 411,
                "endLine": 411,
                "startOffset": 0,
                "endOffset": 84
            },
            "flows": [],
            "status": "OPEN",
            "message": "Complete the task associated to this \"TODO\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "andrewor@fb.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-09-12T03:44:49+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zDG4wgiYR050dZFk",
            "rule": "python:S1135",
            "severity": "INFO",
            "component": "pytorch:torch/_inductor/ir.py",
            "project": "pytorch",
            "line": 3679,
            "hash": "ff4be810e2eff656607237c6f3e04391",
            "textRange": {
                "startLine": 3679,
                "endLine": 3679,
                "startOffset": 12,
                "endOffset": 43
            },
            "flows": [],
            "status": "OPEN",
            "message": "Complete the task associated to this \"TODO\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "chunyuan.wu@intel.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-09-06T23:11:25+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zDLxwgiYR050dZGr",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "pytorch:torch/_inductor/utils.py",
            "project": "pytorch",
            "line": 953,
            "hash": "d2fa7d735676fe46aafc9ecf391c861a",
            "textRange": {
                "startLine": 953,
                "endLine": 953,
                "startOffset": 4,
                "endOffset": 16
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/utils.py",
                            "textRange": {
                                "startLine": 956,
                                "endLine": 956,
                                "startOffset": 4,
                                "endOffset": 7
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/utils.py",
                            "textRange": {
                                "startLine": 957,
                                "endLine": 957,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/utils.py",
                            "textRange": {
                                "startLine": 959,
                                "endLine": 959,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/utils.py",
                            "textRange": {
                                "startLine": 967,
                                "endLine": 967,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/utils.py",
                            "textRange": {
                                "startLine": 969,
                                "endLine": 969,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/utils.py",
                            "textRange": {
                                "startLine": 976,
                                "endLine": 976,
                                "startOffset": 32,
                                "endOffset": 34
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/utils.py",
                            "textRange": {
                                "startLine": 982,
                                "endLine": 982,
                                "startOffset": 4,
                                "endOffset": 7
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/utils.py",
                            "textRange": {
                                "startLine": 985,
                                "endLine": 985,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/utils.py",
                            "textRange": {
                                "startLine": 986,
                                "endLine": 986,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/utils.py",
                            "textRange": {
                                "startLine": 989,
                                "endLine": 989,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/utils.py",
                            "textRange": {
                                "startLine": 990,
                                "endLine": 990,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/utils.py",
                            "textRange": {
                                "startLine": 994,
                                "endLine": 994,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/utils.py",
                            "textRange": {
                                "startLine": 994,
                                "endLine": 994,
                                "startOffset": 23,
                                "endOffset": 26
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/utils.py",
                            "textRange": {
                                "startLine": 997,
                                "endLine": 997,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/utils.py",
                            "textRange": {
                                "startLine": 999,
                                "endLine": 999,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/utils.py",
                            "textRange": {
                                "startLine": 1002,
                                "endLine": 1002,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/utils.py",
                            "textRange": {
                                "startLine": 1004,
                                "endLine": 1004,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/utils.py",
                            "textRange": {
                                "startLine": 1004,
                                "endLine": 1004,
                                "startOffset": 53,
                                "endOffset": 55
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/utils.py",
                            "textRange": {
                                "startLine": 1004,
                                "endLine": 1004,
                                "startOffset": 26,
                                "endOffset": 29
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/utils.py",
                            "textRange": {
                                "startLine": 1007,
                                "endLine": 1007,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 33 to the 15 allowed.",
            "effort": "23min",
            "debt": "23min",
            "author": "chunyuan.wu@intel.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-09-06T23:11:25+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y-1NwgiYR050dYfS",
            "rule": "python:S1135",
            "severity": "INFO",
            "component": "pytorch:torch/distributed/_tensor/ops/tensor_ops.py",
            "project": "pytorch",
            "line": 111,
            "hash": "354e84088ad4b86d77fab4db21631862",
            "textRange": {
                "startLine": 111,
                "endLine": 111,
                "startOffset": 41,
                "endOffset": 75
            },
            "flows": [],
            "status": "OPEN",
            "message": "Complete the task associated to this \"TODO\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "wanchaol@users.noreply.github.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-09-06T18:58:20+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y-VUwgiYR050dYa2",
            "rule": "python:S1135",
            "severity": "INFO",
            "component": "pytorch:torch/ao/quantization/pt2e/utils.py",
            "project": "pytorch",
            "line": 400,
            "hash": "57022e5a9603deadbf5950ef6626434a",
            "textRange": {
                "startLine": 400,
                "endLine": 400,
                "startOffset": 0,
                "endOffset": 41
            },
            "flows": [],
            "status": "OPEN",
            "message": "Complete the task associated to this \"TODO\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "andrewor14@gmail.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-09-06T02:12:37+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zDJkwgiYR050dZGK",
            "rule": "python:S6353",
            "severity": "MINOR",
            "component": "pytorch:torch/_inductor/graph.py",
            "project": "pytorch",
            "line": 435,
            "hash": "ae479cc0b7abe867cc256e759f341067",
            "textRange": {
                "startLine": 435,
                "endLine": 435,
                "startOffset": 57,
                "endOffset": 69
            },
            "flows": [],
            "status": "OPEN",
            "message": "Use concise character class syntax \u0027\\w\u0027 instead of \u0027[a-zA-Z0-9_]\u0027.",
            "effort": "5min",
            "debt": "5min",
            "author": "jansel@meta.com",
            "tags": [
                "regex"
            ],
            "creationDate": "2023-09-06T01:54:48+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zNuLwgiYR050dcH6",
            "rule": "python:S1481",
            "severity": "MINOR",
            "component": "pytorch:test/test_serialization.py",
            "project": "pytorch",
            "line": 3900,
            "hash": "f9da83b41eb77d25808890df6e94be4e",
            "textRange": {
                "startLine": 3900,
                "endLine": 3900,
                "startOffset": 16,
                "endOffset": 32
            },
            "flows": [],
            "status": "OPEN",
            "message": "Remove the unused local variable \"tensor_be_no_bom\".",
            "effort": "5min",
            "debt": "5min",
            "author": "103434461+alekseinikiforovibm@users.noreply.github.com",
            "tags": [
                "unused"
            ],
            "creationDate": "2023-09-06T01:36:22+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zET0wgiYR050dZYE",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "pytorch:torch/serialization.py",
            "project": "pytorch",
            "line": 1317,
            "hash": "0c5fe0ebc7b0dfd138462ded5f7ff628",
            "textRange": {
                "startLine": 1317,
                "endLine": 1317,
                "startOffset": 4,
                "endOffset": 9
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/serialization.py",
                            "textRange": {
                                "startLine": 1325,
                                "endLine": 1325,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/serialization.py",
                            "textRange": {
                                "startLine": 1327,
                                "endLine": 1327,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/serialization.py",
                            "textRange": {
                                "startLine": 1329,
                                "endLine": 1329,
                                "startOffset": 4,
                                "endOffset": 8
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/serialization.py",
                            "textRange": {
                                "startLine": 1329,
                                "endLine": 1329,
                                "startOffset": 64,
                                "endOffset": 66
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/serialization.py",
                            "textRange": {
                                "startLine": 1332,
                                "endLine": 1332,
                                "startOffset": 4,
                                "endOffset": 8
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/serialization.py",
                            "textRange": {
                                "startLine": 1334,
                                "endLine": 1334,
                                "startOffset": 4,
                                "endOffset": 8
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/serialization.py",
                            "textRange": {
                                "startLine": 1336,
                                "endLine": 1336,
                                "startOffset": 4,
                                "endOffset": 8
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/serialization.py",
                            "textRange": {
                                "startLine": 1339,
                                "endLine": 1339,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/serialization.py",
                            "textRange": {
                                "startLine": 1340,
                                "endLine": 1340,
                                "startOffset": 50,
                                "endOffset": 53
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/serialization.py",
                            "textRange": {
                                "startLine": 1353,
                                "endLine": 1353,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/serialization.py",
                            "textRange": {
                                "startLine": 1356,
                                "endLine": 1356,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/serialization.py",
                            "textRange": {
                                "startLine": 1359,
                                "endLine": 1359,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/serialization.py",
                            "textRange": {
                                "startLine": 1360,
                                "endLine": 1360,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/serialization.py",
                            "textRange": {
                                "startLine": 1370,
                                "endLine": 1370,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/serialization.py",
                            "textRange": {
                                "startLine": 1383,
                                "endLine": 1383,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/serialization.py",
                            "textRange": {
                                "startLine": 1385,
                                "endLine": 1385,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/serialization.py",
                            "textRange": {
                                "startLine": 1388,
                                "endLine": 1388,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/serialization.py",
                            "textRange": {
                                "startLine": 1390,
                                "endLine": 1390,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/serialization.py",
                            "textRange": {
                                "startLine": 1409,
                                "endLine": 1409,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/serialization.py",
                            "textRange": {
                                "startLine": 1409,
                                "endLine": 1409,
                                "startOffset": 33,
                                "endOffset": 36
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/serialization.py",
                            "textRange": {
                                "startLine": 1412,
                                "endLine": 1412,
                                "startOffset": 16,
                                "endOffset": 22
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 30 to the 15 allowed.",
            "effort": "20min",
            "debt": "20min",
            "author": "103434461+alekseinikiforovibm@users.noreply.github.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-09-06T01:36:22+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zC_jwgiYR050dZC_",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "pytorch:torch/_inductor/codegen/triton_utils.py",
            "project": "pytorch",
            "line": 37,
            "hash": "8ad4564661be1a107f6eec11042c0d20",
            "textRange": {
                "startLine": 37,
                "endLine": 37,
                "startOffset": 4,
                "endOffset": 13
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/triton_utils.py",
                            "textRange": {
                                "startLine": 41,
                                "endLine": 41,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/triton_utils.py",
                            "textRange": {
                                "startLine": 43,
                                "endLine": 43,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/triton_utils.py",
                            "textRange": {
                                "startLine": 46,
                                "endLine": 46,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/triton_utils.py",
                            "textRange": {
                                "startLine": 48,
                                "endLine": 48,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/triton_utils.py",
                            "textRange": {
                                "startLine": 57,
                                "endLine": 57,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/triton_utils.py",
                            "textRange": {
                                "startLine": 59,
                                "endLine": 59,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/triton_utils.py",
                            "textRange": {
                                "startLine": 62,
                                "endLine": 62,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/triton_utils.py",
                            "textRange": {
                                "startLine": 64,
                                "endLine": 64,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/triton_utils.py",
                            "textRange": {
                                "startLine": 68,
                                "endLine": 68,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/triton_utils.py",
                            "textRange": {
                                "startLine": 70,
                                "endLine": 70,
                                "startOffset": 4,
                                "endOffset": 8
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 18 to the 15 allowed.",
            "effort": "8min",
            "debt": "8min",
            "author": "52589240+shunting314@users.noreply.github.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-09-06T00:10:23+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zC_jwgiYR050dZDB",
            "rule": "python:S1135",
            "severity": "INFO",
            "component": "pytorch:torch/_inductor/codegen/triton_utils.py",
            "project": "pytorch",
            "line": 60,
            "hash": "b5868084a21a5b1bc85cdc3837270816",
            "textRange": {
                "startLine": 60,
                "endLine": 60,
                "startOffset": 12,
                "endOffset": 105
            },
            "flows": [],
            "status": "OPEN",
            "message": "Complete the task associated to this \"TODO\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "52589240+shunting314@users.noreply.github.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-09-06T00:10:23+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y8x-wgiYR050dYNn",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "pytorch:torch/_dynamo/variables/builtin.py",
            "project": "pytorch",
            "line": 1150,
            "hash": "cd3eef1745ad97009f6719c9809ef3b4",
            "textRange": {
                "startLine": 1150,
                "endLine": 1150,
                "startOffset": 8,
                "endOffset": 20
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/builtin.py",
                            "textRange": {
                                "startLine": 1155,
                                "endLine": 1155,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/builtin.py",
                            "textRange": {
                                "startLine": 1157,
                                "endLine": 1157,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/builtin.py",
                            "textRange": {
                                "startLine": 1159,
                                "endLine": 1159,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/builtin.py",
                            "textRange": {
                                "startLine": 1163,
                                "endLine": 1163,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/builtin.py",
                            "textRange": {
                                "startLine": 1167,
                                "endLine": 1167,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/builtin.py",
                            "textRange": {
                                "startLine": 1168,
                                "endLine": 1168,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/builtin.py",
                            "textRange": {
                                "startLine": 1172,
                                "endLine": 1172,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/builtin.py",
                            "textRange": {
                                "startLine": 1172,
                                "endLine": 1172,
                                "startOffset": 45,
                                "endOffset": 48
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/builtin.py",
                            "textRange": {
                                "startLine": 1179,
                                "endLine": 1179,
                                "startOffset": 16,
                                "endOffset": 22
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/builtin.py",
                            "textRange": {
                                "startLine": 1182,
                                "endLine": 1182,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/builtin.py",
                            "textRange": {
                                "startLine": 1193,
                                "endLine": 1193,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/builtin.py",
                            "textRange": {
                                "startLine": 1195,
                                "endLine": 1195,
                                "startOffset": 24,
                                "endOffset": 27
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 21 to the 15 allowed.",
            "effort": "11min",
            "debt": "11min",
            "author": "jansel@meta.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-09-06T00:06:40+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y8ytwgiYR050dYNz",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "pytorch:torch/_dynamo/variables/torch.py",
            "project": "pytorch",
            "line": 208,
            "hash": "fad27cbcdb413bbc3df0da5ac217800d",
            "textRange": {
                "startLine": 208,
                "endLine": 208,
                "startOffset": 8,
                "endOffset": 21
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 229,
                                "endLine": 229,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 234,
                                "endLine": 234,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 235,
                                "endLine": 235,
                                "startOffset": 28,
                                "endOffset": 31
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 237,
                                "endLine": 237,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 243,
                                "endLine": 243,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 243,
                                "endLine": 243,
                                "startOffset": 46,
                                "endOffset": 49
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 243,
                                "endLine": 243,
                                "startOffset": 65,
                                "endOffset": 67
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 253,
                                "endLine": 253,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 253,
                                "endLine": 253,
                                "startOffset": 38,
                                "endOffset": 41
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 254,
                                "endLine": 254,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 256,
                                "endLine": 256,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 260,
                                "endLine": 260,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 262,
                                "endLine": 262,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 262,
                                "endLine": 262,
                                "startOffset": 51,
                                "endOffset": 53
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 265,
                                "endLine": 265,
                                "startOffset": 16,
                                "endOffset": 19
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 268,
                                "endLine": 268,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 270,
                                "endLine": 270,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 275,
                                "endLine": 275,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 277,
                                "endLine": 277,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 280,
                                "endLine": 280,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 280,
                                "endLine": 280,
                                "startOffset": 53,
                                "endOffset": 56
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 281,
                                "endLine": 281,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 285,
                                "endLine": 285,
                                "startOffset": 16,
                                "endOffset": 20
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 287,
                                "endLine": 287,
                                "startOffset": 16,
                                "endOffset": 20
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 289,
                                "endLine": 289,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 292,
                                "endLine": 292,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 295,
                                "endLine": 295,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 299,
                                "endLine": 299,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 307,
                                "endLine": 307,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 309,
                                "endLine": 309,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 311,
                                "endLine": 311,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 311,
                                "endLine": 311,
                                "startOffset": 50,
                                "endOffset": 53
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 313,
                                "endLine": 313,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 314,
                                "endLine": 314,
                                "startOffset": 29,
                                "endOffset": 31
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 318,
                                "endLine": 318,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 318,
                                "endLine": 318,
                                "startOffset": 62,
                                "endOffset": 65
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 322,
                                "endLine": 322,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 323,
                                "endLine": 323,
                                "startOffset": 29,
                                "endOffset": 31
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 327,
                                "endLine": 327,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 332,
                                "endLine": 332,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 333,
                                "endLine": 333,
                                "startOffset": 29,
                                "endOffset": 31
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 337,
                                "endLine": 337,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 338,
                                "endLine": 338,
                                "startOffset": 29,
                                "endOffset": 31
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 340,
                                "endLine": 340,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 346,
                                "endLine": 346,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 358,
                                "endLine": 358,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 359,
                                "endLine": 359,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 361,
                                "endLine": 361,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 368,
                                "endLine": 368,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 381,
                                "endLine": 381,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 383,
                                "endLine": 383,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 383,
                                "endLine": 383,
                                "startOffset": 27,
                                "endOffset": 30
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 406,
                                "endLine": 406,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 414,
                                "endLine": 414,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 420,
                                "endLine": 420,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 428,
                                "endLine": 428,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 430,
                                "endLine": 430,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 433,
                                "endLine": 433,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 440,
                                "endLine": 440,
                                "startOffset": 31,
                                "endOffset": 33
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 442,
                                "endLine": 442,
                                "startOffset": 38,
                                "endOffset": 40
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 452,
                                "endLine": 452,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 455,
                                "endLine": 455,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 458,
                                "endLine": 458,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 477,
                                "endLine": 477,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 481,
                                "endLine": 481,
                                "startOffset": 10,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 480,
                                "endLine": 480,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 493,
                                "endLine": 493,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 495,
                                "endLine": 495,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 509,
                                "endLine": 509,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 513,
                                "endLine": 513,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 526,
                                "endLine": 526,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 530,
                                "endLine": 530,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 534,
                                "endLine": 534,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 538,
                                "endLine": 538,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 541,
                                "endLine": 541,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 545,
                                "endLine": 545,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 556,
                                "endLine": 556,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 572,
                                "endLine": 572,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 592,
                                "endLine": 592,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 596,
                                "endLine": 596,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 597,
                                "endLine": 597,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 604,
                                "endLine": 604,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 605,
                                "endLine": 605,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 611,
                                "endLine": 611,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 614,
                                "endLine": 614,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 620,
                                "endLine": 620,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 626,
                                "endLine": 626,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 635,
                                "endLine": 635,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 636,
                                "endLine": 636,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 643,
                                "endLine": 643,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 644,
                                "endLine": 644,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 652,
                                "endLine": 652,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 654,
                                "endLine": 654,
                                "startOffset": 16,
                                "endOffset": 20
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 658,
                                "endLine": 658,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 660,
                                "endLine": 660,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 662,
                                "endLine": 662,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 669,
                                "endLine": 669,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 673,
                                "endLine": 673,
                                "startOffset": 16,
                                "endOffset": 19
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 684,
                                "endLine": 684,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 689,
                                "endLine": 689,
                                "startOffset": 16,
                                "endOffset": 19
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 691,
                                "endLine": 691,
                                "startOffset": 16,
                                "endOffset": 19
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 692,
                                "endLine": 692,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 699,
                                "endLine": 699,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 700,
                                "endLine": 700,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 705,
                                "endLine": 705,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 709,
                                "endLine": 709,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 711,
                                "endLine": 711,
                                "startOffset": 20,
                                "endOffset": 24
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 715,
                                "endLine": 715,
                                "startOffset": 20,
                                "endOffset": 24
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 722,
                                "endLine": 722,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 724,
                                "endLine": 724,
                                "startOffset": 16,
                                "endOffset": 20
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 727,
                                "endLine": 727,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 727,
                                "endLine": 727,
                                "startOffset": 54,
                                "endOffset": 57
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 739,
                                "endLine": 739,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 739,
                                "endLine": 739,
                                "startOffset": 31,
                                "endOffset": 34
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 741,
                                "endLine": 741,
                                "startOffset": 16,
                                "endOffset": 19
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 746,
                                "endLine": 746,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 751,
                                "endLine": 751,
                                "startOffset": 20,
                                "endOffset": 23
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 752,
                                "endLine": 752,
                                "startOffset": 24,
                                "endOffset": 26
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 754,
                                "endLine": 754,
                                "startOffset": 16,
                                "endOffset": 20
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 757,
                                "endLine": 757,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/torch.py",
                            "textRange": {
                                "startLine": 759,
                                "endLine": 759,
                                "startOffset": 16,
                                "endOffset": 20
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 178 to the 15 allowed.",
            "effort": "2h48min",
            "debt": "2h48min",
            "author": "jansel@meta.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-09-06T00:04:47+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zEBXwgiYR050dZS4",
            "rule": "python:S1172",
            "severity": "MAJOR",
            "component": "pytorch:torch/_logging/_internal.py",
            "project": "pytorch",
            "line": 521,
            "hash": "330e9d82cdc082d77f3969877ed5ac6b",
            "textRange": {
                "startLine": 521,
                "endLine": 521,
                "startOffset": 40,
                "endOffset": 53
            },
            "flows": [],
            "status": "OPEN",
            "message": "Remove the unused function parameter \"verbose\".",
            "effort": "5min",
            "debt": "5min",
            "author": "chilli@fb.com",
            "tags": [
                "unused"
            ],
            "creationDate": "2023-09-02T01:41:59+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zEBXwgiYR050dZS5",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "pytorch:torch/_logging/_internal.py",
            "project": "pytorch",
            "line": 538,
            "hash": "93ae19b8b27e8811e70a0557a68b886e",
            "textRange": {
                "startLine": 538,
                "endLine": 538,
                "startOffset": 4,
                "endOffset": 23
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_logging/_internal.py",
                            "textRange": {
                                "startLine": 539,
                                "endLine": 539,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_logging/_internal.py",
                            "textRange": {
                                "startLine": 542,
                                "endLine": 542,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_logging/_internal.py",
                            "textRange": {
                                "startLine": 544,
                                "endLine": 544,
                                "startOffset": 4,
                                "endOffset": 8
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_logging/_internal.py",
                            "textRange": {
                                "startLine": 546,
                                "endLine": 546,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_logging/_internal.py",
                            "textRange": {
                                "startLine": 556,
                                "endLine": 556,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_logging/_internal.py",
                            "textRange": {
                                "startLine": 558,
                                "endLine": 558,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_logging/_internal.py",
                            "textRange": {
                                "startLine": 560,
                                "endLine": 560,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_logging/_internal.py",
                            "textRange": {
                                "startLine": 567,
                                "endLine": 567,
                                "startOffset": 4,
                                "endOffset": 7
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_logging/_internal.py",
                            "textRange": {
                                "startLine": 569,
                                "endLine": 569,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_logging/_internal.py",
                            "textRange": {
                                "startLine": 570,
                                "endLine": 570,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_logging/_internal.py",
                            "textRange": {
                                "startLine": 573,
                                "endLine": 573,
                                "startOffset": 4,
                                "endOffset": 7
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_logging/_internal.py",
                            "textRange": {
                                "startLine": 576,
                                "endLine": 576,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_logging/_internal.py",
                            "textRange": {
                                "startLine": 580,
                                "endLine": 580,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_logging/_internal.py",
                            "textRange": {
                                "startLine": 582,
                                "endLine": 582,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_logging/_internal.py",
                            "textRange": {
                                "startLine": 584,
                                "endLine": 584,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_logging/_internal.py",
                            "textRange": {
                                "startLine": 585,
                                "endLine": 585,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_logging/_internal.py",
                            "textRange": {
                                "startLine": 587,
                                "endLine": 587,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_logging/_internal.py",
                            "textRange": {
                                "startLine": 590,
                                "endLine": 590,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 25 to the 15 allowed.",
            "effort": "15min",
            "debt": "15min",
            "author": "chilli@fb.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-09-02T01:41:59+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y8wBwgiYR050dYNL",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "pytorch:torch/_dynamo/variables/higher_order_ops.py",
            "project": "pytorch",
            "line": 298,
            "hash": "fad27cbcdb413bbc3df0da5ac217800d",
            "textRange": {
                "startLine": 298,
                "endLine": 298,
                "startOffset": 8,
                "endOffset": 21
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/higher_order_ops.py",
                            "textRange": {
                                "startLine": 314,
                                "endLine": 314,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/higher_order_ops.py",
                            "textRange": {
                                "startLine": 321,
                                "endLine": 321,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/higher_order_ops.py",
                            "textRange": {
                                "startLine": 331,
                                "endLine": 331,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/higher_order_ops.py",
                            "textRange": {
                                "startLine": 337,
                                "endLine": 337,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/higher_order_ops.py",
                            "textRange": {
                                "startLine": 345,
                                "endLine": 345,
                                "startOffset": 24,
                                "endOffset": 26
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/higher_order_ops.py",
                            "textRange": {
                                "startLine": 382,
                                "endLine": 382,
                                "startOffset": 19,
                                "endOffset": 21
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/higher_order_ops.py",
                            "textRange": {
                                "startLine": 395,
                                "endLine": 395,
                                "startOffset": 12,
                                "endOffset": 18
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/higher_order_ops.py",
                            "textRange": {
                                "startLine": 398,
                                "endLine": 398,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/higher_order_ops.py",
                            "textRange": {
                                "startLine": 421,
                                "endLine": 421,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/higher_order_ops.py",
                            "textRange": {
                                "startLine": 422,
                                "endLine": 422,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/higher_order_ops.py",
                            "textRange": {
                                "startLine": 423,
                                "endLine": 423,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/higher_order_ops.py",
                            "textRange": {
                                "startLine": 425,
                                "endLine": 425,
                                "startOffset": 28,
                                "endOffset": 31
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 26 to the 15 allowed.",
            "effort": "16min",
            "debt": "16min",
            "author": "ydwu2014@gmail.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-08-28T05:47:54+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zO43wgiYR050dcxw",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "pytorch:functorch/experimental/_map.py",
            "project": "pytorch",
            "line": 53,
            "hash": "ebb10c63a9cb95156bc373342fb60294",
            "textRange": {
                "startLine": 53,
                "endLine": 53,
                "startOffset": 4,
                "endOffset": 22
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:functorch/experimental/_map.py",
                            "textRange": {
                                "startLine": 76,
                                "endLine": 76,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:functorch/experimental/_map.py",
                            "textRange": {
                                "startLine": 77,
                                "endLine": 77,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:functorch/experimental/_map.py",
                            "textRange": {
                                "startLine": 84,
                                "endLine": 84,
                                "startOffset": 20,
                                "endOffset": 24
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:functorch/experimental/_map.py",
                            "textRange": {
                                "startLine": 90,
                                "endLine": 90,
                                "startOffset": 30,
                                "endOffset": 32
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:functorch/experimental/_map.py",
                            "textRange": {
                                "startLine": 96,
                                "endLine": 96,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:functorch/experimental/_map.py",
                            "textRange": {
                                "startLine": 120,
                                "endLine": 120,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:functorch/experimental/_map.py",
                            "textRange": {
                                "startLine": 120,
                                "endLine": 120,
                                "startOffset": 53,
                                "endOffset": 56
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:functorch/experimental/_map.py",
                            "textRange": {
                                "startLine": 131,
                                "endLine": 131,
                                "startOffset": 40,
                                "endOffset": 43
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:functorch/experimental/_map.py",
                            "textRange": {
                                "startLine": 144,
                                "endLine": 144,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:functorch/experimental/_map.py",
                            "textRange": {
                                "startLine": 146,
                                "endLine": 146,
                                "startOffset": 20,
                                "endOffset": 23
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 17 to the 15 allowed.",
            "effort": "7min",
            "debt": "7min",
            "author": "ydwu2014@gmail.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-08-28T05:31:35+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y-VnwgiYR050dYa4",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "pytorch:torch/ao/quantization/pt2e/prepare.py",
            "project": "pytorch",
            "line": 30,
            "hash": "1ee3ad7b59af359a0d2f967d9594a888",
            "textRange": {
                "startLine": 30,
                "endLine": 30,
                "startOffset": 4,
                "endOffset": 49
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/pt2e/prepare.py",
                            "textRange": {
                                "startLine": 45,
                                "endLine": 45,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/pt2e/prepare.py",
                            "textRange": {
                                "startLine": 47,
                                "endLine": 47,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/pt2e/prepare.py",
                            "textRange": {
                                "startLine": 54,
                                "endLine": 54,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/pt2e/prepare.py",
                            "textRange": {
                                "startLine": 67,
                                "endLine": 67,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/pt2e/prepare.py",
                            "textRange": {
                                "startLine": 67,
                                "endLine": 67,
                                "startOffset": 38,
                                "endOffset": 40
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/pt2e/prepare.py",
                            "textRange": {
                                "startLine": 68,
                                "endLine": 68,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/pt2e/prepare.py",
                            "textRange": {
                                "startLine": 68,
                                "endLine": 68,
                                "startOffset": 67,
                                "endOffset": 70
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/pt2e/prepare.py",
                            "textRange": {
                                "startLine": 78,
                                "endLine": 78,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/pt2e/prepare.py",
                            "textRange": {
                                "startLine": 84,
                                "endLine": 84,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/pt2e/prepare.py",
                            "textRange": {
                                "startLine": 90,
                                "endLine": 90,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/pt2e/prepare.py",
                            "textRange": {
                                "startLine": 103,
                                "endLine": 103,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/pt2e/prepare.py",
                            "textRange": {
                                "startLine": 104,
                                "endLine": 104,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/pt2e/prepare.py",
                            "textRange": {
                                "startLine": 106,
                                "endLine": 106,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/pt2e/prepare.py",
                            "textRange": {
                                "startLine": 107,
                                "endLine": 107,
                                "startOffset": 80,
                                "endOffset": 83
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/pt2e/prepare.py",
                            "textRange": {
                                "startLine": 116,
                                "endLine": 116,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/pt2e/prepare.py",
                            "textRange": {
                                "startLine": 121,
                                "endLine": 121,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 31 to the 15 allowed.",
            "effort": "21min",
            "debt": "21min",
            "author": "jerryzh168@gmail.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-08-27T20:20:03+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y-ajwgiYR050dYbP",
            "rule": "python:S1192",
            "severity": "CRITICAL",
            "component": "pytorch:torch/ao/quantization/quantizer/xnnpack_quantizer_utils.py",
            "project": "pytorch",
            "line": 271,
            "hash": "32c85eb64fca80a384d49a0ac32c19d4",
            "textRange": {
                "startLine": 271,
                "endLine": 271,
                "startOffset": 29,
                "endOffset": 75
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/xnnpack_quantizer_utils.py",
                            "textRange": {
                                "startLine": 385,
                                "endLine": 385,
                                "startOffset": 29,
                                "endOffset": 75
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/xnnpack_quantizer_utils.py",
                            "textRange": {
                                "startLine": 581,
                                "endLine": 581,
                                "startOffset": 29,
                                "endOffset": 75
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/xnnpack_quantizer_utils.py",
                            "textRange": {
                                "startLine": 656,
                                "endLine": 656,
                                "startOffset": 29,
                                "endOffset": 75
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Define a constant instead of duplicating this literal \"Relu partition has more than one output node\" 4 times.",
            "effort": "8min",
            "debt": "8min",
            "author": "jerryzh168@gmail.com",
            "tags": [
                "design"
            ],
            "creationDate": "2023-08-27T20:20:03+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zNm2wgiYR050dcB8",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "pytorch:test/test_pytree.py",
            "project": "pytorch",
            "line": 383,
            "hash": "68a553e78959a16c6ca021636575f636",
            "textRange": {
                "startLine": 383,
                "endLine": 383,
                "startOffset": 8,
                "endOffset": 13
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"Point\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "yiangela7@gmail.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2023-08-27T20:04:49+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y7oZwgiYR050dX3H",
            "rule": "python:S1135",
            "severity": "INFO",
            "component": "pytorch:torch/utils/_pytree.py",
            "project": "pytorch",
            "line": 531,
            "hash": "70246197def97798a502f25bcd1c198e",
            "textRange": {
                "startLine": 531,
                "endLine": 531,
                "startOffset": 0,
                "endOffset": 67
            },
            "flows": [],
            "status": "OPEN",
            "message": "Complete the task associated to this \"TODO\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "yiangela7@gmail.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-08-27T20:04:49+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y7oZwgiYR050dX3I",
            "rule": "python:S1135",
            "severity": "INFO",
            "component": "pytorch:torch/utils/_pytree.py",
            "project": "pytorch",
            "line": 536,
            "hash": "70246197def97798a502f25bcd1c198e",
            "textRange": {
                "startLine": 536,
                "endLine": 536,
                "startOffset": 0,
                "endOffset": 67
            },
            "flows": [],
            "status": "OPEN",
            "message": "Complete the task associated to this \"TODO\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "yiangela7@gmail.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-08-27T20:04:49+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y-biwgiYR050dYbb",
            "rule": "python:S1135",
            "severity": "INFO",
            "component": "pytorch:torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
            "project": "pytorch",
            "line": 318,
            "hash": "7aee03ed3346cd36a8a6e64c60fabefd",
            "textRange": {
                "startLine": 318,
                "endLine": 318,
                "startOffset": 16,
                "endOffset": 60
            },
            "flows": [],
            "status": "OPEN",
            "message": "Complete the task associated to this \"TODO\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "weiwen.xia@intel.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-08-27T16:20:17+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y-biwgiYR050dYbl",
            "rule": "python:S1135",
            "severity": "INFO",
            "component": "pytorch:torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
            "project": "pytorch",
            "line": 759,
            "hash": "231c0161a8f29bb0ce4a918c9dc193a5",
            "textRange": {
                "startLine": 759,
                "endLine": 759,
                "startOffset": 16,
                "endOffset": 96
            },
            "flows": [],
            "status": "OPEN",
            "message": "Complete the task associated to this \"TODO\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "weiwen.xia@intel.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-08-27T16:20:17+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zC4YwgiYR050dZBE",
            "rule": "python:S125",
            "severity": "MAJOR",
            "component": "pytorch:torch/_inductor/kernel/mm_common.py",
            "project": "pytorch",
            "line": 84,
            "hash": "c6174373fceebbbfab2d6bdc9b8b6975",
            "textRange": {
                "startLine": 84,
                "endLine": 84,
                "startOffset": 4,
                "endOffset": 52
            },
            "flows": [],
            "status": "OPEN",
            "message": "Remove this commented out code.",
            "effort": "5min",
            "debt": "5min",
            "author": "108682042+jataylo@users.noreply.github.com",
            "tags": [
                "unused"
            ],
            "creationDate": "2023-08-26T23:54:55+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zL7-wgiYR050dbO6",
            "rule": "python:S125",
            "severity": "MAJOR",
            "component": "pytorch:test/onnx/dynamo/test_dynamo_with_onnxruntime_backend.py",
            "project": "pytorch",
            "line": 59,
            "hash": "b68787348a3df77e2559c0c3e5e07194",
            "textRange": {
                "startLine": 59,
                "endLine": 59,
                "startOffset": 61,
                "endOffset": 84
            },
            "flows": [],
            "status": "OPEN",
            "message": "Remove this commented out code.",
            "effort": "5min",
            "debt": "5min",
            "author": "abock@microsoft.com",
            "tags": [
                "unused"
            ],
            "creationDate": "2023-08-26T23:50:18+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y8uUwgiYR050dYNA",
            "rule": "python:S1134",
            "severity": "MAJOR",
            "component": "pytorch:torch/_dynamo/backends/onnxrt.py",
            "project": "pytorch",
            "line": 13,
            "hash": "5677de4962ca75dabc2193a0a149d125",
            "textRange": {
                "startLine": 13,
                "endLine": 13,
                "startOffset": 4,
                "endOffset": 93
            },
            "flows": [],
            "status": "OPEN",
            "message": "Take the required action to fix the issue indicated by this \"FIXME\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "abock@microsoft.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-08-26T23:50:18+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zBkuwgiYR050dYxN",
            "rule": "python:S1192",
            "severity": "CRITICAL",
            "component": "pytorch:torch/onnx/__init__.py",
            "project": "pytorch",
            "line": 114,
            "hash": "c17a6e71ff5201ba077af5ebd3ea33eb",
            "textRange": {
                "startLine": 114,
                "endLine": 114,
                "startOffset": 25,
                "endOffset": 37
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/onnx/__init__.py",
                            "textRange": {
                                "startLine": 115,
                                "endLine": 115,
                                "startOffset": 27,
                                "endOffset": 39
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/onnx/__init__.py",
                            "textRange": {
                                "startLine": 116,
                                "endLine": 116,
                                "startOffset": 27,
                                "endOffset": 39
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/onnx/__init__.py",
                            "textRange": {
                                "startLine": 117,
                                "endLine": 117,
                                "startOffset": 26,
                                "endOffset": 38
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/onnx/__init__.py",
                            "textRange": {
                                "startLine": 118,
                                "endLine": 118,
                                "startOffset": 36,
                                "endOffset": 48
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/onnx/__init__.py",
                            "textRange": {
                                "startLine": 119,
                                "endLine": 119,
                                "startOffset": 27,
                                "endOffset": 39
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/onnx/__init__.py",
                            "textRange": {
                                "startLine": 120,
                                "endLine": 120,
                                "startOffset": 31,
                                "endOffset": 43
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/onnx/__init__.py",
                            "textRange": {
                                "startLine": 121,
                                "endLine": 121,
                                "startOffset": 30,
                                "endOffset": 42
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/onnx/__init__.py",
                            "textRange": {
                                "startLine": 122,
                                "endLine": 122,
                                "startOffset": 26,
                                "endOffset": 38
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/onnx/__init__.py",
                            "textRange": {
                                "startLine": 123,
                                "endLine": 123,
                                "startOffset": 31,
                                "endOffset": 43
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/onnx/__init__.py",
                            "textRange": {
                                "startLine": 124,
                                "endLine": 124,
                                "startOffset": 41,
                                "endOffset": 53
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/onnx/__init__.py",
                            "textRange": {
                                "startLine": 125,
                                "endLine": 125,
                                "startOffset": 35,
                                "endOffset": 47
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/onnx/__init__.py",
                            "textRange": {
                                "startLine": 126,
                                "endLine": 126,
                                "startOffset": 32,
                                "endOffset": 44
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/onnx/__init__.py",
                            "textRange": {
                                "startLine": 127,
                                "endLine": 127,
                                "startOffset": 25,
                                "endOffset": 37
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Define a constant instead of duplicating this literal \"torch.onnx\" 14 times.",
            "effort": "28min",
            "debt": "28min",
            "author": "abock@microsoft.com",
            "tags": [
                "design"
            ],
            "creationDate": "2023-08-26T23:50:18+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zBc8wgiYR050dYwL",
            "rule": "python:S1135",
            "severity": "INFO",
            "component": "pytorch:torch/onnx/_internal/onnxruntime.py",
            "project": "pytorch",
            "line": 88,
            "hash": "f16fe6d70bd20e6e68d6232c0e59fdf4",
            "textRange": {
                "startLine": 88,
                "endLine": 88,
                "startOffset": 4,
                "endOffset": 71
            },
            "flows": [],
            "status": "OPEN",
            "message": "Complete the task associated to this \"TODO\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "abock@microsoft.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-08-26T23:50:18+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zBc8wgiYR050dYwO",
            "rule": "python:S1135",
            "severity": "INFO",
            "component": "pytorch:torch/onnx/_internal/onnxruntime.py",
            "project": "pytorch",
            "line": 573,
            "hash": "e0426b2d3487ccc1bd29c853bcc38f23",
            "textRange": {
                "startLine": 573,
                "endLine": 573,
                "startOffset": 4,
                "endOffset": 60
            },
            "flows": [],
            "status": "OPEN",
            "message": "Complete the task associated to this \"TODO\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "abock@microsoft.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-08-26T23:50:18+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zBc8wgiYR050dYwQ",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "pytorch:torch/onnx/_internal/onnxruntime.py",
            "project": "pytorch",
            "line": 714,
            "hash": "d21eda233b11e4d5637ee29dce3f6c7a",
            "textRange": {
                "startLine": 714,
                "endLine": 714,
                "startOffset": 8,
                "endOffset": 28
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/onnx/_internal/onnxruntime.py",
                            "textRange": {
                                "startLine": 726,
                                "endLine": 726,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/onnx/_internal/onnxruntime.py",
                            "textRange": {
                                "startLine": 733,
                                "endLine": 733,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/onnx/_internal/onnxruntime.py",
                            "textRange": {
                                "startLine": 747,
                                "endLine": 747,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/onnx/_internal/onnxruntime.py",
                            "textRange": {
                                "startLine": 753,
                                "endLine": 753,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/onnx/_internal/onnxruntime.py",
                            "textRange": {
                                "startLine": 753,
                                "endLine": 753,
                                "startOffset": 46,
                                "endOffset": 49
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/onnx/_internal/onnxruntime.py",
                            "textRange": {
                                "startLine": 757,
                                "endLine": 757,
                                "startOffset": 20,
                                "endOffset": 24
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/onnx/_internal/onnxruntime.py",
                            "textRange": {
                                "startLine": 763,
                                "endLine": 763,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/onnx/_internal/onnxruntime.py",
                            "textRange": {
                                "startLine": 768,
                                "endLine": 768,
                                "startOffset": 16,
                                "endOffset": 22
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/onnx/_internal/onnxruntime.py",
                            "textRange": {
                                "startLine": 823,
                                "endLine": 823,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/onnx/_internal/onnxruntime.py",
                            "textRange": {
                                "startLine": 825,
                                "endLine": 825,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/onnx/_internal/onnxruntime.py",
                            "textRange": {
                                "startLine": 850,
                                "endLine": 850,
                                "startOffset": 28,
                                "endOffset": 30
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/onnx/_internal/onnxruntime.py",
                            "textRange": {
                                "startLine": 867,
                                "endLine": 867,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/onnx/_internal/onnxruntime.py",
                            "textRange": {
                                "startLine": 873,
                                "endLine": 873,
                                "startOffset": 36,
                                "endOffset": 38
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/onnx/_internal/onnxruntime.py",
                            "textRange": {
                                "startLine": 876,
                                "endLine": 876,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/onnx/_internal/onnxruntime.py",
                            "textRange": {
                                "startLine": 880,
                                "endLine": 880,
                                "startOffset": 31,
                                "endOffset": 33
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 24 to the 15 allowed.",
            "effort": "14min",
            "debt": "14min",
            "author": "abock@microsoft.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-08-26T23:50:18+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zBc8wgiYR050dYwR",
            "rule": "python:S1135",
            "severity": "INFO",
            "component": "pytorch:torch/onnx/_internal/onnxruntime.py",
            "project": "pytorch",
            "line": 807,
            "hash": "2dc9d86ac2df1a9eb8fa33129646b849",
            "textRange": {
                "startLine": 807,
                "endLine": 807,
                "startOffset": 12,
                "endOffset": 55
            },
            "flows": [],
            "status": "OPEN",
            "message": "Complete the task associated to this \"TODO\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "abock@microsoft.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-08-26T23:50:18+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y-VUwgiYR050dYaw",
            "rule": "python:S1135",
            "severity": "INFO",
            "component": "pytorch:torch/ao/quantization/pt2e/utils.py",
            "project": "pytorch",
            "line": 52,
            "hash": "ee2a0631987cd71aa5a281bc0561d0bd",
            "textRange": {
                "startLine": 52,
                "endLine": 52,
                "startOffset": 4,
                "endOffset": 98
            },
            "flows": [],
            "status": "OPEN",
            "message": "Complete the task associated to this \"TODO\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "leslie.fang@intel.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-08-26T22:49:41+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y-VUwgiYR050dYax",
            "rule": "python:S1135",
            "severity": "INFO",
            "component": "pytorch:torch/ao/quantization/pt2e/utils.py",
            "project": "pytorch",
            "line": 79,
            "hash": "c3ef1b58c8df3a86d6f910051e830340",
            "textRange": {
                "startLine": 79,
                "endLine": 79,
                "startOffset": 4,
                "endOffset": 93
            },
            "flows": [],
            "status": "OPEN",
            "message": "Complete the task associated to this \"TODO\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "leslie.fang@intel.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-08-26T22:49:41+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y-VUwgiYR050dYay",
            "rule": "python:S1135",
            "severity": "INFO",
            "component": "pytorch:torch/ao/quantization/pt2e/utils.py",
            "project": "pytorch",
            "line": 126,
            "hash": "25311bdbdc20e1f5d4d09b888ea8a094",
            "textRange": {
                "startLine": 126,
                "endLine": 126,
                "startOffset": 8,
                "endOffset": 103
            },
            "flows": [],
            "status": "OPEN",
            "message": "Complete the task associated to this \"TODO\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "leslie.fang@intel.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-08-26T22:49:41+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zKjAwgiYR050dai8",
            "rule": "python:S1192",
            "severity": "CRITICAL",
            "component": "pytorch:test/inductor/test_cpu_repro.py",
            "project": "pytorch",
            "line": 739,
            "hash": "218a5dcabb3b57fbd5600339fbd2d589",
            "textRange": {
                "startLine": 739,
                "endLine": 739,
                "startOffset": 27,
                "endOffset": 40
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 789,
                                "endLine": 789,
                                "startOffset": 31,
                                "endOffset": 44
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 829,
                                "endLine": 829,
                                "startOffset": 31,
                                "endOffset": 44
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 870,
                                "endLine": 870,
                                "startOffset": 31,
                                "endOffset": 44
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 906,
                                "endLine": 906,
                                "startOffset": 31,
                                "endOffset": 44
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 969,
                                "endLine": 969,
                                "startOffset": 31,
                                "endOffset": 44
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 1024,
                                "endLine": 1024,
                                "startOffset": 27,
                                "endOffset": 40
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 1053,
                                "endLine": 1053,
                                "startOffset": 27,
                                "endOffset": 40
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 1098,
                                "endLine": 1098,
                                "startOffset": 31,
                                "endOffset": 44
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 1191,
                                "endLine": 1191,
                                "startOffset": 27,
                                "endOffset": 40
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 1210,
                                "endLine": 1210,
                                "startOffset": 27,
                                "endOffset": 40
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 1217,
                                "endLine": 1217,
                                "startOffset": 27,
                                "endOffset": 40
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 1221,
                                "endLine": 1221,
                                "startOffset": 27,
                                "endOffset": 40
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 1225,
                                "endLine": 1225,
                                "startOffset": 27,
                                "endOffset": 40
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 1229,
                                "endLine": 1229,
                                "startOffset": 27,
                                "endOffset": 40
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 1234,
                                "endLine": 1234,
                                "startOffset": 27,
                                "endOffset": 40
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 1240,
                                "endLine": 1240,
                                "startOffset": 27,
                                "endOffset": 40
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 1259,
                                "endLine": 1259,
                                "startOffset": 31,
                                "endOffset": 44
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 1375,
                                "endLine": 1375,
                                "startOffset": 31,
                                "endOffset": 44
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 1397,
                                "endLine": 1397,
                                "startOffset": 31,
                                "endOffset": 44
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 1427,
                                "endLine": 1427,
                                "startOffset": 31,
                                "endOffset": 44
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 1506,
                                "endLine": 1506,
                                "startOffset": 31,
                                "endOffset": 44
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 1571,
                                "endLine": 1571,
                                "startOffset": 59,
                                "endOffset": 72
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 1904,
                                "endLine": 1904,
                                "startOffset": 31,
                                "endOffset": 44
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 1921,
                                "endLine": 1921,
                                "startOffset": 31,
                                "endOffset": 44
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 1974,
                                "endLine": 1974,
                                "startOffset": 31,
                                "endOffset": 44
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 1980,
                                "endLine": 1980,
                                "startOffset": 31,
                                "endOffset": 44
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 1986,
                                "endLine": 1986,
                                "startOffset": 27,
                                "endOffset": 40
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 2040,
                                "endLine": 2040,
                                "startOffset": 31,
                                "endOffset": 44
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 2077,
                                "endLine": 2077,
                                "startOffset": 31,
                                "endOffset": 44
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_cpu_repro.py",
                            "textRange": {
                                "startLine": 2094,
                                "endLine": 2094,
                                "startOffset": 31,
                                "endOffset": 44
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Define a constant instead of duplicating this literal \"cpp.simdlen\" 31 times.",
            "effort": "1h2min",
            "debt": "1h2min",
            "author": "leslie.fang@intel.com",
            "tags": [
                "design"
            ],
            "creationDate": "2023-08-26T22:28:45+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zC91wgiYR050dZBn",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "pytorch:torch/_inductor/codegen/cpp.py",
            "project": "pytorch",
            "line": 1461,
            "hash": "2ccd671609b518711bbdc89316826624",
            "textRange": {
                "startLine": 1461,
                "endLine": 1461,
                "startOffset": 8,
                "endOffset": 12
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/cpp.py",
                            "textRange": {
                                "startLine": 1469,
                                "endLine": 1469,
                                "startOffset": 47,
                                "endOffset": 50
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/cpp.py",
                            "textRange": {
                                "startLine": 1471,
                                "endLine": 1471,
                                "startOffset": 56,
                                "endOffset": 58
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/cpp.py",
                            "textRange": {
                                "startLine": 1475,
                                "endLine": 1475,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/cpp.py",
                            "textRange": {
                                "startLine": 1475,
                                "endLine": 1475,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/cpp.py",
                            "textRange": {
                                "startLine": 1479,
                                "endLine": 1479,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/cpp.py",
                            "textRange": {
                                "startLine": 1482,
                                "endLine": 1482,
                                "startOffset": 27,
                                "endOffset": 29
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/cpp.py",
                            "textRange": {
                                "startLine": 1483,
                                "endLine": 1483,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/cpp.py",
                            "textRange": {
                                "startLine": 1485,
                                "endLine": 1485,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/cpp.py",
                            "textRange": {
                                "startLine": 1487,
                                "endLine": 1487,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/cpp.py",
                            "textRange": {
                                "startLine": 1489,
                                "endLine": 1489,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/cpp.py",
                            "textRange": {
                                "startLine": 1491,
                                "endLine": 1491,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/cpp.py",
                            "textRange": {
                                "startLine": 1491,
                                "endLine": 1491,
                                "startOffset": 36,
                                "endOffset": 39
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/cpp.py",
                            "textRange": {
                                "startLine": 1494,
                                "endLine": 1494,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/cpp.py",
                            "textRange": {
                                "startLine": 1497,
                                "endLine": 1497,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/cpp.py",
                            "textRange": {
                                "startLine": 1499,
                                "endLine": 1499,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/cpp.py",
                            "textRange": {
                                "startLine": 1502,
                                "endLine": 1502,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/cpp.py",
                            "textRange": {
                                "startLine": 1505,
                                "endLine": 1505,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/cpp.py",
                            "textRange": {
                                "startLine": 1508,
                                "endLine": 1508,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/cpp.py",
                            "textRange": {
                                "startLine": 1512,
                                "endLine": 1512,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/cpp.py",
                            "textRange": {
                                "startLine": 1514,
                                "endLine": 1514,
                                "startOffset": 33,
                                "endOffset": 35
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/cpp.py",
                            "textRange": {
                                "startLine": 1516,
                                "endLine": 1516,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/codegen/cpp.py",
                            "textRange": {
                                "startLine": 1527,
                                "endLine": 1527,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 30 to the 15 allowed.",
            "effort": "20min",
            "debt": "20min",
            "author": "leslie.fang@intel.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-08-26T22:28:45+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zDCewgiYR050dZDf",
            "rule": "python:S1135",
            "severity": "INFO",
            "component": "pytorch:torch/_inductor/lowering.py",
            "project": "pytorch",
            "line": 942,
            "hash": "be6ffe1da81cd6907675640d187d0160",
            "textRange": {
                "startLine": 942,
                "endLine": 942,
                "startOffset": 8,
                "endOffset": 74
            },
            "flows": [],
            "status": "OPEN",
            "message": "Complete the task associated to this \"TODO\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "leslie.fang@intel.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-08-26T22:26:27+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y-biwgiYR050dYbg",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "pytorch:torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
            "project": "pytorch",
            "line": 604,
            "hash": "8dc038b63116945bdeb2b5daf1e570f1",
            "textRange": {
                "startLine": 604,
                "endLine": 604,
                "startOffset": 8,
                "endOffset": 51
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
                            "textRange": {
                                "startLine": 608,
                                "endLine": 608,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
                            "textRange": {
                                "startLine": 611,
                                "endLine": 611,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
                            "textRange": {
                                "startLine": 616,
                                "endLine": 616,
                                "startOffset": 16,
                                "endOffset": 19
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
                            "textRange": {
                                "startLine": 617,
                                "endLine": 617,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
                            "textRange": {
                                "startLine": 621,
                                "endLine": 621,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
                            "textRange": {
                                "startLine": 624,
                                "endLine": 624,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
                            "textRange": {
                                "startLine": 628,
                                "endLine": 628,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
                            "textRange": {
                                "startLine": 630,
                                "endLine": 630,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
                            "textRange": {
                                "startLine": 633,
                                "endLine": 633,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
                            "textRange": {
                                "startLine": 635,
                                "endLine": 635,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 22 to the 15 allowed.",
            "effort": "12min",
            "debt": "12min",
            "author": "leslie.fang@intel.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-08-26T22:21:13+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y-biwgiYR050dYbf",
            "rule": "python:S3626",
            "severity": "MINOR",
            "component": "pytorch:torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
            "project": "pytorch",
            "line": 648,
            "hash": "e70c4df10ef0983b9c8c31bd06b2a2c3",
            "textRange": {
                "startLine": 648,
                "endLine": 648,
                "startOffset": 8,
                "endOffset": 14
            },
            "flows": [],
            "status": "OPEN",
            "message": "Remove this redundant return.",
            "effort": "1min",
            "debt": "1min",
            "author": "leslie.fang@intel.com",
            "tags": [
                "clumsy",
                "redundant"
            ],
            "creationDate": "2023-08-26T22:21:13+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y-biwgiYR050dYbk",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "pytorch:torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
            "project": "pytorch",
            "line": 668,
            "hash": "a132c50ca3261bf75ae0387f7df9b096",
            "textRange": {
                "startLine": 668,
                "endLine": 668,
                "startOffset": 8,
                "endOffset": 53
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
                            "textRange": {
                                "startLine": 677,
                                "endLine": 677,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
                            "textRange": {
                                "startLine": 677,
                                "endLine": 677,
                                "startOffset": 54,
                                "endOffset": 57
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
                            "textRange": {
                                "startLine": 678,
                                "endLine": 678,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
                            "textRange": {
                                "startLine": 680,
                                "endLine": 680,
                                "startOffset": 58,
                                "endOffset": 61
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
                            "textRange": {
                                "startLine": 684,
                                "endLine": 684,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
                            "textRange": {
                                "startLine": 689,
                                "endLine": 689,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
                            "textRange": {
                                "startLine": 692,
                                "endLine": 692,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
                            "textRange": {
                                "startLine": 694,
                                "endLine": 694,
                                "startOffset": 20,
                                "endOffset": 23
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
                            "textRange": {
                                "startLine": 704,
                                "endLine": 704,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 16 to the 15 allowed.",
            "effort": "6min",
            "debt": "6min",
            "author": "leslie.fang@intel.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-08-26T22:21:13+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y-UlwgiYR050dYaf",
            "rule": "python:S107",
            "severity": "MAJOR",
            "component": "pytorch:torch/ao/quantization/pt2e/representation/rewrite.py",
            "project": "pytorch",
            "line": 41,
            "hash": "fa0f615b412fed06f2d9f636e403fac7",
            "textRange": {
                "startLine": 41,
                "endLine": 44,
                "startOffset": 4,
                "endOffset": 59
            },
            "flows": [],
            "status": "OPEN",
            "message": "Function \"_qdq_quantized_linear\" has 15 parameters, which is greater than the 13 authorized.",
            "effort": "20min",
            "debt": "20min",
            "author": "jerryzh@meta.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-08-26T21:09:52+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y-UlwgiYR050dYag",
            "rule": "python:S107",
            "severity": "MAJOR",
            "component": "pytorch:torch/ao/quantization/pt2e/representation/rewrite.py",
            "project": "pytorch",
            "line": 56,
            "hash": "fa0f615b412fed06f2d9f636e403fac7",
            "textRange": {
                "startLine": 56,
                "endLine": 59,
                "startOffset": 4,
                "endOffset": 59
            },
            "flows": [],
            "status": "OPEN",
            "message": "Function \"_reference_quantized_linear\" has 15 parameters, which is greater than the 13 authorized.",
            "effort": "20min",
            "debt": "20min",
            "author": "jerryzh@meta.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-08-26T21:09:52+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y-UlwgiYR050dYah",
            "rule": "python:S1135",
            "severity": "INFO",
            "component": "pytorch:torch/ao/quantization/pt2e/representation/rewrite.py",
            "project": "pytorch",
            "line": 77,
            "hash": "23a6a9fffc17698a42195e9c9b1b4010",
            "textRange": {
                "startLine": 77,
                "endLine": 77,
                "startOffset": 4,
                "endOffset": 32
            },
            "flows": [],
            "status": "OPEN",
            "message": "Complete the task associated to this \"TODO\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "jerryzh@meta.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-08-26T21:09:52+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y-UlwgiYR050dYai",
            "rule": "python:S1135",
            "severity": "INFO",
            "component": "pytorch:torch/ao/quantization/pt2e/representation/rewrite.py",
            "project": "pytorch",
            "line": 82,
            "hash": "f52ad6b66726d8bed98f938898511be5",
            "textRange": {
                "startLine": 82,
                "endLine": 82,
                "startOffset": 4,
                "endOffset": 85
            },
            "flows": [],
            "status": "OPEN",
            "message": "Complete the task associated to this \"TODO\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "jerryzh@meta.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-08-26T21:09:52+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zKjvwgiYR050dajJ",
            "rule": "python:S1192",
            "severity": "CRITICAL",
            "component": "pytorch:test/inductor/test_foreach.py",
            "project": "pytorch",
            "line": 56,
            "hash": "3b560d3151c92a3ef8133c49695c495e",
            "textRange": {
                "startLine": 56,
                "endLine": 56,
                "startOffset": 38,
                "endOffset": 46
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 57,
                                "endLine": 57,
                                "startOffset": 38,
                                "endOffset": 46
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 61,
                                "endLine": 61,
                                "startOffset": 38,
                                "endOffset": 46
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 62,
                                "endLine": 62,
                                "startOffset": 38,
                                "endOffset": 46
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 63,
                                "endLine": 63,
                                "startOffset": 38,
                                "endOffset": 46
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 64,
                                "endLine": 64,
                                "startOffset": 38,
                                "endOffset": 46
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 105,
                                "endLine": 105,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 106,
                                "endLine": 106,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 159,
                                "endLine": 159,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 160,
                                "endLine": 160,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 175,
                                "endLine": 175,
                                "startOffset": 37,
                                "endOffset": 45
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 176,
                                "endLine": 176,
                                "startOffset": 38,
                                "endOffset": 46
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 177,
                                "endLine": 177,
                                "startOffset": 37,
                                "endOffset": 45
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 178,
                                "endLine": 178,
                                "startOffset": 38,
                                "endOffset": 46
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 193,
                                "endLine": 193,
                                "startOffset": 46,
                                "endOffset": 54
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 200,
                                "endLine": 200,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 201,
                                "endLine": 201,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 222,
                                "endLine": 222,
                                "startOffset": 50,
                                "endOffset": 58
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 223,
                                "endLine": 223,
                                "startOffset": 50,
                                "endOffset": 58
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 224,
                                "endLine": 224,
                                "startOffset": 50,
                                "endOffset": 58
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 225,
                                "endLine": 225,
                                "startOffset": 50,
                                "endOffset": 58
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 245,
                                "endLine": 245,
                                "startOffset": 39,
                                "endOffset": 47
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 246,
                                "endLine": 246,
                                "startOffset": 39,
                                "endOffset": 47
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 267,
                                "endLine": 267,
                                "startOffset": 45,
                                "endOffset": 53
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 284,
                                "endLine": 284,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 285,
                                "endLine": 285,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 286,
                                "endLine": 286,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 287,
                                "endLine": 287,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 327,
                                "endLine": 327,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 328,
                                "endLine": 328,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 368,
                                "endLine": 368,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 369,
                                "endLine": 369,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 370,
                                "endLine": 370,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 371,
                                "endLine": 371,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 423,
                                "endLine": 423,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 424,
                                "endLine": 424,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 425,
                                "endLine": 425,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 426,
                                "endLine": 426,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 443,
                                "endLine": 443,
                                "startOffset": 38,
                                "endOffset": 46
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 444,
                                "endLine": 444,
                                "startOffset": 38,
                                "endOffset": 46
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 445,
                                "endLine": 445,
                                "startOffset": 38,
                                "endOffset": 46
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 446,
                                "endLine": 446,
                                "startOffset": 38,
                                "endOffset": 46
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 479,
                                "endLine": 479,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 480,
                                "endLine": 480,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 481,
                                "endLine": 481,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 482,
                                "endLine": 482,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 483,
                                "endLine": 483,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 484,
                                "endLine": 484,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 499,
                                "endLine": 499,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 500,
                                "endLine": 500,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 501,
                                "endLine": 501,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 502,
                                "endLine": 502,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 517,
                                "endLine": 517,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 518,
                                "endLine": 518,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 519,
                                "endLine": 519,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 520,
                                "endLine": 520,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 537,
                                "endLine": 537,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 538,
                                "endLine": 538,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 539,
                                "endLine": 539,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 540,
                                "endLine": 540,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 541,
                                "endLine": 541,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_foreach.py",
                            "textRange": {
                                "startLine": 542,
                                "endLine": 542,
                                "startOffset": 42,
                                "endOffset": 50
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Define a constant instead of duplicating this literal \"cuda:0\" 62 times.",
            "effort": "2h4min",
            "debt": "2h4min",
            "author": "mlazos@fb.com",
            "tags": [
                "design"
            ],
            "creationDate": "2023-08-26T16:32:46+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zC9GwgiYR050dZBa",
            "rule": "python:S1135",
            "severity": "INFO",
            "component": "pytorch:torch/_inductor/codegen/triton_foreach.py",
            "project": "pytorch",
            "line": 197,
            "hash": "a65137d14491188f9a293d682d79af4a",
            "textRange": {
                "startLine": 197,
                "endLine": 197,
                "startOffset": 16,
                "endOffset": 53
            },
            "flows": [],
            "status": "OPEN",
            "message": "Complete the task associated to this \"TODO\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "mlazos@fb.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-08-26T16:32:46+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zLLVwgiYR050dazW",
            "rule": "python:S1192",
            "severity": "CRITICAL",
            "component": "pytorch:test/quantization/core/test_quantized_op.py",
            "project": "pytorch",
            "line": 1408,
            "hash": "261543a90e747f0c56f2a5979948acec",
            "textRange": {
                "startLine": 1408,
                "endLine": 1408,
                "startOffset": 29,
                "endOffset": 71
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:test/quantization/core/test_quantized_op.py",
                            "textRange": {
                                "startLine": 1457,
                                "endLine": 1457,
                                "startOffset": 29,
                                "endOffset": 71
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/quantization/core/test_quantized_op.py",
                            "textRange": {
                                "startLine": 1484,
                                "endLine": 1484,
                                "startOffset": 33,
                                "endOffset": 75
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/quantization/core/test_quantized_op.py",
                            "textRange": {
                                "startLine": 1590,
                                "endLine": 1590,
                                "startOffset": 29,
                                "endOffset": 71
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Define a constant instead of duplicating this literal \"ops.quantized.max_pool2d results are off\" 4 times.",
            "effort": "8min",
            "debt": "8min",
            "author": "leslie.fang@intel.com",
            "tags": [
                "design"
            ],
            "creationDate": "2023-08-26T14:06:47+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zLLVwgiYR050da3H",
            "rule": "python:S5806",
            "severity": "MAJOR",
            "component": "pytorch:test/quantization/core/test_quantized_op.py",
            "project": "pytorch",
            "line": 1472,
            "hash": "e9ea0fdea0d3aa9091cc170206ca9be2",
            "textRange": {
                "startLine": 1472,
                "endLine": 1472,
                "startOffset": 12,
                "endOffset": 17
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:test/quantization/core/test_quantized_op.py",
                            "textRange": {
                                "startLine": 1474,
                                "endLine": 1474,
                                "startOffset": 16,
                                "endOffset": 21
                            },
                            "msg": "Variable also assigned here.",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Rename this variable; it shadows a builtin.",
            "effort": "5min",
            "debt": "5min",
            "author": "leslie.fang@intel.com",
            "tags": [
                "bad-practice",
                "confusing",
                "pitfall"
            ],
            "creationDate": "2023-08-26T14:06:47+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y-biwgiYR050dYbh",
            "rule": "python:S3626",
            "severity": "MINOR",
            "component": "pytorch:torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
            "project": "pytorch",
            "line": 666,
            "hash": "e70c4df10ef0983b9c8c31bd06b2a2c3",
            "textRange": {
                "startLine": 666,
                "endLine": 666,
                "startOffset": 8,
                "endOffset": 14
            },
            "flows": [],
            "status": "OPEN",
            "message": "Remove this redundant return.",
            "effort": "1min",
            "debt": "1min",
            "author": "leslie.fang@intel.com",
            "tags": [
                "clumsy",
                "redundant"
            ],
            "creationDate": "2023-08-26T14:04:15+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y-biwgiYR050dYbi",
            "rule": "python:S1172",
            "severity": "MAJOR",
            "component": "pytorch:torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
            "project": "pytorch",
            "line": 669,
            "hash": "b883bdd062f47abae7622570895a4f3f",
            "textRange": {
                "startLine": 669,
                "endLine": 669,
                "startOffset": 26,
                "endOffset": 65
            },
            "flows": [],
            "status": "OPEN",
            "message": "Remove the unused function parameter \"quantization_config\".",
            "effort": "5min",
            "debt": "5min",
            "author": "leslie.fang@intel.com",
            "tags": [
                "unused"
            ],
            "creationDate": "2023-08-26T14:04:15+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y-biwgiYR050dYbj",
            "rule": "python:S3626",
            "severity": "MINOR",
            "component": "pytorch:torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
            "project": "pytorch",
            "line": 707,
            "hash": "e70c4df10ef0983b9c8c31bd06b2a2c3",
            "textRange": {
                "startLine": 707,
                "endLine": 707,
                "startOffset": 8,
                "endOffset": 14
            },
            "flows": [],
            "status": "OPEN",
            "message": "Remove this redundant return.",
            "effort": "1min",
            "debt": "1min",
            "author": "leslie.fang@intel.com",
            "tags": [
                "clumsy",
                "redundant"
            ],
            "creationDate": "2023-08-26T14:04:15+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zMdfwgiYR050dbaH",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "pytorch:test/test_sparse.py",
            "project": "pytorch",
            "line": 4511,
            "hash": "6bb1311fbb3fcc8d2c1044fa1b69d9fd",
            "textRange": {
                "startLine": 4511,
                "endLine": 4511,
                "startOffset": 8,
                "endOffset": 33
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:test/test_sparse.py",
                            "textRange": {
                                "startLine": 4514,
                                "endLine": 4514,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/test_sparse.py",
                            "textRange": {
                                "startLine": 4516,
                                "endLine": 4516,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/test_sparse.py",
                            "textRange": {
                                "startLine": 4518,
                                "endLine": 4518,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/test_sparse.py",
                            "textRange": {
                                "startLine": 4520,
                                "endLine": 4520,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/test_sparse.py",
                            "textRange": {
                                "startLine": 4522,
                                "endLine": 4522,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/test_sparse.py",
                            "textRange": {
                                "startLine": 4524,
                                "endLine": 4524,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/test_sparse.py",
                            "textRange": {
                                "startLine": 4528,
                                "endLine": 4528,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/test_sparse.py",
                            "textRange": {
                                "startLine": 4531,
                                "endLine": 4531,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/test_sparse.py",
                            "textRange": {
                                "startLine": 4533,
                                "endLine": 4533,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/test_sparse.py",
                            "textRange": {
                                "startLine": 4536,
                                "endLine": 4536,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/test_sparse.py",
                            "textRange": {
                                "startLine": 4538,
                                "endLine": 4538,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/test_sparse.py",
                            "textRange": {
                                "startLine": 4541,
                                "endLine": 4541,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/test_sparse.py",
                            "textRange": {
                                "startLine": 4545,
                                "endLine": 4545,
                                "startOffset": 30,
                                "endOffset": 32
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/test_sparse.py",
                            "textRange": {
                                "startLine": 4547,
                                "endLine": 4547,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/test_sparse.py",
                            "textRange": {
                                "startLine": 4548,
                                "endLine": 4548,
                                "startOffset": 16,
                                "endOffset": 19
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/test_sparse.py",
                            "textRange": {
                                "startLine": 4558,
                                "endLine": 4558,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/test_sparse.py",
                            "textRange": {
                                "startLine": 4559,
                                "endLine": 4559,
                                "startOffset": 24,
                                "endOffset": 27
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/test_sparse.py",
                            "textRange": {
                                "startLine": 4560,
                                "endLine": 4560,
                                "startOffset": 28,
                                "endOffset": 30
                            },
                            "msg": "+6 (incl 5 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/test_sparse.py",
                            "textRange": {
                                "startLine": 4567,
                                "endLine": 4567,
                                "startOffset": 28,
                                "endOffset": 32
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/test_sparse.py",
                            "textRange": {
                                "startLine": 4568,
                                "endLine": 4568,
                                "startOffset": 32,
                                "endOffset": 34
                            },
                            "msg": "+7 (incl 6 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/test_sparse.py",
                            "textRange": {
                                "startLine": 4568,
                                "endLine": 4568,
                                "startOffset": 100,
                                "endOffset": 103
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 45 to the 15 allowed.",
            "effort": "35min",
            "debt": "35min",
            "author": "pearu.peterson@gmail.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-08-26T12:54:31+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zMdfwgiYR050dbYz",
            "rule": "python:S5797",
            "severity": "CRITICAL",
            "component": "pytorch:test/test_sparse.py",
            "project": "pytorch",
            "line": 4568,
            "hash": "18bf1c9dba0e3e6e69a8185130c26cf4",
            "textRange": {
                "startLine": 4568,
                "endLine": 4568,
                "startOffset": 104,
                "endOffset": 105
            },
            "flows": [],
            "status": "OPEN",
            "message": "Replace this expression; used as a condition it will always be constant.",
            "effort": "2min",
            "debt": "2min",
            "author": "pearu.peterson@gmail.com",
            "tags": [
                "suspicious"
            ],
            "creationDate": "2023-08-26T12:54:31+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zMdfwgiYR050dbaY",
            "rule": "python:S1134",
            "severity": "MAJOR",
            "component": "pytorch:test/test_sparse.py",
            "project": "pytorch",
            "line": 5095,
            "hash": "0eb26cae2c148106bac212eb596adbcb",
            "textRange": {
                "startLine": 5095,
                "endLine": 5095,
                "startOffset": 16,
                "endOffset": 62
            },
            "flows": [],
            "status": "OPEN",
            "message": "Take the required action to fix the issue indicated by this \"FIXME\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "pearu.peterson@gmail.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-08-26T12:54:31+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zMdfwgiYR050dbaZ",
            "rule": "python:S1135",
            "severity": "INFO",
            "component": "pytorch:test/test_sparse.py",
            "project": "pytorch",
            "line": 5102,
            "hash": "4b2a684a2b44533a043f0c252b321a31",
            "textRange": {
                "startLine": 5102,
                "endLine": 5102,
                "startOffset": 20,
                "endOffset": 69
            },
            "flows": [],
            "status": "OPEN",
            "message": "Complete the task associated to this \"TODO\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "pearu.peterson@gmail.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-08-26T12:54:31+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zMdfwgiYR050dbaa",
            "rule": "python:S1134",
            "severity": "MAJOR",
            "component": "pytorch:test/test_sparse.py",
            "project": "pytorch",
            "line": 5106,
            "hash": "9d0ca18e9e8eefdf4a18ba5e9aa16f9f",
            "textRange": {
                "startLine": 5106,
                "endLine": 5106,
                "startOffset": 28,
                "endOffset": 69
            },
            "flows": [],
            "status": "OPEN",
            "message": "Take the required action to fix the issue indicated by this \"FIXME\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "pearu.peterson@gmail.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-08-26T12:54:31+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zMdfwgiYR050dbab",
            "rule": "python:S1134",
            "severity": "MAJOR",
            "component": "pytorch:test/test_sparse.py",
            "project": "pytorch",
            "line": 5112,
            "hash": "813689f43c20348122e9964ab0493f1c",
            "textRange": {
                "startLine": 5112,
                "endLine": 5112,
                "startOffset": 28,
                "endOffset": 59
            },
            "flows": [],
            "status": "OPEN",
            "message": "Take the required action to fix the issue indicated by this \"FIXME\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "pearu.peterson@gmail.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-08-26T12:54:31+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zELcwgiYR050dZU5",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "pytorch:torch/sparse/__init__.py",
            "project": "pytorch",
            "line": 501,
            "hash": "22f83d804520957fff44ef6c31b1dab3",
            "textRange": {
                "startLine": 501,
                "endLine": 501,
                "startOffset": 4,
                "endOffset": 23
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/sparse/__init__.py",
                            "textRange": {
                                "startLine": 531,
                                "endLine": 531,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/sparse/__init__.py",
                            "textRange": {
                                "startLine": 534,
                                "endLine": 534,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/sparse/__init__.py",
                            "textRange": {
                                "startLine": 535,
                                "endLine": 535,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/sparse/__init__.py",
                            "textRange": {
                                "startLine": 535,
                                "endLine": 535,
                                "startOffset": 71,
                                "endOffset": 74
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/sparse/__init__.py",
                            "textRange": {
                                "startLine": 537,
                                "endLine": 537,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/sparse/__init__.py",
                            "textRange": {
                                "startLine": 540,
                                "endLine": 540,
                                "startOffset": 84,
                                "endOffset": 86
                            },
                            "msg": "+6 (incl 5 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/sparse/__init__.py",
                            "textRange": {
                                "startLine": 544,
                                "endLine": 544,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/sparse/__init__.py",
                            "textRange": {
                                "startLine": 547,
                                "endLine": 547,
                                "startOffset": 20,
                                "endOffset": 24
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/sparse/__init__.py",
                            "textRange": {
                                "startLine": 550,
                                "endLine": 550,
                                "startOffset": 20,
                                "endOffset": 24
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/sparse/__init__.py",
                            "textRange": {
                                "startLine": 554,
                                "endLine": 554,
                                "startOffset": 16,
                                "endOffset": 20
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/sparse/__init__.py",
                            "textRange": {
                                "startLine": 564,
                                "endLine": 564,
                                "startOffset": 12,
                                "endOffset": 17
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/sparse/__init__.py",
                            "textRange": {
                                "startLine": 566,
                                "endLine": 566,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/sparse/__init__.py",
                            "textRange": {
                                "startLine": 568,
                                "endLine": 568,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/sparse/__init__.py",
                            "textRange": {
                                "startLine": 570,
                                "endLine": 570,
                                "startOffset": 20,
                                "endOffset": 24
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/sparse/__init__.py",
                            "textRange": {
                                "startLine": 573,
                                "endLine": 573,
                                "startOffset": 20,
                                "endOffset": 24
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/sparse/__init__.py",
                            "textRange": {
                                "startLine": 585,
                                "endLine": 585,
                                "startOffset": 45,
                                "endOffset": 47
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/sparse/__init__.py",
                            "textRange": {
                                "startLine": 587,
                                "endLine": 587,
                                "startOffset": 37,
                                "endOffset": 39
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/sparse/__init__.py",
                            "textRange": {
                                "startLine": 587,
                                "endLine": 587,
                                "startOffset": 88,
                                "endOffset": 91
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/sparse/__init__.py",
                            "textRange": {
                                "startLine": 590,
                                "endLine": 590,
                                "startOffset": 35,
                                "endOffset": 37
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 54 to the 15 allowed.",
            "effort": "44min",
            "debt": "44min",
            "author": "pearu.peterson@gmail.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-08-26T12:54:31+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y-8UwgiYR050dYgB",
            "rule": "python:S5807",
            "severity": "BLOCKER",
            "component": "pytorch:torch/distributed/_tensor/__init__.py",
            "project": "pytorch",
            "line": 23,
            "hash": "6c4172931377061578053e9ba1ffbfd0",
            "textRange": {
                "startLine": 23,
                "endLine": 23,
                "startOffset": 4,
                "endOffset": 23
            },
            "flows": [],
            "status": "OPEN",
            "message": "Change or remove this string; \"init_device_mesh,\" is not defined.",
            "effort": "1min",
            "debt": "1min",
            "author": "wz337@cornell.edu",
            "tags": [],
            "creationDate": "2023-08-26T12:18:17+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "BUG",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zBvywgiYR050dYzy",
            "rule": "python:S5806",
            "severity": "MAJOR",
            "component": "pytorch:torch/onnx/symbolic_opset11.py",
            "project": "pytorch",
            "line": 627,
            "hash": "520705a20881094a2d2bc6425ef5021b",
            "textRange": {
                "startLine": 627,
                "endLine": 627,
                "startOffset": 4,
                "endOffset": 9
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this variable; it shadows a builtin.",
            "effort": "5min",
            "debt": "5min",
            "author": "yuxian.chen@armchina.com",
            "tags": [
                "bad-practice",
                "confusing",
                "pitfall"
            ],
            "creationDate": "2023-08-26T11:24:52+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zKsywgiYR050dakE",
            "rule": "python:S1066",
            "severity": "MAJOR",
            "component": "pytorch:test/inductor/test_triton_heuristics.py",
            "project": "pytorch",
            "line": 35,
            "hash": "6b710f42284912fe5ca05f8256a33770",
            "textRange": {
                "startLine": 35,
                "endLine": 35,
                "startOffset": 4,
                "endOffset": 6
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:test/inductor/test_triton_heuristics.py",
                            "textRange": {
                                "startLine": 34,
                                "endLine": 34,
                                "startOffset": 0,
                                "endOffset": 2
                            },
                            "msg": "enclosing",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Merge this if statement with the enclosing one.",
            "effort": "5min",
            "debt": "5min",
            "author": "shunting@fb.com",
            "tags": [
                "clumsy"
            ],
            "creationDate": "2023-08-26T08:26:20+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zDDdwgiYR050dZEW",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "pytorch:torch/_inductor/triton_heuristics.py",
            "project": "pytorch",
            "line": 669,
            "hash": "6438d5fecc4712e8cd1eaa368d458b6f",
            "textRange": {
                "startLine": 669,
                "endLine": 669,
                "startOffset": 4,
                "endOffset": 17
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/triton_heuristics.py",
                            "textRange": {
                                "startLine": 692,
                                "endLine": 692,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/triton_heuristics.py",
                            "textRange": {
                                "startLine": 697,
                                "endLine": 697,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/triton_heuristics.py",
                            "textRange": {
                                "startLine": 699,
                                "endLine": 699,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/triton_heuristics.py",
                            "textRange": {
                                "startLine": 704,
                                "endLine": 704,
                                "startOffset": 4,
                                "endOffset": 9
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/triton_heuristics.py",
                            "textRange": {
                                "startLine": 704,
                                "endLine": 704,
                                "startOffset": 63,
                                "endOffset": 66
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/triton_heuristics.py",
                            "textRange": {
                                "startLine": 705,
                                "endLine": 705,
                                "startOffset": 43,
                                "endOffset": 45
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/triton_heuristics.py",
                            "textRange": {
                                "startLine": 708,
                                "endLine": 708,
                                "startOffset": 4,
                                "endOffset": 9
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/triton_heuristics.py",
                            "textRange": {
                                "startLine": 711,
                                "endLine": 711,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/triton_heuristics.py",
                            "textRange": {
                                "startLine": 712,
                                "endLine": 712,
                                "startOffset": 47,
                                "endOffset": 49
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/triton_heuristics.py",
                            "textRange": {
                                "startLine": 716,
                                "endLine": 716,
                                "startOffset": 4,
                                "endOffset": 9
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/triton_heuristics.py",
                            "textRange": {
                                "startLine": 719,
                                "endLine": 719,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/triton_heuristics.py",
                            "textRange": {
                                "startLine": 720,
                                "endLine": 720,
                                "startOffset": 47,
                                "endOffset": 49
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/triton_heuristics.py",
                            "textRange": {
                                "startLine": 726,
                                "endLine": 726,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/triton_heuristics.py",
                            "textRange": {
                                "startLine": 728,
                                "endLine": 728,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/triton_heuristics.py",
                            "textRange": {
                                "startLine": 739,
                                "endLine": 739,
                                "startOffset": 34,
                                "endOffset": 36
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/triton_heuristics.py",
                            "textRange": {
                                "startLine": 741,
                                "endLine": 741,
                                "startOffset": 27,
                                "endOffset": 29
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/triton_heuristics.py",
                            "textRange": {
                                "startLine": 742,
                                "endLine": 742,
                                "startOffset": 27,
                                "endOffset": 29
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 17 to the 15 allowed.",
            "effort": "7min",
            "debt": "7min",
            "author": "shunting@fb.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-08-26T08:26:20+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zDflwgiYR050dZJe",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "pytorch:torch/_export/serde/serialize.py",
            "project": "pytorch",
            "line": 527,
            "hash": "6c78eb2d1b68b8a85c7172f0c2d047e8",
            "textRange": {
                "startLine": 527,
                "endLine": 527,
                "startOffset": 8,
                "endOffset": 23
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 528,
                                "endLine": 528,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 529,
                                "endLine": 529,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 533,
                                "endLine": 533,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 536,
                                "endLine": 536,
                                "startOffset": 16,
                                "endOffset": 20
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 540,
                                "endLine": 540,
                                "startOffset": 16,
                                "endOffset": 20
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 542,
                                "endLine": 542,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 544,
                                "endLine": 544,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 546,
                                "endLine": 546,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 548,
                                "endLine": 548,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 550,
                                "endLine": 550,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 552,
                                "endLine": 552,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 554,
                                "endLine": 554,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 556,
                                "endLine": 556,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 558,
                                "endLine": 558,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 560,
                                "endLine": 560,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 562,
                                "endLine": 562,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 564,
                                "endLine": 564,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 566,
                                "endLine": 566,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 568,
                                "endLine": 568,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 571,
                                "endLine": 571,
                                "startOffset": 16,
                                "endOffset": 19
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 572,
                                "endLine": 572,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 574,
                                "endLine": 574,
                                "startOffset": 20,
                                "endOffset": 24
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 577,
                                "endLine": 577,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 580,
                                "endLine": 580,
                                "startOffset": 16,
                                "endOffset": 19
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 581,
                                "endLine": 581,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 583,
                                "endLine": 583,
                                "startOffset": 20,
                                "endOffset": 24
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 586,
                                "endLine": 586,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 589,
                                "endLine": 589,
                                "startOffset": 16,
                                "endOffset": 19
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 590,
                                "endLine": 590,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 597,
                                "endLine": 597,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 599,
                                "endLine": 599,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 601,
                                "endLine": 601,
                                "startOffset": 20,
                                "endOffset": 24
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 603,
                                "endLine": 603,
                                "startOffset": 20,
                                "endOffset": 24
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 608,
                                "endLine": 608,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 610,
                                "endLine": 610,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 612,
                                "endLine": 612,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 614,
                                "endLine": 614,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 616,
                                "endLine": 616,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 618,
                                "endLine": 618,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 619,
                                "endLine": 619,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 620,
                                "endLine": 620,
                                "startOffset": 51,
                                "endOffset": 54
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 633,
                                "endLine": 633,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 65 to the 15 allowed.",
            "effort": "55min",
            "debt": "55min",
            "author": "yiangela7@gmail.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-08-26T08:11:49+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zDflwgiYR050dZJi",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "pytorch:torch/_export/serde/serialize.py",
            "project": "pytorch",
            "line": 1086,
            "hash": "6113237d5a521fad6f068cab0b855de9",
            "textRange": {
                "startLine": 1086,
                "endLine": 1086,
                "startOffset": 8,
                "endOffset": 25
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 1089,
                                "endLine": 1089,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 1093,
                                "endLine": 1093,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 1095,
                                "endLine": 1095,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 1097,
                                "endLine": 1097,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 1099,
                                "endLine": 1099,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 1110,
                                "endLine": 1110,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 1112,
                                "endLine": 1112,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 1113,
                                "endLine": 1113,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 1122,
                                "endLine": 1122,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 1124,
                                "endLine": 1124,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 1126,
                                "endLine": 1126,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 1128,
                                "endLine": 1128,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 1129,
                                "endLine": 1129,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 1131,
                                "endLine": 1131,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 1133,
                                "endLine": 1133,
                                "startOffset": 16,
                                "endOffset": 19
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 1134,
                                "endLine": 1134,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 1144,
                                "endLine": 1144,
                                "startOffset": 20,
                                "endOffset": 24
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 1147,
                                "endLine": 1147,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 1150,
                                "endLine": 1150,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 1152,
                                "endLine": 1152,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 1154,
                                "endLine": 1154,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 1156,
                                "endLine": 1156,
                                "startOffset": 20,
                                "endOffset": 24
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 1158,
                                "endLine": 1158,
                                "startOffset": 20,
                                "endOffset": 24
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 1161,
                                "endLine": 1161,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 1163,
                                "endLine": 1163,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/serde/serialize.py",
                            "textRange": {
                                "startLine": 1168,
                                "endLine": 1168,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 36 to the 15 allowed.",
            "effort": "26min",
            "debt": "26min",
            "author": "yiangela7@gmail.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-08-26T08:11:49+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zEDzwgiYR050dZTM",
            "rule": "python:S1172",
            "severity": "MAJOR",
            "component": "pytorch:torch/export/__init__.py",
            "project": "pytorch",
            "line": 596,
            "hash": "15e8417b3ba655bf0004af7c419cda83",
            "textRange": {
                "startLine": 596,
                "endLine": 596,
                "startOffset": 16,
                "endOffset": 19
            },
            "flows": [],
            "status": "OPEN",
            "message": "Remove the unused function parameter \"cls\".",
            "effort": "5min",
            "debt": "5min",
            "author": "tmanlaibaatar@fb.com",
            "tags": [
                "unused"
            ],
            "creationDate": "2023-08-26T07:42:47+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y84FwgiYR050dYOu",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
            "project": "pytorch",
            "line": 406,
            "hash": "fdd40b321e8c1847121eac39670db47d",
            "textRange": {
                "startLine": 406,
                "endLine": 406,
                "startOffset": 8,
                "endOffset": 19
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 412,
                                "endLine": 412,
                                "startOffset": 47,
                                "endOffset": 49
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 418,
                                "endLine": 418,
                                "startOffset": 8,
                                "endOffset": 14
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 420,
                                "endLine": 420,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 424,
                                "endLine": 424,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 427,
                                "endLine": 427,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 431,
                                "endLine": 431,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 436,
                                "endLine": 436,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 440,
                                "endLine": 440,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 444,
                                "endLine": 444,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 444,
                                "endLine": 444,
                                "startOffset": 52,
                                "endOffset": 54
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 446,
                                "endLine": 446,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 453,
                                "endLine": 453,
                                "startOffset": 12,
                                "endOffset": 17
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 453,
                                "endLine": 453,
                                "startOffset": 43,
                                "endOffset": 46
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 456,
                                "endLine": 456,
                                "startOffset": 67,
                                "endOffset": 69
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 458,
                                "endLine": 458,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 459,
                                "endLine": 459,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 462,
                                "endLine": 462,
                                "startOffset": 56,
                                "endOffset": 58
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 463,
                                "endLine": 463,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 467,
                                "endLine": 467,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 471,
                                "endLine": 471,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 472,
                                "endLine": 472,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 475,
                                "endLine": 475,
                                "startOffset": 16,
                                "endOffset": 20
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 479,
                                "endLine": 479,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 482,
                                "endLine": 482,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 490,
                                "endLine": 490,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 492,
                                "endLine": 492,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 495,
                                "endLine": 495,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 499,
                                "endLine": 499,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 501,
                                "endLine": 501,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 515,
                                "endLine": 515,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 524,
                                "endLine": 524,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 524,
                                "endLine": 524,
                                "startOffset": 53,
                                "endOffset": 56
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 526,
                                "endLine": 526,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_dynamo/variables/user_defined.py",
                            "textRange": {
                                "startLine": 531,
                                "endLine": 531,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 49 to the 15 allowed.",
            "effort": "39min",
            "debt": "39min",
            "author": "jansel@jansel.net",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-08-26T07:11:29+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8y-ajwgiYR050dYbS",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "pytorch:torch/ao/quantization/quantizer/xnnpack_quantizer_utils.py",
            "project": "pytorch",
            "line": 260,
            "hash": "7ec82e39877f9da39e93cd2cc16f4459",
            "textRange": {
                "startLine": 260,
                "endLine": 260,
                "startOffset": 4,
                "endOffset": 25
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/xnnpack_quantizer_utils.py",
                            "textRange": {
                                "startLine": 268,
                                "endLine": 268,
                                "startOffset": 4,
                                "endOffset": 7
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/xnnpack_quantizer_utils.py",
                            "textRange": {
                                "startLine": 270,
                                "endLine": 270,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/xnnpack_quantizer_utils.py",
                            "textRange": {
                                "startLine": 273,
                                "endLine": 273,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/xnnpack_quantizer_utils.py",
                            "textRange": {
                                "startLine": 277,
                                "endLine": 277,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/xnnpack_quantizer_utils.py",
                            "textRange": {
                                "startLine": 279,
                                "endLine": 279,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/xnnpack_quantizer_utils.py",
                            "textRange": {
                                "startLine": 281,
                                "endLine": 281,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/xnnpack_quantizer_utils.py",
                            "textRange": {
                                "startLine": 284,
                                "endLine": 284,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/xnnpack_quantizer_utils.py",
                            "textRange": {
                                "startLine": 284,
                                "endLine": 284,
                                "startOffset": 43,
                                "endOffset": 45
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/xnnpack_quantizer_utils.py",
                            "textRange": {
                                "startLine": 290,
                                "endLine": 290,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/xnnpack_quantizer_utils.py",
                            "textRange": {
                                "startLine": 302,
                                "endLine": 302,
                                "startOffset": 33,
                                "endOffset": 35
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/ao/quantization/quantizer/xnnpack_quantizer_utils.py",
                            "textRange": {
                                "startLine": 303,
                                "endLine": 303,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 19 to the 15 allowed.",
            "effort": "9min",
            "debt": "9min",
            "author": "andrewor14@gmail.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-08-26T06:31:54+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zDcDwgiYR050dZJG",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "pytorch:torch/_export/__init__.py",
            "project": "pytorch",
            "line": 212,
            "hash": "a5cada6df64a14b308b46ac0f358d40f",
            "textRange": {
                "startLine": 212,
                "endLine": 212,
                "startOffset": 4,
                "endOffset": 10
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 240,
                                "endLine": 240,
                                "startOffset": 30,
                                "endOffset": 32
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 241,
                                "endLine": 241,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 243,
                                "endLine": 243,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 249,
                                "endLine": 249,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 250,
                                "endLine": 250,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 261,
                                "endLine": 261,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 261,
                                "endLine": 261,
                                "startOffset": 51,
                                "endOffset": 54
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 262,
                                "endLine": 262,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 268,
                                "endLine": 268,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 279,
                                "endLine": 279,
                                "startOffset": 8,
                                "endOffset": 14
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 281,
                                "endLine": 281,
                                "startOffset": 8,
                                "endOffset": 14
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 287,
                                "endLine": 287,
                                "startOffset": 4,
                                "endOffset": 7
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 290,
                                "endLine": 290,
                                "startOffset": 4,
                                "endOffset": 7
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 299,
                                "endLine": 299,
                                "startOffset": 4,
                                "endOffset": 7
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 300,
                                "endLine": 300,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 300,
                                "endLine": 300,
                                "startOffset": 33,
                                "endOffset": 36
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 303,
                                "endLine": 303,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 310,
                                "endLine": 310,
                                "startOffset": 4,
                                "endOffset": 7
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 313,
                                "endLine": 313,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 315,
                                "endLine": 315,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 316,
                                "endLine": 316,
                                "startOffset": 16,
                                "endOffset": 19
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 319,
                                "endLine": 319,
                                "startOffset": 16,
                                "endOffset": 19
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 322,
                                "endLine": 322,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 324,
                                "endLine": 324,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 330,
                                "endLine": 330,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 330,
                                "endLine": 330,
                                "startOffset": 38,
                                "endOffset": 41
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 331,
                                "endLine": 331,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 332,
                                "endLine": 332,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 333,
                                "endLine": 333,
                                "startOffset": 20,
                                "endOffset": 23
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 334,
                                "endLine": 334,
                                "startOffset": 24,
                                "endOffset": 26
                            },
                            "msg": "+6 (incl 5 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 340,
                                "endLine": 340,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 367,
                                "endLine": 367,
                                "startOffset": 6,
                                "endOffset": 8
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 391,
                                "endLine": 391,
                                "startOffset": 4,
                                "endOffset": 7
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 392,
                                "endLine": 392,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 393,
                                "endLine": 393,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 395,
                                "endLine": 395,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 415,
                                "endLine": 415,
                                "startOffset": 4,
                                "endOffset": 7
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 416,
                                "endLine": 416,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 417,
                                "endLine": 417,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 419,
                                "endLine": 419,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 420,
                                "endLine": 420,
                                "startOffset": 20,
                                "endOffset": 23
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 422,
                                "endLine": 422,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 424,
                                "endLine": 424,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 425,
                                "endLine": 425,
                                "startOffset": 20,
                                "endOffset": 23
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/__init__.py",
                            "textRange": {
                                "startLine": 451,
                                "endLine": 451,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 102 to the 15 allowed.",
            "effort": "1h32min",
            "debt": "1h32min",
            "author": "tmanlaibaatar@fb.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-08-26T06:21:28+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zDhawgiYR050dZJq",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "pytorch:torch/_export/pass_base.py",
            "project": "pytorch",
            "line": 86,
            "hash": "88061e23f746cf1c63165187f4ec2e6e",
            "textRange": {
                "startLine": 86,
                "endLine": 86,
                "startOffset": 12,
                "endOffset": 24
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/pass_base.py",
                            "textRange": {
                                "startLine": 93,
                                "endLine": 93,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/pass_base.py",
                            "textRange": {
                                "startLine": 95,
                                "endLine": 95,
                                "startOffset": 16,
                                "endOffset": 20
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/pass_base.py",
                            "textRange": {
                                "startLine": 96,
                                "endLine": 96,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/pass_base.py",
                            "textRange": {
                                "startLine": 104,
                                "endLine": 104,
                                "startOffset": 24,
                                "endOffset": 26
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/pass_base.py",
                            "textRange": {
                                "startLine": 108,
                                "endLine": 108,
                                "startOffset": 24,
                                "endOffset": 28
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/pass_base.py",
                            "textRange": {
                                "startLine": 110,
                                "endLine": 110,
                                "startOffset": 20,
                                "endOffset": 26
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/pass_base.py",
                            "textRange": {
                                "startLine": 119,
                                "endLine": 119,
                                "startOffset": 16,
                                "endOffset": 20
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/pass_base.py",
                            "textRange": {
                                "startLine": 121,
                                "endLine": 121,
                                "startOffset": 16,
                                "endOffset": 20
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/pass_base.py",
                            "textRange": {
                                "startLine": 128,
                                "endLine": 128,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/pass_base.py",
                            "textRange": {
                                "startLine": 128,
                                "endLine": 128,
                                "startOffset": 49,
                                "endOffset": 52
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/pass_base.py",
                            "textRange": {
                                "startLine": 129,
                                "endLine": 129,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/pass_base.py",
                            "textRange": {
                                "startLine": 137,
                                "endLine": 137,
                                "startOffset": 20,
                                "endOffset": 26
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/pass_base.py",
                            "textRange": {
                                "startLine": 142,
                                "endLine": 142,
                                "startOffset": 16,
                                "endOffset": 20
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 25 to the 15 allowed.",
            "effort": "15min",
            "debt": "15min",
            "author": "tmanlaibaatar@fb.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-08-26T06:21:28+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zDdCwgiYR050dZJN",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "pytorch:torch/_export/passes/add_runtime_assertions_for_constraints_pass.py",
            "project": "pytorch",
            "line": 158,
            "hash": "28d408abdb572e67e360d007793c2b0d",
            "textRange": {
                "startLine": 158,
                "endLine": 158,
                "startOffset": 8,
                "endOffset": 12
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/passes/add_runtime_assertions_for_constraints_pass.py",
                            "textRange": {
                                "startLine": 163,
                                "endLine": 163,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/passes/add_runtime_assertions_for_constraints_pass.py",
                            "textRange": {
                                "startLine": 164,
                                "endLine": 164,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/passes/add_runtime_assertions_for_constraints_pass.py",
                            "textRange": {
                                "startLine": 167,
                                "endLine": 167,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/passes/add_runtime_assertions_for_constraints_pass.py",
                            "textRange": {
                                "startLine": 174,
                                "endLine": 174,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/passes/add_runtime_assertions_for_constraints_pass.py",
                            "textRange": {
                                "startLine": 175,
                                "endLine": 175,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/passes/add_runtime_assertions_for_constraints_pass.py",
                            "textRange": {
                                "startLine": 178,
                                "endLine": 178,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/passes/add_runtime_assertions_for_constraints_pass.py",
                            "textRange": {
                                "startLine": 179,
                                "endLine": 179,
                                "startOffset": 39,
                                "endOffset": 41
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/passes/add_runtime_assertions_for_constraints_pass.py",
                            "textRange": {
                                "startLine": 183,
                                "endLine": 183,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/passes/add_runtime_assertions_for_constraints_pass.py",
                            "textRange": {
                                "startLine": 186,
                                "endLine": 186,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/passes/add_runtime_assertions_for_constraints_pass.py",
                            "textRange": {
                                "startLine": 188,
                                "endLine": 188,
                                "startOffset": 16,
                                "endOffset": 19
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/passes/add_runtime_assertions_for_constraints_pass.py",
                            "textRange": {
                                "startLine": 197,
                                "endLine": 197,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/passes/add_runtime_assertions_for_constraints_pass.py",
                            "textRange": {
                                "startLine": 200,
                                "endLine": 200,
                                "startOffset": 24,
                                "endOffset": 26
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/passes/add_runtime_assertions_for_constraints_pass.py",
                            "textRange": {
                                "startLine": 204,
                                "endLine": 204,
                                "startOffset": 20,
                                "endOffset": 24
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_export/passes/add_runtime_assertions_for_constraints_pass.py",
                            "textRange": {
                                "startLine": 213,
                                "endLine": 213,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 27 to the 15 allowed.",
            "effort": "17min",
            "debt": "17min",
            "author": "tmanlaibaatar@fb.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-08-26T06:21:28+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zLafwgiYR050dbFN",
            "rule": "python:S1135",
            "severity": "INFO",
            "component": "pytorch:test/quantization/pt2e/test_quantize_pt2e.py",
            "project": "pytorch",
            "line": 536,
            "hash": "a913c425717f9cc4979f63d1d26be214",
            "textRange": {
                "startLine": 536,
                "endLine": 536,
                "startOffset": 8,
                "endOffset": 87
            },
            "flows": [],
            "status": "OPEN",
            "message": "Complete the task associated to this \"TODO\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "jerryzh168@gmail.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-08-26T06:07:45+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zNLbwgiYR050dbtD",
            "rule": "python:S5806",
            "severity": "MAJOR",
            "component": "pytorch:test/nn/test_pooling.py",
            "project": "pytorch",
            "line": 979,
            "hash": "5875a7eb407de8a1d52a9d1ba2c1d040",
            "textRange": {
                "startLine": 979,
                "endLine": 979,
                "startOffset": 12,
                "endOffset": 17
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:test/nn/test_pooling.py",
                            "textRange": {
                                "startLine": 980,
                                "endLine": 980,
                                "startOffset": 12,
                                "endOffset": 17
                            },
                            "msg": "Variable also assigned here.",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Rename this variable; it shadows a builtin.",
            "effort": "5min",
            "debt": "5min",
            "author": "e.cao@intel.com",
            "tags": [
                "bad-practice",
                "confusing",
                "pitfall"
            ],
            "creationDate": "2023-08-26T05:51:27+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zMCUwgiYR050dbQJ",
            "rule": "python:S1192",
            "severity": "CRITICAL",
            "component": "pytorch:test/onnx/test_fx_op_consistency.py",
            "project": "pytorch",
            "line": 143,
            "hash": "70dfb6e5cdf55fbdd892741345632e70",
            "textRange": {
                "startLine": 143,
                "endLine": 143,
                "startOffset": 8,
                "endOffset": 34
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:test/onnx/test_fx_op_consistency.py",
                            "textRange": {
                                "startLine": 398,
                                "endLine": 398,
                                "startOffset": 8,
                                "endOffset": 34
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/onnx/test_fx_op_consistency.py",
                            "textRange": {
                                "startLine": 566,
                                "endLine": 566,
                                "startOffset": 8,
                                "endOffset": 34
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Define a constant instead of duplicating this literal \"nn.functional.max_pool3d\" 3 times.",
            "effort": "6min",
            "debt": "6min",
            "author": "e.cao@intel.com",
            "tags": [
                "design"
            ],
            "creationDate": "2023-08-26T05:51:27+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zBUSwgiYR050dYvt",
            "rule": "python:S1135",
            "severity": "INFO",
            "component": "pytorch:torch/onnx/_internal/fx/fx_onnx_interpreter.py",
            "project": "pytorch",
            "line": 809,
            "hash": "398cd0fbd8b4d29c22856de289e55d59",
            "textRange": {
                "startLine": 809,
                "endLine": 809,
                "startOffset": 8,
                "endOffset": 89
            },
            "flows": [],
            "status": "OPEN",
            "message": "Complete the task associated to this \"TODO\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "titaiwang@microsoft.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-08-26T05:36:49+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zDG4wgiYR050dZFu",
            "rule": "python:S107",
            "severity": "MAJOR",
            "component": "pytorch:torch/_inductor/ir.py",
            "project": "pytorch",
            "line": 4892,
            "hash": "1f904b2922bfa2112309e9f617299402",
            "textRange": {
                "startLine": 4892,
                "endLine": 4914,
                "startOffset": 8,
                "endOffset": 24
            },
            "flows": [],
            "status": "OPEN",
            "message": "Method \"create\" has 22 parameters, which is greater than the 13 authorized.",
            "effort": "20min",
            "debt": "20min",
            "author": "leslie.fang@intel.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-08-26T02:46:02+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zDG4wgiYR050dZFv",
            "rule": "python:S5655",
            "severity": "CRITICAL",
            "component": "pytorch:torch/_inductor/ir.py",
            "project": "pytorch",
            "line": 4933,
            "hash": "f730cdbd6427c31e9b985398b6de008d",
            "textRange": {
                "startLine": 4933,
                "endLine": 4933,
                "startOffset": 12,
                "endOffset": 26
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:torch/_inductor/ir.py",
                            "textRange": {
                                "startLine": 4933,
                                "endLine": 4933,
                                "startOffset": 12,
                                "endOffset": 26
                            },
                            "msg": "Change this argument; Function \"_prepare_convolution_fusion_create\" expects a different type",
                            "msgFormattings": []
                        },
                        {
                            "component": "pytorch:torch/_inductor/ir.py",
                            "textRange": {
                                "startLine": 3838,
                                "endLine": 3838,
                                "startOffset": 4,
                                "endOffset": 38
                            },
                            "msg": "Function definition",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Change this argument; Function \"_prepare_convolution_fusion_create\" expects a different type",
            "effort": "20min",
            "debt": "20min",
            "author": "leslie.fang@intel.com",
            "tags": [
                "suspicious"
            ],
            "creationDate": "2023-08-26T02:46:02+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zDCewgiYR050dZDk",
            "rule": "python:S107",
            "severity": "MAJOR",
            "component": "pytorch:torch/_inductor/lowering.py",
            "project": "pytorch",
            "line": 1356,
            "hash": "493ef596bb17cf86488c143903668191",
            "textRange": {
                "startLine": 1356,
                "endLine": 1377,
                "startOffset": 12,
                "endOffset": 29
            },
            "flows": [],
            "status": "OPEN",
            "message": "Function \"qconvolution_binary\" has 22 parameters, which is greater than the 13 authorized.",
            "effort": "20min",
            "debt": "20min",
            "author": "leslie.fang@intel.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-08-26T02:46:02+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zKjAwgiYR050dajF",
            "rule": "python:S5806",
            "severity": "MAJOR",
            "component": "pytorch:test/inductor/test_cpu_repro.py",
            "project": "pytorch",
            "line": 1858,
            "hash": "b3c00764ee6b9c59c6be10197dc1f911",
            "textRange": {
                "startLine": 1858,
                "endLine": 1858,
                "startOffset": 12,
                "endOffset": 17
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this variable; it shadows a builtin.",
            "effort": "5min",
            "debt": "5min",
            "author": "xiaobing.zhang@intel.com",
            "tags": [
                "bad-practice",
                "confusing",
                "pitfall"
            ],
            "creationDate": "2023-08-26T02:41:09+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zC91wgiYR050dZBo",
            "rule": "python:S1135",
            "severity": "INFO",
            "component": "pytorch:torch/_inductor/codegen/cpp.py",
            "project": "pytorch",
            "line": 1513,
            "hash": "c36c6c7f6fc7d3293fe80899a37c6592",
            "textRange": {
                "startLine": 1513,
                "endLine": 1513,
                "startOffset": 12,
                "endOffset": 64
            },
            "flows": [],
            "status": "OPEN",
            "message": "Complete the task associated to this \"TODO\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "xiaobing.zhang@intel.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-08-26T02:41:09+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zOeLwgiYR050dctP",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "pytorch:torchgen/api/python.py",
            "project": "pytorch",
            "line": 904,
            "hash": "76523d79b745bea2037d82ce2fbbfe4e",
            "textRange": {
                "startLine": 904,
                "endLine": 904,
                "startOffset": 4,
                "endOffset": 25
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 906,
                                "endLine": 906,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 910,
                                "endLine": 910,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 911,
                                "endLine": 911,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 913,
                                "endLine": 913,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 915,
                                "endLine": 915,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 917,
                                "endLine": 917,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 919,
                                "endLine": 919,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 921,
                                "endLine": 921,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 923,
                                "endLine": 923,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 925,
                                "endLine": 925,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 927,
                                "endLine": 927,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 929,
                                "endLine": 929,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 931,
                                "endLine": 931,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 933,
                                "endLine": 933,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 935,
                                "endLine": 935,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 937,
                                "endLine": 937,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 941,
                                "endLine": 941,
                                "startOffset": 4,
                                "endOffset": 8
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 942,
                                "endLine": 942,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 943,
                                "endLine": 943,
                                "startOffset": 39,
                                "endOffset": 41
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 944,
                                "endLine": 944,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 948,
                                "endLine": 948,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 952,
                                "endLine": 952,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 955,
                                "endLine": 955,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 957,
                                "endLine": 957,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 957,
                                "endLine": 957,
                                "startOffset": 37,
                                "endOffset": 40
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 960,
                                "endLine": 960,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 964,
                                "endLine": 964,
                                "startOffset": 4,
                                "endOffset": 8
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 967,
                                "endLine": 967,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 37 to the 15 allowed.",
            "effort": "27min",
            "debt": "27min",
            "author": "cyyever@outlook.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-08-26T01:46:14+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zOeLwgiYR050dctV",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "pytorch:torchgen/api/python.py",
            "project": "pytorch",
            "line": 1229,
            "hash": "a12fbe8ebe7399919e9ac761742dff66",
            "textRange": {
                "startLine": 1229,
                "endLine": 1229,
                "startOffset": 4,
                "endOffset": 28
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1233,
                                "endLine": 1233,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1233,
                                "endLine": 1233,
                                "startOffset": 24,
                                "endOffset": 27
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1245,
                                "endLine": 1245,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1246,
                                "endLine": 1246,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1255,
                                "endLine": 1255,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1256,
                                "endLine": 1256,
                                "startOffset": 43,
                                "endOffset": 45
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1257,
                                "endLine": 1257,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1258,
                                "endLine": 1258,
                                "startOffset": 39,
                                "endOffset": 41
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1259,
                                "endLine": 1259,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1261,
                                "endLine": 1261,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1263,
                                "endLine": 1263,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1264,
                                "endLine": 1264,
                                "startOffset": 30,
                                "endOffset": 32
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1265,
                                "endLine": 1265,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1266,
                                "endLine": 1266,
                                "startOffset": 39,
                                "endOffset": 41
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1267,
                                "endLine": 1267,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1269,
                                "endLine": 1269,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1271,
                                "endLine": 1271,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1272,
                                "endLine": 1272,
                                "startOffset": 39,
                                "endOffset": 41
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1273,
                                "endLine": 1273,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1276,
                                "endLine": 1276,
                                "startOffset": 4,
                                "endOffset": 8
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1277,
                                "endLine": 1277,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1279,
                                "endLine": 1279,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1281,
                                "endLine": 1281,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1283,
                                "endLine": 1283,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1283,
                                "endLine": 1283,
                                "startOffset": 34,
                                "endOffset": 37
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1288,
                                "endLine": 1288,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1294,
                                "endLine": 1294,
                                "startOffset": 4,
                                "endOffset": 8
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1295,
                                "endLine": 1295,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1297,
                                "endLine": 1297,
                                "startOffset": 45,
                                "endOffset": 47
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1298,
                                "endLine": 1298,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1300,
                                "endLine": 1300,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1303,
                                "endLine": 1303,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1306,
                                "endLine": 1306,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1308,
                                "endLine": 1308,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1310,
                                "endLine": 1310,
                                "startOffset": 32,
                                "endOffset": 34
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:torchgen/api/python.py",
                            "textRange": {
                                "startLine": 1311,
                                "endLine": 1311,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 53 to the 15 allowed.",
            "effort": "43min",
            "debt": "43min",
            "author": "cyyever@outlook.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-08-26T01:46:14+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zKQJwgiYR050daej",
            "rule": "python:S1192",
            "severity": "CRITICAL",
            "component": "pytorch:test/distributed/test_data_parallel.py",
            "project": "pytorch",
            "line": 275,
            "hash": "5b6f4d9be6bed2cf7de4674b79e2b215",
            "textRange": {
                "startLine": 275,
                "endLine": 275,
                "startOffset": 22,
                "endOffset": 30
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:test/distributed/test_data_parallel.py",
                            "textRange": {
                                "startLine": 460,
                                "endLine": 460,
                                "startOffset": 29,
                                "endOffset": 37
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/distributed/test_data_parallel.py",
                            "textRange": {
                                "startLine": 543,
                                "endLine": 543,
                                "startOffset": 37,
                                "endOffset": 45
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/distributed/test_data_parallel.py",
                            "textRange": {
                                "startLine": 564,
                                "endLine": 564,
                                "startOffset": 35,
                                "endOffset": 43
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Define a constant instead of duplicating this literal \u0027cuda:1\u0027 4 times.",
            "effort": "8min",
            "debt": "8min",
            "author": "pytorchmergebot@users.noreply.github.com",
            "tags": [
                "design"
            ],
            "creationDate": "2023-08-26T01:04:55+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zKQJwgiYR050daek",
            "rule": "python:S1192",
            "severity": "CRITICAL",
            "component": "pytorch:test/distributed/test_data_parallel.py",
            "project": "pytorch",
            "line": 442,
            "hash": "0af3abf81df8d58f313f9c3bf1e25f49",
            "textRange": {
                "startLine": 442,
                "endLine": 442,
                "startOffset": 43,
                "endOffset": 51
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:test/distributed/test_data_parallel.py",
                            "textRange": {
                                "startLine": 449,
                                "endLine": 449,
                                "startOffset": 43,
                                "endOffset": 51
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/distributed/test_data_parallel.py",
                            "textRange": {
                                "startLine": 459,
                                "endLine": 459,
                                "startOffset": 29,
                                "endOffset": 37
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/distributed/test_data_parallel.py",
                            "textRange": {
                                "startLine": 495,
                                "endLine": 495,
                                "startOffset": 60,
                                "endOffset": 68
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/distributed/test_data_parallel.py",
                            "textRange": {
                                "startLine": 497,
                                "endLine": 497,
                                "startOffset": 52,
                                "endOffset": 60
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/distributed/test_data_parallel.py",
                            "textRange": {
                                "startLine": 542,
                                "endLine": 542,
                                "startOffset": 37,
                                "endOffset": 45
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/distributed/test_data_parallel.py",
                            "textRange": {
                                "startLine": 563,
                                "endLine": 563,
                                "startOffset": 35,
                                "endOffset": 43
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Define a constant instead of duplicating this literal \u0027cuda:0\u0027 7 times.",
            "effort": "14min",
            "debt": "14min",
            "author": "pytorchmergebot@users.noreply.github.com",
            "tags": [
                "design"
            ],
            "creationDate": "2023-08-26T01:04:55+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zMiHwgiYR050dbbh",
            "rule": "python:S1135",
            "severity": "INFO",
            "component": "pytorch:test/distributions/test_distributions.py",
            "project": "pytorch",
            "line": 41,
            "hash": "8455af7baec1fe86cbe805c16d557c6e",
            "textRange": {
                "startLine": 41,
                "endLine": 41,
                "startOffset": 0,
                "endOffset": 34
            },
            "flows": [],
            "status": "OPEN",
            "message": "Complete the task associated to this \"TODO\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "pytorchmergebot@users.noreply.github.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-08-26T01:04:55+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zMiHwgiYR050dbbk",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "pytorch:test/distributions/test_distributions.py",
            "project": "pytorch",
            "line": 901,
            "hash": "053c00d077b709838ae060259813eeeb",
            "textRange": {
                "startLine": 901,
                "endLine": 901,
                "startOffset": 12,
                "endOffset": 16
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"Dist\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "pytorchmergebot@users.noreply.github.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2023-08-26T01:04:55+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zMiHwgiYR050dbbl",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "pytorch:test/distributions/test_distributions.py",
            "project": "pytorch",
            "line": 907,
            "hash": "053c00d077b709838ae060259813eeeb",
            "textRange": {
                "startLine": 907,
                "endLine": 907,
                "startOffset": 12,
                "endOffset": 16
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"Dist\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "pytorchmergebot@users.noreply.github.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2023-08-26T01:04:55+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zMiHwgiYR050dbbm",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "pytorch:test/distributions/test_distributions.py",
            "project": "pytorch",
            "line": 919,
            "hash": "053c00d077b709838ae060259813eeeb",
            "textRange": {
                "startLine": 919,
                "endLine": 919,
                "startOffset": 12,
                "endOffset": 16
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"Dist\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "pytorchmergebot@users.noreply.github.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2023-08-26T01:04:55+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zMiHwgiYR050dbbn",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "pytorch:test/distributions/test_distributions.py",
            "project": "pytorch",
            "line": 931,
            "hash": "053c00d077b709838ae060259813eeeb",
            "textRange": {
                "startLine": 931,
                "endLine": 931,
                "startOffset": 12,
                "endOffset": 16
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"Dist\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "pytorchmergebot@users.noreply.github.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2023-08-26T01:04:55+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zMiHwgiYR050dbbp",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "pytorch:test/distributions/test_distributions.py",
            "project": "pytorch",
            "line": 975,
            "hash": "053c00d077b709838ae060259813eeeb",
            "textRange": {
                "startLine": 975,
                "endLine": 975,
                "startOffset": 12,
                "endOffset": 16
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"Dist\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "pytorchmergebot@users.noreply.github.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2023-08-26T01:04:55+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zMiHwgiYR050dbbq",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "pytorch:test/distributions/test_distributions.py",
            "project": "pytorch",
            "line": 992,
            "hash": "053c00d077b709838ae060259813eeeb",
            "textRange": {
                "startLine": 992,
                "endLine": 992,
                "startOffset": 12,
                "endOffset": 16
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"Dist\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "pytorchmergebot@users.noreply.github.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2023-08-26T01:04:55+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zMiHwgiYR050dbbr",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "pytorch:test/distributions/test_distributions.py",
            "project": "pytorch",
            "line": 1017,
            "hash": "053c00d077b709838ae060259813eeeb",
            "textRange": {
                "startLine": 1017,
                "endLine": 1017,
                "startOffset": 12,
                "endOffset": 16
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"Dist\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "pytorchmergebot@users.noreply.github.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2023-08-26T01:04:55+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zMiHwgiYR050dbb_",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "pytorch:test/distributions/test_distributions.py",
            "project": "pytorch",
            "line": 2940,
            "hash": "aff88473030434bcd2d1991c6726401c",
            "textRange": {
                "startLine": 2940,
                "endLine": 2940,
                "startOffset": 8,
                "endOffset": 30
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "pytorch:test/distributions/test_distributions.py",
                            "textRange": {
                                "startLine": 2941,
                                "endLine": 2941,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/distributions/test_distributions.py",
                            "textRange": {
                                "startLine": 2942,
                                "endLine": 2942,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/distributions/test_distributions.py",
                            "textRange": {
                                "startLine": 2946,
                                "endLine": 2946,
                                "startOffset": 16,
                                "endOffset": 19
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/distributions/test_distributions.py",
                            "textRange": {
                                "startLine": 2952,
                                "endLine": 2952,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/distributions/test_distributions.py",
                            "textRange": {
                                "startLine": 2957,
                                "endLine": 2957,
                                "startOffset": 20,
                                "endOffset": 26
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/distributions/test_distributions.py",
                            "textRange": {
                                "startLine": 2961,
                                "endLine": 2961,
                                "startOffset": 20,
                                "endOffset": 26
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "pytorch:test/distributions/test_distributions.py",
                            "textRange": {
                                "startLine": 2965,
                                "endLine": 2965,
                                "startOffset": 20,
                                "endOffset": 26
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 22 to the 15 allowed.",
            "effort": "12min",
            "debt": "12min",
            "author": "pytorchmergebot@users.noreply.github.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-08-26T01:04:55+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zMiHwgiYR050dbb-",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "pytorch:test/distributions/test_distributions.py",
            "project": "pytorch",
            "line": 2941,
            "hash": "053c00d077b709838ae060259813eeeb",
            "textRange": {
                "startLine": 2941,
                "endLine": 2941,
                "startOffset": 12,
                "endOffset": 16
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"Dist\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "pytorchmergebot@users.noreply.github.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2023-08-26T01:04:55+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zMiHwgiYR050dbcA",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "pytorch:test/distributions/test_distributions.py",
            "project": "pytorch",
            "line": 2969,
            "hash": "053c00d077b709838ae060259813eeeb",
            "textRange": {
                "startLine": 2969,
                "endLine": 2969,
                "startOffset": 12,
                "endOffset": 16
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"Dist\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "pytorchmergebot@users.noreply.github.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2023-08-26T01:04:55+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zMiHwgiYR050dbcB",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "pytorch:test/distributions/test_distributions.py",
            "project": "pytorch",
            "line": 2987,
            "hash": "053c00d077b709838ae060259813eeeb",
            "textRange": {
                "startLine": 2987,
                "endLine": 2987,
                "startOffset": 12,
                "endOffset": 16
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"Dist\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "pytorchmergebot@users.noreply.github.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2023-08-26T01:04:55+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zMiHwgiYR050dbcC",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "pytorch:test/distributions/test_distributions.py",
            "project": "pytorch",
            "line": 3014,
            "hash": "053c00d077b709838ae060259813eeeb",
            "textRange": {
                "startLine": 3014,
                "endLine": 3014,
                "startOffset": 12,
                "endOffset": 16
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"Dist\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "pytorchmergebot@users.noreply.github.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2023-08-26T01:04:55+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zMiHwgiYR050dbcD",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "pytorch:test/distributions/test_distributions.py",
            "project": "pytorch",
            "line": 3499,
            "hash": "053c00d077b709838ae060259813eeeb",
            "textRange": {
                "startLine": 3499,
                "endLine": 3499,
                "startOffset": 12,
                "endOffset": 16
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"Dist\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "pytorchmergebot@users.noreply.github.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2023-08-26T01:04:55+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zMiHwgiYR050dbcI",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "pytorch:test/distributions/test_distributions.py",
            "project": "pytorch",
            "line": 4279,
            "hash": "053c00d077b709838ae060259813eeeb",
            "textRange": {
                "startLine": 4279,
                "endLine": 4279,
                "startOffset": 12,
                "endOffset": 16
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"Dist\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "pytorchmergebot@users.noreply.github.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2023-08-26T01:04:55+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYq8zMiHwgiYR050dbcJ",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "pytorch:test/distributions/test_distributions.py",
            "project": "pytorch",
            "line": 4305,
            "hash": "053c00d077b709838ae060259813eeeb",
            "textRange": {
                "startLine": 4305,
                "endLine": 4305,
                "startOffset": 12,
                "endOffset": 16
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"Dist\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "pytorchmergebot@users.noreply.github.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2023-08-26T01:04:55+0530",
            "updateDate": "2023-09-22T16:47:51+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        }
    ],
    "components": [
        {
            "key": "pytorch:torch/distributed/_tensor/__init__.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "__init__.py",
            "longName": "torch/distributed/_tensor/__init__.py",
            "path": "torch/distributed/_tensor/__init__.py"
        },
        {
            "key": "pytorch:torch/_logging/_internal.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "_internal.py",
            "longName": "torch/_logging/_internal.py",
            "path": "torch/_logging/_internal.py"
        },
        {
            "key": "pytorch:test/inductor/test_cpu_repro.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "test_cpu_repro.py",
            "longName": "test/inductor/test_cpu_repro.py",
            "path": "test/inductor/test_cpu_repro.py"
        },
        {
            "key": "pytorch:test/inductor/test_foreach.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "test_foreach.py",
            "longName": "test/inductor/test_foreach.py",
            "path": "test/inductor/test_foreach.py"
        },
        {
            "key": "pytorch:torch/_inductor/triton_heuristics.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "triton_heuristics.py",
            "longName": "torch/_inductor/triton_heuristics.py",
            "path": "torch/_inductor/triton_heuristics.py"
        },
        {
            "key": "pytorch:torch/_dynamo/variables/higher_order_ops.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "higher_order_ops.py",
            "longName": "torch/_dynamo/variables/higher_order_ops.py",
            "path": "torch/_dynamo/variables/higher_order_ops.py"
        },
        {
            "key": "pytorch:torch/_inductor/ir.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "ir.py",
            "longName": "torch/_inductor/ir.py",
            "path": "torch/_inductor/ir.py"
        },
        {
            "key": "pytorch:torch/_dynamo/variables/builtin.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "builtin.py",
            "longName": "torch/_dynamo/variables/builtin.py",
            "path": "torch/_dynamo/variables/builtin.py"
        },
        {
            "key": "pytorch:torch/serialization.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "serialization.py",
            "longName": "torch/serialization.py",
            "path": "torch/serialization.py"
        },
        {
            "key": "pytorch:torch/_dynamo/variables/torch.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "torch.py",
            "longName": "torch/_dynamo/variables/torch.py",
            "path": "torch/_dynamo/variables/torch.py"
        },
        {
            "key": "pytorch",
            "enabled": true,
            "qualifier": "TRK",
            "name": "pytorch",
            "longName": "pytorch"
        },
        {
            "key": "pytorch:test/nn/test_pooling.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "test_pooling.py",
            "longName": "test/nn/test_pooling.py",
            "path": "test/nn/test_pooling.py"
        },
        {
            "key": "pytorch:torch/onnx/symbolic_opset11.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "symbolic_opset11.py",
            "longName": "torch/onnx/symbolic_opset11.py",
            "path": "torch/onnx/symbolic_opset11.py"
        },
        {
            "key": "pytorch:torch/_inductor/kernel/mm_common.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "mm_common.py",
            "longName": "torch/_inductor/kernel/mm_common.py",
            "path": "torch/_inductor/kernel/mm_common.py"
        },
        {
            "key": "pytorch:torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "x86_inductor_quantizer.py",
            "longName": "torch/ao/quantization/quantizer/x86_inductor_quantizer.py",
            "path": "torch/ao/quantization/quantizer/x86_inductor_quantizer.py"
        },
        {
            "key": "pytorch:torch/_inductor/graph.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "graph.py",
            "longName": "torch/_inductor/graph.py",
            "path": "torch/_inductor/graph.py"
        },
        {
            "key": "pytorch:torch/sparse/__init__.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "__init__.py",
            "longName": "torch/sparse/__init__.py",
            "path": "torch/sparse/__init__.py"
        },
        {
            "key": "pytorch:torch/_inductor/utils.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "utils.py",
            "longName": "torch/_inductor/utils.py",
            "path": "torch/_inductor/utils.py"
        },
        {
            "key": "pytorch:functorch/experimental/_map.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "_map.py",
            "longName": "functorch/experimental/_map.py",
            "path": "functorch/experimental/_map.py"
        },
        {
            "key": "pytorch:torch/ao/quantization/quantizer/xnnpack_quantizer_utils.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "xnnpack_quantizer_utils.py",
            "longName": "torch/ao/quantization/quantizer/xnnpack_quantizer_utils.py",
            "path": "torch/ao/quantization/quantizer/xnnpack_quantizer_utils.py"
        },
        {
            "key": "pytorch:test/test_pytree.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "test_pytree.py",
            "longName": "test/test_pytree.py",
            "path": "test/test_pytree.py"
        },
        {
            "key": "pytorch:test/inductor/test_triton_heuristics.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "test_triton_heuristics.py",
            "longName": "test/inductor/test_triton_heuristics.py",
            "path": "test/inductor/test_triton_heuristics.py"
        },
        {
            "key": "pytorch:torch/_dynamo/backends/onnxrt.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "onnxrt.py",
            "longName": "torch/_dynamo/backends/onnxrt.py",
            "path": "torch/_dynamo/backends/onnxrt.py"
        },
        {
            "key": "pytorch:test/quantization/core/test_quantized_op.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "test_quantized_op.py",
            "longName": "test/quantization/core/test_quantized_op.py",
            "path": "test/quantization/core/test_quantized_op.py"
        },
        {
            "key": "pytorch:test/onnx/dynamo/test_dynamo_with_onnxruntime_backend.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "test_dynamo_with_onnxruntime_backend.py",
            "longName": "test/onnx/dynamo/test_dynamo_with_onnxruntime_backend.py",
            "path": "test/onnx/dynamo/test_dynamo_with_onnxruntime_backend.py"
        },
        {
            "key": "pytorch:test/distributions/test_distributions.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "test_distributions.py",
            "longName": "test/distributions/test_distributions.py",
            "path": "test/distributions/test_distributions.py"
        },
        {
            "key": "pytorch:torch/export/__init__.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "__init__.py",
            "longName": "torch/export/__init__.py",
            "path": "torch/export/__init__.py"
        },
        {
            "key": "pytorch:torch/_inductor/lowering.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "lowering.py",
            "longName": "torch/_inductor/lowering.py",
            "path": "torch/_inductor/lowering.py"
        },
        {
            "key": "pytorch:torch/onnx/_internal/fx/fx_onnx_interpreter.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "fx_onnx_interpreter.py",
            "longName": "torch/onnx/_internal/fx/fx_onnx_interpreter.py",
            "path": "torch/onnx/_internal/fx/fx_onnx_interpreter.py"
        },
        {
            "key": "pytorch:test/onnx/test_fx_op_consistency.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "test_fx_op_consistency.py",
            "longName": "test/onnx/test_fx_op_consistency.py",
            "path": "test/onnx/test_fx_op_consistency.py"
        },
        {
            "key": "pytorch:torch/utils/_pytree.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "_pytree.py",
            "longName": "torch/utils/_pytree.py",
            "path": "torch/utils/_pytree.py"
        },
        {
            "key": "pytorch:torch/_inductor/codegen/triton_utils.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "triton_utils.py",
            "longName": "torch/_inductor/codegen/triton_utils.py",
            "path": "torch/_inductor/codegen/triton_utils.py"
        },
        {
            "key": "pytorch:torch/_dynamo/variables/user_defined.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "user_defined.py",
            "longName": "torch/_dynamo/variables/user_defined.py",
            "path": "torch/_dynamo/variables/user_defined.py"
        },
        {
            "key": "pytorch:test/test_serialization.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "test_serialization.py",
            "longName": "test/test_serialization.py",
            "path": "test/test_serialization.py"
        },
        {
            "key": "pytorch:torch/_inductor/codegen/cpp.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "cpp.py",
            "longName": "torch/_inductor/codegen/cpp.py",
            "path": "torch/_inductor/codegen/cpp.py"
        },
        {
            "key": "pytorch:torch/_inductor/codegen/triton_foreach.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "triton_foreach.py",
            "longName": "torch/_inductor/codegen/triton_foreach.py",
            "path": "torch/_inductor/codegen/triton_foreach.py"
        },
        {
            "key": "pytorch:test/test_sparse.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "test_sparse.py",
            "longName": "test/test_sparse.py",
            "path": "test/test_sparse.py"
        },
        {
            "key": "pytorch:torch/_export/serde/serialize.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "serialize.py",
            "longName": "torch/_export/serde/serialize.py",
            "path": "torch/_export/serde/serialize.py"
        },
        {
            "key": "pytorch:torch/_export/pass_base.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "pass_base.py",
            "longName": "torch/_export/pass_base.py",
            "path": "torch/_export/pass_base.py"
        },
        {
            "key": "pytorch:torch/onnx/__init__.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "__init__.py",
            "longName": "torch/onnx/__init__.py",
            "path": "torch/onnx/__init__.py"
        },
        {
            "key": "pytorch:torch/ao/quantization/pt2e/representation/rewrite.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "rewrite.py",
            "longName": "torch/ao/quantization/pt2e/representation/rewrite.py",
            "path": "torch/ao/quantization/pt2e/representation/rewrite.py"
        },
        {
            "key": "pytorch:test/distributed/test_data_parallel.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "test_data_parallel.py",
            "longName": "test/distributed/test_data_parallel.py",
            "path": "test/distributed/test_data_parallel.py"
        },
        {
            "key": "pytorch:torch/ao/quantization/pt2e/utils.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "utils.py",
            "longName": "torch/ao/quantization/pt2e/utils.py",
            "path": "torch/ao/quantization/pt2e/utils.py"
        },
        {
            "key": "pytorch:torch/distributed/_tensor/ops/tensor_ops.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "tensor_ops.py",
            "longName": "torch/distributed/_tensor/ops/tensor_ops.py",
            "path": "torch/distributed/_tensor/ops/tensor_ops.py"
        },
        {
            "key": "pytorch:torch/ao/quantization/pt2e/prepare.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "prepare.py",
            "longName": "torch/ao/quantization/pt2e/prepare.py",
            "path": "torch/ao/quantization/pt2e/prepare.py"
        },
        {
            "key": "pytorch:test/quantization/pt2e/test_quantize_pt2e.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "test_quantize_pt2e.py",
            "longName": "test/quantization/pt2e/test_quantize_pt2e.py",
            "path": "test/quantization/pt2e/test_quantize_pt2e.py"
        },
        {
            "key": "pytorch:torch/_export/passes/add_runtime_assertions_for_constraints_pass.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "add_runtime_assertions_for_constraints_pass.py",
            "longName": "torch/_export/passes/add_runtime_assertions_for_constraints_pass.py",
            "path": "torch/_export/passes/add_runtime_assertions_for_constraints_pass.py"
        },
        {
            "key": "pytorch:torchgen/api/python.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "python.py",
            "longName": "torchgen/api/python.py",
            "path": "torchgen/api/python.py"
        },
        {
            "key": "pytorch:torch/_export/__init__.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "__init__.py",
            "longName": "torch/_export/__init__.py",
            "path": "torch/_export/__init__.py"
        },
        {
            "key": "pytorch:torch/onnx/_internal/onnxruntime.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "onnxruntime.py",
            "longName": "torch/onnx/_internal/onnxruntime.py",
            "path": "torch/onnx/_internal/onnxruntime.py"
        }
    ],
    "facets": []
}