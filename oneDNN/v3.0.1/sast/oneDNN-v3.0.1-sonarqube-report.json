{
    "total": 124,
    "p": 1,
    "ps": 100,
    "paging": {
        "pageIndex": 1,
        "pageSize": 100,
        "total": 124
    },
    "effortTotal": 882,
    "issues": [
        {
            "key": "AY2rIRcHq67Ekybiuc2q",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "project": "oneDNN",
            "line": 184,
            "hash": "6ae09930d16509073977d271a4d5d26f",
            "textRange": {
                "startLine": 184,
                "endLine": 184,
                "startOffset": 4,
                "endOffset": 15
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 198,
                                "endLine": 198,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 198,
                                "endLine": 198,
                                "startOffset": 21,
                                "endOffset": 24
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 200,
                                "endLine": 200,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 202,
                                "endLine": 202,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 203,
                                "endLine": 203,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 216,
                                "endLine": 216,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 216,
                                "endLine": 216,
                                "startOffset": 21,
                                "endOffset": 24
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 218,
                                "endLine": 218,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 218,
                                "endLine": 218,
                                "startOffset": 23,
                                "endOffset": 26
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 223,
                                "endLine": 223,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 225,
                                "endLine": 225,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 226,
                                "endLine": 226,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 227,
                                "endLine": 227,
                                "startOffset": 16,
                                "endOffset": 19
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 228,
                                "endLine": 228,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 230,
                                "endLine": 230,
                                "startOffset": 24,
                                "endOffset": 26
                            },
                            "msg": "+6 (incl 5 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 230,
                                "endLine": 230,
                                "startOffset": 47,
                                "endOffset": 50
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 238,
                                "endLine": 238,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 251,
                                "endLine": 251,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 253,
                                "endLine": 253,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 271,
                                "endLine": 271,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 274,
                                "endLine": 274,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 276,
                                "endLine": 276,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 278,
                                "endLine": 278,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 280,
                                "endLine": 280,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 288,
                                "endLine": 288,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 291,
                                "endLine": 291,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 292,
                                "endLine": 292,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 294,
                                "endLine": 294,
                                "startOffset": 16,
                                "endOffset": 20
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 297,
                                "endLine": 297,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 298,
                                "endLine": 298,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 325,
                                "endLine": 325,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 70 to the 15 allowed.",
            "effort": "1h",
            "debt": "1h",
            "author": "dmitry.zarukin@intel.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2022-08-12T20:56:26+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "FOCUSED",
            "cleanCodeAttributeCategory": "ADAPTABLE",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "HIGH"
                }
            ]
        },
        {
            "key": "AY2rIRcHq67Ekybiuc2r",
            "rule": "python:S125",
            "severity": "MAJOR",
            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "project": "oneDNN",
            "line": 268,
            "hash": "92938199acb3a38389e520d4c8cc1efa",
            "textRange": {
                "startLine": 268,
                "endLine": 268,
                "startOffset": 4,
                "endOffset": 35
            },
            "flows": [],
            "status": "OPEN",
            "message": "Remove this commented out code.",
            "effort": "5min",
            "debt": "5min",
            "author": "dmitry.zarukin@intel.com",
            "tags": [
                "unused"
            ],
            "creationDate": "2022-08-12T20:56:26+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "CLEAR",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "MEDIUM"
                }
            ]
        },
        {
            "key": "AY2rIRcHq67Ekybiuc2s",
            "rule": "python:S3457",
            "severity": "MAJOR",
            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "project": "oneDNN",
            "line": 281,
            "hash": "f4ddd98e7d4738d11e4dd3be0a1924e5",
            "textRange": {
                "startLine": 281,
                "endLine": 281,
                "startOffset": 23,
                "endOffset": 26
            },
            "flows": [],
            "status": "OPEN",
            "message": "Add replacement fields or use a normal string instead of an f-string.",
            "effort": "1min",
            "debt": "1min",
            "author": "dmitry.zarukin@intel.com",
            "tags": [
                "confusing"
            ],
            "creationDate": "2022-08-12T20:56:26+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "LOGICAL",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "MEDIUM"
                }
            ]
        },
        {
            "key": "AY2rIRcHq67Ekybiuc2u",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "project": "oneDNN",
            "line": 331,
            "hash": "cf8fb4f599a0ffeda96c89cce758c3eb",
            "textRange": {
                "startLine": 331,
                "endLine": 331,
                "startOffset": 4,
                "endOffset": 16
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 335,
                                "endLine": 335,
                                "startOffset": 30,
                                "endOffset": 32
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 339,
                                "endLine": 339,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 342,
                                "endLine": 342,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 346,
                                "endLine": 346,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 346,
                                "endLine": 346,
                                "startOffset": 29,
                                "endOffset": 32
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 348,
                                "endLine": 348,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 356,
                                "endLine": 356,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 359,
                                "endLine": 359,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 361,
                                "endLine": 361,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 363,
                                "endLine": 363,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 365,
                                "endLine": 365,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 373,
                                "endLine": 373,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 376,
                                "endLine": 376,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 377,
                                "endLine": 377,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 379,
                                "endLine": 379,
                                "startOffset": 16,
                                "endOffset": 20
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 382,
                                "endLine": 382,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 383,
                                "endLine": 383,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 399,
                                "endLine": 399,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 402,
                                "endLine": 402,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 402,
                                "endLine": 402,
                                "startOffset": 36,
                                "endOffset": 39
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 404,
                                "endLine": 404,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 404,
                                "endLine": 404,
                                "startOffset": 40,
                                "endOffset": 43
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 412,
                                "endLine": 412,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 413,
                                "endLine": 413,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 441,
                                "endLine": 441,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 51 to the 15 allowed.",
            "effort": "41min",
            "debt": "41min",
            "author": "dmitry.zarukin@intel.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2022-08-12T20:56:26+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "FOCUSED",
            "cleanCodeAttributeCategory": "ADAPTABLE",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "HIGH"
                }
            ]
        },
        {
            "key": "AY2rIRcHq67Ekybiuc2v",
            "rule": "python:S125",
            "severity": "MAJOR",
            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "project": "oneDNN",
            "line": 353,
            "hash": "a88d06f28e76fa9fb4ede956c07038d0",
            "textRange": {
                "startLine": 353,
                "endLine": 353,
                "startOffset": 4,
                "endOffset": 39
            },
            "flows": [],
            "status": "OPEN",
            "message": "Remove this commented out code.",
            "effort": "5min",
            "debt": "5min",
            "author": "dmitry.zarukin@intel.com",
            "tags": [
                "unused"
            ],
            "creationDate": "2022-08-12T20:56:26+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "CLEAR",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "MEDIUM"
                }
            ]
        },
        {
            "key": "AY2rIRcHq67Ekybiuc2w",
            "rule": "python:S3457",
            "severity": "MAJOR",
            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "project": "oneDNN",
            "line": 366,
            "hash": "43173ce56a634b36f365e7996ce48998",
            "textRange": {
                "startLine": 366,
                "endLine": 366,
                "startOffset": 24,
                "endOffset": 27
            },
            "flows": [],
            "status": "OPEN",
            "message": "Add replacement fields or use a normal string instead of an f-string.",
            "effort": "1min",
            "debt": "1min",
            "author": "dmitry.zarukin@intel.com",
            "tags": [
                "confusing"
            ],
            "creationDate": "2022-08-12T20:56:26+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "LOGICAL",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "MEDIUM"
                }
            ]
        },
        {
            "key": "AY2rIRcHq67Ekybiuc2n",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "project": "oneDNN",
            "line": 89,
            "hash": "b177fdf9b66cba45ffc702b6a3f3d592",
            "textRange": {
                "startLine": 89,
                "endLine": 89,
                "startOffset": 4,
                "endOffset": 15
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 90,
                                "endLine": 90,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 91,
                                "endLine": 91,
                                "startOffset": 34,
                                "endOffset": 36
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 93,
                                "endLine": 93,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 98,
                                "endLine": 98,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 101,
                                "endLine": 101,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 106,
                                "endLine": 106,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 109,
                                "endLine": 109,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 112,
                                "endLine": 112,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 117,
                                "endLine": 117,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 120,
                                "endLine": 120,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 125,
                                "endLine": 125,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 136,
                                "endLine": 136,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 146,
                                "endLine": 146,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 155,
                                "endLine": 155,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 158,
                                "endLine": 158,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 162,
                                "endLine": 162,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 165,
                                "endLine": 165,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 167,
                                "endLine": 167,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 169,
                                "endLine": 169,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 34 to the 15 allowed.",
            "effort": "24min",
            "debt": "24min",
            "author": "igor.safonov@intel.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2022-07-08T00:58:30+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "FOCUSED",
            "cleanCodeAttributeCategory": "ADAPTABLE",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "HIGH"
                }
            ]
        },
        {
            "key": "AY2rIRcHq67Ekybiuc2p",
            "rule": "python:S5806",
            "severity": "MAJOR",
            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "project": "oneDNN",
            "line": 145,
            "hash": "0d3c5d069382705ff131731e36ccb22b",
            "textRange": {
                "startLine": 145,
                "endLine": 145,
                "startOffset": 12,
                "endOffset": 15
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this variable; it shadows a builtin.",
            "effort": "5min",
            "debt": "5min",
            "author": "igor.safonov@intel.com",
            "tags": [
                "bad-practice",
                "confusing",
                "pitfall"
            ],
            "creationDate": "2022-07-08T00:58:30+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "CLEAR",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "MEDIUM"
                }
            ]
        },
        {
            "key": "AY2rIRcHq67Ekybiuc21",
            "rule": "python:S3457",
            "severity": "MAJOR",
            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "project": "oneDNN",
            "line": 481,
            "hash": "75a291058dc5105b7d61bb95c5abf529",
            "textRange": {
                "startLine": 481,
                "endLine": 481,
                "startOffset": 15,
                "endOffset": 40
            },
            "flows": [],
            "status": "OPEN",
            "message": "Add replacement fields or use a normal string instead of an f-string.",
            "effort": "1min",
            "debt": "1min",
            "author": "igor.safonov@intel.com",
            "tags": [
                "confusing"
            ],
            "creationDate": "2022-07-08T00:58:30+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "LOGICAL",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "MEDIUM"
                }
            ]
        },
        {
            "key": "AY2rIRb-q67Ekybiuc2g",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
            "project": "oneDNN",
            "line": 39,
            "hash": "6ba86c19c51d9a8d7375476213624cc5",
            "textRange": {
                "startLine": 39,
                "endLine": 39,
                "startOffset": 8,
                "endOffset": 15
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 58,
                                "endLine": 58,
                                "startOffset": 16,
                                "endOffset": 19
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 67,
                                "endLine": 67,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 69,
                                "endLine": 69,
                                "startOffset": 24,
                                "endOffset": 27
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 70,
                                "endLine": 70,
                                "startOffset": 28,
                                "endOffset": 30
                            },
                            "msg": "+6 (incl 5 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 72,
                                "endLine": 72,
                                "startOffset": 28,
                                "endOffset": 30
                            },
                            "msg": "+6 (incl 5 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 89,
                                "endLine": 89,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 90,
                                "endLine": 90,
                                "startOffset": 16,
                                "endOffset": 19
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 101,
                                "endLine": 101,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 144,
                                "endLine": 144,
                                "startOffset": 24,
                                "endOffset": 26
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 146,
                                "endLine": 146,
                                "startOffset": 24,
                                "endOffset": 26
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 149,
                                "endLine": 149,
                                "startOffset": 24,
                                "endOffset": 26
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 180,
                                "endLine": 180,
                                "startOffset": 20,
                                "endOffset": 23
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 181,
                                "endLine": 181,
                                "startOffset": 24,
                                "endOffset": 27
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 182,
                                "endLine": 182,
                                "startOffset": 28,
                                "endOffset": 30
                            },
                            "msg": "+6 (incl 5 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 191,
                                "endLine": 191,
                                "startOffset": 20,
                                "endOffset": 23
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 201,
                                "endLine": 201,
                                "startOffset": 20,
                                "endOffset": 23
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 222,
                                "endLine": 222,
                                "startOffset": 16,
                                "endOffset": 19
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 224,
                                "endLine": 224,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 257,
                                "endLine": 257,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 258,
                                "endLine": 258,
                                "startOffset": 44,
                                "endOffset": 46
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 261,
                                "endLine": 261,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 263,
                                "endLine": 263,
                                "startOffset": 24,
                                "endOffset": 26
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 268,
                                "endLine": 268,
                                "startOffset": 24,
                                "endOffset": 30
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 272,
                                "endLine": 272,
                                "startOffset": 20,
                                "endOffset": 24
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 275,
                                "endLine": 275,
                                "startOffset": 16,
                                "endOffset": 22
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 285,
                                "endLine": 285,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 289,
                                "endLine": 289,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 290,
                                "endLine": 290,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 293,
                                "endLine": 293,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 295,
                                "endLine": 295,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 297,
                                "endLine": 297,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 299,
                                "endLine": 299,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 119 to the 15 allowed.",
            "effort": "1h49min",
            "debt": "1h49min",
            "author": "igor.safonov@intel.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2022-07-08T00:58:30+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "FOCUSED",
            "cleanCodeAttributeCategory": "ADAPTABLE",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "HIGH"
                }
            ]
        },
        {
            "key": "AY2rIRcbq67Ekybiuc3A",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
            "project": "oneDNN",
            "line": 45,
            "hash": "9fd134da8b2c3e57c9f3902cc27a7556",
            "textRange": {
                "startLine": 45,
                "endLine": 45,
                "startOffset": 4,
                "endOffset": 20
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 58,
                                "endLine": 58,
                                "startOffset": 4,
                                "endOffset": 10
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 63,
                                "endLine": 63,
                                "startOffset": 4,
                                "endOffset": 10
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 68,
                                "endLine": 68,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 78,
                                "endLine": 78,
                                "startOffset": 4,
                                "endOffset": 7
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 79,
                                "endLine": 79,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 81,
                                "endLine": 81,
                                "startOffset": 28,
                                "endOffset": 30
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 83,
                                "endLine": 83,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 87,
                                "endLine": 87,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 92,
                                "endLine": 92,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 95,
                                "endLine": 95,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 97,
                                "endLine": 97,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 102,
                                "endLine": 102,
                                "startOffset": 48,
                                "endOffset": 50
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 103,
                                "endLine": 103,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 103,
                                "endLine": 103,
                                "startOffset": 55,
                                "endOffset": 58
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 106,
                                "endLine": 106,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 109,
                                "endLine": 109,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 109,
                                "endLine": 109,
                                "startOffset": 42,
                                "endOffset": 45
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 112,
                                "endLine": 112,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 36 to the 15 allowed.",
            "effort": "26min",
            "debt": "26min",
            "author": "igor.safonov@intel.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2022-07-08T00:58:30+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "FOCUSED",
            "cleanCodeAttributeCategory": "ADAPTABLE",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "HIGH"
                }
            ]
        },
        {
            "key": "AY2rIRcbq67Ekybiuc3G",
            "rule": "python:S5806",
            "severity": "MAJOR",
            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
            "project": "oneDNN",
            "line": 81,
            "hash": "c9a4998e5bd666b80a081ae79d8b3dc9",
            "textRange": {
                "startLine": 81,
                "endLine": 81,
                "startOffset": 12,
                "endOffset": 15
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this variable; it shadows a builtin.",
            "effort": "5min",
            "debt": "5min",
            "author": "igor.safonov@intel.com",
            "tags": [
                "bad-practice",
                "confusing",
                "pitfall"
            ],
            "creationDate": "2022-07-08T00:58:30+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "CLEAR",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "MEDIUM"
                }
            ]
        },
        {
            "key": "AY2rIRb1q67Ekybiuc2f",
            "rule": "python:S4487",
            "severity": "CRITICAL",
            "component": "oneDNN:scripts/verbose_converter/src/breakdown_generator.py",
            "project": "oneDNN",
            "line": 23,
            "hash": "08fdd02ca99c05c933b99b85dda4113a",
            "textRange": {
                "startLine": 23,
                "endLine": 23,
                "startOffset": 13,
                "endOffset": 21
            },
            "flows": [],
            "status": "OPEN",
            "message": "Remove this unread private attribute \u0027__writer\u0027 or refactor the code to use its value.",
            "effort": "5min",
            "debt": "5min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "cwe",
                "unused"
            ],
            "creationDate": "2022-05-09T07:52:59+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "CLEAR",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "HIGH"
                }
            ]
        },
        {
            "key": "AY2rIRcTq67Ekybiuc28",
            "rule": "python:S3457",
            "severity": "MAJOR",
            "component": "oneDNN:scripts/verbose_converter/verbose_converter.py",
            "project": "oneDNN",
            "line": 49,
            "hash": "e46f61b104fd95ad0b828fc4ccd89b44",
            "textRange": {
                "startLine": 49,
                "endLine": 49,
                "startOffset": 21,
                "endOffset": 45
            },
            "flows": [],
            "status": "OPEN",
            "message": "Add replacement fields or use a normal string instead of an f-string.",
            "effort": "1min",
            "debt": "1min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "confusing"
            ],
            "creationDate": "2022-05-09T07:52:59+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "LOGICAL",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "MEDIUM"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1Z",
            "rule": "python:S2208",
            "severity": "CRITICAL",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 11,
            "hash": "80e947ab0a4c161ba4887d6fc7d4086c",
            "textRange": {
                "startLine": 11,
                "endLine": 11,
                "startOffset": 0,
                "endOffset": 20
            },
            "flows": [],
            "status": "OPEN",
            "message": "Import only needed names or import the module and then use its members.",
            "effort": "5min",
            "debt": "5min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "pitfall"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "CLEAR",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "HIGH"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1a",
            "rule": "python:S2208",
            "severity": "CRITICAL",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 12,
            "hash": "2ae573e2c06105415093168c3846a9f4",
            "textRange": {
                "startLine": 12,
                "endLine": 12,
                "startOffset": 0,
                "endOffset": 18
            },
            "flows": [],
            "status": "OPEN",
            "message": "Import only needed names or import the module and then use its members.",
            "effort": "5min",
            "debt": "5min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "pitfall"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "CLEAR",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "HIGH"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2C",
            "rule": "python:S101",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 992,
            "hash": "08e3197232c81f39fb10a62cfed75cbb",
            "textRange": {
                "startLine": 992,
                "endLine": 992,
                "startOffset": 6,
                "endOffset": 13
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename class \"ZET_DDI\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
            "effort": "5min",
            "debt": "5min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2G",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1004,
            "hash": "366085a553cd6d1c95275b76b198acec",
            "textRange": {
                "startLine": 1004,
                "endLine": 1004,
                "startOffset": 8,
                "endOffset": 15
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"_Device\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2Q",
            "rule": "python:S112",
            "severity": "MAJOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1007,
            "hash": "a558551dafee7dfc9ebda5655ec122f0",
            "textRange": {
                "startLine": 1007,
                "endLine": 1007,
                "startOffset": 18,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Replace this generic exception class with a more specific one.",
            "effort": "20min",
            "debt": "20min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "cwe",
                "error-handling"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "COMPLETE",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "MEDIUM"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1r",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1011,
            "hash": "08459645ed1956fe71613ebae8d53b46",
            "textRange": {
                "startLine": 1011,
                "endLine": 1011,
                "startOffset": 13,
                "endOffset": 40
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetDeviceGetDebugProperties\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2E",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1014,
            "hash": "bc54daf3c6acfd074f335b3a5b995017",
            "textRange": {
                "startLine": 1014,
                "endLine": 1014,
                "startOffset": 8,
                "endOffset": 16
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"_Context\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2R",
            "rule": "python:S112",
            "severity": "MAJOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1017,
            "hash": "a558551dafee7dfc9ebda5655ec122f0",
            "textRange": {
                "startLine": 1017,
                "endLine": 1017,
                "startOffset": 18,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Replace this generic exception class with a more specific one.",
            "effort": "20min",
            "debt": "20min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "cwe",
                "error-handling"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "COMPLETE",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "MEDIUM"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1z",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1021,
            "hash": "8ad0752e97406e870f8b9ae6d12a1204",
            "textRange": {
                "startLine": 1021,
                "endLine": 1021,
                "startOffset": 13,
                "endOffset": 43
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetContextActivateMetricGroups\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2D",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1024,
            "hash": "b9f3e84a8161a0d8db29e955035e2aca",
            "textRange": {
                "startLine": 1024,
                "endLine": 1024,
                "startOffset": 8,
                "endOffset": 20
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"_CommandList\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2S",
            "rule": "python:S112",
            "severity": "MAJOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1027,
            "hash": "a558551dafee7dfc9ebda5655ec122f0",
            "textRange": {
                "startLine": 1027,
                "endLine": 1027,
                "startOffset": 18,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Replace this generic exception class with a more specific one.",
            "effort": "20min",
            "debt": "20min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "cwe",
                "error-handling"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "COMPLETE",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "MEDIUM"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1w",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1031,
            "hash": "5f9b37d8247bb30bd153ebae0375e803",
            "textRange": {
                "startLine": 1031,
                "endLine": 1031,
                "startOffset": 13,
                "endOffset": 53
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetCommandListAppendMetricStreamerMarker\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc11",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1032,
            "hash": "e91ede0ddf49a2f9417e53bf8eb4a0be",
            "textRange": {
                "startLine": 1032,
                "endLine": 1032,
                "startOffset": 13,
                "endOffset": 49
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetCommandListAppendMetricQueryBegin\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc19",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1033,
            "hash": "c836941bdfa650d74f10e98722b5bb23",
            "textRange": {
                "startLine": 1033,
                "endLine": 1033,
                "startOffset": 13,
                "endOffset": 47
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetCommandListAppendMetricQueryEnd\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc17",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1034,
            "hash": "5f09beaec34dd34676ebba344a148b82",
            "textRange": {
                "startLine": 1034,
                "endLine": 1034,
                "startOffset": 13,
                "endOffset": 52
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetCommandListAppendMetricMemoryBarrier\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2O",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1037,
            "hash": "dd388c037298a0266a8208c0aea19522",
            "textRange": {
                "startLine": 1037,
                "endLine": 1037,
                "startOffset": 8,
                "endOffset": 15
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"_Module\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2T",
            "rule": "python:S112",
            "severity": "MAJOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1040,
            "hash": "a558551dafee7dfc9ebda5655ec122f0",
            "textRange": {
                "startLine": 1040,
                "endLine": 1040,
                "startOffset": 18,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Replace this generic exception class with a more specific one.",
            "effort": "20min",
            "debt": "20min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "cwe",
                "error-handling"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "COMPLETE",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "MEDIUM"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1x",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1044,
            "hash": "26f52c3ef45e64e93195b2fa18c6fe14",
            "textRange": {
                "startLine": 1044,
                "endLine": 1044,
                "startOffset": 13,
                "endOffset": 34
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetModuleGetDebugInfo\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2H",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1047,
            "hash": "ca386024d3e200e25d95b4b5b7b193d3",
            "textRange": {
                "startLine": 1047,
                "endLine": 1047,
                "startOffset": 8,
                "endOffset": 15
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"_Kernel\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2U",
            "rule": "python:S112",
            "severity": "MAJOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1050,
            "hash": "a558551dafee7dfc9ebda5655ec122f0",
            "textRange": {
                "startLine": 1050,
                "endLine": 1050,
                "startOffset": 18,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Replace this generic exception class with a more specific one.",
            "effort": "20min",
            "debt": "20min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "cwe",
                "error-handling"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "COMPLETE",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "MEDIUM"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1q",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1054,
            "hash": "46d9a89677a1e03757c17331ad7ee964",
            "textRange": {
                "startLine": 1054,
                "endLine": 1054,
                "startOffset": 13,
                "endOffset": 36
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetKernelGetProfileInfo\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2J",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1057,
            "hash": "bb8e17286a4dab4ddf36469f8d733daf",
            "textRange": {
                "startLine": 1057,
                "endLine": 1057,
                "startOffset": 8,
                "endOffset": 20
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"_MetricGroup\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2V",
            "rule": "python:S112",
            "severity": "MAJOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1060,
            "hash": "a558551dafee7dfc9ebda5655ec122f0",
            "textRange": {
                "startLine": 1060,
                "endLine": 1060,
                "startOffset": 18,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Replace this generic exception class with a more specific one.",
            "effort": "20min",
            "debt": "20min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "cwe",
                "error-handling"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "COMPLETE",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "MEDIUM"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc15",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1064,
            "hash": "e20301f150685d73625c264b1a393868",
            "textRange": {
                "startLine": 1064,
                "endLine": 1064,
                "startOffset": 13,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricGroupGet\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1b",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1065,
            "hash": "4947c3e0bd3f2a08c6dc02bcd5effe1d",
            "textRange": {
                "startLine": 1065,
                "endLine": 1065,
                "startOffset": 13,
                "endOffset": 40
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricGroupGetProperties\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1m",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1066,
            "hash": "8a1e7fb0f9cd2e5518479ee6e27a2417",
            "textRange": {
                "startLine": 1066,
                "endLine": 1066,
                "startOffset": 13,
                "endOffset": 48
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricGroupCalculateMetricValues\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2K",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1069,
            "hash": "e9a09cb1caf8782e405d301327b1d09c",
            "textRange": {
                "startLine": 1069,
                "endLine": 1069,
                "startOffset": 8,
                "endOffset": 23
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"_MetricGroupExp\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2W",
            "rule": "python:S112",
            "severity": "MAJOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1072,
            "hash": "a558551dafee7dfc9ebda5655ec122f0",
            "textRange": {
                "startLine": 1072,
                "endLine": 1072,
                "startOffset": 18,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Replace this generic exception class with a more specific one.",
            "effort": "20min",
            "debt": "20min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "cwe",
                "error-handling"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "COMPLETE",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "MEDIUM"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1f",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1076,
            "hash": "e57e6ccfca1a215ef3c8b9614ea8b8a4",
            "textRange": {
                "startLine": 1076,
                "endLine": 1076,
                "startOffset": 13,
                "endOffset": 59
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricGroupCalculateMultipleMetricValuesExp\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2I",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1079,
            "hash": "bb8fb3714397d6e202823513350d1b06",
            "textRange": {
                "startLine": 1079,
                "endLine": 1079,
                "startOffset": 8,
                "endOffset": 15
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"_Metric\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2X",
            "rule": "python:S112",
            "severity": "MAJOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1082,
            "hash": "a558551dafee7dfc9ebda5655ec122f0",
            "textRange": {
                "startLine": 1082,
                "endLine": 1082,
                "startOffset": 18,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Replace this generic exception class with a more specific one.",
            "effort": "20min",
            "debt": "20min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "cwe",
                "error-handling"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "COMPLETE",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "MEDIUM"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc10",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1086,
            "hash": "1a841c532906f5271b73a92a7c9162c8",
            "textRange": {
                "startLine": 1086,
                "endLine": 1086,
                "startOffset": 13,
                "endOffset": 25
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricGet\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1y",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1087,
            "hash": "2c27671d5b3ea9cf0af68c35466947b6",
            "textRange": {
                "startLine": 1087,
                "endLine": 1087,
                "startOffset": 13,
                "endOffset": 35
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricGetProperties\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2N",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1090,
            "hash": "3ffb41d9faa525782ca98586acf7e161",
            "textRange": {
                "startLine": 1090,
                "endLine": 1090,
                "startOffset": 8,
                "endOffset": 23
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"_MetricStreamer\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2Y",
            "rule": "python:S112",
            "severity": "MAJOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1093,
            "hash": "a558551dafee7dfc9ebda5655ec122f0",
            "textRange": {
                "startLine": 1093,
                "endLine": 1093,
                "startOffset": 18,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Replace this generic exception class with a more specific one.",
            "effort": "20min",
            "debt": "20min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "cwe",
                "error-handling"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "COMPLETE",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "MEDIUM"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc16",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1097,
            "hash": "01dde22a6285239adb9e9ef031d11972",
            "textRange": {
                "startLine": 1097,
                "endLine": 1097,
                "startOffset": 13,
                "endOffset": 34
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricStreamerOpen\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1-",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1098,
            "hash": "b1faf34025562e643d32ff985641b8e7",
            "textRange": {
                "startLine": 1098,
                "endLine": 1098,
                "startOffset": 13,
                "endOffset": 35
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricStreamerClose\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1e",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1099,
            "hash": "c9b43a9dfca4717eb22186f839aa9272",
            "textRange": {
                "startLine": 1099,
                "endLine": 1099,
                "startOffset": 13,
                "endOffset": 38
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricStreamerReadData\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2M",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1102,
            "hash": "44e23c680cd573d6a060f623fa5a0d27",
            "textRange": {
                "startLine": 1102,
                "endLine": 1102,
                "startOffset": 8,
                "endOffset": 24
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"_MetricQueryPool\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2Z",
            "rule": "python:S112",
            "severity": "MAJOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1105,
            "hash": "a558551dafee7dfc9ebda5655ec122f0",
            "textRange": {
                "startLine": 1105,
                "endLine": 1105,
                "startOffset": 18,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Replace this generic exception class with a more specific one.",
            "effort": "20min",
            "debt": "20min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "cwe",
                "error-handling"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "COMPLETE",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "MEDIUM"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2A",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1109,
            "hash": "a81c5a2fa20694e577bc5b2713ad8576",
            "textRange": {
                "startLine": 1109,
                "endLine": 1109,
                "startOffset": 13,
                "endOffset": 37
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricQueryPoolCreate\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1_",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1110,
            "hash": "0a8aa266f999bb6dbc62ba5f1abb1298",
            "textRange": {
                "startLine": 1110,
                "endLine": 1110,
                "startOffset": 13,
                "endOffset": 38
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricQueryPoolDestroy\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2L",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1113,
            "hash": "cd210ce93ed5f097f20369018508fa59",
            "textRange": {
                "startLine": 1113,
                "endLine": 1113,
                "startOffset": 8,
                "endOffset": 20
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"_MetricQuery\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2a",
            "rule": "python:S112",
            "severity": "MAJOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1116,
            "hash": "a558551dafee7dfc9ebda5655ec122f0",
            "textRange": {
                "startLine": 1116,
                "endLine": 1116,
                "startOffset": 18,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Replace this generic exception class with a more specific one.",
            "effort": "20min",
            "debt": "20min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "cwe",
                "error-handling"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "COMPLETE",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "MEDIUM"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc12",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1120,
            "hash": "131dd6f1f584db029de0e33bfde88fb7",
            "textRange": {
                "startLine": 1120,
                "endLine": 1120,
                "startOffset": 13,
                "endOffset": 33
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricQueryCreate\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1d",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1121,
            "hash": "5ebae4bb3d646217c79eb858335329ba",
            "textRange": {
                "startLine": 1121,
                "endLine": 1121,
                "startOffset": 13,
                "endOffset": 34
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricQueryDestroy\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1o",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1122,
            "hash": "d29ed9c7372780e2f486b63eaafe5eb0",
            "textRange": {
                "startLine": 1122,
                "endLine": 1122,
                "startOffset": 13,
                "endOffset": 32
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricQueryReset\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1i",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1123,
            "hash": "26e4bbba837a48fdc49c25dfb7ad3c76",
            "textRange": {
                "startLine": 1123,
                "endLine": 1123,
                "startOffset": 13,
                "endOffset": 34
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricQueryGetData\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2P",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1126,
            "hash": "d62d203220d7da7ebac0a93d92db6ed9",
            "textRange": {
                "startLine": 1126,
                "endLine": 1126,
                "startOffset": 8,
                "endOffset": 18
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"_TracerExp\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2b",
            "rule": "python:S112",
            "severity": "MAJOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1129,
            "hash": "a558551dafee7dfc9ebda5655ec122f0",
            "textRange": {
                "startLine": 1129,
                "endLine": 1129,
                "startOffset": 18,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Replace this generic exception class with a more specific one.",
            "effort": "20min",
            "debt": "20min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "cwe",
                "error-handling"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "COMPLETE",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "MEDIUM"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1l",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1133,
            "hash": "0fae14d13a606ffc9d00e599d69ca2d7",
            "textRange": {
                "startLine": 1133,
                "endLine": 1133,
                "startOffset": 13,
                "endOffset": 31
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetTracerExpCreate\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1s",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1134,
            "hash": "b6e1965616d5559e8162e22b72050370",
            "textRange": {
                "startLine": 1134,
                "endLine": 1134,
                "startOffset": 13,
                "endOffset": 32
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetTracerExpDestroy\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1t",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1135,
            "hash": "1298d494de9a347b066c618856ac211a",
            "textRange": {
                "startLine": 1135,
                "endLine": 1135,
                "startOffset": 13,
                "endOffset": 37
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetTracerExpSetPrologues\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1j",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1136,
            "hash": "52b1c8f39fed3f7e5f66b91a7e43b4ee",
            "textRange": {
                "startLine": 1136,
                "endLine": 1136,
                "startOffset": 13,
                "endOffset": 37
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetTracerExpSetEpilogues\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1n",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1137,
            "hash": "271c316c802972dc49dfe2f89842ce89",
            "textRange": {
                "startLine": 1137,
                "endLine": 1137,
                "startOffset": 13,
                "endOffset": 35
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetTracerExpSetEnabled\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2F",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1140,
            "hash": "e5f0c0e61e0460c066c5a944dd477efe",
            "textRange": {
                "startLine": 1140,
                "endLine": 1140,
                "startOffset": 8,
                "endOffset": 14
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"_Debug\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2c",
            "rule": "python:S112",
            "severity": "MAJOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1143,
            "hash": "a558551dafee7dfc9ebda5655ec122f0",
            "textRange": {
                "startLine": 1143,
                "endLine": 1143,
                "startOffset": 18,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Replace this generic exception class with a more specific one.",
            "effort": "20min",
            "debt": "20min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "cwe",
                "error-handling"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "COMPLETE",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "MEDIUM"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1g",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1147,
            "hash": "3210cc4a46f9ea0872ebbf2a63f44cec",
            "textRange": {
                "startLine": 1147,
                "endLine": 1147,
                "startOffset": 13,
                "endOffset": 27
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetDebugAttach\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1k",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1148,
            "hash": "67e5524b44ed6d1b7baad675ba05543e",
            "textRange": {
                "startLine": 1148,
                "endLine": 1148,
                "startOffset": 13,
                "endOffset": 27
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetDebugDetach\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1v",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1149,
            "hash": "fcf55c354d5fe629a397d6d251374dbd",
            "textRange": {
                "startLine": 1149,
                "endLine": 1149,
                "startOffset": 13,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetDebugReadEvent\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc2B",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1150,
            "hash": "42d9d8bb6aeb970479e0e47f9b7ee33f",
            "textRange": {
                "startLine": 1150,
                "endLine": 1150,
                "startOffset": 13,
                "endOffset": 37
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetDebugAcknowledgeEvent\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1u",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1151,
            "hash": "58e0935e0ca89e3a6ae7cb2ad394a735",
            "textRange": {
                "startLine": 1151,
                "endLine": 1151,
                "startOffset": 13,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetDebugInterrupt\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1p",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1152,
            "hash": "a4055bdb67b1471734899a1597aa7756",
            "textRange": {
                "startLine": 1152,
                "endLine": 1152,
                "startOffset": 13,
                "endOffset": 27
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetDebugResume\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1c",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1153,
            "hash": "8112c635e5ea4c744567284e6fbc637e",
            "textRange": {
                "startLine": 1153,
                "endLine": 1153,
                "startOffset": 13,
                "endOffset": 31
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetDebugReadMemory\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc14",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1154,
            "hash": "c6fadd2505fcf2f96bee0496403a2c37",
            "textRange": {
                "startLine": 1154,
                "endLine": 1154,
                "startOffset": 13,
                "endOffset": 32
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetDebugWriteMemory\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc18",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1155,
            "hash": "0b12b6df9c826d6c379137ffd14bbe9a",
            "textRange": {
                "startLine": 1155,
                "endLine": 1155,
                "startOffset": 13,
                "endOffset": 45
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetDebugGetRegisterSetProperties\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc1h",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1156,
            "hash": "d2bd0b181c89a50adf96d77ded8569db",
            "textRange": {
                "startLine": 1156,
                "endLine": 1156,
                "startOffset": 13,
                "endOffset": 34
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetDebugReadRegisters\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRbXq67Ekybiuc13",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1157,
            "hash": "701fcaca5856e906f5c482793f170f58",
            "textRange": {
                "startLine": 1157,
                "endLine": 1157,
                "startOffset": 13,
                "endOffset": 35
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetDebugWriteRegisters\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T07:57:53+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRcHq67Ekybiuc22",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "project": "oneDNN",
            "line": 531,
            "hash": "45c8bdc982e897d019e62ec4e6b20a2d",
            "textRange": {
                "startLine": 531,
                "endLine": 531,
                "startOffset": 4,
                "endOffset": 20
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 535,
                                "endLine": 535,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 543,
                                "endLine": 543,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 552,
                                "endLine": 552,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 554,
                                "endLine": 554,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 556,
                                "endLine": 556,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 562,
                                "endLine": 562,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 564,
                                "endLine": 564,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 566,
                                "endLine": 566,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 572,
                                "endLine": 572,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 586,
                                "endLine": 586,
                                "startOffset": 4,
                                "endOffset": 7
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 587,
                                "endLine": 587,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 588,
                                "endLine": 588,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 590,
                                "endLine": 590,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 34 to the 15 allowed.",
            "effort": "24min",
            "debt": "24min",
            "author": "dmitry.zarukin@intel.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2021-08-24T22:11:36+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "FOCUSED",
            "cleanCodeAttributeCategory": "ADAPTABLE",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "HIGH"
                }
            ]
        },
        {
            "key": "AY2rIRcHq67Ekybiuc23",
            "rule": "python:S1244",
            "severity": "MAJOR",
            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "project": "oneDNN",
            "line": 562,
            "hash": "1ba63232d6f256a9a491f12e85b0c815",
            "textRange": {
                "startLine": 562,
                "endLine": 562,
                "startOffset": 11,
                "endOffset": 34
            },
            "flows": [],
            "status": "OPEN",
            "message": "Do not perform equality checks with floating point values.",
            "effort": "5min",
            "debt": "5min",
            "author": "dmitry.zarukin@intel.com",
            "tags": [],
            "creationDate": "2021-08-24T22:11:36+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "BUG",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "LOGICAL",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "RELIABILITY",
                    "severity": "MEDIUM"
                }
            ]
        },
        {
            "key": "AY2rIRc7q67Ekybiuc3K",
            "rule": "python:S1481",
            "severity": "MINOR",
            "component": "oneDNN:doc/sphinx/conf.py",
            "project": "oneDNN",
            "line": 41,
            "hash": "1fe3aef5f2b1e8977374da7be6248073",
            "textRange": {
                "startLine": 41,
                "endLine": 41,
                "startOffset": 28,
                "endOffset": 29
            },
            "flows": [],
            "status": "OPEN",
            "message": "Remove the unused local variable \"e\".",
            "effort": "5min",
            "debt": "5min",
            "author": "igor.safonov@intel.com",
            "tags": [
                "unused"
            ],
            "creationDate": "2021-08-16T20:47:19+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "CLEAR",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRc7q67Ekybiuc3L",
            "rule": "python:S5754",
            "severity": "CRITICAL",
            "component": "oneDNN:doc/sphinx/conf.py",
            "project": "oneDNN",
            "line": 41,
            "hash": "1fe3aef5f2b1e8977374da7be6248073",
            "textRange": {
                "startLine": 41,
                "endLine": 41,
                "startOffset": 11,
                "endOffset": 24
            },
            "flows": [],
            "status": "OPEN",
            "message": "Catch a more specific exception or reraise the exception",
            "effort": "5min",
            "debt": "5min",
            "author": "igor.safonov@intel.com",
            "tags": [
                "bad-practice",
                "error-handling",
                "suspicious"
            ],
            "creationDate": "2021-08-16T20:47:19+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "COMPLETE",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "HIGH"
                }
            ]
        },
        {
            "key": "AY2rIRc7q67Ekybiuc3M",
            "rule": "python:S125",
            "severity": "MAJOR",
            "component": "oneDNN:doc/sphinx/conf.py",
            "project": "oneDNN",
            "line": 133,
            "hash": "c59e4d2f910c8efbf2fcd3d01df1e27d",
            "textRange": {
                "startLine": 133,
                "endLine": 133,
                "startOffset": 0,
                "endOffset": 50
            },
            "flows": [],
            "status": "OPEN",
            "message": "Remove this commented out code.",
            "effort": "5min",
            "debt": "5min",
            "author": "kevin.putnam@intel.com",
            "tags": [
                "unused"
            ],
            "creationDate": "2021-08-16T20:47:19+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "CLEAR",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "MEDIUM"
                }
            ]
        },
        {
            "key": "AY2rIRc7q67Ekybiuc3Q",
            "rule": "python:S1542",
            "severity": "MAJOR",
            "component": "oneDNN:doc/sphinx/conf.py",
            "project": "oneDNN",
            "line": 182,
            "hash": "8fb95a5baceb783c8a268a6c8ec679da",
            "textRange": {
                "startLine": 182,
                "endLine": 182,
                "startOffset": 4,
                "endOffset": 19
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename function \"fixFileNameRefs\" to match the regular expression ^[a-z_][a-z0-9_]*$.",
            "effort": "10min",
            "debt": "10min",
            "author": "kevin.putnam@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2021-08-16T20:47:19+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "MEDIUM"
                }
            ]
        },
        {
            "key": "AY2rIRc7q67Ekybiuc3P",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:doc/sphinx/conf.py",
            "project": "oneDNN",
            "line": 185,
            "hash": "b8354d87cce0d44ecdd5f8b28d8ea756",
            "textRange": {
                "startLine": 185,
                "endLine": 185,
                "startOffset": 4,
                "endOffset": 13
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"targetDir\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "kevin.putnam@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2021-08-16T20:47:19+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRc7q67Ekybiuc3N",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:doc/sphinx/conf.py",
            "project": "oneDNN",
            "line": 187,
            "hash": "9026e30002b4976e91878e9ec99848a2",
            "textRange": {
                "startLine": 187,
                "endLine": 187,
                "startOffset": 4,
                "endOffset": 17
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"fileExtension\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "kevin.putnam@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2021-08-16T20:47:19+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRc7q67Ekybiuc3O",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:doc/sphinx/conf.py",
            "project": "oneDNN",
            "line": 192,
            "hash": "70d342226e8ee04160a2c5062d1d5dd2",
            "textRange": {
                "startLine": 192,
                "endLine": 192,
                "startOffset": 12,
                "endOffset": 20
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"filePath\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "kevin.putnam@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2021-08-16T20:47:19+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRc7q67Ekybiuc3V",
            "rule": "python:S1542",
            "severity": "MAJOR",
            "component": "oneDNN:doc/sphinx/conf.py",
            "project": "oneDNN",
            "line": 205,
            "hash": "24331efa04b03ae3618da7e93661a1b6",
            "textRange": {
                "startLine": 205,
                "endLine": 205,
                "startOffset": 4,
                "endOffset": 15
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename function \"addTocTrees\" to match the regular expression ^[a-z_][a-z0-9_]*$.",
            "effort": "10min",
            "debt": "10min",
            "author": "kevin.putnam@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2021-08-16T20:47:19+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "MEDIUM"
                }
            ]
        },
        {
            "key": "AY2rIRc7q67Ekybiuc3U",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:doc/sphinx/conf.py",
            "project": "oneDNN",
            "line": 207,
            "hash": "906034904d428160169bd3d82ab4e811",
            "textRange": {
                "startLine": 207,
                "endLine": 207,
                "startOffset": 4,
                "endOffset": 13
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"trees2Add\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "kevin.putnam@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2021-08-16T20:47:19+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRc7q67Ekybiuc3S",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:doc/sphinx/conf.py",
            "project": "oneDNN",
            "line": 293,
            "hash": "697263522b76f4d6b45193ab7f6c599e",
            "textRange": {
                "startLine": 293,
                "endLine": 293,
                "startOffset": 8,
                "endOffset": 15
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"rstFile\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "kevin.putnam@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2021-08-16T20:47:19+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRc7q67Ekybiuc3R",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:doc/sphinx/conf.py",
            "project": "oneDNN",
            "line": 295,
            "hash": "f20bb603f2ed918b3c4b5c1928abcf3f",
            "textRange": {
                "startLine": 295,
                "endLine": 295,
                "startOffset": 12,
                "endOffset": 21
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"fContents\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "kevin.putnam@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2021-08-16T20:47:19+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRc7q67Ekybiuc3T",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:doc/sphinx/conf.py",
            "project": "oneDNN",
            "line": 299,
            "hash": "b8f1e0952c1573114795b83af5c833ba",
            "textRange": {
                "startLine": 299,
                "endLine": 299,
                "startOffset": 12,
                "endOffset": 19
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"tocTree\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "kevin.putnam@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2021-08-16T20:47:19+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "IDENTIFIABLE",
            "cleanCodeAttributeCategory": "CONSISTENT",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "LOW"
                }
            ]
        },
        {
            "key": "AY2rIRcoq67Ekybiuc3H",
            "rule": "python:S1066",
            "severity": "MAJOR",
            "component": "oneDNN:scripts/generate_format_tags.py",
            "project": "oneDNN",
            "line": 38,
            "hash": "097214d03447f57196ead8566b937345",
            "textRange": {
                "startLine": 38,
                "endLine": 38,
                "startOffset": 12,
                "endOffset": 14
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/generate_format_tags.py",
                            "textRange": {
                                "startLine": 37,
                                "endLine": 37,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "enclosing",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Merge this if statement with the enclosing one.",
            "effort": "5min",
            "debt": "5min",
            "author": "eugene.chereshnev@intel.com",
            "tags": [
                "clumsy"
            ],
            "creationDate": "2021-06-18T19:23:21+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "CLEAR",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "MEDIUM"
                }
            ]
        },
        {
            "key": "AY2rIRcoq67Ekybiuc3I",
            "rule": "python:S1066",
            "severity": "MAJOR",
            "component": "oneDNN:scripts/generate_format_tags.py",
            "project": "oneDNN",
            "line": 125,
            "hash": "b26d170dab9ece7096322a56af5f1bb9",
            "textRange": {
                "startLine": 125,
                "endLine": 125,
                "startOffset": 12,
                "endOffset": 14
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/generate_format_tags.py",
                            "textRange": {
                                "startLine": 124,
                                "endLine": 124,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "enclosing",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Merge this if statement with the enclosing one.",
            "effort": "5min",
            "debt": "5min",
            "author": "eugene.chereshnev@intel.com",
            "tags": [
                "clumsy"
            ],
            "creationDate": "2021-06-18T19:23:21+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "CLEAR",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "MEDIUM"
                }
            ]
        },
        {
            "key": "AY2rIRcHq67Ekybiuc2z",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "project": "oneDNN",
            "line": 446,
            "hash": "5cacd60a3716ea0492f2daff76313976",
            "textRange": {
                "startLine": 446,
                "endLine": 446,
                "startOffset": 4,
                "endOffset": 17
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 451,
                                "endLine": 451,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 453,
                                "endLine": 453,
                                "startOffset": 16,
                                "endOffset": 19
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 455,
                                "endLine": 455,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 457,
                                "endLine": 457,
                                "startOffset": 24,
                                "endOffset": 26
                            },
                            "msg": "+6 (incl 5 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 459,
                                "endLine": 459,
                                "startOffset": 24,
                                "endOffset": 28
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 461,
                                "endLine": 461,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 463,
                                "endLine": 463,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 474,
                                "endLine": 474,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 476,
                                "endLine": 476,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 489,
                                "endLine": 489,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 28 to the 15 allowed.",
            "effort": "18min",
            "debt": "18min",
            "author": "igor.safonov@intel.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2021-05-18T03:07:45+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "FOCUSED",
            "cleanCodeAttributeCategory": "ADAPTABLE",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "HIGH"
                }
            ]
        },
        {
            "key": "AY2rIRcHq67Ekybiuc20",
            "rule": "python:S1134",
            "severity": "MAJOR",
            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "project": "oneDNN",
            "line": 467,
            "hash": "3d791fce459efcd87dc5ebd764a7beb1",
            "textRange": {
                "startLine": 467,
                "endLine": 467,
                "startOffset": 8,
                "endOffset": 44
            },
            "flows": [],
            "status": "OPEN",
            "message": "Take the required action to fix the issue indicated by this \"FIXME\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "igor.safonov@intel.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2021-05-18T03:07:45+0000",
            "updateDate": "2024-02-15T04:57:24+0000",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": [],
            "codeVariants": [],
            "cleanCodeAttribute": "COMPLETE",
            "cleanCodeAttributeCategory": "INTENTIONAL",
            "impacts": [
                {
                    "softwareQuality": "MAINTAINABILITY",
                    "severity": "MEDIUM"
                }
            ]
        }
    ],
    "components": [
        {
            "key": "oneDNN:scripts/verbose_converter/src/breakdown_generator.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "breakdown_generator.py",
            "longName": "scripts/verbose_converter/src/breakdown_generator.py",
            "path": "scripts/verbose_converter/src/breakdown_generator.py"
        },
        {
            "key": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "dnnl_parser.py",
            "longName": "scripts/verbose_converter/src/dnnl_parser.py",
            "path": "scripts/verbose_converter/src/dnnl_parser.py"
        },
        {
            "key": "oneDNN:doc/sphinx/conf.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "conf.py",
            "longName": "doc/sphinx/conf.py",
            "path": "doc/sphinx/conf.py"
        },
        {
            "key": "oneDNN:scripts/verbose_converter/verbose_converter.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "verbose_converter.py",
            "longName": "scripts/verbose_converter/verbose_converter.py",
            "path": "scripts/verbose_converter/verbose_converter.py"
        },
        {
            "key": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "benchdnn_test.py",
            "longName": "scripts/verbose_converter/tests/benchdnn_test.py",
            "path": "scripts/verbose_converter/tests/benchdnn_test.py"
        },
        {
            "key": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "benchdnn_generator.py",
            "longName": "scripts/verbose_converter/src/benchdnn_generator.py",
            "path": "scripts/verbose_converter/src/benchdnn_generator.py"
        },
        {
            "key": "oneDNN:scripts/generate_format_tags.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "generate_format_tags.py",
            "longName": "scripts/generate_format_tags.py",
            "path": "scripts/generate_format_tags.py"
        },
        {
            "key": "oneDNN:src/sycl/level_zero/zet.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "zet.py",
            "longName": "src/sycl/level_zero/zet.py",
            "path": "src/sycl/level_zero/zet.py"
        },
        {
            "key": "oneDNN",
            "enabled": true,
            "qualifier": "TRK",
            "name": "oneDNN",
            "longName": "oneDNN"
        }
    ],
    "facets": []
}