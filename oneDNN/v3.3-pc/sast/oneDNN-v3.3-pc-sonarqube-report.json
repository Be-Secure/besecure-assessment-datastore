{
    "total": 115,
    "p": 1,
    "ps": 100,
    "paging": {
        "pageIndex": 1,
        "pageSize": 100,
        "total": 115
    },
    "effortTotal": 958,
    "issues": [
        {
            "key": "AYmXgrKZock1YBqmb8OZ",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "project": "oneDNN",
            "line": 98,
            "hash": "b177fdf9b66cba45ffc702b6a3f3d592",
            "textRange": {
                "startLine": 98,
                "endLine": 98,
                "startOffset": 4,
                "endOffset": 15
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 99,
                                "endLine": 99,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 100,
                                "endLine": 100,
                                "startOffset": 34,
                                "endOffset": 36
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 102,
                                "endLine": 102,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 107,
                                "endLine": 107,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 110,
                                "endLine": 110,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 115,
                                "endLine": 115,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 118,
                                "endLine": 118,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 125,
                                "endLine": 125,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 130,
                                "endLine": 130,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 133,
                                "endLine": 133,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 138,
                                "endLine": 138,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 149,
                                "endLine": 149,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 159,
                                "endLine": 159,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 168,
                                "endLine": 168,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 171,
                                "endLine": 171,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 174,
                                "endLine": 174,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 178,
                                "endLine": 178,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 181,
                                "endLine": 181,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 183,
                                "endLine": 183,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 186,
                                "endLine": 186,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 190,
                                "endLine": 190,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 193,
                                "endLine": 193,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 197,
                                "endLine": 197,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 199,
                                "endLine": 199,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 45 to the 15 allowed.",
            "effort": "35min",
            "debt": "35min",
            "author": "igor.safonov@intel.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-06-29T06:15:15+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrNJock1YBqmb8Os",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
            "project": "oneDNN",
            "line": 45,
            "hash": "9de2377b847faa02e72e87c6de0ae202",
            "textRange": {
                "startLine": 45,
                "endLine": 45,
                "startOffset": 4,
                "endOffset": 18
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 49,
                                "endLine": 49,
                                "startOffset": 4,
                                "endOffset": 7
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 52,
                                "endLine": 52,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 54,
                                "endLine": 54,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 56,
                                "endLine": 56,
                                "startOffset": 32,
                                "endOffset": 34
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 58,
                                "endLine": 58,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 63,
                                "endLine": 63,
                                "startOffset": 16,
                                "endOffset": 20
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 65,
                                "endLine": 65,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 68,
                                "endLine": 68,
                                "startOffset": 56,
                                "endOffset": 58
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 69,
                                "endLine": 69,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 69,
                                "endLine": 69,
                                "startOffset": 63,
                                "endOffset": 66
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 72,
                                "endLine": 72,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 74,
                                "endLine": 74,
                                "startOffset": 24,
                                "endOffset": 27
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 80,
                                "endLine": 80,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
                            "textRange": {
                                "startLine": 80,
                                "endLine": 80,
                                "startOffset": 38,
                                "endOffset": 41
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 37 to the 15 allowed.",
            "effort": "27min",
            "debt": "27min",
            "author": "dmitry.zarukin@intel.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-06-23T23:27:05+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrKZock1YBqmb8Ol",
            "rule": "python:S1135",
            "severity": "INFO",
            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "project": "oneDNN",
            "line": 592,
            "hash": "d8a7a7b3c06ba801846371548a12e8c5",
            "textRange": {
                "startLine": 592,
                "endLine": 592,
                "startOffset": 8,
                "endOffset": 29
            },
            "flows": [],
            "status": "OPEN",
            "message": "Complete the task associated to this \"TODO\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "dmitry.zarukin@intel.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-06-16T00:22:47+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrKZock1YBqmb8Om",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "project": "oneDNN",
            "line": 612,
            "hash": "fe543d7fa37cca1574f3b0407eb914e7",
            "textRange": {
                "startLine": 612,
                "endLine": 612,
                "startOffset": 4,
                "endOffset": 20
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 616,
                                "endLine": 616,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 618,
                                "endLine": 618,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 621,
                                "endLine": 621,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 636,
                                "endLine": 636,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 645,
                                "endLine": 645,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 647,
                                "endLine": 647,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 649,
                                "endLine": 649,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 655,
                                "endLine": 655,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 657,
                                "endLine": 657,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 659,
                                "endLine": 659,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 665,
                                "endLine": 665,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 679,
                                "endLine": 679,
                                "startOffset": 4,
                                "endOffset": 7
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 680,
                                "endLine": 680,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 681,
                                "endLine": 681,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 683,
                                "endLine": 683,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 37 to the 15 allowed.",
            "effort": "27min",
            "debt": "27min",
            "author": "dmitry.zarukin@intel.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-06-16T00:22:47+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrJ4ock1YBqmb8OT",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
            "project": "oneDNN",
            "line": 51,
            "hash": "6ba86c19c51d9a8d7375476213624cc5",
            "textRange": {
                "startLine": 51,
                "endLine": 51,
                "startOffset": 8,
                "endOffset": 15
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 72,
                                "endLine": 72,
                                "startOffset": 16,
                                "endOffset": 19
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 85,
                                "endLine": 85,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 85,
                                "endLine": 85,
                                "startOffset": 46,
                                "endOffset": 49
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 92,
                                "endLine": 92,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 94,
                                "endLine": 94,
                                "startOffset": 24,
                                "endOffset": 27
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 95,
                                "endLine": 95,
                                "startOffset": 28,
                                "endOffset": 30
                            },
                            "msg": "+6 (incl 5 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 97,
                                "endLine": 97,
                                "startOffset": 28,
                                "endOffset": 30
                            },
                            "msg": "+6 (incl 5 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 117,
                                "endLine": 117,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 119,
                                "endLine": 119,
                                "startOffset": 16,
                                "endOffset": 19
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 125,
                                "endLine": 125,
                                "startOffset": 20,
                                "endOffset": 23
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 139,
                                "endLine": 139,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 175,
                                "endLine": 175,
                                "startOffset": 24,
                                "endOffset": 26
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 177,
                                "endLine": 177,
                                "startOffset": 24,
                                "endOffset": 26
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 180,
                                "endLine": 180,
                                "startOffset": 24,
                                "endOffset": 26
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 211,
                                "endLine": 211,
                                "startOffset": 20,
                                "endOffset": 23
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 212,
                                "endLine": 212,
                                "startOffset": 24,
                                "endOffset": 27
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 213,
                                "endLine": 213,
                                "startOffset": 28,
                                "endOffset": 30
                            },
                            "msg": "+6 (incl 5 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 222,
                                "endLine": 222,
                                "startOffset": 20,
                                "endOffset": 23
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 232,
                                "endLine": 232,
                                "startOffset": 20,
                                "endOffset": 23
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 253,
                                "endLine": 253,
                                "startOffset": 16,
                                "endOffset": 19
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 255,
                                "endLine": 255,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 296,
                                "endLine": 296,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 297,
                                "endLine": 297,
                                "startOffset": 44,
                                "endOffset": 46
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 300,
                                "endLine": 300,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 302,
                                "endLine": 302,
                                "startOffset": 24,
                                "endOffset": 26
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 307,
                                "endLine": 307,
                                "startOffset": 24,
                                "endOffset": 30
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 312,
                                "endLine": 312,
                                "startOffset": 20,
                                "endOffset": 24
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 316,
                                "endLine": 316,
                                "startOffset": 16,
                                "endOffset": 22
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 329,
                                "endLine": 329,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 333,
                                "endLine": 333,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 334,
                                "endLine": 334,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 337,
                                "endLine": 337,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 339,
                                "endLine": 339,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 341,
                                "endLine": 341,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
                            "textRange": {
                                "startLine": 345,
                                "endLine": 345,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 128 to the 15 allowed.",
            "effort": "1h58min",
            "debt": "1h58min",
            "author": "dmitry.zarukin@intel.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-06-16T00:22:47+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrKZock1YBqmb8Oc",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "project": "oneDNN",
            "line": 215,
            "hash": "6ae09930d16509073977d271a4d5d26f",
            "textRange": {
                "startLine": 215,
                "endLine": 215,
                "startOffset": 4,
                "endOffset": 15
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 230,
                                "endLine": 230,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 230,
                                "endLine": 230,
                                "startOffset": 21,
                                "endOffset": 24
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 232,
                                "endLine": 232,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 232,
                                "endLine": 232,
                                "startOffset": 23,
                                "endOffset": 26
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 237,
                                "endLine": 237,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 239,
                                "endLine": 239,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 240,
                                "endLine": 240,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 241,
                                "endLine": 241,
                                "startOffset": 16,
                                "endOffset": 19
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 242,
                                "endLine": 242,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 244,
                                "endLine": 244,
                                "startOffset": 24,
                                "endOffset": 26
                            },
                            "msg": "+6 (incl 5 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 244,
                                "endLine": 244,
                                "startOffset": 47,
                                "endOffset": 50
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 252,
                                "endLine": 252,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 254,
                                "endLine": 254,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 273,
                                "endLine": 273,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 276,
                                "endLine": 276,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 280,
                                "endLine": 280,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 280,
                                "endLine": 280,
                                "startOffset": 33,
                                "endOffset": 36
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 283,
                                "endLine": 283,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 285,
                                "endLine": 285,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 287,
                                "endLine": 287,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 287,
                                "endLine": 287,
                                "startOffset": 33,
                                "endOffset": 35
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 289,
                                "endLine": 289,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 297,
                                "endLine": 297,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 300,
                                "endLine": 300,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 301,
                                "endLine": 301,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 303,
                                "endLine": 303,
                                "startOffset": 16,
                                "endOffset": 20
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 306,
                                "endLine": 306,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 307,
                                "endLine": 307,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 314,
                                "endLine": 314,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 344,
                                "endLine": 344,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 67 to the 15 allowed.",
            "effort": "57min",
            "debt": "57min",
            "author": "dmitry.zarukin@intel.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-05-25T04:07:36+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrKZock1YBqmb8Of",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "project": "oneDNN",
            "line": 350,
            "hash": "cf8fb4f599a0ffeda96c89cce758c3eb",
            "textRange": {
                "startLine": 350,
                "endLine": 350,
                "startOffset": 4,
                "endOffset": 16
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 354,
                                "endLine": 354,
                                "startOffset": 30,
                                "endOffset": 32
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 359,
                                "endLine": 359,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 362,
                                "endLine": 362,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 368,
                                "endLine": 368,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 368,
                                "endLine": 368,
                                "startOffset": 33,
                                "endOffset": 36
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 371,
                                "endLine": 371,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 371,
                                "endLine": 371,
                                "startOffset": 34,
                                "endOffset": 36
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 374,
                                "endLine": 374,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 377,
                                "endLine": 377,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 377,
                                "endLine": 377,
                                "startOffset": 36,
                                "endOffset": 39
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 379,
                                "endLine": 379,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 387,
                                "endLine": 387,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 390,
                                "endLine": 390,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 393,
                                "endLine": 393,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 396,
                                "endLine": 396,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 396,
                                "endLine": 396,
                                "startOffset": 31,
                                "endOffset": 34
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 398,
                                "endLine": 398,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 400,
                                "endLine": 400,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 403,
                                "endLine": 403,
                                "startOffset": 16,
                                "endOffset": 20
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 405,
                                "endLine": 405,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 414,
                                "endLine": 414,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 417,
                                "endLine": 417,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 417,
                                "endLine": 417,
                                "startOffset": 50,
                                "endOffset": 52
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 418,
                                "endLine": 418,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 420,
                                "endLine": 420,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 422,
                                "endLine": 422,
                                "startOffset": 16,
                                "endOffset": 20
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 424,
                                "endLine": 424,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 432,
                                "endLine": 432,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 435,
                                "endLine": 435,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 436,
                                "endLine": 436,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 437,
                                "endLine": 437,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 439,
                                "endLine": 439,
                                "startOffset": 20,
                                "endOffset": 24
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 441,
                                "endLine": 441,
                                "startOffset": 16,
                                "endOffset": 20
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 442,
                                "endLine": 442,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 444,
                                "endLine": 444,
                                "startOffset": 20,
                                "endOffset": 24
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 447,
                                "endLine": 447,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 448,
                                "endLine": 448,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 449,
                                "endLine": 449,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 451,
                                "endLine": 451,
                                "startOffset": 20,
                                "endOffset": 24
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 467,
                                "endLine": 467,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 470,
                                "endLine": 470,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 470,
                                "endLine": 470,
                                "startOffset": 36,
                                "endOffset": 39
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 472,
                                "endLine": 472,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 472,
                                "endLine": 472,
                                "startOffset": 40,
                                "endOffset": 43
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 480,
                                "endLine": 480,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 481,
                                "endLine": 481,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 510,
                                "endLine": 510,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 105 to the 15 allowed.",
            "effort": "1h35min",
            "debt": "1h35min",
            "author": "dmitry.zarukin@intel.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-05-25T04:07:36+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrKZock1YBqmb8Oj",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "project": "oneDNN",
            "line": 515,
            "hash": "5cacd60a3716ea0492f2daff76313976",
            "textRange": {
                "startLine": 515,
                "endLine": 515,
                "startOffset": 4,
                "endOffset": 17
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 520,
                                "endLine": 520,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 522,
                                "endLine": 522,
                                "startOffset": 16,
                                "endOffset": 19
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 524,
                                "endLine": 524,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 526,
                                "endLine": 526,
                                "startOffset": 24,
                                "endOffset": 26
                            },
                            "msg": "+6 (incl 5 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 528,
                                "endLine": 528,
                                "startOffset": 24,
                                "endOffset": 28
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 530,
                                "endLine": 530,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 532,
                                "endLine": 532,
                                "startOffset": 12,
                                "endOffset": 16
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 543,
                                "endLine": 543,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 545,
                                "endLine": 545,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 550,
                                "endLine": 550,
                                "startOffset": 8,
                                "endOffset": 11
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 552,
                                "endLine": 552,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 552,
                                "endLine": 552,
                                "startOffset": 36,
                                "endOffset": 38
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 554,
                                "endLine": 554,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 565,
                                "endLine": 565,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 38 to the 15 allowed.",
            "effort": "28min",
            "debt": "28min",
            "author": "dmitry.zarukin@intel.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-05-25T04:07:36+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrJ4ock1YBqmb8OU",
            "rule": "python:S1135",
            "severity": "INFO",
            "component": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
            "project": "oneDNN",
            "line": 82,
            "hash": "35a47af5d56539ab4eb1ed58e38f1163",
            "textRange": {
                "startLine": 82,
                "endLine": 82,
                "startOffset": 20,
                "endOffset": 46
            },
            "flows": [],
            "status": "OPEN",
            "message": "Complete the task associated to this \"TODO\" comment.",
            "effort": "0min",
            "debt": "0min",
            "author": "dmitry.zarukin@intel.com",
            "tags": [
                "cwe"
            ],
            "creationDate": "2023-05-25T04:07:36+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrOHock1YBqmb8Ov",
            "rule": "python:S1192",
            "severity": "CRITICAL",
            "component": "oneDNN:scripts/generate_dnnl_debug.py",
            "project": "oneDNN",
            "line": 315,
            "hash": "5ddb3b4f73b8a8056fdbe252d725fa40",
            "textRange": {
                "startLine": 315,
                "endLine": 315,
                "startOffset": 22,
                "endOffset": 57
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/generate_dnnl_debug.py",
                            "textRange": {
                                "startLine": 316,
                                "endLine": 316,
                                "startOffset": 22,
                                "endOffset": 57
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/generate_dnnl_debug.py",
                            "textRange": {
                                "startLine": 327,
                                "endLine": 327,
                                "startOffset": 35,
                                "endOffset": 70
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/generate_dnnl_debug.py",
                            "textRange": {
                                "startLine": 328,
                                "endLine": 328,
                                "startOffset": 35,
                                "endOffset": 70
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Define a constant instead of duplicating this literal \"#ifdef DNNL_EXPERIMENTAL_SPARSE\\n\" 4 times.",
            "effort": "8min",
            "debt": "8min",
            "author": "dmitry.zarukin@intel.com",
            "tags": [
                "design"
            ],
            "creationDate": "2023-05-06T02:36:52+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrOHock1YBqmb8Ow",
            "rule": "python:S1192",
            "severity": "CRITICAL",
            "component": "oneDNN:scripts/generate_dnnl_debug.py",
            "project": "oneDNN",
            "line": 322,
            "hash": "aa0a2663b78c76c135e8b71afe0a740f",
            "textRange": {
                "startLine": 322,
                "endLine": 322,
                "startOffset": 22,
                "endOffset": 32
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/generate_dnnl_debug.py",
                            "textRange": {
                                "startLine": 323,
                                "endLine": 323,
                                "startOffset": 22,
                                "endOffset": 32
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/generate_dnnl_debug.py",
                            "textRange": {
                                "startLine": 336,
                                "endLine": 336,
                                "startOffset": 35,
                                "endOffset": 45
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/generate_dnnl_debug.py",
                            "textRange": {
                                "startLine": 337,
                                "endLine": 337,
                                "startOffset": 35,
                                "endOffset": 45
                            },
                            "msg": "Duplication",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Define a constant instead of duplicating this literal \"#endif\\n\" 4 times.",
            "effort": "8min",
            "debt": "8min",
            "author": "dmitry.zarukin@intel.com",
            "tags": [
                "design"
            ],
            "creationDate": "2023-05-06T02:36:52+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrOzock1YBqmb8Ox",
            "rule": "python:S1066",
            "severity": "MAJOR",
            "component": "oneDNN:scripts/generate_format_tags.py",
            "project": "oneDNN",
            "line": 38,
            "hash": "3b90a0445680d955b68333f5e3f5e223",
            "textRange": {
                "startLine": 38,
                "endLine": 38,
                "startOffset": 12,
                "endOffset": 14
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/generate_format_tags.py",
                            "textRange": {
                                "startLine": 37,
                                "endLine": 37,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "enclosing",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Merge this if statement with the enclosing one.",
            "effort": "5min",
            "debt": "5min",
            "author": "dmitry.zarukin@intel.com",
            "tags": [
                "clumsy"
            ],
            "creationDate": "2023-05-06T02:36:52+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrKZock1YBqmb8OX",
            "rule": "python:S5797",
            "severity": "CRITICAL",
            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "project": "oneDNN",
            "line": 19,
            "hash": "3357b737a1387ba60a0f25cdc21a15c0",
            "textRange": {
                "startLine": 19,
                "endLine": 19,
                "startOffset": 7,
                "endOffset": 24
            },
            "flows": [],
            "status": "OPEN",
            "message": "Replace this expression; used as a condition it will always be constant.",
            "effort": "2min",
            "debt": "2min",
            "author": "dmitry.zarukin@intel.com",
            "tags": [
                "suspicious"
            ],
            "creationDate": "2023-05-06T02:36:52+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrKZock1YBqmb8OY",
            "rule": "python:S5806",
            "severity": "MAJOR",
            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "project": "oneDNN",
            "line": 76,
            "hash": "f57faaf101a27d8ec35107e6ad6d9c45",
            "textRange": {
                "startLine": 76,
                "endLine": 76,
                "startOffset": 4,
                "endOffset": 7
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 90,
                                "endLine": 90,
                                "startOffset": 4,
                                "endOffset": 7
                            },
                            "msg": "Variable also assigned here.",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 91,
                                "endLine": 91,
                                "startOffset": 4,
                                "endOffset": 7
                            },
                            "msg": "Variable also assigned here.",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Rename this variable; it shadows a builtin.",
            "effort": "5min",
            "debt": "5min",
            "author": "dmitry.zarukin@intel.com",
            "tags": [
                "bad-practice",
                "confusing",
                "pitfall"
            ],
            "creationDate": "2023-05-06T02:36:52+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrKZock1YBqmb8Oa",
            "rule": "python:S5806",
            "severity": "MAJOR",
            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "project": "oneDNN",
            "line": 103,
            "hash": "6420198a4a089f756c36ab7993268c49",
            "textRange": {
                "startLine": 103,
                "endLine": 103,
                "startOffset": 12,
                "endOffset": 15
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 108,
                                "endLine": 108,
                                "startOffset": 16,
                                "endOffset": 19
                            },
                            "msg": "Variable also assigned here.",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 126,
                                "endLine": 126,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "Variable also assigned here.",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 131,
                                "endLine": 131,
                                "startOffset": 16,
                                "endOffset": 19
                            },
                            "msg": "Variable also assigned here.",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 139,
                                "endLine": 139,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "Variable also assigned here.",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Rename this variable; it shadows a builtin.",
            "effort": "5min",
            "debt": "5min",
            "author": "dmitry.zarukin@intel.com",
            "tags": [
                "bad-practice",
                "confusing",
                "pitfall"
            ],
            "creationDate": "2023-05-06T02:36:52+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrKZock1YBqmb8Oi",
            "rule": "python:S1481",
            "severity": "MINOR",
            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "project": "oneDNN",
            "line": 479,
            "hash": "dd57a9105fbcc5dd14e9de611c6c87c0",
            "textRange": {
                "startLine": 479,
                "endLine": 479,
                "startOffset": 8,
                "endOffset": 15
            },
            "flows": [],
            "status": "OPEN",
            "message": "Remove the unused local variable \"stat_md\".",
            "effort": "5min",
            "debt": "5min",
            "author": "dmitry.zarukin@intel.com",
            "tags": [
                "unused"
            ],
            "creationDate": "2023-05-06T02:36:52+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrKZock1YBqmb8Oo",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "project": "oneDNN",
            "line": 751,
            "hash": "408bcdb6d6469d393c24f0d2a4fbbe97",
            "textRange": {
                "startLine": 751,
                "endLine": 751,
                "startOffset": 8,
                "endOffset": 16
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 756,
                                "endLine": 756,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 768,
                                "endLine": 768,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 778,
                                "endLine": 778,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 779,
                                "endLine": 779,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 782,
                                "endLine": 782,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 784,
                                "endLine": 784,
                                "startOffset": 16,
                                "endOffset": 20
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 786,
                                "endLine": 786,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 787,
                                "endLine": 787,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 789,
                                "endLine": 789,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
                            "textRange": {
                                "startLine": 791,
                                "endLine": 791,
                                "startOffset": 16,
                                "endOffset": 20
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 18 to the 15 allowed.",
            "effort": "8min",
            "debt": "8min",
            "author": "dmitry.zarukin@intel.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-05-06T02:36:52+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrI9ock1YBqmb8OQ",
            "rule": "python:S1066",
            "severity": "MAJOR",
            "component": "oneDNN:scripts/verbose_converter/src/writer.py",
            "project": "oneDNN",
            "line": 27,
            "hash": "1b9232f1610b9344eb1ff96655d5b0dd",
            "textRange": {
                "startLine": 27,
                "endLine": 27,
                "startOffset": 12,
                "endOffset": 14
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/src/writer.py",
                            "textRange": {
                                "startLine": 26,
                                "endLine": 26,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "enclosing",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Merge this if statement with the enclosing one.",
            "effort": "5min",
            "debt": "5min",
            "author": "dmitry.zarukin@intel.com",
            "tags": [
                "clumsy"
            ],
            "creationDate": "2023-05-06T02:36:52+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrNJock1YBqmb8Ot",
            "rule": "python:S5806",
            "severity": "MAJOR",
            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
            "project": "oneDNN",
            "line": 56,
            "hash": "8444642ecd6ba7cf8ebbda63e7c3b59c",
            "textRange": {
                "startLine": 56,
                "endLine": 56,
                "startOffset": 16,
                "endOffset": 19
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this variable; it shadows a builtin.",
            "effort": "5min",
            "debt": "5min",
            "author": "dmitry.zarukin@intel.com",
            "tags": [
                "bad-practice",
                "confusing",
                "pitfall"
            ],
            "creationDate": "2023-05-06T02:36:52+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrKoock1YBqmb8Oq",
            "rule": "python:S3776",
            "severity": "CRITICAL",
            "component": "oneDNN:scripts/verbose_converter/verbose_converter.py",
            "project": "oneDNN",
            "line": 76,
            "hash": "36999f0b7d2b4dd75cc52066ae8a601f",
            "textRange": {
                "startLine": 76,
                "endLine": 76,
                "startOffset": 4,
                "endOffset": 8
            },
            "flows": [
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/verbose_converter.py",
                            "textRange": {
                                "startLine": 78,
                                "endLine": 78,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/verbose_converter.py",
                            "textRange": {
                                "startLine": 146,
                                "endLine": 146,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/verbose_converter.py",
                            "textRange": {
                                "startLine": 151,
                                "endLine": 151,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/verbose_converter.py",
                            "textRange": {
                                "startLine": 154,
                                "endLine": 154,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/verbose_converter.py",
                            "textRange": {
                                "startLine": 157,
                                "endLine": 157,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/verbose_converter.py",
                            "textRange": {
                                "startLine": 161,
                                "endLine": 161,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/verbose_converter.py",
                            "textRange": {
                                "startLine": 163,
                                "endLine": 163,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/verbose_converter.py",
                            "textRange": {
                                "startLine": 164,
                                "endLine": 164,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/verbose_converter.py",
                            "textRange": {
                                "startLine": 166,
                                "endLine": 166,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/verbose_converter.py",
                            "textRange": {
                                "startLine": 169,
                                "endLine": 169,
                                "startOffset": 4,
                                "endOffset": 8
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/verbose_converter.py",
                            "textRange": {
                                "startLine": 172,
                                "endLine": 172,
                                "startOffset": 8,
                                "endOffset": 14
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/verbose_converter.py",
                            "textRange": {
                                "startLine": 187,
                                "endLine": 187,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/verbose_converter.py",
                            "textRange": {
                                "startLine": 190,
                                "endLine": 190,
                                "startOffset": 4,
                                "endOffset": 6
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/verbose_converter.py",
                            "textRange": {
                                "startLine": 191,
                                "endLine": 191,
                                "startOffset": 8,
                                "endOffset": 10
                            },
                            "msg": "+2 (incl 1 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/verbose_converter.py",
                            "textRange": {
                                "startLine": 192,
                                "endLine": 192,
                                "startOffset": 12,
                                "endOffset": 14
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/verbose_converter.py",
                            "textRange": {
                                "startLine": 193,
                                "endLine": 193,
                                "startOffset": 16,
                                "endOffset": 19
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/verbose_converter.py",
                            "textRange": {
                                "startLine": 195,
                                "endLine": 195,
                                "startOffset": 20,
                                "endOffset": 22
                            },
                            "msg": "+5 (incl 4 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/verbose_converter.py",
                            "textRange": {
                                "startLine": 199,
                                "endLine": 199,
                                "startOffset": 8,
                                "endOffset": 12
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/verbose_converter.py",
                            "textRange": {
                                "startLine": 200,
                                "endLine": 200,
                                "startOffset": 12,
                                "endOffset": 15
                            },
                            "msg": "+3 (incl 2 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/verbose_converter.py",
                            "textRange": {
                                "startLine": 201,
                                "endLine": 201,
                                "startOffset": 16,
                                "endOffset": 18
                            },
                            "msg": "+4 (incl 3 for nesting)",
                            "msgFormattings": []
                        }
                    ]
                },
                {
                    "locations": [
                        {
                            "component": "oneDNN:scripts/verbose_converter/verbose_converter.py",
                            "textRange": {
                                "startLine": 203,
                                "endLine": 203,
                                "startOffset": 16,
                                "endOffset": 20
                            },
                            "msg": "+1",
                            "msgFormattings": []
                        }
                    ]
                }
            ],
            "status": "OPEN",
            "message": "Refactor this function to reduce its Cognitive Complexity from 40 to the 15 allowed.",
            "effort": "30min",
            "debt": "30min",
            "author": "dmitry.zarukin@intel.com",
            "tags": [
                "brain-overload"
            ],
            "creationDate": "2023-05-06T02:36:52+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrNJock1YBqmb8Ou",
            "rule": "python:S5754",
            "severity": "CRITICAL",
            "component": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
            "project": "oneDNN",
            "line": 117,
            "hash": "1fe3aef5f2b1e8977374da7be6248073",
            "textRange": {
                "startLine": 117,
                "endLine": 117,
                "startOffset": 11,
                "endOffset": 24
            },
            "flows": [],
            "status": "OPEN",
            "message": "Catch a more specific exception or reraise the exception",
            "effort": "5min",
            "debt": "5min",
            "author": "igor.safonov@intel.com",
            "tags": [
                "bad-practice",
                "error-handling",
                "suspicious"
            ],
            "creationDate": "2023-02-24T23:44:16+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrKZock1YBqmb8Od",
            "rule": "python:S125",
            "severity": "MAJOR",
            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "project": "oneDNN",
            "line": 269,
            "hash": "92938199acb3a38389e520d4c8cc1efa",
            "textRange": {
                "startLine": 269,
                "endLine": 269,
                "startOffset": 4,
                "endOffset": 35
            },
            "flows": [],
            "status": "OPEN",
            "message": "Remove this commented out code.",
            "effort": "5min",
            "debt": "5min",
            "author": "dmitry.zarukin@intel.com",
            "tags": [
                "unused"
            ],
            "creationDate": "2022-08-13T02:26:26+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrKZock1YBqmb8Og",
            "rule": "python:S125",
            "severity": "MAJOR",
            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "project": "oneDNN",
            "line": 411,
            "hash": "a88d06f28e76fa9fb4ede956c07038d0",
            "textRange": {
                "startLine": 411,
                "endLine": 411,
                "startOffset": 4,
                "endOffset": 39
            },
            "flows": [],
            "status": "OPEN",
            "message": "Remove this commented out code.",
            "effort": "5min",
            "debt": "5min",
            "author": "dmitry.zarukin@intel.com",
            "tags": [
                "unused"
            ],
            "creationDate": "2022-08-13T02:26:26+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrKZock1YBqmb8Ob",
            "rule": "python:S5806",
            "severity": "MAJOR",
            "component": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "project": "oneDNN",
            "line": 158,
            "hash": "0d3c5d069382705ff131731e36ccb22b",
            "textRange": {
                "startLine": 158,
                "endLine": 158,
                "startOffset": 12,
                "endOffset": 15
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this variable; it shadows a builtin.",
            "effort": "5min",
            "debt": "5min",
            "author": "igor.safonov@intel.com",
            "tags": [
                "bad-practice",
                "confusing",
                "pitfall"
            ],
            "creationDate": "2022-07-08T06:28:30+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrJgock1YBqmb8OS",
            "rule": "python:S4487",
            "severity": "CRITICAL",
            "component": "oneDNN:scripts/verbose_converter/src/breakdown_generator.py",
            "project": "oneDNN",
            "line": 24,
            "hash": "08fdd02ca99c05c933b99b85dda4113a",
            "textRange": {
                "startLine": 24,
                "endLine": 24,
                "startOffset": 13,
                "endOffset": 21
            },
            "flows": [],
            "status": "OPEN",
            "message": "Remove this unread private attribute \u0027__writer\u0027 or refactor the code to use its value.",
            "effort": "5min",
            "debt": "5min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "cwe",
                "unused"
            ],
            "creationDate": "2022-05-09T13:22:59+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8NM",
            "rule": "python:S2208",
            "severity": "CRITICAL",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 11,
            "hash": "80e947ab0a4c161ba4887d6fc7d4086c",
            "textRange": {
                "startLine": 11,
                "endLine": 11,
                "startOffset": 0,
                "endOffset": 20
            },
            "flows": [],
            "status": "OPEN",
            "message": "Import only needed names or import the module and then use its members.",
            "effort": "5min",
            "debt": "5min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "pitfall"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8NN",
            "rule": "python:S2208",
            "severity": "CRITICAL",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 12,
            "hash": "2ae573e2c06105415093168c3846a9f4",
            "textRange": {
                "startLine": 12,
                "endLine": 12,
                "startOffset": 0,
                "endOffset": 18
            },
            "flows": [],
            "status": "OPEN",
            "message": "Import only needed names or import the module and then use its members.",
            "effort": "5min",
            "debt": "5min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "pitfall"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8N1",
            "rule": "python:S101",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 992,
            "hash": "08e3197232c81f39fb10a62cfed75cbb",
            "textRange": {
                "startLine": 992,
                "endLine": 992,
                "startOffset": 6,
                "endOffset": 13
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename class \"ZET_DDI\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
            "effort": "5min",
            "debt": "5min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8N5",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1004,
            "hash": "366085a553cd6d1c95275b76b198acec",
            "textRange": {
                "startLine": 1004,
                "endLine": 1004,
                "startOffset": 8,
                "endOffset": 15
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"_Device\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8OD",
            "rule": "python:S112",
            "severity": "MAJOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1007,
            "hash": "a558551dafee7dfc9ebda5655ec122f0",
            "textRange": {
                "startLine": 1007,
                "endLine": 1007,
                "startOffset": 18,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Replace this generic exception class with a more specific one.",
            "effort": "20min",
            "debt": "20min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "cwe",
                "error-handling"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8NT",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1011,
            "hash": "08459645ed1956fe71613ebae8d53b46",
            "textRange": {
                "startLine": 1011,
                "endLine": 1011,
                "startOffset": 13,
                "endOffset": 40
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetDeviceGetDebugProperties\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8N3",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1014,
            "hash": "bc54daf3c6acfd074f335b3a5b995017",
            "textRange": {
                "startLine": 1014,
                "endLine": 1014,
                "startOffset": 8,
                "endOffset": 16
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"_Context\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8OE",
            "rule": "python:S112",
            "severity": "MAJOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1017,
            "hash": "a558551dafee7dfc9ebda5655ec122f0",
            "textRange": {
                "startLine": 1017,
                "endLine": 1017,
                "startOffset": 18,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Replace this generic exception class with a more specific one.",
            "effort": "20min",
            "debt": "20min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "cwe",
                "error-handling"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8Nf",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1021,
            "hash": "8ad0752e97406e870f8b9ae6d12a1204",
            "textRange": {
                "startLine": 1021,
                "endLine": 1021,
                "startOffset": 13,
                "endOffset": 43
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetContextActivateMetricGroups\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8N2",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1024,
            "hash": "b9f3e84a8161a0d8db29e955035e2aca",
            "textRange": {
                "startLine": 1024,
                "endLine": 1024,
                "startOffset": 8,
                "endOffset": 20
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"_CommandList\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8OF",
            "rule": "python:S112",
            "severity": "MAJOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1027,
            "hash": "a558551dafee7dfc9ebda5655ec122f0",
            "textRange": {
                "startLine": 1027,
                "endLine": 1027,
                "startOffset": 18,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Replace this generic exception class with a more specific one.",
            "effort": "20min",
            "debt": "20min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "cwe",
                "error-handling"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8Na",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1031,
            "hash": "5f9b37d8247bb30bd153ebae0375e803",
            "textRange": {
                "startLine": 1031,
                "endLine": 1031,
                "startOffset": 13,
                "endOffset": 53
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetCommandListAppendMetricStreamerMarker\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8NZ",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1032,
            "hash": "e91ede0ddf49a2f9417e53bf8eb4a0be",
            "textRange": {
                "startLine": 1032,
                "endLine": 1032,
                "startOffset": 13,
                "endOffset": 49
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetCommandListAppendMetricQueryBegin\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8N0",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1033,
            "hash": "c836941bdfa650d74f10e98722b5bb23",
            "textRange": {
                "startLine": 1033,
                "endLine": 1033,
                "startOffset": 13,
                "endOffset": 47
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetCommandListAppendMetricQueryEnd\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8Nn",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1034,
            "hash": "5f09beaec34dd34676ebba344a148b82",
            "textRange": {
                "startLine": 1034,
                "endLine": 1034,
                "startOffset": 13,
                "endOffset": 52
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetCommandListAppendMetricMemoryBarrier\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8OB",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1037,
            "hash": "dd388c037298a0266a8208c0aea19522",
            "textRange": {
                "startLine": 1037,
                "endLine": 1037,
                "startOffset": 8,
                "endOffset": 15
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"_Module\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8OG",
            "rule": "python:S112",
            "severity": "MAJOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1040,
            "hash": "a558551dafee7dfc9ebda5655ec122f0",
            "textRange": {
                "startLine": 1040,
                "endLine": 1040,
                "startOffset": 18,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Replace this generic exception class with a more specific one.",
            "effort": "20min",
            "debt": "20min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "cwe",
                "error-handling"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8Nw",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1044,
            "hash": "26f52c3ef45e64e93195b2fa18c6fe14",
            "textRange": {
                "startLine": 1044,
                "endLine": 1044,
                "startOffset": 13,
                "endOffset": 34
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetModuleGetDebugInfo\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8N6",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1047,
            "hash": "ca386024d3e200e25d95b4b5b7b193d3",
            "textRange": {
                "startLine": 1047,
                "endLine": 1047,
                "startOffset": 8,
                "endOffset": 15
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"_Kernel\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8OH",
            "rule": "python:S112",
            "severity": "MAJOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1050,
            "hash": "a558551dafee7dfc9ebda5655ec122f0",
            "textRange": {
                "startLine": 1050,
                "endLine": 1050,
                "startOffset": 18,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Replace this generic exception class with a more specific one.",
            "effort": "20min",
            "debt": "20min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "cwe",
                "error-handling"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8Nr",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1054,
            "hash": "46d9a89677a1e03757c17331ad7ee964",
            "textRange": {
                "startLine": 1054,
                "endLine": 1054,
                "startOffset": 13,
                "endOffset": 36
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetKernelGetProfileInfo\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8N8",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1057,
            "hash": "bb8e17286a4dab4ddf36469f8d733daf",
            "textRange": {
                "startLine": 1057,
                "endLine": 1057,
                "startOffset": 8,
                "endOffset": 20
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"_MetricGroup\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8OI",
            "rule": "python:S112",
            "severity": "MAJOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1060,
            "hash": "a558551dafee7dfc9ebda5655ec122f0",
            "textRange": {
                "startLine": 1060,
                "endLine": 1060,
                "startOffset": 18,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Replace this generic exception class with a more specific one.",
            "effort": "20min",
            "debt": "20min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "cwe",
                "error-handling"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8NO",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1064,
            "hash": "e20301f150685d73625c264b1a393868",
            "textRange": {
                "startLine": 1064,
                "endLine": 1064,
                "startOffset": 13,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricGroupGet\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8Nk",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1065,
            "hash": "4947c3e0bd3f2a08c6dc02bcd5effe1d",
            "textRange": {
                "startLine": 1065,
                "endLine": 1065,
                "startOffset": 13,
                "endOffset": 40
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricGroupGetProperties\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8Nl",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1066,
            "hash": "8a1e7fb0f9cd2e5518479ee6e27a2417",
            "textRange": {
                "startLine": 1066,
                "endLine": 1066,
                "startOffset": 13,
                "endOffset": 48
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricGroupCalculateMetricValues\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8N9",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1069,
            "hash": "e9a09cb1caf8782e405d301327b1d09c",
            "textRange": {
                "startLine": 1069,
                "endLine": 1069,
                "startOffset": 8,
                "endOffset": 23
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"_MetricGroupExp\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8OJ",
            "rule": "python:S112",
            "severity": "MAJOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1072,
            "hash": "a558551dafee7dfc9ebda5655ec122f0",
            "textRange": {
                "startLine": 1072,
                "endLine": 1072,
                "startOffset": 18,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Replace this generic exception class with a more specific one.",
            "effort": "20min",
            "debt": "20min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "cwe",
                "error-handling"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8Ny",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1076,
            "hash": "e57e6ccfca1a215ef3c8b9614ea8b8a4",
            "textRange": {
                "startLine": 1076,
                "endLine": 1076,
                "startOffset": 13,
                "endOffset": 59
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricGroupCalculateMultipleMetricValuesExp\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8N7",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1079,
            "hash": "bb8fb3714397d6e202823513350d1b06",
            "textRange": {
                "startLine": 1079,
                "endLine": 1079,
                "startOffset": 8,
                "endOffset": 15
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"_Metric\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8OK",
            "rule": "python:S112",
            "severity": "MAJOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1082,
            "hash": "a558551dafee7dfc9ebda5655ec122f0",
            "textRange": {
                "startLine": 1082,
                "endLine": 1082,
                "startOffset": 18,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Replace this generic exception class with a more specific one.",
            "effort": "20min",
            "debt": "20min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "cwe",
                "error-handling"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8Nd",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1086,
            "hash": "1a841c532906f5271b73a92a7c9162c8",
            "textRange": {
                "startLine": 1086,
                "endLine": 1086,
                "startOffset": 13,
                "endOffset": 25
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricGet\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8NQ",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1087,
            "hash": "2c27671d5b3ea9cf0af68c35466947b6",
            "textRange": {
                "startLine": 1087,
                "endLine": 1087,
                "startOffset": 13,
                "endOffset": 35
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricGetProperties\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8OA",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1090,
            "hash": "3ffb41d9faa525782ca98586acf7e161",
            "textRange": {
                "startLine": 1090,
                "endLine": 1090,
                "startOffset": 8,
                "endOffset": 23
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"_MetricStreamer\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8OL",
            "rule": "python:S112",
            "severity": "MAJOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1093,
            "hash": "a558551dafee7dfc9ebda5655ec122f0",
            "textRange": {
                "startLine": 1093,
                "endLine": 1093,
                "startOffset": 18,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Replace this generic exception class with a more specific one.",
            "effort": "20min",
            "debt": "20min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "cwe",
                "error-handling"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8Ni",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1097,
            "hash": "01dde22a6285239adb9e9ef031d11972",
            "textRange": {
                "startLine": 1097,
                "endLine": 1097,
                "startOffset": 13,
                "endOffset": 34
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricStreamerOpen\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8Nt",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1098,
            "hash": "b1faf34025562e643d32ff985641b8e7",
            "textRange": {
                "startLine": 1098,
                "endLine": 1098,
                "startOffset": 13,
                "endOffset": 35
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricStreamerClose\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8NV",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1099,
            "hash": "c9b43a9dfca4717eb22186f839aa9272",
            "textRange": {
                "startLine": 1099,
                "endLine": 1099,
                "startOffset": 13,
                "endOffset": 38
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricStreamerReadData\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8N_",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1102,
            "hash": "44e23c680cd573d6a060f623fa5a0d27",
            "textRange": {
                "startLine": 1102,
                "endLine": 1102,
                "startOffset": 8,
                "endOffset": 24
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"_MetricQueryPool\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8OM",
            "rule": "python:S112",
            "severity": "MAJOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1105,
            "hash": "a558551dafee7dfc9ebda5655ec122f0",
            "textRange": {
                "startLine": 1105,
                "endLine": 1105,
                "startOffset": 18,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Replace this generic exception class with a more specific one.",
            "effort": "20min",
            "debt": "20min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "cwe",
                "error-handling"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8NR",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1109,
            "hash": "a81c5a2fa20694e577bc5b2713ad8576",
            "textRange": {
                "startLine": 1109,
                "endLine": 1109,
                "startOffset": 13,
                "endOffset": 37
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricQueryPoolCreate\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8Nv",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1110,
            "hash": "0a8aa266f999bb6dbc62ba5f1abb1298",
            "textRange": {
                "startLine": 1110,
                "endLine": 1110,
                "startOffset": 13,
                "endOffset": 38
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricQueryPoolDestroy\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8N-",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1113,
            "hash": "cd210ce93ed5f097f20369018508fa59",
            "textRange": {
                "startLine": 1113,
                "endLine": 1113,
                "startOffset": 8,
                "endOffset": 20
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"_MetricQuery\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8ON",
            "rule": "python:S112",
            "severity": "MAJOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1116,
            "hash": "a558551dafee7dfc9ebda5655ec122f0",
            "textRange": {
                "startLine": 1116,
                "endLine": 1116,
                "startOffset": 18,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Replace this generic exception class with a more specific one.",
            "effort": "20min",
            "debt": "20min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "cwe",
                "error-handling"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8Nj",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1120,
            "hash": "131dd6f1f584db029de0e33bfde88fb7",
            "textRange": {
                "startLine": 1120,
                "endLine": 1120,
                "startOffset": 13,
                "endOffset": 33
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricQueryCreate\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8Nh",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1121,
            "hash": "5ebae4bb3d646217c79eb858335329ba",
            "textRange": {
                "startLine": 1121,
                "endLine": 1121,
                "startOffset": 13,
                "endOffset": 34
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricQueryDestroy\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8NP",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1122,
            "hash": "d29ed9c7372780e2f486b63eaafe5eb0",
            "textRange": {
                "startLine": 1122,
                "endLine": 1122,
                "startOffset": 13,
                "endOffset": 32
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricQueryReset\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8NY",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1123,
            "hash": "26e4bbba837a48fdc49c25dfb7ad3c76",
            "textRange": {
                "startLine": 1123,
                "endLine": 1123,
                "startOffset": 13,
                "endOffset": 34
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetMetricQueryGetData\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8OC",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1126,
            "hash": "d62d203220d7da7ebac0a93d92db6ed9",
            "textRange": {
                "startLine": 1126,
                "endLine": 1126,
                "startOffset": 8,
                "endOffset": 18
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"_TracerExp\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8OO",
            "rule": "python:S112",
            "severity": "MAJOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1129,
            "hash": "a558551dafee7dfc9ebda5655ec122f0",
            "textRange": {
                "startLine": 1129,
                "endLine": 1129,
                "startOffset": 18,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Replace this generic exception class with a more specific one.",
            "effort": "20min",
            "debt": "20min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "cwe",
                "error-handling"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8Nu",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1133,
            "hash": "0fae14d13a606ffc9d00e599d69ca2d7",
            "textRange": {
                "startLine": 1133,
                "endLine": 1133,
                "startOffset": 13,
                "endOffset": 31
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetTracerExpCreate\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8Nb",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1134,
            "hash": "b6e1965616d5559e8162e22b72050370",
            "textRange": {
                "startLine": 1134,
                "endLine": 1134,
                "startOffset": 13,
                "endOffset": 32
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetTracerExpDestroy\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8Nx",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1135,
            "hash": "1298d494de9a347b066c618856ac211a",
            "textRange": {
                "startLine": 1135,
                "endLine": 1135,
                "startOffset": 13,
                "endOffset": 37
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetTracerExpSetPrologues\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8Nz",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1136,
            "hash": "52b1c8f39fed3f7e5f66b91a7e43b4ee",
            "textRange": {
                "startLine": 1136,
                "endLine": 1136,
                "startOffset": 13,
                "endOffset": 37
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetTracerExpSetEpilogues\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8Nc",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1137,
            "hash": "271c316c802972dc49dfe2f89842ce89",
            "textRange": {
                "startLine": 1137,
                "endLine": 1137,
                "startOffset": 13,
                "endOffset": 35
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetTracerExpSetEnabled\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8N4",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1140,
            "hash": "e5f0c0e61e0460c066c5a944dd477efe",
            "textRange": {
                "startLine": 1140,
                "endLine": 1140,
                "startOffset": 8,
                "endOffset": 14
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"_Debug\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8OP",
            "rule": "python:S112",
            "severity": "MAJOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1143,
            "hash": "a558551dafee7dfc9ebda5655ec122f0",
            "textRange": {
                "startLine": 1143,
                "endLine": 1143,
                "startOffset": 18,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Replace this generic exception class with a more specific one.",
            "effort": "20min",
            "debt": "20min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "cwe",
                "error-handling"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8Nm",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1147,
            "hash": "3210cc4a46f9ea0872ebbf2a63f44cec",
            "textRange": {
                "startLine": 1147,
                "endLine": 1147,
                "startOffset": 13,
                "endOffset": 27
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetDebugAttach\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8Ng",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1148,
            "hash": "67e5524b44ed6d1b7baad675ba05543e",
            "textRange": {
                "startLine": 1148,
                "endLine": 1148,
                "startOffset": 13,
                "endOffset": 27
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetDebugDetach\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8NX",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1149,
            "hash": "fcf55c354d5fe629a397d6d251374dbd",
            "textRange": {
                "startLine": 1149,
                "endLine": 1149,
                "startOffset": 13,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetDebugReadEvent\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8Np",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1150,
            "hash": "42d9d8bb6aeb970479e0e47f9b7ee33f",
            "textRange": {
                "startLine": 1150,
                "endLine": 1150,
                "startOffset": 13,
                "endOffset": 37
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetDebugAcknowledgeEvent\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8Ns",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1151,
            "hash": "58e0935e0ca89e3a6ae7cb2ad394a735",
            "textRange": {
                "startLine": 1151,
                "endLine": 1151,
                "startOffset": 13,
                "endOffset": 30
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetDebugInterrupt\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8NU",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1152,
            "hash": "a4055bdb67b1471734899a1597aa7756",
            "textRange": {
                "startLine": 1152,
                "endLine": 1152,
                "startOffset": 13,
                "endOffset": 27
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetDebugResume\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8NW",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1153,
            "hash": "8112c635e5ea4c744567284e6fbc637e",
            "textRange": {
                "startLine": 1153,
                "endLine": 1153,
                "startOffset": 13,
                "endOffset": 31
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetDebugReadMemory\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8NS",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1154,
            "hash": "c6fadd2505fcf2f96bee0496403a2c37",
            "textRange": {
                "startLine": 1154,
                "endLine": 1154,
                "startOffset": 13,
                "endOffset": 32
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetDebugWriteMemory\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8Ne",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1155,
            "hash": "0b12b6df9c826d6c379137ffd14bbe9a",
            "textRange": {
                "startLine": 1155,
                "endLine": 1155,
                "startOffset": 13,
                "endOffset": 45
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetDebugGetRegisterSetProperties\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8Nq",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1156,
            "hash": "d2bd0b181c89a50adf96d77ded8569db",
            "textRange": {
                "startLine": 1156,
                "endLine": 1156,
                "startOffset": 13,
                "endOffset": 34
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetDebugReadRegisters\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrIhock1YBqmb8No",
            "rule": "python:S116",
            "severity": "MINOR",
            "component": "oneDNN:src/sycl/level_zero/zet.py",
            "project": "oneDNN",
            "line": 1157,
            "hash": "701fcaca5856e906f5c482793f170f58",
            "textRange": {
                "startLine": 1157,
                "endLine": 1157,
                "startOffset": 13,
                "endOffset": 35
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this field \"zetDebugWriteRegisters\" to match the regular expression ^[_a-z][_a-z0-9]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "mourad.gouicem@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2022-03-09T13:27:53+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrP9ock1YBqmb8O0",
            "rule": "python:S5754",
            "severity": "CRITICAL",
            "component": "oneDNN:doc/sphinx/conf.py",
            "project": "oneDNN",
            "line": 41,
            "hash": "1fe3aef5f2b1e8977374da7be6248073",
            "textRange": {
                "startLine": 41,
                "endLine": 41,
                "startOffset": 11,
                "endOffset": 24
            },
            "flows": [],
            "status": "OPEN",
            "message": "Catch a more specific exception or reraise the exception",
            "effort": "5min",
            "debt": "5min",
            "author": "igor.safonov@intel.com",
            "tags": [
                "bad-practice",
                "error-handling",
                "suspicious"
            ],
            "creationDate": "2021-08-17T02:17:19+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrP9ock1YBqmb8Oz",
            "rule": "python:S1481",
            "severity": "MINOR",
            "component": "oneDNN:doc/sphinx/conf.py",
            "project": "oneDNN",
            "line": 41,
            "hash": "1fe3aef5f2b1e8977374da7be6248073",
            "textRange": {
                "startLine": 41,
                "endLine": 41,
                "startOffset": 28,
                "endOffset": 29
            },
            "flows": [],
            "status": "OPEN",
            "message": "Remove the unused local variable \"e\".",
            "effort": "5min",
            "debt": "5min",
            "author": "igor.safonov@intel.com",
            "tags": [
                "unused"
            ],
            "creationDate": "2021-08-17T02:17:19+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrP9ock1YBqmb8O1",
            "rule": "python:S125",
            "severity": "MAJOR",
            "component": "oneDNN:doc/sphinx/conf.py",
            "project": "oneDNN",
            "line": 133,
            "hash": "c59e4d2f910c8efbf2fcd3d01df1e27d",
            "textRange": {
                "startLine": 133,
                "endLine": 133,
                "startOffset": 0,
                "endOffset": 50
            },
            "flows": [],
            "status": "OPEN",
            "message": "Remove this commented out code.",
            "effort": "5min",
            "debt": "5min",
            "author": "kevin.putnam@intel.com",
            "tags": [
                "unused"
            ],
            "creationDate": "2021-08-17T02:17:19+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrP9ock1YBqmb8O5",
            "rule": "python:S1542",
            "severity": "MAJOR",
            "component": "oneDNN:doc/sphinx/conf.py",
            "project": "oneDNN",
            "line": 188,
            "hash": "8fb95a5baceb783c8a268a6c8ec679da",
            "textRange": {
                "startLine": 188,
                "endLine": 188,
                "startOffset": 4,
                "endOffset": 19
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename function \"fixFileNameRefs\" to match the regular expression ^[a-z_][a-z0-9_]*$.",
            "effort": "10min",
            "debt": "10min",
            "author": "kevin.putnam@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2021-08-17T02:17:19+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrP9ock1YBqmb8O4",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:doc/sphinx/conf.py",
            "project": "oneDNN",
            "line": 191,
            "hash": "b8354d87cce0d44ecdd5f8b28d8ea756",
            "textRange": {
                "startLine": 191,
                "endLine": 191,
                "startOffset": 4,
                "endOffset": 13
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"targetDir\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "kevin.putnam@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2021-08-17T02:17:19+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrP9ock1YBqmb8O2",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:doc/sphinx/conf.py",
            "project": "oneDNN",
            "line": 193,
            "hash": "9026e30002b4976e91878e9ec99848a2",
            "textRange": {
                "startLine": 193,
                "endLine": 193,
                "startOffset": 4,
                "endOffset": 17
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"fileExtension\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "kevin.putnam@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2021-08-17T02:17:19+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        },
        {
            "key": "AYmXgrP9ock1YBqmb8O3",
            "rule": "python:S117",
            "severity": "MINOR",
            "component": "oneDNN:doc/sphinx/conf.py",
            "project": "oneDNN",
            "line": 198,
            "hash": "70d342226e8ee04160a2c5062d1d5dd2",
            "textRange": {
                "startLine": 198,
                "endLine": 198,
                "startOffset": 12,
                "endOffset": 20
            },
            "flows": [],
            "status": "OPEN",
            "message": "Rename this local variable \"filePath\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
            "effort": "2min",
            "debt": "2min",
            "author": "kevin.putnam@intel.com",
            "tags": [
                "convention"
            ],
            "creationDate": "2021-08-17T02:17:19+0530",
            "updateDate": "2023-07-27T18:48:32+0530",
            "type": "CODE_SMELL",
            "scope": "MAIN",
            "quickFixAvailable": false,
            "messageFormattings": []
        }
    ],
    "components": [
        {
            "key": "oneDNN:src/sycl/level_zero/zet.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "zet.py",
            "longName": "src/sycl/level_zero/zet.py",
            "path": "src/sycl/level_zero/zet.py"
        },
        {
            "key": "oneDNN:scripts/generate_dnnl_debug.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "generate_dnnl_debug.py",
            "longName": "scripts/generate_dnnl_debug.py",
            "path": "scripts/generate_dnnl_debug.py"
        },
        {
            "key": "oneDNN:scripts/generate_format_tags.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "generate_format_tags.py",
            "longName": "scripts/generate_format_tags.py",
            "path": "scripts/generate_format_tags.py"
        },
        {
            "key": "oneDNN:scripts/verbose_converter/src/writer.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "writer.py",
            "longName": "scripts/verbose_converter/src/writer.py",
            "path": "scripts/verbose_converter/src/writer.py"
        },
        {
            "key": "oneDNN:scripts/verbose_converter/src/breakdown_generator.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "breakdown_generator.py",
            "longName": "scripts/verbose_converter/src/breakdown_generator.py",
            "path": "scripts/verbose_converter/src/breakdown_generator.py"
        },
        {
            "key": "oneDNN",
            "enabled": true,
            "qualifier": "TRK",
            "name": "oneDNN",
            "longName": "oneDNN"
        },
        {
            "key": "oneDNN:scripts/verbose_converter/src/dnnl_parser.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "dnnl_parser.py",
            "longName": "scripts/verbose_converter/src/dnnl_parser.py",
            "path": "scripts/verbose_converter/src/dnnl_parser.py"
        },
        {
            "key": "oneDNN:doc/sphinx/conf.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "conf.py",
            "longName": "doc/sphinx/conf.py",
            "path": "doc/sphinx/conf.py"
        },
        {
            "key": "oneDNN:scripts/verbose_converter/src/benchdnn_generator.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "benchdnn_generator.py",
            "longName": "scripts/verbose_converter/src/benchdnn_generator.py",
            "path": "scripts/verbose_converter/src/benchdnn_generator.py"
        },
        {
            "key": "oneDNN:scripts/verbose_converter/verbose_converter.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "verbose_converter.py",
            "longName": "scripts/verbose_converter/verbose_converter.py",
            "path": "scripts/verbose_converter/verbose_converter.py"
        },
        {
            "key": "oneDNN:scripts/verbose_converter/tests/benchdnn_test.py",
            "enabled": true,
            "qualifier": "FIL",
            "name": "benchdnn_test.py",
            "longName": "scripts/verbose_converter/tests/benchdnn_test.py",
            "path": "scripts/verbose_converter/tests/benchdnn_test.py"
        }
    ],
    "facets": []
}