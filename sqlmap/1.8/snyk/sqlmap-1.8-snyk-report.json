{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "python/CodeInjection",
              "name": "CodeInjection",
              "shortDescription": {
                "text": "Code Injection"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA secure code injection attack occurs when the attacker exploits an existing input processing vulnerability, passing special characters and code directly to a web-based application or site. The code is then executed, potentially granting the user system access to export sensitive data, to install malware, or even to move laterally and to exploit other systems in the trusted internal network environment. While code injection attacks can take place in several ways, the common factor is allowing the user to submit executable code to the application. The most common forms of code injection are SQL injection (server side) and cross-site scripting (XSS) (client side).\n\n## Best practices for prevention\n- Never trust user input. Assume any input may transmit harmful values.\n- Apply least privilege principle (for example, limit users to read only wherever possible).\n- Avoid passing raw user input directly to functions; use parameterized queries to extract data first.\n- Sanitize user input strings of special characters such as ?, &, /, <, >, and quotation marks.\n- Use whitelisting of known good values.\n- Validate user input against expected response types.\n- Escape shell commands with functions such as shlex for Python, or escapeshellarg for PHP.\n- Remember that code injection can take place on multiple fronts: GET and POST requests, but also cookies and HTTP headers.\n- Ensure up-to-date patching across all systems to remediate known vulnerabilities so these cannot be exploited by code injection.\n- Educate all team members on safe data handling procedures to prevent attacks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "CodeInjection",
                  "Security",
                  "SourceNonServer",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/naftaliharris/tauthon/commit/4ce126b887212da704b2fe4cf7a22322b48d45bd?diff=split#diff-b989b2f4ba160af991a115642288da4f6cc1bc6e98ead4bf36cf2b8cc235a41fL-1",
                    "lines": [
                      {
                        "line": "\tyear = eval(sys.argv[1])\n",
                        "lineNumber": 16,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    year = int(sys.argv[1])\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "else:\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tyear = input('In which year were you born? ')\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "if year in range(100):\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tprint 'I\\'ll assume that by', year,\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "    year = year + 1900\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "    print 'you mean', year, 'and not the early Christian era'\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "elif year not in range(1850, 2000):\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tprint 'It\\'s hard to believe you were born in', year\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "#\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "if sys.argv[2:]:\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tmonth = eval(sys.argv[2])\n",
                        "lineNumber": 28,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    month = int(sys.argv[2])\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "else:\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tmonth = input('And in which month? (1-12) ')\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "if month not in range(1, 13):\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "    print 'There is no month numbered', month\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "#\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "if sys.argv[3:]:\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tday = eval(sys.argv[3])\n",
                        "lineNumber": 36,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    day = int(sys.argv[3])\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/zdict/zdict/commit/4a57287e41f205d4c6555d5aca57d50554a56db2?diff=split#diff-dec6330bb74955e89339d1e0005941bf0932e63ebc2c46c1eaa8a61adb61bfebL-1",
                    "lines": [
                      {
                        "line": "zdict = eval(\"dictionaries.{}()\".format(args.dict))\n",
                        "lineNumber": 103,
                        "lineChange": "removed"
                      },
                      {
                        "line": "zdict = getattr(dictionaries, args.dict)()\n",
                        "lineNumber": 103,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/mayan-edms/Mayan-EDMS/commit/5e4bb41f0743379b0eafef7a36c9a1d2d7b56708?diff=split#diff-3afd3b31f64d6ac32cceb63f7a845fcf8d6a0de0d92767e2722be4ac05a94484L-1",
                    "lines": [
                      {
                        "line": "from ast import literal_eval\n",
                        "lineNumber": 0,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      },
                      {
                        "line": "from django.db import models\n",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "from django.contrib.contenttypes.models import ContentType\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "class SourceTransformationManager(models.Manager):\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def get_for_object(self, obj):\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "        ct = ContentType.objects.get_for_model(obj)\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return self.model.objects.filter(content_type=ct).filter(object_id=obj.pk)\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def get_for_object_as_list(self, obj):\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "        warnings = []\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "        transformations = []\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "        for transformation in self.get_for_object(obj).values('transformation', 'arguments'):\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "            try:\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "                transformations.append(\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    {\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "                        'transformation': transformation['transformation'],\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "                        'arguments': eval(transformation['arguments'], {})\n",
                        "lineNumber": 17,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                        'arguments': literal_eval(transformation['arguments'].strip())\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 54,
                "cwe": [
                  "CWE-94"
                ]
              }
            },
            {
              "id": "cpp/IntegerOverflow",
              "name": "IntegerOverflow",
              "shortDescription": {
                "text": "Integer Overflow"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nAn integer overflow is a type of an arithmetic overflow error when the result of an integer operation does not fit within the allocated memory space. Instead of an error in the program, it usually causes the result to be unexpected. In the context of application security, this could lead to bypass of application logic or validation, and in some cases may lead to buffer overflow vulnerabilities.\n\nExample:\n\n```\nnresp = packet_get_int();\nif (nresp > 0) {\n response = xmalloc(nresp*sizeof(char*));\n for (i = 0; i < nresp; i++)\n  response[i] = packet_get_string(NULL);\n}\n```\n\nIf `nresp` is 1073741824 and `sizeof(char*)` is 4 (which is typical), then `nresp*sizeof(char*)` results in an overflow. Therefore, `xmalloc()` receives and allocates a 0-byte buffer. The subsequent loop causes a heap buffer overflow, which may, in turn, be used by an attacker to execute arbitrary code.\n\n## Best practices for prevention\n\nInteger overflow can be hard to detect and prevent, especially in large and complex codebases. Developers should perform checks as appropriate to determine that arithmetic operations do not result in an overflow. This could be as simple as ensuring the result of the additive operation is not less than the operands themselves (and the inverse for subtractive operations). Libraries and processes can help to prevent such issues too - in the case of the GCC compiler, for example, there are built-in functions that check for integer overflows. In the case of C++ programs, there is a library called SafeInt that performs safe operations.\n\n## References\n\n* [CWE-190: Integer Overflow or Wraparound](https://cwe.mitre.org/data/definitions/190.html)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "IntegerOverflow",
                  "Security",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-190"
                ]
              }
            },
            {
              "id": "python/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "PT",
                  "Security",
                  "SourceNonServer",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/Guad/fuwa/commit/955baf1c0e8824f08a96e48a350ee3cd0e3c5493?diff=split#diff-568470d013cd12e4f388206520da39ab9a4e4c3c6b95846cbc281abc1ba3c959L-1",
                    "lines": [
                      {
                        "line": "import string, random\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "import string, random, hashlib, os\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      },
                      {
                        "line": "from werkzeug import secure_filename\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      },
                      {
                        "line": "#Load config file\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "config = {}\n",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "with open('config.ini', 'r') as file:\n",
                        "lineNumber": 6,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tfor line in file.read().splitlines():\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tline = line.split('==')\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tconfig[line[0]] = line[1]\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "app = flask.Flask(__name__) #Initialize our application\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.config['MAX_CONTENT_LENGTH'] = 10 * 1024 * 1024 #Set the upload limit to 10MiB\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "def genHash(seed): #Generate five letter filenames for our files\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "    base = string.ascii_lowercase+string.digits \n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "    random.seed(seed)\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "    hash_value = \"\"\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for i in range(5):\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "        hash_value += random.choice(base)\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return hash_value\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "@app.route('/', methods=['GET', 'POST'])\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "def index():\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tif flask.request.method == 'POST':\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\"\"\"\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tFile upload happens here.\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tWe get your filename and convert it to our hash with your extension.\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tThen we redirect to the file itself.\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\"\"\"\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tf = flask.request.files['file']\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\textension = f.filename.split('.')[-1]\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tfilename = genHash(f.filename) + '.' + extension\n",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tf.save('static/files/%s' % filename)\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tprint 'Uploaded file \\'%s\\'' % filename #Log what file was uploaded\n",
                        "lineNumber": 27,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\treturn flask.redirect(flask.url_for('getFile', filename=filename))\n",
                        "lineNumber": 28,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\thasher = hashlib.md5() \t\t\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tbuf = f.read()\t\t   \t\t\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tf.seek(0) #Set cursor back to position 0 so we can read it again in the save function.\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\t\t\t\t\t\t\t# We hash the file to get its filename.\t   \t\t\n",
                        "lineNumber": 37,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\t\t\t\t\t\t\t# So that we can upload two different images with the same filename,\n",
                        "lineNumber": 38,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\thasher.update(buf)\t   \t\t# But not two same images with different filenames.\n",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tdirname = genHash(hasher.hexdigest())\n",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tif not os.path.exists(\"static/files/%s\" % dirname): # Check if the folder already exists\n",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tos.mkdir('static/files/%s' % dirname) #Make it\n",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tf.save('static/files/%s/%s' % (dirname, secure_filename(f.filename)))\n",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tprint 'Uploaded file \\'%s\\'' % secure_filename(f.filename) #Log what file was uploaded\n",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\treturn flask.redirect(flask.url_for('getFile', dirname=dirname,filename=secure_filename(f.filename)))\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\telse:\n",
                        "lineNumber": 46,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tflask.flash('File already exists in %s!' % dirname) #Display a message for the user.\n",
                        "lineNumber": 47,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\treturn flask.redirect(flask.url_for('index'))\n",
                        "lineNumber": 48,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/fonttools/fonttools/commit/0b99c8968e04e2e36c6c46ad8bb1a550d25969b4?diff=split#diff-e8b6161353c7ce5b13e62df1da329a85de0ef80ce8f039d283c25bf892b2b600L-1",
                    "lines": [
                      {
                        "line": "os.system('gzip -9v %s' % tar)\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "os.rename(gz, tgz)\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "if destdir:\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tprint \"destination directory:\", destdir\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tos.system('mv %s %s' % (gz, destdir))\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Chenwe-i-lin/KnowledgeFruits/commit/?diff=split#diff-ab8c675e5b4b07c550455b0884835f1df471bb69ad7142f6ad43b26cf33eb4e6L-1",
                    "lines": [
                      {
                        "line": "base_path = os.path.abspath(os.path.dirname(__file__))\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "base_path_for_data =  os.path.join(base_path,'data/texture')\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "file = os.path.join(base_path_for_data, image + '.png')\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "if os.path.abspath(file).startswith(base_path_for_data):\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "with open(os.getcwd() + \"/data/texture/\" + image + '.png', \"rb\") as f:\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 36,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "python/Sqli",
              "name": "Sqli",
              "shortDescription": {
                "text": "SQL Injection"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nIn an SQL injection attack, the user can submit an SQL query directly to the database, gaining access without providing appropriate credentials. Attackers can then view, export, modify, and delete confidential information; change passwords and other authentication information; and possibly gain access to other systems within the network. This is one of the most commonly exploited categories of vulnerability, but can largely be avoided through good coding practices.\n\n## Best practices for prevention\n* Avoid passing user-entered parameters directly to the SQL server.\n* Avoid using string concatenation to build SQL queries from user-entered parameters.\n* When coding, define SQL code first, then pass in parameters. Use prepared statements with parameterized queries. Examples include `SqlCommand()` in .NET and `bindParam()` in PHP.\n* Use strong typing for all parameters so unexpected user data will be rejected.\n* Where direct user input cannot be avoided for performance reasons, validate input against a very strict allowlist of permitted characters, avoiding special characters such as `? & / < > ; - ' \" \\` and spaces. Use a vendor-supplied escaping routine if possible.\n* Develop your application in an environment and/or using libraries that provide protection against SQL injection.\n* Harden your entire environment around a least-privilege model, ideally with isolated accounts with privileges only for particular tasks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "Sqli",
                  "Security",
                  "SourceServer",
                  "SourceRequestUrl",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/nttdots/go-dots/commit/38d1493d11c3a764136c953237233fd16a3e3dc9?diff=split#diff-c7737ee0a3441787e4bcee78bd8ab548aa068c1d16a2632ecf141d9f405d0105L-1",
                    "lines": [
                      {
                        "line": "cur.execute(\"select type, capacity from blocker where id=%d\" % i)\n",
                        "lineNumber": 15,
                        "lineChange": "removed"
                      },
                      {
                        "line": "cur.execute(\"select type, capacity from blocker where id=%s\", (i,))\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/StorminStanley/st2incubator/commit/0b4500580e10365fa7f4fe8b2e96dbba2bd329bf?diff=split#diff-31d8468daa423d5561ecde70355d49ec9e205612ac5e39aa59516dbcbcf37e4aL-1",
                    "lines": [
                      {
                        "line": "email = MySQLdb.escape_string(email)\n",
                        "lineNumber": 100,
                        "lineChange": "added"
                      },
                      {
                        "line": "c = self.db.cursor()\n",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "query = 'SELECT * FROM user_registration WHERE email=\"%s\"' % email\n",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "try:\n",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "    c.execute(query)\n",
                        "lineNumber": 104,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/stopstalk/stopstalk-deployment/commit/e378c37e6a401dc430bf52dce1be8760b9bf9a25?diff=split#diff-c69db29661e495522c99940fe7c8bab30c8a0ccc3fc10ef92b6aa066f14d592fL-1",
                    "lines": [
                      {
                        "line": "    iutable = db.institute_user\n",
                        "lineNumber": 408,
                        "lineChange": "added"
                      },
                      {
                        "line": "    query = (atable.institute == record.institute) & \\\n",
                        "lineNumber": 409,
                        "lineChange": "none"
                      },
                      {
                        "line": "            (atable.email != record.email) & \\\n",
                        "lineNumber": 410,
                        "lineChange": "none"
                      },
                      {
                        "line": "            (atable.institute != \"Other\") & \\\n",
                        "lineNumber": 411,
                        "lineChange": "none"
                      },
                      {
                        "line": "            (atable.blacklisted == False) & \\\n",
                        "lineNumber": 412,
                        "lineChange": "none"
                      },
                      {
                        "line": "            (atable.registration_key == \"\")\n",
                        "lineNumber": 413,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 414,
                        "lineChange": "none"
                      },
                      {
                        "line": "    rows = db(query).select(atable.id)\n",
                        "lineNumber": 415,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if len(rows):\n",
                        "lineNumber": 416,
                        "lineChange": "none"
                      },
                      {
                        "line": "        query_values = \",\".join([str((int(x.id), int(record.id))) for x in rows]).replace(\" \", \"\")\n",
                        "lineNumber": 416,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        db.executesql(\"INSERT INTO institute_user(send_to_id,user_registered_id) VALUES %s;\" % query_values)\n",
                        "lineNumber": 417,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        for row in rows:\n",
                        "lineNumber": 417,
                        "lineChange": "added"
                      },
                      {
                        "line": "            iutable.insert(send_to_id=row.id,\n",
                        "lineNumber": 418,
                        "lineChange": "added"
                      },
                      {
                        "line": "                           user_registered_id=record.id)\n",
                        "lineNumber": 419,
                        "lineChange": "added"
                      },
                      {
                        "line": "            db.commit()\n",
                        "lineNumber": 420,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 64,
                "cwe": [
                  "CWE-89"
                ]
              }
            },
            {
              "id": "python/Deserialization",
              "name": "Deserialization",
              "shortDescription": {
                "text": "Deserialization of Untrusted Data"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n\nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n\n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "Deserialization",
                  "Security",
                  "SourceNonServer",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/jeremyprice/RU_Python_IV/commit/a588d57aee905983084919b9cdd566505e31ad39?diff=split#diff-42db955b84885bb0e283f742d218136891287fef8f89dd296aee6fed8dc780e5L-1",
                    "lines": [
                      {
                        "line": "import yaml\n",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "import sys\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "with open(sys.argv[1], 'r') as infile:\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "    txt = infile.read()\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "for doc in yaml.load_all(txt):\n",
                        "lineNumber": 8,
                        "lineChange": "removed"
                      },
                      {
                        "line": "for doc in yaml.safe_load_all(txt):\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/stone-payments/redismoke/commit/58cedcdc974dda6a51a94e34dd27c50356e8fccc?diff=split#diff-53086616adc7c0b938e29d20df375438fc764992654f4974d12be1aa9166298dL-1",
                    "lines": [
                      {
                        "line": "import yaml\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "from RedisTestSolarwinds import RedisTestMsgSolarwinds\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "from RedisTest import RedisGroupTest\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "def main():\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "    parser = argparse.ArgumentParser(description=\"Test Redis replica sets\")\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "    parser.add_argument(\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "        '--solarwinds',\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "        dest='solarwinds',\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "        action='store_true',\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "        help=\"Solarwinds-compatible output\",\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "        )\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "    parser.add_argument(\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "        '--config',\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "        dest='config',\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "        nargs='?',\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "        help=\"Config file\",\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "        default='redismoke.yml')\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "    parser.add_argument(\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "        '--wait',\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "        dest='wait',\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "        nargs='?',\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "        help=\"Wait seconds before running\",\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "        default=0)\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "    args = parser.parse_args()\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "    with open(args.config, 'r') as stream:\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try:\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "            config = yaml.load(stream)\n",
                        "lineNumber": 32,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            config = yaml.safe_load(stream)\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/vineetjohn/linguistic-style-transfer/commit/3d7a6222f950cbee601eb49451c82b002a159479?diff=split#diff-7ba427b274b25d8cb81bfe88e2535d928c872c69d9e7684a4f59465e790c0b38L-1",
                    "lines": [
                      {
                        "line": "import json\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      },
                      {
                        "line": "import logging\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "import os\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "import pickle\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "import sys\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "from sklearn import metrics\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "from linguistic_style_transfer_model.config import global_config\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "from linguistic_style_transfer_model.utils import log_initializer\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "logger = logging.getLogger(global_config.logger_name)\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "def get_classification_accuracy(predictions_file_path, gold_labels_file_path, saved_model_path):\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "    with open(os.path.join(\n",
                        "lineNumber": 15,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            saved_model_path, global_config.label_to_index_dict_file), 'rb') as pickle_file:\n",
                        "lineNumber": 16,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        label_to_index_map = pickle.load(pickle_file)\n",
                        "lineNumber": 17,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    with open(os.path.join(saved_model_path,\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      },
                      {
                        "line": "                           global_config.label_to_index_dict_file), 'r') as json_file:\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "        label_to_index_map = json.load(json_file)\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 254,
                "cwe": [
                  "CWE-502"
                ]
              }
            },
            {
              "id": "python/InsecureHash",
              "name": "InsecureHash",
              "shortDescription": {
                "text": "Use of Password Hash With Insufficient Computational Effort"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n## Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "InsecureHash",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/kiwitcms/Kiwi/commit/e17c071623e055c24a0fdf203991819d446c8f09?diff=split#diff-aa51d9851848643981397fb834fa01bae8fba8ff6f1af7bcd7c711b007a0433aL-1",
                    "lines": [
                      {
                        "line": "md5 = hashlib.md5()\n",
                        "lineNumber": 7,
                        "lineChange": "removed"
                      },
                      {
                        "line": "md5.update(value.encode(\"UTF-8\"))\n",
                        "lineNumber": 8,
                        "lineChange": "removed"
                      },
                      {
                        "line": "return md5.hexdigest()\n",
                        "lineNumber": 9,
                        "lineChange": "removed"
                      },
                      {
                        "line": "_checksum = hashlib.sha256()\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      },
                      {
                        "line": "_checksum.update(value.encode(\"UTF-8\"))\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "return _checksum.hexdigest()\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/mozilla/amo-validator/commit/1557fa06a96966a6fbacd1733383ae83ad3b0614?diff=split#diff-98ef2e4adee9bbea1bbbd8f184af864ebe80f96ee44e6729e6c74b3ff9aa3147L-1",
                    "lines": [
                      {
                        "line": "hash = hashlib.sha1(open(path).read()).hexdigest()\n",
                        "lineNumber": 10,
                        "lineChange": "removed"
                      },
                      {
                        "line": "hash = hashlib.sha256(open(path).read()).hexdigest()\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/ssfdust/full-stack-flask-smorest/commit/1b364164630cade9a86fc295850c7781fd4a7241?diff=split#diff-c14286914504e87a0adbd9123450ec1bb5484583d1db033876f3df4159371531L-1",
                    "lines": [
                      {
                        "line": "from hashlib import md5\n",
                        "lineNumber": 5,
                        "lineChange": "removed"
                      },
                      {
                        "line": "from app.utils.secure import encrypt_str\n",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "class TestAuth():\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def test_auth(self, flask_app, flask_app_client, regular_user):\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "        user_hash = md5(regular_user.email.encode('utf-8')).hexdigest()\n",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        user_hash = encrypt_str(regular_user.email)\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 144,
                "cwe": [
                  "CWE-916"
                ]
              }
            },
            {
              "id": "python/Jinja2AutoEscapeFalse",
              "name": "Jinja2AutoEscapeFalse",
              "shortDescription": {
                "text": "Jinja auto-escape is set to false."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nJinja2 is a python templating library that can be configured to escape values and avoid XSS vulnerabilities. However, the library by default sets the autoescaping to false.\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser's Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they've been correctly escaped in the application code and in this way the attempted attack is diverted.\n\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware.\n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user's browser.|\n|**DOM-based**|Client|The attacker forces the user's browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n## Best practices for prevention\nThis section describes the top best practices designed to specifically protect your code:\n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches.\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents.\n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "Jinja2AutoEscapeFalse",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/remcoder/Pxxl.js/commit/707b0de4c23a0b62b3367dd7515e9df08c0a85c1?diff=split#diff-68f63e8cccbcb05c3a3fe3cb8f8a020e0b62330133bce1aacdca14328932410aL-1",
                    "lines": [
                      {
                        "line": "env = Environment(loader=FileSystemLoader('templates'))\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "env = Environment(loader=FileSystemLoader('templates'), \n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      },
                      {
                        "line": "  extensions=['jinja2.ext.autoescape'],\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": "  autoescape=True)\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/GoogleCloudPlatform/titan/commit/0bf5c35ddc04b1020a14ed910af41e9ae37b1c1b?diff=split#diff-c11ef690b2d17d9c12d561977691c7d5b8f04c24db5a1f2f7266954296169432L-1",
                    "lines": [
                      {
                        "line": "jinja_environment = jinja2.Environment(\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "    loader=jinja2.FileSystemLoader(os.path.dirname(__file__)))\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    loader=jinja2.FileSystemLoader(os.path.dirname(__file__)), autoescape=True)\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/rsrdesarrollo/sarna/commit/8d4e57c9e3b472e2db8c63d9da194f048e43ee6a?diff=split#diff-c06d497ff6c790308e10bf3e7755c9ef6d603a65b5ead96bdbb3a6d6a7d81605L-1",
                    "lines": [
                      {
                        "line": "jinja2_env = jinja2.Environment()\n",
                        "lineNumber": 104,
                        "lineChange": "removed"
                      },
                      {
                        "line": "jinja2_env = jinja2.Environment(\n",
                        "lineNumber": 105,
                        "lineChange": "added"
                      },
                      {
                        "line": "    autoescape=True\n",
                        "lineNumber": 106,
                        "lineChange": "added"
                      },
                      {
                        "line": ")\n",
                        "lineNumber": 107,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 44,
                "cwe": [
                  "CWE-79"
                ]
              }
            },
            {
              "id": "python/CommandInjection",
              "name": "CommandInjection",
              "shortDescription": {
                "text": "Command Injection"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nWith an OS command injection attack a web application user can pass commands directly to the system shell, attached to a legitimate request. These commands can then be executed on the application server, potentially leading to harmful consequences, including data exposure or deletion. Like code injection attacks, command injection attacks are essentially a failure of data validation. Unlike code injection attacks, which introduce new code, command injection attacks use existing system functions, often taking advantage of the application's unnecessarily high privilege level, increasing the risk of serious harm and reputational damage.\n\n## Best practices for prevention\n- Never trust user input. Assume any input may transmit harmful values.\n- Adopt the principle of least privilege: No application should have a greater access level than needed to run its required tasks.\n- Control user access policies on a task-by-task basis.\n- Don't pass user input directly to the system; use libraries or APIs that lack system access.\n- Where shell commands must be passed, escape values using functions like shlex for Python, or escapeshellarg() for PHP.\n- Sanitize user input with regular expressions to define permitted characters along with maximum string length.\n- Convert special characters such as `& |  ; $ > < \\ !` before passing to the server.\n- Whitelist permitted commands and validate user responses against these expectations.\n- Remember that code injection can take place on multiple fronts: GET and POST requests, but also cookies and HTTP headers.\n- Ensure up-to-date patching across all systems to remediate known vulnerabilities.\n- Educate all team members on safer data handling procedures to prevent attacks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "CommandInjection",
                  "Security",
                  "SourceNonServer",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/ucbvislab/speecheditor/commit/70f2fb2290a28a1db5e65755c3a8307ef538ea99?diff=split#diff-568470d013cd12e4f388206520da39ab9a4e4c3c6b95846cbc281abc1ba3c959L-1",
                    "lines": [
                      {
                        "line": "subprocess.call('cp \"%s\" \"%s\"' % (orig_name, full_name), shell=True)\n",
                        "lineNumber": 285,
                        "lineChange": "removed"
                      },
                      {
                        "line": "shutil.copyfile(orig_name, full_name)\n",
                        "lineNumber": 303,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/esozh/eso_zh_ui/commit/7ef4d63f4c7c2e0275daf08862f615dcc6cf69f5?diff=split#diff-483aa1e8daa36090ed6724943f7abfef3f885823db8620ee30cc5ead97b91053L-1",
                    "lines": [
                      {
                        "line": "os.system('mv %s %s' % (filename, new_name))\n",
                        "lineNumber": 29,
                        "lineChange": "removed"
                      },
                      {
                        "line": "shutil.move(filename, new_name)\n",
                        "lineNumber": 29,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/jjgod/opf-cc/commit/d03202eab8278189bc3d9ebd6ff353772a72189d?diff=split#diff-fd2c598923afdaa788e7469b2866ea4d019adcb333e33494e563810508d06700L-1",
                    "lines": [
                      {
                        "line": "cmd = \"rm -rf '%s'\" % input_path\n",
                        "lineNumber": 143,
                        "lineChange": "removed"
                      },
                      {
                        "line": "os.system(cmd)\n",
                        "lineNumber": 144,
                        "lineChange": "removed"
                      },
                      {
                        "line": "shutil.rmtree(input_path)\n",
                        "lineNumber": 143,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 81,
                "cwe": [
                  "CWE-78"
                ]
              }
            },
            {
              "id": "cpp/BufferOverflow",
              "name": "BufferOverflow",
              "shortDescription": {
                "text": "Buffer Overflow"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nA buffer overflow is a type of runtime error that allows a program to write past the end of a buffer or array — hence the name overflow — and corrupt adjacent memory. Like most bugs, a buffer overflow doesn’t manifest at every program execution. Instead, the vulnerability is triggered under certain circumstances, such as unexpected user input.\n\nA buffer overflow attack is the exploitation of a buffer overflow vulnerability — typically by a malicious actor who wants to gain access or information. In this post, we’ll explain how a buffer overflow occurs and show you how to protect your C++ code from these attacks. Buffer overflows generally result in program crashes, however if the data that would overflow is user controlled, an attacker may cause more damage including deny of service attacks, infinite loops, or even remote code execution.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "BufferOverflow",
                  "Security",
                  "SourceResourceAccess",
                  "SourceFile",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/EtchedPixels/FUZIX/commit/58d3dedab9395d008b66a7caa786eac8f8a70e2d?diff=split#diff-293516809a2c40af227b5584427d853c14465ae7689492aa5d3dfff1155d3402L-1",
                    "lines": [
                      {
                        "line": "    static char iname[256];\n",
                        "lineNumber": 14,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    static char iname[512];\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "    int l = strlen(name) - 1;\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "    /* FIXME: Size check ! */\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    strcpy(iname, name);\n",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    strlcpy(iname, name, 512);\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/uclouvain/openjpeg/commit/8715ce2749d1e5a1e9c77646e9a2ddf0ec82bac9?diff=split#diff-c1330160924cae174cdacdb4b0a6ab7561d56a377c9e44dc867b24030ceda35aL-1",
                    "lines": [
                      {
                        "line": "  char output_file[64];\n",
                        "lineNumber": 98,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  const char *output_file;\n",
                        "lineNumber": 98,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 99,
                        "lineChange": "none"
                      },
                      {
                        "line": "  /* should be test_tile_encoder 3 2000 2000 1000 1000 8 tte1.j2k */\n",
                        "lineNumber": 100,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if( argc == 9 )\n",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "    {\n",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "    num_comps = (OPJ_UINT32)atoi( argv[1] );\n",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "    image_width = atoi( argv[2] );\n",
                        "lineNumber": 104,
                        "lineChange": "none"
                      },
                      {
                        "line": "    image_height = atoi( argv[3] );\n",
                        "lineNumber": 105,
                        "lineChange": "none"
                      },
                      {
                        "line": "    tile_width = atoi( argv[4] );\n",
                        "lineNumber": 106,
                        "lineChange": "none"
                      },
                      {
                        "line": "    tile_height = atoi( argv[5] );\n",
                        "lineNumber": 107,
                        "lineChange": "none"
                      },
                      {
                        "line": "    comp_prec = atoi( argv[6] );\n",
                        "lineNumber": 108,
                        "lineChange": "none"
                      },
                      {
                        "line": "    irreversible = atoi( argv[7] );\n",
                        "lineNumber": 109,
                        "lineChange": "none"
                      },
                      {
                        "line": "    strcpy(output_file, argv[8] );\n",
                        "lineNumber": 110,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    output_file = argv[8];\n",
                        "lineNumber": 110,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/aliyun/iotkit-embedded/commit/44eb2606debf4b8c4c7581cda834ac0558003f2f?diff=split#diff-cc5036bd596d2f2e352dd94ee238dc32554bd55aa19b25abe90a62d3b4cad55fL-1",
                    "lines": [
                      {
                        "line": "strcpy(ctx.pk,argv[1]);\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "strcpy(ctx.dn,argv[2]);\n",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "strcpy(ctx.ds,argv[3]);\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "strncpy(ctx.pk,argv[1],sizeof(ctx.pk)-1);\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "strncpy(ctx.dn,argv[2],sizeof(ctx.dn)-1);\n",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "strncpy(ctx.ds,argv[3],sizeof(ctx.ds)-1);\n",
                        "lineNumber": 27,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 50,
                "cwe": [
                  "CWE-122"
                ]
              }
            },
            {
              "id": "python/InsecureXmlParser",
              "name": "InsecureXmlParser",
              "shortDescription": {
                "text": "Insecure Xml Parser"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nFor convenience, XML documents can use system identifiers to enable access to stored content, whether local or remote. The XML processor then uses the system identifier to access the resource rather than using the URI. When this weakness exists, the application permits user-supplied data, which could include the address of an XML external identity, to be passed directly to the XML parser. The application will then attempt to retrieve documents from outside of secure, controlled areas.\n\nAttackers can exploit this weakness to expose sensitive data, execute port scanning on the server side, or launch a denial-of-service attack (DoS) such as Billion Laughs.\n\n## Best practices for prevention\n* Avoid using vulnerable APIs\n* When possible, disable loading of data from external entities. The method of doing this will vary based on the language and XML parser being used.\n* Use a local, static document type definitions (DTDs) and ensure that external DTDs are disallowed entirely.\n* If user input cannot be avoided, perform validation against an allowlist of possible data sources. However, as long as external DTDs are allowed, XML code remains inherently vulnerable to attacks exploiting this weakness.\n\n\n## References\n* [XML vulnerabilities](https://docs.python.org/3/library/xml.html#xml-vulnerabilities)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "InsecureXmlParser",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/DefectDojo/django-DefectDojo/commit/3bb6173ce1db621ebd99a1cb361e7da7cbaf1925?diff=split#diff-ef1e087c75390ecb8efe1b3990802470d172cb27c62e76392ba87bdae855ca2cL-1",
                    "lines": [
                      {
                        "line": "from xml.dom import NamespaceErr\n",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "from xml.etree import ElementTree\n",
                        "lineNumber": 3,
                        "lineChange": "removed"
                      },
                      {
                        "line": "from defusedxml.dom import NamespaceErr\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": "from defusedxml.etree import ElementTree\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      },
                      {
                        "line": "from datetime import datetime\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "from dojo.models import Finding\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "class CheckmarxXMLParser(object):\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def __init__(self, filename, test):\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "        cxscan = ElementTree.parse(filename)\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/oVirt/vdsm/commit/bebc0dff76115e11a0d8d3be2971d17dd2898711?diff=split#diff-c8191175dae739bf1111cc700f07f7d2ec4e6254ab286559bda259ea3abec251L-1",
                    "lines": [
                      {
                        "line": "actual = ET.fromstring(xml)\n",
                        "lineNumber": 308,
                        "lineChange": "removed"
                      },
                      {
                        "line": "actual = xmlutils.fromstring(xml)\n",
                        "lineNumber": 308,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/GovReady/compliancelib-python/commit/ba892b563bb4c329387a983109caa84382eea0e8?diff=split#diff-50428a83950457170bb17ab641987e84903af63e6263dbf3940fb12d17ea0359L-1",
                    "lines": [
                      {
                        "line": "import xml.etree.ElementTree as ET\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "import defusedxml.ElementTree as ET\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "class NIST800_53(object):\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"represent 800-53 security controls\"\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def __init__(self, id):\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.xmlfile = os.path.join(os.path.dirname(__file__), 'data/800-53-controls.xml')\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.id = id\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if \"(\" in self.id:\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "            self._load_control_enhancement_from_xml()\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "        else:\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "            self._load_control_from_xml()\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # split description\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.set_description_sections()\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self._get_control_json_dict()\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def _load_control_from_xml(self):\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "        \"load control detail from 800-53 xml using a pure python process\"\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "        tree = ET.parse(self.xmlfile)\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 23,
                "cwe": [
                  "CWE-611"
                ]
              }
            },
            {
              "id": "python/InsecureCipher",
              "name": "InsecureCipher",
              "shortDescription": {
                "text": "Use of a Broken or Risky Cryptographic Algorithm"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "\n## Details\n\nWhen sensitive information is transmitted with weak encryption, attackers are potentially able to intercept the information and decrypt it, with a wide range of negative consequences. This includes accessing code or content they are not authorized to view and changing or taking down a site or app, often with a demand for ransom. Every developer is aware of the risks of transmitting sensitive information in plain text. Yet many still use outdated or inferior cryptographic methods to protect information under their control. As cryptographic methods grow stronger with time, code must be updated to incorporate more modern and secure cryptography.\n\n## Best practices for prevention\n* Avoid using DES, and use AES (in a secure mode, such as Galois/Counter Mode) or another strong encryption algorithm instead.\n* Be aware of outdated hashes, such as MD5 and SHA1 (along with many others); recognize and implement current cryptographic standards instead.\n* Never use custom or DIY security and cryptographic methods; instead, use methods that are part of an accepted library or framework.\n* Ensure that code dealing with cryptographic methods is highly modular and can be easily replaced as security standards change.\n* Increase developer awareness of proper encryption key management and protection to ensure best practices throughout the application.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "InsecureCipher",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/timgabets/pythales/commit/df38b3cf770162ae06095c7e827caca329447cd3?diff=split#diff-d67ec80a1d928d7931db8f251200e9c253baaff9f436dc6033bd7f8c010edb45L-1",
                    "lines": [
                      {
                        "line": "from pynblock.tools import raw2str, raw2B, B2raw, xor, get_visa_pvv, get_digits_from_string\n",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 12,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 13,
                        "lineChange": "removed"
                      },
                      {
                        "line": "def get_key_check_value(key, kcv_length=6):\n",
                        "lineNumber": 14,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    \"\"\"\n",
                        "lineNumber": 15,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    Get DES key check value\n",
                        "lineNumber": 16,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    \"\"\"\n",
                        "lineNumber": 17,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    cipher = DES3.new(B2raw(key), DES3.MODE_ECB)\n",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    encrypted = raw2B(cipher.encrypt(B2raw(b'00000000000000000000000000000000')))\n",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return encrypted[:kcv_length]\n",
                        "lineNumber": 21,
                        "lineChange": "removed"
                      },
                      {
                        "line": "from pynblock.tools import raw2str, raw2B, B2raw, xor, get_visa_pvv, get_visa_cvv, get_digits_from_string, key_CV\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/mcnemesis/globalclipboard/commit/c2f90c2e5fdce3c606715e1847037d21aef0f2b9?diff=split#diff-a2df5abffb20fa950f91bbca3038bc7bb1942d6b58252cfa03ad5e1ac294302fL-1",
                    "lines": [
                      {
                        "line": "from Crypto.Cipher import DES3\n",
                        "lineNumber": 9,
                        "lineChange": "removed"
                      },
                      {
                        "line": "from Crypto import Random\n",
                        "lineNumber": 10,
                        "lineChange": "removed"
                      },
                      {
                        "line": "import gnupg\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "import random\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "try:\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "    from cStringIO import StringIO\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "except:\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "    from StringIO import StringIO\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "VERSION = '1.0'\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "CONF_FILE='~/.global_clip/client.conf'\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "#----------- helpers --------------------\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "def encrypt_file(in_s, out_s, chunk_size, key, iv):\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    des3 = DES3.new(key, DES3.MODE_CFB, iv)\n",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    while True:\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        chunk = in_s.read(chunk_size)\n",
                        "lineNumber": 27,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        if len(chunk) == 0:\n",
                        "lineNumber": 28,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            break\n",
                        "lineNumber": 29,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        elif len(chunk) % 16 != 0:\n",
                        "lineNumber": 30,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            chunk += ' ' * (16 - len(chunk) % 16)\n",
                        "lineNumber": 31,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        out_s.write(des3.encrypt(chunk))\n",
                        "lineNumber": 32,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 33,
                        "lineChange": "removed"
                      },
                      {
                        "line": "def decrypt_file(in_s, out_s, chunk_size, key, iv):\n",
                        "lineNumber": 34,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    des3 = DES3.new(key, DES3.MODE_CFB, iv)\n",
                        "lineNumber": 35,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    while True:\n",
                        "lineNumber": 36,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        chunk = in_s.read(chunk_size)\n",
                        "lineNumber": 37,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        if len(chunk) == 0:\n",
                        "lineNumber": 38,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            break\n",
                        "lineNumber": 39,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        out_s.write(des3.decrypt(chunk))\n",
                        "lineNumber": 40,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 41,
                        "lineChange": "removed"
                      },
                      {
                        "line": "def get_random_str(alphabet=None):\n",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "    al = list(alphabet or 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890_|{()-+!~\\\\/*&^%$#@')\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "    random.shuffle(al)\n",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "    p = ''.join(al[0:random.randrange(1,len(al)/2)])\n",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return p\n",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "def encrypt_file(in_s, out_s,email):\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "    gpg = gnupg.GPG(gnupghome=os.path.expanduser(GPG_HOME))\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "    unencrypted_string = in_s.read()\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "    encrypted_data = gpg.encrypt(unencrypted_string,email,always_trust=True)\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if encrypted_data.ok:\n",
                        "lineNumber": 37,
                        "lineChange": "added"
                      },
                      {
                        "line": "        encrypted_string = str(encrypted_data)\n",
                        "lineNumber": 38,
                        "lineChange": "added"
                      },
                      {
                        "line": "        out_s.write(encrypted_string)\n",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "    else:\n",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "        raise BaseException(\"Encrption Failed!\\n\\n%s\" % encrypted_data.stderr)\n",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "def decrypt_file(in_s, out_s, mypassword):\n",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "    gpg = gnupg.GPG(gnupghome=os.path.expanduser(GPG_HOME))\n",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "    encrypted_string = in_s.read()\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "    decrypted_data = gpg.decrypt(encrypted_string, passphrase=mypassword,always_trust=True)\n",
                        "lineNumber": 46,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if decrypted_data.ok:\n",
                        "lineNumber": 47,
                        "lineChange": "added"
                      },
                      {
                        "line": "        out_s.write(decrypted_data.data)\n",
                        "lineNumber": 48,
                        "lineChange": "added"
                      },
                      {
                        "line": "    else:\n",
                        "lineNumber": 49,
                        "lineChange": "added"
                      },
                      {
                        "line": "        raise Exception(\"Decryption Failed!\\n\\n%s\" % decrypted_data.stderr)\n",
                        "lineNumber": 50,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/v3aqb/fwlite/commit/8cbb16045c238bc004168626362744257dad879f?diff=split#diff-745174ccba9d8b45c0784054fd02aab2bb6860824f537aac1172b96020251faeL-1",
                    "lines": [
                      {
                        "line": "    return Cipher(algorithms.SEED(self.key), modes.CFB(self.iv), default_backend())\n",
                        "lineNumber": 44,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if self.method.startswith('rc4'):\n",
                        "lineNumber": 45,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return Cipher(algorithms.ARC4(self.key), None, default_backend())\n",
                        "lineNumber": 46,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return Cipher(algorithms.SEED(self.key), mode, default_backend())\n",
                        "lineNumber": 54,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 8,
                "cwe": [
                  "CWE-327"
                ]
              }
            },
            {
              "id": "python/XSS",
              "name": "XSS",
              "shortDescription": {
                "text": "Cross-site Scripting (XSS)"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser's Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they've been correctly escaped in the application code and in this way the attempted attack is diverted.\n\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware.\n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user's browser.|\n|**DOM-based**|Client|The attacker forces the user's browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n## Best practices for prevention\nThis section describes the top best practices designed to specifically protect your code:\n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches.\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents.\n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "XSS",
                  "Security",
                  "SourceServer",
                  "SourceHttpParam",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/internetarchive/trough/commit/39445228c5c960ffb70edc90e033f2bf8308ebff?diff=split#diff-7bd4a46dc91e071b34a6cde24d75d9d53e29c1b86f0256494397d6ee850b4875L-1",
                    "lines": [
                      {
                        "line": "from flask import Flask, request\n",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "from flask import Flask, request, Response\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": "import logging\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "import ujson\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "def make_app(controller):\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "    controller.check_config()\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "    app = Flask(__name__)\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "    @app.route('/', methods=['POST'])\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def simple_provision_writable_segment():\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "        ''' deprecated api '''\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "        segment_id = request.get_data(as_text=True)\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "        logging.info('provisioning writable segment %r', segment_id)\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "        result_dict = controller.provision_writable_segment(segment_id)\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return result_dict.get('write_url')\n",
                        "lineNumber": 16,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        return Response(result_dict.get('write_url'), mimetype='text/plain')\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/invinst/CPDB/commit/7f6aa9174dc458590f4a7d2ecd6abb4c8260529a?diff=split#diff-36ee8ee71da1a00b36ef32b0bd750b003f3297af169a220c000e8034b5e8ff3dL-1",
                    "lines": [
                      {
                        "line": "return HttpResponse(JSONSerializer().serialize({\n",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "return JsonResponse(\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "    data={\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "        'investigator': investigator,\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'allegations': allegations,\n",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    'has_map': has_map\n",
                        "lineNumber": 21,
                        "lineChange": "removed"
                      },
                      {
                        "line": "}))\n",
                        "lineNumber": 22,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        'allegations': details['allegations'],\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "        'timeline': details['timeline'],\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "        'has_map': details['has_map']\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "    },\n",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "    safe=False\n",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": ")\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/disoul/dotapick/commit/9af2d0c2c993c9893e1ded55869a0bdf8daf682f?diff=split#diff-c967b1b8020ddb28b0d48b996d98e3d959e49e2f50be7f3b2c5ae787ada96d8fL-1",
                    "lines": [
                      {
                        "line": "return suggestheros.GetSuggestedHeros()\n",
                        "lineNumber": 15,
                        "lineChange": "removed"
                      },
                      {
                        "line": "return jsonify({'hero': suggestheros.GetSuggestedHeros()})\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 72,
                "cwe": [
                  "CWE-79"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "python/CodeInjection",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into __import__, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31)",
              "[__import__](32)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "thirdparty/bottle/bottle.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3685,
                  "endLine": 3685,
                  "startColumn": 19,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cf75f245131d1f3a6ffa460ef06340e781d9f7c77c80b36ccd5a440beeb37af2",
            "1": "61137a49.bfe3b513.37d3675e.6ba51aae.29c97757.7eee6d6e.b98ff73c.742d9b21.61137a49.577bab1d.ec35cf50.33ab4b24.5be63e54.48b5e684.16afbfcb.d45164bf"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 16,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 16,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 5,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4363,
                            "endLine": 4363,
                            "startColumn": 5,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4370,
                            "endLine": 4370,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4373,
                            "endLine": 4373,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4379,
                            "endLine": 4379,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4386,
                            "endLine": 4386,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4400,
                            "endLine": 4400,
                            "startColumn": 17,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4409,
                            "endLine": 4409,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4410,
                            "endLine": 4410,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4411,
                            "endLine": 4411,
                            "startColumn": 17,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4412,
                            "endLine": 4412,
                            "startColumn": 15,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4406,
                            "endLine": 4406,
                            "startColumn": 9,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4406,
                            "endLine": 4406,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3625,
                            "endLine": 3625,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3683,
                            "endLine": 3683,
                            "startColumn": 15,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3683,
                            "endLine": 3683,
                            "startColumn": 15,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3683,
                            "endLine": 3683,
                            "startColumn": 9,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3684,
                            "endLine": 3684,
                            "startColumn": 23,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3685,
                            "endLine": 3685,
                            "startColumn": 28,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3607,
                            "endLine": 3607,
                            "startColumn": 14,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3615,
                            "endLine": 3615,
                            "startColumn": 19,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3587,
                            "endLine": 3587,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3598,
                            "endLine": 3598,
                            "startColumn": 53,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3598,
                            "endLine": 3598,
                            "startColumn": 22,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3598,
                            "endLine": 3598,
                            "startColumn": 22,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3598,
                            "endLine": 3598,
                            "startColumn": 22,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3598,
                            "endLine": 3598,
                            "startColumn": 5,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3599,
                            "endLine": 3599,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3599,
                            "endLine": 3599,
                            "startColumn": 46,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3599,
                            "endLine": 3599,
                            "startColumn": 35,
                            "endColumn": 45
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 553,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CodeInjection",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into exec, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46)",
              "[exec](47)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "thirdparty/bottle/bottle.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 4389,
                  "endLine": 4389,
                  "startColumn": 22,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "aec4eadd06a8e5307835523e85c81b0e820228fea1025eb308a7362453c33811",
            "1": "da9cf85a.577bab1d.187bf175.792dc0bb.145e7f2f.73cfdf26.2701234b.6aac30d8.da9cf85a.28b7c0d1.187bf175.3beeacb6.145e7f2f.bcaa763b.2701234b.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 16,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 16,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 5,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4363,
                            "endLine": 4363,
                            "startColumn": 5,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4370,
                            "endLine": 4370,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4373,
                            "endLine": 4373,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4379,
                            "endLine": 4379,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4386,
                            "endLine": 4386,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4386,
                            "endLine": 4386,
                            "startColumn": 18,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4386,
                            "endLine": 4386,
                            "startColumn": 18,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4386,
                            "endLine": 4386,
                            "startColumn": 9,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4388,
                            "endLine": 4388,
                            "startColumn": 16,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4389,
                            "endLine": 4389,
                            "startColumn": 27,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2723,
                            "endLine": 2723,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2725,
                            "endLine": 2725,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2706,
                            "endLine": 2706,
                            "startColumn": 22,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2712,
                            "endLine": 2712,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2721,
                            "endLine": 2721,
                            "startColumn": 27,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2721,
                            "endLine": 2721,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2725,
                            "endLine": 2725,
                            "startColumn": 9,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2726,
                            "endLine": 2726,
                            "startColumn": 16,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2727,
                            "endLine": 2727,
                            "startColumn": 28,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2727,
                            "endLine": 2727,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3963,
                            "endLine": 3963,
                            "startColumn": 47,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3964,
                            "endLine": 3964,
                            "startColumn": 26,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3964,
                            "endLine": 3964,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3964,
                            "endLine": 3964,
                            "startColumn": 17,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3966,
                            "endLine": 3966,
                            "startColumn": 38,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 11,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 19,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 145,
                            "endLine": 145,
                            "startColumn": 16,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3961,
                            "endLine": 3961,
                            "startColumn": 18,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3961,
                            "endLine": 3961,
                            "startColumn": 9,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3962,
                            "endLine": 3962,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3966,
                            "endLine": 3966,
                            "startColumn": 32,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3966,
                            "endLine": 3966,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3969,
                            "endLine": 3969,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3969,
                            "endLine": 3969,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3969,
                            "endLine": 3969,
                            "startColumn": 9,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3970,
                            "endLine": 3970,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3970,
                            "endLine": 3970,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3970,
                            "endLine": 3970,
                            "startColumn": 9,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3972,
                            "endLine": 3972,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3957,
                            "endLine": 3957,
                            "startColumn": 24,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 45,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3957,
                            "endLine": 3957,
                            "startColumn": 16,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 46,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3999,
                            "endLine": 3999,
                            "startColumn": 14,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 47,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3999,
                            "endLine": 3999,
                            "startColumn": 9,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 553,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "extra/icmpsh/icmpsh-s.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 121,
                  "endLine": 121,
                  "startColumn": 32,
                  "endColumn": 48
                }
              }
            }
          ],
          "fingerprints": {
            "0": "11bce3644631f21b8a16bd1788278bb9a48067c943488ad5c21f7f9163188ff1",
            "1": "3e21a431.7240f7e2.ce5d5196.1c706e52.1ea1395f.6a274ab8.30ad82ea.132df6d7.3e21a431.a2cde1fe.ce5d5196.1c706e52.ca4b9357.e4696292.30ad82ea.132df6d7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 7,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 282,
                            "endLine": 282,
                            "startColumn": 27,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 283,
                            "endLine": 283,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 288,
                            "endLine": 288,
                            "startColumn": 23,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 289,
                            "endLine": 289,
                            "startColumn": 24,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 322,
                            "endLine": 322,
                            "startColumn": 87,
                            "endColumn": 100
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 141,
                            "endColumn": 170
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 32,
                            "endColumn": 48
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 362,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "extra/icmpsh/icmpsh-s.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 134,
                  "endLine": 134,
                  "startColumn": 4,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ff149d1e3bd83531384c8d5a955688c914e744263d3d627486fdd945222f5313",
            "1": "3e21a431.1b6b560c.c8ef28a1.1c706e52.4d3e0d5f.6a274ab8.30ad82ea.132df6d7.057e61c5.277c621c.ce5d5196.1c706e52.4d3e0d5f.e4696292.30ad82ea.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 7,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 282,
                            "endLine": 282,
                            "startColumn": 27,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 283,
                            "endLine": 283,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 288,
                            "endLine": 288,
                            "startColumn": 23,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 289,
                            "endLine": 289,
                            "startColumn": 24,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 322,
                            "endLine": 322,
                            "startColumn": 87,
                            "endColumn": 100
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 141,
                            "endColumn": 170
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 32,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 4,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 362,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "extra/icmpsh/icmpsh-s.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 282,
                  "endLine": 282,
                  "startColumn": 27,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dd0292b3c28fc2a966241c7da65eceb9269c0ad2862296a71e06084ea21745cd",
            "1": "63320cdd.76503df6.ce5d5196.c851dc2a.ca4b9357.34c6cc13.5db3d4a6.132df6d7.63320cdd.76503df6.ce5d5196.c851dc2a.ca4b9357.e4696292.e06bdb0b.132df6d7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 7,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 282,
                            "endLine": 282,
                            "startColumn": 27,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 362,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "extra/icmpsh/icmpsh-s.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 283,
                  "endLine": 283,
                  "startColumn": 28,
                  "endColumn": 41
                }
              }
            }
          ],
          "fingerprints": {
            "0": "af2fbc3dcca0f40a26491c2d112c08ba5373e961417bf3b2a6d88bcf7e1629f8",
            "1": "0a9d732b.7240f7e2.ce5d5196.c851dc2a.ca4b9357.ba0ae887.5db3d4a6.132df6d7.0a9d732b.a2cde1fe.ce5d5196.c851dc2a.ca4b9357.e4696292.e06bdb0b.132df6d7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 7,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 282,
                            "endLine": 282,
                            "startColumn": 27,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 283,
                            "endLine": 283,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 362,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "extra/icmpsh/icmpsh-s.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 288,
                  "endLine": 288,
                  "startColumn": 23,
                  "endColumn": 36
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3b0a742d6025b7df66a76ff9d2240f240e671d1dda311c8fc0d4628623388186",
            "1": "63320cdd.b13f57a3.c8ef28a1.d9c92da3.031a268a.2f4e1548.5db3d4a6.132df6d7.63320cdd.277c621c.ce5d5196.1c706e52.4d3e0d5f.e4696292.30ad82ea.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 7,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 282,
                            "endLine": 282,
                            "startColumn": 27,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 283,
                            "endLine": 283,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 288,
                            "endLine": 288,
                            "startColumn": 23,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 362,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "extra/icmpsh/icmpsh-s.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 289,
                  "endLine": 289,
                  "startColumn": 24,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9161a2a3139013407d69b30e0f607d9ec56fd770479e095557b51a3faa399896",
            "1": "057e61c5.4b9d3fb8.c8ef28a1.d9c92da3.baf5e6ff.6a274ab8.30ad82ea.132df6d7.63320cdd.a2cde1fe.0845c629.c851dc2a.baf5e6ff.e4696292.30ad82ea.132df6d7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 7,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 282,
                            "endLine": 282,
                            "startColumn": 27,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 283,
                            "endLine": 283,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 288,
                            "endLine": 288,
                            "startColumn": 23,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-s.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 289,
                            "endLine": 289,
                            "startColumn": 24,
                            "endColumn": 37
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 362,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a file flows into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "extra/icmpsh/icmpsh-m.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 120,
                  "endLine": 120,
                  "startColumn": 93,
                  "endColumn": 101
                }
              }
            }
          ],
          "fingerprints": {
            "0": "81921a9e6732d1f71139077688fbbc5701112aa6e48c5c57885a4d881d6e83da",
            "1": "2d06e3d6.1b922a65.e9c1b262.a8c24974.1ea1395f.e723426a.b1660094.348c8065.44d5490b.1b922a65.e9c1b262.1c706e52.5ef953d3.d940b99c.b1660094.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-m.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-m.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-m.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 111,
                            "endLine": 111,
                            "startColumn": 34,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-m.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 111,
                            "endLine": 111,
                            "startColumn": 26,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-m.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 111,
                            "endLine": 111,
                            "startColumn": 17,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-m.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 21,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-m.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 58,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-m.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 114,
                            "endLine": 114,
                            "startColumn": 32,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-m.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 114,
                            "endLine": 114,
                            "startColumn": 21,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-m.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 120,
                            "endLine": 120,
                            "startColumn": 93,
                            "endColumn": 101
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 362,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a file flows into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "extra/icmpsh/icmpsh-m.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 123,
                  "endLine": 123,
                  "startColumn": 72,
                  "endColumn": 80
                }
              }
            }
          ],
          "fingerprints": {
            "0": "56cb277278aa19fcd00c0a1aa3e26725c8f1d1f1d29d1df62533f3cf61629d4a",
            "1": "2d06e3d6.1b922a65.e9c1b262.cc899355.2619b394.e723426a.5db3d4a6.a8f633fa.2d06e3d6.1b922a65.e9c1b262.a8c24974.2619b394.e4696292.b1660094.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-m.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-m.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-m.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 111,
                            "endLine": 111,
                            "startColumn": 34,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-m.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 111,
                            "endLine": 111,
                            "startColumn": 26,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-m.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 111,
                            "endLine": 111,
                            "startColumn": 17,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-m.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 21,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-m.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 58,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-m.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 114,
                            "endLine": 114,
                            "startColumn": 32,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-m.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 114,
                            "endLine": 114,
                            "startColumn": 21,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-m.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 120,
                            "endLine": 120,
                            "startColumn": 93,
                            "endColumn": 101
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-m.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 72,
                            "endColumn": 80
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 362,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14)",
              "[open](15)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/sgmllib.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 558,
                  "endLine": 558,
                  "startColumn": 17,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0781bf9e381583debe9fd359751460987bf769cd3bb07ad4ff8fb20f12573572",
            "1": "2e8ddaeb.04ad2656.b19066ef.ef463c52.f3eda546.a5d7f69f.a2237efa.f46ed94e.2e8ddaeb.04ad2656.b19066ef.ad0e0ff8.c8b7d5cc.73cfdf26.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/sgmllib.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 541,
                            "endLine": 541,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/sgmllib.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 541,
                            "endLine": 541,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/sgmllib.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 541,
                            "endLine": 541,
                            "startColumn": 16,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/sgmllib.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 541,
                            "endLine": 541,
                            "startColumn": 9,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/sgmllib.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 543,
                            "endLine": 543,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/sgmllib.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 543,
                            "endLine": 543,
                            "startColumn": 17,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/sgmllib.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 544,
                            "endLine": 544,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/sgmllib.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 544,
                            "endLine": 544,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/sgmllib.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 544,
                            "endLine": 544,
                            "startColumn": 9,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/sgmllib.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 549,
                            "endLine": 549,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/sgmllib.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 550,
                            "endLine": 550,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/sgmllib.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 550,
                            "endLine": 550,
                            "startColumn": 16,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/sgmllib.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 550,
                            "endLine": 550,
                            "startColumn": 9,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/sgmllib.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 554,
                            "endLine": 554,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/sgmllib.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 558,
                            "endLine": 558,
                            "startColumn": 22,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/sgmllib.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 558,
                            "endLine": 558,
                            "startColumn": 17,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 516,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25)",
              "[open](26)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "extra/dbgtool/dbgtool.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 32,
                  "endLine": 32,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5790cae624c69881e71ca615420b91c54adaa3440e3ef607a8035aa7cda37aa5",
            "1": "9b89bb46.09b47a5b.79e62dc9.139c59a8.f3eda546.30c825ba.081ac3f4.ebed174f.eb16fb71.dc13e62a.87af5449.a9f31bfb.c8b7d5cc.73cfdf26.c01d7da0.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/dbgtool/dbgtool.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 55,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/dbgtool/dbgtool.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 55,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/dbgtool/dbgtool.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 55,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/dbgtool/dbgtool.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 13,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/dbgtool/dbgtool.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 5,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/dbgtool/dbgtool.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 33,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/dbgtool/dbgtool.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 27,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/dbgtool/dbgtool.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 14,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/dbgtool/dbgtool.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/dbgtool/dbgtool.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/dbgtool/dbgtool.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/dbgtool/dbgtool.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 21,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/dbgtool/dbgtool.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 21,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/dbgtool/dbgtool.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/dbgtool/dbgtool.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/dbgtool/dbgtool.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 17,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/dbgtool/dbgtool.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 17,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/dbgtool/dbgtool.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/dbgtool/dbgtool.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 10,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/dbgtool/dbgtool.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 10,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/dbgtool/dbgtool.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 27,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/dbgtool/dbgtool.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 22,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/dbgtool/dbgtool.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 13,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/dbgtool/dbgtool.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 24,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/dbgtool/dbgtool.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 48,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/dbgtool/dbgtool.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 15,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/dbgtool/dbgtool.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 516,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15)",
              "[open](16)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "extra/shutils/newlines.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 10,
                  "endLine": 10,
                  "startColumn": 19,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "18ded0bbfb5e59a8e80bd60e8f315b97c7318408d8e2000b10339ae9769a0ebb",
            "1": "da9cf85a.04ad2656.f7ee2f22.a294a590.f3eda546.ba14daf2.2701234b.d2a21262.29f70f0d.04ad2656.b588a99c.a294a590.869e7839.73cfdf26.2701234b.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 26,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 26,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 26,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 9,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 66,
                            "endColumn": 80
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 38,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 30,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 9,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 21,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 37,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 24,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 13,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 19,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 9,
                            "endLine": 9,
                            "startColumn": 8,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 24,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 566,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15)",
              "[open](16)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "extra/shutils/newlines.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 30,
                  "endLine": 30,
                  "startColumn": 13,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a889eb07d408987fbc276332496a83f4101eda85e6fa975e0df7af2115ecf0ec",
            "1": "59f433b7.3d939609.79e62dc9.a294a590.f191a3c3.ba14daf2.081ac3f4.742d9b21.59f433b7.e59887ac.79e62dc9.a294a590.813a85bb.ba14daf2.081ac3f4.742d9b21"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 26,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 26,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 26,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 9,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 66,
                            "endColumn": 80
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 38,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 30,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 9,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 21,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 37,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 24,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 13,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 19,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 9,
                            "endLine": 9,
                            "startColumn": 8,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 24,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 566,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21)",
              "[open](22)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "extra/cloak/cloak.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 31,
                  "endLine": 31,
                  "startColumn": 14,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5aa029d99dffaf55c38d447842d437d42b45f9828c3f97ca26ed7f85c0048eeb",
            "1": "2e8ddaeb.e3d9b656.187bf175.139c59a8.f3eda546.ba14daf2.7e8da20f.a4830b9a.29f70f0d.d38d9593.187bf175.b336e5e8.f3eda546.30c825ba.3095ad70.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 60,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 60,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 60,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 13,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 5,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 33,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 27,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 14,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 5,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 21,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 21,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 27,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 22,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 22,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 11,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 19,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 566,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21)",
              "[open](22)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "extra/cloak/cloak.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 38,
                  "endLine": 38,
                  "startColumn": 14,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "95a8678fa47729370fd01f85e4054e622f3cd333ee362d368a9d7f21eedde079",
            "1": "2e8ddaeb.e3d9b656.187bf175.139c59a8.f3eda546.30c825ba.7e8da20f.a4830b9a.2e8ddaeb.d38d9593.187bf175.b5f6ec27.f3eda546.30c825ba.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 60,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 60,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 60,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 13,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 5,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 33,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 27,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 14,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 5,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 21,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 21,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 27,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 75,
                            "endLine": 75,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 75,
                            "endLine": 75,
                            "startColumn": 24,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 13,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 19,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 566,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into os.walk, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[os.walk](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "extra/shutils/newlines.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 25,
                  "startColumn": 30,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "73bb09e973d9452f02d421bd9aa75f73b4aa474d808dacd258118d5bce556f96",
            "1": "a6b41d6e.25e4ee87.79e62dc9.139c59a8.a2d153c7.ba14daf2.a2237efa.6aac30d8.a6b41d6e.04ad2656.b588a99c.139c59a8.c8b7d5cc.48e1de78.a2237efa.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 26,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 26,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 26,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 9,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 66,
                            "endColumn": 80
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 38,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/newlines.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 30,
                            "endColumn": 37
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 566,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21)",
              "[open](22)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "extra/cloak/cloak.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 83,
                  "endLine": 83,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "60a89b0d251baca221da32049ca1119d5aeb0f9e4685f3f88221a74a1dc00386",
            "1": "2e8ddaeb.d38d9593.ec35cf50.139c59a8.f3eda546.ba14daf2.a2237efa.f46ed94e.eb16fb71.d38d9593.8699d2a0.b336e5e8.4608c58f.73cfdf26.c01d7da0.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 60,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 60,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 60,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 13,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 5,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 33,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 27,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 14,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 5,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 21,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 21,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 27,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 22,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 14,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/cloak/cloak.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 9,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 566,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2)",
              "[open](3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "extra/shutils/duplicates.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 29,
                  "endLine": 29,
                  "startColumn": 14,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1f9ada5655fdb2fd7b19f9becb0b73cf3b05b5d94ef39819b6031176504ad157",
            "1": "2e8ddaeb.09b47a5b.187bf175.139c59a8.f3eda546.ba14daf2.a2237efa.f46ed94e.2e8ddaeb.67df6de4.5fe980be.139c59a8.b9abe432.ba14daf2.84d3f77b.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/duplicates.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 19,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/duplicates.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 19,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/duplicates.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 19,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/shutils/duplicates.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 516,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into os.utime, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8)",
              "[os.utime](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "thirdparty/bottle/bottle.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3669,
                  "endLine": 3669,
                  "startColumn": 21,
                  "endColumn": 29
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a7215d2e231215aeb0bcb3086da56cad8a634d02d9abfd799dd39d07d98e0853",
            "1": "16691f08.72ea91ff.79e62dc9.16cf8e96.1d07cee4.ba14daf2.2382270a.16de0b06.3b627646.ecc5b047.8149776c.16cf8e96.bf61c989.ba14daf2.2382270a.16de0b06"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3655,
                            "endLine": 3655,
                            "startColumn": 19,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3655,
                            "endLine": 3655,
                            "startColumn": 19,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3655,
                            "endLine": 3655,
                            "startColumn": 9,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3656,
                            "endLine": 3656,
                            "startColumn": 9,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3657,
                            "endLine": 3657,
                            "startColumn": 9,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3657,
                            "endLine": 3657,
                            "startColumn": 9,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3657,
                            "endLine": 3657,
                            "startColumn": 9,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3666,
                            "endLine": 3666,
                            "startColumn": 34,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3669,
                            "endLine": 3669,
                            "startColumn": 30,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3669,
                            "endLine": 3669,
                            "startColumn": 21,
                            "endColumn": 29
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 566,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into os.unlink, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[os.unlink](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "thirdparty/bottle/bottle.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3678,
                  "endLine": 3678,
                  "startColumn": 17,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "66f41d5bb22d79d7a5f89c885104b63ba5a422db2256ba3c07be5828a274730b",
            "1": "26f1400e.2f6a7839.79e62dc9.139c59a8.7cc63247.ba14daf2.081ac3f4.ebed174f.3b627646.ecc5b047.b588a99c.16cf8e96.7cc63247.66ffb861.2382270a.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3655,
                            "endLine": 3655,
                            "startColumn": 19,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3655,
                            "endLine": 3655,
                            "startColumn": 19,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3655,
                            "endLine": 3655,
                            "startColumn": 9,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3656,
                            "endLine": 3656,
                            "startColumn": 9,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3657,
                            "endLine": 3657,
                            "startColumn": 9,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3657,
                            "endLine": 3657,
                            "startColumn": 9,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3657,
                            "endLine": 3657,
                            "startColumn": 9,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3666,
                            "endLine": 3666,
                            "startColumn": 34,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3677,
                            "endLine": 3677,
                            "startColumn": 31,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3678,
                            "endLine": 3678,
                            "startColumn": 27,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3678,
                            "endLine": 3678,
                            "startColumn": 17,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 566,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/Sqli",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the request URL flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24)",
              "[execute](25)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "extra/vulnserver/vulnserver.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 156,
                  "endLine": 156,
                  "startColumn": 33,
                  "endColumn": 48
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0af8bfc0e52b955d90245fdd60fa18191017e762ad090761998facc4f1a48027",
            "1": "3e00737f.8b222fff.2683ade8.7369b21f.cc857d4e.ba14daf2.081ac3f4.22ee7009.29f70f0d.a15f7455.30d20627.7369b21f.30c69829.24da3d21.83596d43.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 23,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 23,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 23,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 23,
                            "endColumn": 87
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 15,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 98,
                            "endLine": 98,
                            "startColumn": 12,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 99,
                            "endLine": 99,
                            "startColumn": 36,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 99,
                            "endLine": 99,
                            "startColumn": 27,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 99,
                            "endLine": 99,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 24,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 20,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 39,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 19,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 135,
                            "endLine": 135,
                            "startColumn": 29,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 145,
                            "endLine": 145,
                            "startColumn": 24,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 24,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 152,
                            "endLine": 152,
                            "startColumn": 39,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 154,
                            "endLine": 154,
                            "startColumn": 38,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 155,
                            "endLine": 155,
                            "startColumn": 44,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 156,
                            "endLine": 156,
                            "startColumn": 123,
                            "endColumn": 134
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 156,
                            "endLine": 156,
                            "startColumn": 123,
                            "endColumn": 140
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 156,
                            "endLine": 156,
                            "startColumn": 113,
                            "endColumn": 140
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 156,
                            "endLine": 156,
                            "startColumn": 96,
                            "endColumn": 112
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 156,
                            "endLine": 156,
                            "startColumn": 96,
                            "endColumn": 186
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 156,
                            "endLine": 156,
                            "startColumn": 49,
                            "endColumn": 188
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 156,
                            "endLine": 156,
                            "startColumn": 33,
                            "endColumn": 48
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 803,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/Sqli",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the request URL flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21)",
              "[execute](22)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "extra/vulnserver/vulnserver.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "startColumn": 33,
                  "endColumn": 48
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c39c09583caec9ab8a5fd65ee990044bd745ba3ffe2124b41f40bf411845916d",
            "1": "a6b41d6e.577bab1d.baf45a85.7369b21f.e3cc21ee.ba14daf2.a2237efa.f46ed94e.a6b41d6e.a15f7455.121098a0.7369b21f.1d07cee4.ba14daf2.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 23,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 23,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 23,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 23,
                            "endColumn": 87
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 15,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 98,
                            "endLine": 98,
                            "startColumn": 12,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 99,
                            "endLine": 99,
                            "startColumn": 36,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 99,
                            "endLine": 99,
                            "startColumn": 27,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 99,
                            "endLine": 99,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 24,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 20,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 39,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 19,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 135,
                            "endLine": 135,
                            "startColumn": 29,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 145,
                            "endLine": 145,
                            "startColumn": 24,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 24,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 152,
                            "endLine": 152,
                            "startColumn": 39,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 154,
                            "endLine": 154,
                            "startColumn": 38,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 155,
                            "endLine": 155,
                            "startColumn": 44,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 158,
                            "endLine": 158,
                            "startColumn": 96,
                            "endColumn": 107
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 158,
                            "endLine": 158,
                            "startColumn": 96,
                            "endColumn": 113
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 158,
                            "endLine": 158,
                            "startColumn": 49,
                            "endColumn": 113
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/vulnserver/vulnserver.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 158,
                            "endLine": 158,
                            "startColumn": 33,
                            "endColumn": 48
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 803,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/Deserialization",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into cPickle.loads, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17)",
              "[cPickle.loads](18)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/core/target.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 678,
                  "endLine": 678,
                  "startColumn": 32,
                  "endColumn": 42
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0f08a2ea635a864d0f4f2de09db4498625350fbe1064da98e9a87187a855602c",
            "1": "800eb1b9.b377bf81.2d33246f.139c59a8.c8b7d5cc.ba14daf2.1023f5cb.88f3dabd.800eb1b9.a98b40a4.d4fa07ba.941b8840.c8b7d5cc.ba14daf2.1023f5cb.88f3dabd"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/target.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 678,
                            "endLine": 678,
                            "startColumn": 67,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/target.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 678,
                            "endLine": 678,
                            "startColumn": 67,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/target.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 678,
                            "endLine": 678,
                            "startColumn": 43,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 343,
                            "endLine": 343,
                            "startColumn": 16,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 62,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 33,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 359,
                            "endLine": 359,
                            "startColumn": 23,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 362,
                            "endLine": 362,
                            "startColumn": 19,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 363,
                            "endLine": 363,
                            "startColumn": 16,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 21,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 17,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 9,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 386,
                            "endLine": 386,
                            "startColumn": 16,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 406,
                            "endLine": 406,
                            "startColumn": 9,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 414,
                            "endLine": 414,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 248,
                            "endLine": 248,
                            "startColumn": 9,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 250,
                            "endLine": 250,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 31,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 18,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 507,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/Deserialization",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into cPickle.loads, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17)",
              "[cPickle.loads](18)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/core/common.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3908,
                  "endLine": 3908,
                  "startColumn": 80,
                  "endColumn": 90
                }
              }
            }
          ],
          "fingerprints": {
            "0": "996dddfd79a0559433759e0cfd6239a71b6f1e46096597591c031f56710d3567",
            "1": "800eb1b9.6d37c496.0b79ac6d.139c59a8.c8b7d5cc.d5dca612.682a1833.f355b44c.c1d04abb.6d37c496.d4fa07ba.139c59a8.c8b7d5cc.d5dca612.682a1833.f355b44c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3908,
                            "endLine": 3908,
                            "startColumn": 100,
                            "endColumn": 108
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3908,
                            "endLine": 3908,
                            "startColumn": 100,
                            "endColumn": 108
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3908,
                            "endLine": 3908,
                            "startColumn": 91,
                            "endColumn": 99
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 343,
                            "endLine": 343,
                            "startColumn": 16,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 62,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 33,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 359,
                            "endLine": 359,
                            "startColumn": 23,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 362,
                            "endLine": 362,
                            "startColumn": 19,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 363,
                            "endLine": 363,
                            "startColumn": 16,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 21,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 17,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 9,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 386,
                            "endLine": 386,
                            "startColumn": 16,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 406,
                            "endLine": 406,
                            "startColumn": 9,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 414,
                            "endLine": 414,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 248,
                            "endLine": 248,
                            "startColumn": 9,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 250,
                            "endLine": 250,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 31,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 18,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 557,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/Deserialization",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into cPickle.loads, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20)",
              "[cPickle.loads](21)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/parse/cmdline.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 108,
                  "endLine": 108,
                  "startColumn": 9,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1134aa941c76d436b77330c60be9a8f4a6f71e79fc36cb5d0ee4ac127e24e3c7",
            "1": "a6b41d6e.413071ec.79e62dc9.139c59a8.2e9ca156.73cfdf26.a2237efa.f46ed94e.28f3410b.a98b40a4.ec35cf50.03d71cbf.c8b7d5cc.73cfdf26.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/parse/cmdline.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/parse/cmdline.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/parse/cmdline.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 9,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/parse/cmdline.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 108,
                            "endLine": 108,
                            "startColumn": 37,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/parse/cmdline.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 108,
                            "endLine": 108,
                            "startColumn": 37,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/parse/cmdline.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 108,
                            "endLine": 108,
                            "startColumn": 20,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 343,
                            "endLine": 343,
                            "startColumn": 16,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 62,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 33,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 359,
                            "endLine": 359,
                            "startColumn": 23,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 362,
                            "endLine": 362,
                            "startColumn": 19,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 363,
                            "endLine": 363,
                            "startColumn": 16,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 21,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 17,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 9,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 386,
                            "endLine": 386,
                            "startColumn": 16,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 406,
                            "endLine": 406,
                            "startColumn": 9,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 414,
                            "endLine": 414,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 248,
                            "endLine": 248,
                            "startColumn": 9,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 250,
                            "endLine": 250,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 31,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 18,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 557,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/Deserialization",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into cPickle.loads, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21)",
              "[cPickle.loads](22)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/parse/cmdline.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 915,
                  "endLine": 915,
                  "startColumn": 22,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "35c5fe33ef35b3ab5012ed0e038cb9970b16bb9278f6f65ef617a088733850db",
            "1": "9da9ce31.1c6650e9.2683ade8.139c59a8.2e9ca156.ba14daf2.081ac3f4.1d15395c.28f3410b.f0971b16.8f62c327.03d71cbf.c8b7d5cc.73cfdf26.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/parse/cmdline.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/parse/cmdline.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/parse/cmdline.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 9,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/parse/cmdline.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 108,
                            "endLine": 108,
                            "startColumn": 37,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/parse/cmdline.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 914,
                            "endLine": 914,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/parse/cmdline.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 914,
                            "endLine": 914,
                            "startColumn": 13,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/parse/cmdline.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 915,
                            "endLine": 915,
                            "startColumn": 33,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 343,
                            "endLine": 343,
                            "startColumn": 16,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 62,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 33,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 359,
                            "endLine": 359,
                            "startColumn": 23,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 362,
                            "endLine": 362,
                            "startColumn": 19,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 363,
                            "endLine": 363,
                            "startColumn": 16,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 21,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 17,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 9,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 386,
                            "endLine": 386,
                            "startColumn": 16,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 406,
                            "endLine": 406,
                            "startColumn": 9,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 414,
                            "endLine": 414,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 248,
                            "endLine": 248,
                            "startColumn": 9,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 250,
                            "endLine": 250,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 31,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 18,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 557,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/Deserialization",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP header flows into cPickle.loads, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "arguments": [
              "[an HTTP header](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22)",
              "[cPickle.loads](23)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/request/connect.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 623,
                  "endLine": 623,
                  "startColumn": 37,
                  "endColumn": 47
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6b92e38f95176e143302e22a28b993ca16c9c3402e963e0fe238b3a21692983d",
            "1": "00def7c0.a7c543b1.79e62dc9.9d40d75a.2e9ca156.ba14daf2.99e20e7d.13ec27c8.00def7c0.a7c543b1.79e62dc9.9d40d75a.2e9ca156.ba14daf2.99e20e7d.13ec27c8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 5178,
                            "endLine": 5178,
                            "startColumn": 20,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 5178,
                            "endLine": 5178,
                            "startColumn": 20,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 5178,
                            "endLine": 5178,
                            "startColumn": 8,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 5180,
                            "endLine": 5180,
                            "startColumn": 84,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 5180,
                            "endLine": 5180,
                            "startColumn": 84,
                            "endColumn": 104
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 5180,
                            "endLine": 5180,
                            "startColumn": 21,
                            "endColumn": 107
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 5180,
                            "endLine": 5180,
                            "startColumn": 18,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 5180,
                            "endLine": 5180,
                            "startColumn": 18,
                            "endColumn": 115
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 5180,
                            "endLine": 5180,
                            "startColumn": 9,
                            "endColumn": 115
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 5182,
                            "endLine": 5182,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/request/connect.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 623,
                            "endLine": 623,
                            "startColumn": 48,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 343,
                            "endLine": 343,
                            "startColumn": 16,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 62,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 58,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 21,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 17,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 9,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 386,
                            "endLine": 386,
                            "startColumn": 16,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 406,
                            "endLine": 406,
                            "startColumn": 9,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 414,
                            "endLine": 414,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 248,
                            "endLine": 248,
                            "startColumn": 9,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 250,
                            "endLine": 250,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 31,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 18,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 757,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.md5](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/core/common.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3980,
                  "endLine": 3980,
                  "startColumn": 11,
                  "endColumn": 45
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d9b6c7068634ac4c0d5110fb2934c1ce411cdba0128a7b45ca59d80089f37d35",
            "1": "b741fe90.2dd6d7a6.59612bde.139c59a8.30c69829.c6c920ac.a2237efa.f46ed94e.b741fe90.2dd6d7a6.f04405c4.139c59a8.30c69829.c6c920ac.a2237efa.6fad4192"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3980,
                            "endLine": 3980,
                            "startColumn": 11,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 438,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.md5](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/core/dump.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 438,
                  "endLine": 438,
                  "startColumn": 76,
                  "endColumn": 111
                }
              }
            }
          ],
          "fingerprints": {
            "0": "edf12de538c2078123eb2c833ae3431064c575834e969e04ca811a42c918332f",
            "1": "b741fe90.2dd6d7a6.59612bde.139c59a8.bab9de6f.c6c920ac.a2237efa.6aac30d8.b741fe90.2dd6d7a6.f04405c4.139c59a8.e26e24d8.c6c920ac.a2237efa.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/dump.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 438,
                            "endLine": 438,
                            "startColumn": 76,
                            "endColumn": 87
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 438,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.md5](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/core/dump.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 464,
                  "endLine": 464,
                  "startColumn": 82,
                  "endColumn": 120
                }
              }
            }
          ],
          "fingerprints": {
            "0": "20debac3b8cffde9ec98a8a1a499a6c826eda371d487e6c05da218502b27acf4",
            "1": "b741fe90.2dd6d7a6.59612bde.139c59a8.bab9de6f.c6c920ac.a2237efa.6aac30d8.b741fe90.83f0fd44.f04405c4.139c59a8.e26e24d8.c6c920ac.a2237efa.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/dump.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 464,
                            "endLine": 464,
                            "startColumn": 82,
                            "endColumn": 93
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 438,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.md5](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/hash.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 144,
                  "endLine": 144,
                  "startColumn": 24,
                  "endColumn": 58
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c105ab3c5d57df7d7fe18a46a9a2093231536bb06e3a3a7f4558ff88ed977af6",
            "1": "800eb1b9.2dd6d7a6.79e62dc9.139c59a8.a2d153c7.ba14daf2.682a1833.8794408a.800eb1b9.ab5d79e8.f04405c4.139c59a8.5192d5be.ba14daf2.682a1833.8794408a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/hash.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 24,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 438,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.md5](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/hash.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 255,
                  "endLine": 255,
                  "startColumn": 14,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ed9a70f3a83a28a2b29ab9de922fbcb28010147f4902d003dc897376e95bfbde",
            "1": "a2db85fa.2dd6d7a6.79e62dc9.139c59a8.bab9de6f.ba14daf2.081ac3f4.ebed174f.a2db85fa.2dd6d7a6.f04405c4.139c59a8.bab9de6f.ba14daf2.081ac3f4.ebed174f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/hash.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 255,
                            "endLine": 255,
                            "startColumn": 14,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 438,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.md5](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/hash.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 393,
                  "endLine": 393,
                  "startColumn": 13,
                  "endColumn": 51
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f5b1bab5c0264e623e6b160485bb965cda231897391caeaa54cf30cc1945d43f",
            "1": "c4e66e9e.7a24b18e.79e62dc9.139c59a8.45b3c80d.ba14daf2.8658ac02.f46ed94e.c4e66e9e.2ddcf6e6.f04405c4.139c59a8.45b3c80d.905620ef.8658ac02.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/hash.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 393,
                            "endLine": 393,
                            "startColumn": 13,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 438,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.md5](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/hash.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 409,
                  "endLine": 409,
                  "startColumn": 13,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0dbed6c36aa5c1cd1de9de5460572a3c55db699f513741dae587976918bec1ac",
            "1": "c4e66e9e.e3217400.79e62dc9.139c59a8.45b3c80d.ba14daf2.8658ac02.f46ed94e.c4e66e9e.e3217400.f04405c4.139c59a8.45b3c80d.ba14daf2.8658ac02.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/hash.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 409,
                            "endLine": 409,
                            "startColumn": 13,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 438,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.md5](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/hash.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 430,
                  "endLine": 430,
                  "startColumn": 17,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d01990115f3b775f2a2c90acd27f7b0dc77b79baa87090e91c9ce974271b5322",
            "1": "c4e66e9e.7a24b18e.79e62dc9.139c59a8.1d07cee4.301cbfac.8658ac02.f46ed94e.c4e66e9e.7a24b18e.f04405c4.139c59a8.8fed8520.301cbfac.8658ac02.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/hash.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 430,
                            "endLine": 430,
                            "startColumn": 17,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 438,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.md5](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/hash.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 449,
                  "endLine": 449,
                  "startColumn": 23,
                  "endColumn": 73
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ee9f0ae68687c2f1e63831828738db8adf61c894bb7e4271bf20a62c5d4c08cc",
            "1": "800eb1b9.2dd6d7a6.3ea7c12e.139c59a8.a2d153c7.73cfdf26.682a1833.6aac30d8.800eb1b9.2ddcf6e6.f04405c4.139c59a8.a2d153c7.73cfdf26.682a1833.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/hash.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 449,
                            "endLine": 449,
                            "startColumn": 23,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 438,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.md5](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/hash.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 459,
                  "endLine": 459,
                  "startColumn": 33,
                  "endColumn": 83
                }
              }
            }
          ],
          "fingerprints": {
            "0": "18a2e38002b25210c144c4d763b6cac1b58e9716cbd63ffc04a1e8041e8fe578",
            "1": "800eb1b9.2dd6d7a6.3ea7c12e.139c59a8.a2d153c7.ba14daf2.682a1833.6aac30d8.800eb1b9.2ddcf6e6.f04405c4.139c59a8.a2d153c7.905620ef.682a1833.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/hash.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 459,
                            "endLine": 459,
                            "startColumn": 33,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 438,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.md5](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/hash.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 479,
                  "endLine": 479,
                  "startColumn": 23,
                  "endColumn": 105
                }
              }
            }
          ],
          "fingerprints": {
            "0": "852feb7e7c124a85f029b32192d2ef0559a02aa6d98c96918dd7bdeb256ddb11",
            "1": "800eb1b9.2dd6d7a6.3ea7c12e.139c59a8.a2d153c7.73cfdf26.682a1833.6aac30d8.800eb1b9.2ddcf6e6.f04405c4.139c59a8.a2d153c7.73cfdf26.682a1833.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/hash.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 479,
                            "endLine": 479,
                            "startColumn": 23,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 438,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.md5](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/hash.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 479,
                  "endLine": 479,
                  "startColumn": 44,
                  "endColumn": 74
                }
              }
            }
          ],
          "fingerprints": {
            "0": "852feb7e7c124a85f029b32192d2ef0559a02aa6d98c96918dd7bdeb256ddb11",
            "1": "214527de.d7af5ef8.3ea7c12e.139c59a8.056de048.ba14daf2.8658ac02.8794408a.214527de.ad53cdec.f04405c4.139c59a8.056de048.ba14daf2.8658ac02.6fad4192"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/hash.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 479,
                            "endLine": 479,
                            "startColumn": 44,
                            "endColumn": 47
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 438,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.md5](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/core/decorators.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 45,
                  "endLine": 45,
                  "startColumn": 23,
                  "endColumn": 114
                }
              }
            }
          ],
          "fingerprints": {
            "0": "93a0f1d6fe842562cca1eb598da97d1464bc187abd1457dcd22e408bb3a61c4a",
            "1": "a2db85fa.a64350f9.0b29ef89.fe11b42a.a1354545.ba14daf2.a66f81a9.8356f9c3.97da360b.a64350f9.f04405c4.fe11b42a.a1354545.ba14daf2.a66f81a9.8356f9c3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/decorators.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 23,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 388,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.md5](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "thirdparty/keepalive/keepalive.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 530,
                  "endLine": 530,
                  "startColumn": 38,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "83862bf0dc805eb259516b4c5b7ce2d9b9246d3b76afcb0d196157b649bb6a57",
            "1": "800eb1b9.2dd6d7a6.79e62dc9.139c59a8.a2d153c7.57d888ee.682a1833.6aac30d8.800eb1b9.035193a4.f04405c4.139c59a8.a2d153c7.c3f6620e.682a1833.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/keepalive/keepalive.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 529,
                            "endLine": 529,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 438,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.md5](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "thirdparty/keepalive/keepalive.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 540,
                  "endLine": 540,
                  "startColumn": 39,
                  "endColumn": 50
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4085888e69a42bc9543817e758dd49d80309884a1a16a1f405ceca2437e8198e",
            "1": "800eb1b9.2dd6d7a6.79e62dc9.139c59a8.a2d153c7.57d888ee.682a1833.6aac30d8.800eb1b9.035193a4.f04405c4.139c59a8.a2d153c7.c3f6620e.682a1833.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/keepalive/keepalive.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 539,
                            "endLine": 539,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 438,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.md5](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "thirdparty/keepalive/keepalive.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 550,
                  "endLine": 550,
                  "startColumn": 43,
                  "endColumn": 54
                }
              }
            }
          ],
          "fingerprints": {
            "0": "94a6224c1644fe885fdf5510af6e47be238dc99ffbfed8651f5792f37cc33064",
            "1": "800eb1b9.2dd6d7a6.79e62dc9.139c59a8.a2d153c7.57d888ee.682a1833.6aac30d8.800eb1b9.035193a4.f04405c4.139c59a8.a2d153c7.c3f6620e.682a1833.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/keepalive/keepalive.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 549,
                            "endLine": 549,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 438,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.md5](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/hashdb.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 83,
                  "endLine": 83,
                  "startColumn": 22,
                  "endColumn": 48
                }
              }
            }
          ],
          "fingerprints": {
            "0": "51e8c79a61ff2fd44a1e6cfe1fc7fb5d454572322f4daa5fc52d930f15151a3a",
            "1": "a2db85fa.a64350f9.85ec23ad.fe11b42a.a1354545.ba14daf2.a66f81a9.8356f9c3.a2db85fa.a64350f9.f04405c4.fe11b42a.a1354545.ba14daf2.a66f81a9.ebed174f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/hashdb.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 22,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 388,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.sha1 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.sha1](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/hash.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 103,
                  "endLine": 103,
                  "startColumn": 22,
                  "endColumn": 61
                }
              }
            }
          ],
          "fingerprints": {
            "0": "22639303adc5c03f4c55c5bdeba0114b79c9947511c92cac47ba8d89960967c8",
            "1": "800eb1b9.2dd6d7a6.79e62dc9.139c59a8.68f1d347.ba14daf2.682a1833.f355b44c.800eb1b9.2dd6d7a6.79e62dc9.139c59a8.68f1d347.ba14daf2.8658ac02.f355b44c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/hash.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 22,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 438,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.sha1 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.sha1](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/hash.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 103,
                  "endLine": 103,
                  "startColumn": 27,
                  "endColumn": 48
                }
              }
            }
          ],
          "fingerprints": {
            "0": "22639303adc5c03f4c55c5bdeba0114b79c9947511c92cac47ba8d89960967c8",
            "1": "214527de.bbecba98.3ea7c12e.139c59a8.25e30b7d.ba14daf2.8658ac02.8144ba60.214527de.bbecba98.79e62dc9.139c59a8.25e30b7d.ba14daf2.8658ac02.ebed174f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/hash.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 27,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 438,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.sha1 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.sha1](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/hash.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 178,
                  "endLine": 178,
                  "startColumn": 34,
                  "endColumn": 66
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2547a7b07db085a58a69c952cef0778712a68a82b653ca6e330ddb03810e083b",
            "1": "800eb1b9.2dd6d7a6.3ea7c12e.139c59a8.25e30b7d.ba14daf2.682a1833.6aac30d8.800eb1b9.2dd6d7a6.79e62dc9.139c59a8.32c53a47.ba14daf2.682a1833.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/hash.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 438,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.sha1 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.sha1](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/hash.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 196,
                  "endLine": 196,
                  "startColumn": 36,
                  "endColumn": 68
                }
              }
            }
          ],
          "fingerprints": {
            "0": "97cc3a1be78160447545e9071942a7f04d9f8d406236e63cc432468abe43b66d",
            "1": "800eb1b9.2dd6d7a6.3ea7c12e.139c59a8.25e30b7d.ba14daf2.682a1833.6aac30d8.800eb1b9.2dd6d7a6.79e62dc9.139c59a8.32c53a47.ba14daf2.682a1833.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/hash.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 196,
                            "endLine": 196,
                            "startColumn": 36,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 438,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.sha1 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.sha1](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/hash.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 196,
                  "endLine": 196,
                  "startColumn": 72,
                  "endColumn": 112
                }
              }
            }
          ],
          "fingerprints": {
            "0": "97cc3a1be78160447545e9071942a7f04d9f8d406236e63cc432468abe43b66d",
            "1": "800eb1b9.2dd6d7a6.9b98928d.139c59a8.25e30b7d.ba14daf2.51b4c2f8.6aac30d8.800eb1b9.2dd6d7a6.08e0bef3.139c59a8.32c53a47.ba14daf2.51b4c2f8.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/hash.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 196,
                            "endLine": 196,
                            "startColumn": 72,
                            "endColumn": 76
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 438,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.sha1 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.sha1](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/hash.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 214,
                  "endLine": 214,
                  "startColumn": 26,
                  "endColumn": 60
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1e9cbc99d68048495f0be4f2e4cf5ee822075b1e477b1241d9d449a5cb796280",
            "1": "800eb1b9.2dd6d7a6.3ea7c12e.139c59a8.25e30b7d.73cfdf26.682a1833.6aac30d8.800eb1b9.2dd6d7a6.79e62dc9.139c59a8.32c53a47.73cfdf26.682a1833.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/hash.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 214,
                            "endLine": 214,
                            "startColumn": 26,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 438,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.sha1 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.sha1](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/hash.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 267,
                  "endLine": 267,
                  "startColumn": 14,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "03c3b5b8f7172ab5338a8c0f276206e7812c79edc0197135d7b0a19e7d8101b6",
            "1": "a2db85fa.2dd6d7a6.79e62dc9.139c59a8.25e30b7d.ba14daf2.987cb35d.ebed174f.a2db85fa.2dd6d7a6.79e62dc9.139c59a8.25e30b7d.ba14daf2.987cb35d.ebed174f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/hash.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 267,
                            "endLine": 267,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 438,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.sha1 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.sha1](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/hash.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 279,
                  "endLine": 279,
                  "startColumn": 49,
                  "endColumn": 70
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4af4c0192309cd9c5127613e6002842fbfca843687c5c5e3c16d74a79edea377",
            "1": "800eb1b9.e27dfa5a.114a635b.6b26f5b0.25e30b7d.ba14daf2.8658ac02.f355b44c.800eb1b9.e27dfa5a.79e62dc9.6b26f5b0.25e30b7d.ba14daf2.8658ac02.f355b44c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/hash.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 279,
                            "endLine": 279,
                            "startColumn": 49,
                            "endColumn": 53
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 438,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.sha1 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.sha1](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/hash.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 290,
                  "endLine": 290,
                  "startColumn": 50,
                  "endColumn": 78
                }
              }
            }
          ],
          "fingerprints": {
            "0": "949662bc6a941ec6b2e6128394caa7b2e97acbd3fd46bbcdbdb3974810d4ba39",
            "1": "193ec062.2ddcf6e6.3ea7c12e.139c59a8.25e30b7d.905620ef.8658ac02.8794408a.193ec062.2ddcf6e6.79e62dc9.139c59a8.25e30b7d.905620ef.8658ac02.8794408a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/hash.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 290,
                            "endLine": 290,
                            "startColumn": 50,
                            "endColumn": 54
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 438,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.sha1 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.sha1](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/hash.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 469,
                  "endLine": 469,
                  "startColumn": 34,
                  "endColumn": 85
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3b1db0b24cd25fe54ee9de510ca40a9d4d897c0d79ec1d4c3c01745954a625b8",
            "1": "800eb1b9.2dd6d7a6.3ea7c12e.139c59a8.25e30b7d.ba14daf2.682a1833.6aac30d8.800eb1b9.2ddcf6e6.08e0bef3.139c59a8.25e30b7d.905620ef.682a1833.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/hash.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 469,
                            "endLine": 469,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 438,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/Jinja2AutoEscapeFalse",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "jinja2.Environment is called with no autoescape argument (autoescaping is disabled by default). This increases the risk of Cross-Site Scripting (XSS) attacks.",
            "markdown": "{0} is called with no autoescape argument (autoescaping is disabled by default). This increases the risk of Cross-Site Scripting (XSS) attacks.",
            "arguments": [
              "[jinja2.Environment](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "thirdparty/bottle/bottle.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3916,
                  "endLine": 3916,
                  "startColumn": 20,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cd3ec719a68f1199fd6408ae8b931899bc10d0d3a9ea11a0f85ba650071fb8d2",
            "1": "b0d4bc2a.577bab1d.a6f1687f.4c71cda2.747347ea.ba14daf2.27dc1156.ebed174f.b0d4bc2a.b97eba22.5218aeb8.4c71cda2.747347ea.255d6950.d6b67a9c.ebed174f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3916,
                            "endLine": 3916,
                            "startColumn": 20,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 7,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into subprocess.Popen, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4)",
              "[subprocess.Popen](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "thirdparty/bottle/bottle.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3667,
                  "endLine": 3667,
                  "startColumn": 21,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "85e11c654e71a96fe21fb2e65d6fc44d636d9f81f6a754aad73bab5f38c1af1e",
            "1": "e06468b8.e3d9b656.79e62dc9.b5f6ec27.1d07cee4.ba14daf2.081ac3f4.8794408a.07f56fd2.2f0fa629.d4fa07ba.b5f6ec27.c8b7d5cc.73cfdf26.2382270a.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3658,
                            "endLine": 3658,
                            "startColumn": 35,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3658,
                            "endLine": 3658,
                            "startColumn": 35,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3658,
                            "endLine": 3658,
                            "startColumn": 16,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3658,
                            "endLine": 3658,
                            "startColumn": 9,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3667,
                            "endLine": 3667,
                            "startColumn": 38,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/bottle/bottle.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3667,
                            "endLine": 3667,
                            "startColumn": 21,
                            "endColumn": 37
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/BufferOverflow",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a file flows into memcpy, where it is used to manipulate application memory. This may result in a buffer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to manipulate application memory. This may result in a buffer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2),(3)",
              "[memcpy](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "extra/icmpsh/icmpsh-m.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 113,
                  "endLine": 113,
                  "startColumn": 21,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f89d5a0b4e9b97a2f04ab4b72cd9ebfc1b06275bd5297106ec45e98a38f05955",
            "1": "2d06e3d6.1b6b560c.742961a0.27f9dbc8.1ea1395f.e723426a.30ad82ea.f7fa4ba8.44d5490b.1b922a65.e9c1b262.1c706e52.a0f87a5a.d940b99c.30ad82ea.f6b54b42"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-m.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-m.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-m.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 111,
                            "endLine": 111,
                            "startColumn": 34,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-m.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 49,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "extra/icmpsh/icmpsh-m.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 21,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureXmlParser",
          "ruleIndex": 9,
          "level": "warning",
          "message": {
            "text": "xml.dom.minidom.parseString is considered insecure. Use an analog from the defusedxml package.",
            "markdown": "{0} is considered insecure. Use an analog from the defusedxml package.",
            "arguments": [
              "[xml.dom.minidom.parseString](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "thirdparty/prettyprint/prettyprint.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 30,
                  "endLine": 30,
                  "startColumn": 15,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "48a48634db719c87df0f2b1e63d66e18261289defa305db7d1a6857e42cc4ace",
            "1": "4cedbfe7.30ee24ad.79e62dc9.139c59a8.d1754361.65be8dbb.7f3723cc.e6807754.4cedbfe7.30ee24ad.79e62dc9.139c59a8.d1754361.65be8dbb.7f3723cc.e6807754"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "thirdparty/prettyprint/prettyprint.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 15,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 506,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureXmlParser",
          "ruleIndex": 9,
          "level": "warning",
          "message": {
            "text": "xml.etree.ElementTree.parse is considered insecure. Use an analog from the defusedxml package.",
            "markdown": "{0} is considered insecure. Use an analog from the defusedxml package.",
            "arguments": [
              "[xml.etree.ElementTree.parse](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/parse/payloads.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 90,
                  "endLine": 90,
                  "startColumn": 15,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8c7dcab57a5c70c8ba01dbcf58956eb9569c5999d542f0eeb2c83019f484303b",
            "1": "f39fd327.84f55464.79e62dc9.5697e99c.791ac95a.65be8dbb.d9c10edc.e6807754.f39fd327.84f55464.79e62dc9.5697e99c.791ac95a.65be8dbb.d9c10edc.e6807754"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/parse/payloads.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 15,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 556,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureXmlParser",
          "ruleIndex": 9,
          "level": "warning",
          "message": {
            "text": "xml.etree.ElementTree.parse is considered insecure. Use an analog from the defusedxml package.",
            "markdown": "{0} is considered insecure. Use an analog from the defusedxml package.",
            "arguments": [
              "[xml.etree.ElementTree.parse](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/parse/payloads.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 114,
                  "endLine": 114,
                  "startColumn": 19,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "efaf18b2b0ecd6a5007b0b4ddc24daecce7f626b9f0b14c871b1c90269d3c8e2",
            "1": "16691f08.84f55464.79e62dc9.5697e99c.791ac95a.65be8dbb.081ac3f4.e6807754.16691f08.84f55464.79e62dc9.5697e99c.791ac95a.65be8dbb.081ac3f4.e6807754"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/parse/payloads.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 114,
                            "endLine": 114,
                            "startColumn": 19,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 556,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureXmlParser",
          "ruleIndex": 9,
          "level": "warning",
          "message": {
            "text": "xml.sax.parse is considered insecure. Use an analog from the defusedxml package.",
            "markdown": "{0} is considered insecure. Use an analog from the defusedxml package.",
            "arguments": [
              "[xml.sax.parse](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/core/common.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 2400,
                  "endLine": 2400,
                  "startColumn": 13,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c781d0b69d8b0b1bfb6e2733b75e51bafaa8e64c37a95a95be14118d696d3f4d",
            "1": "9d0461a3.324cb263.187bf175.6a85de8d.5be63e54.e280548d.081ac3f4.d62b86e0.9d0461a3.324cb263.187bf175.6a85de8d.5be63e54.e280548d.081ac3f4.d62b86e0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/core/common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2400,
                            "endLine": 2400,
                            "startColumn": 13,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 556,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureCipher",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "The DES cipher is insecure. Consider using AES instead.",
            "markdown": "The {0} cipher is insecure. Consider using AES instead.",
            "arguments": [
              "[DES](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/hash.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 233,
                  "endLine": 233,
                  "startColumn": 18,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2bc2873d659e04e312b0581b30c9ffffeb96cb46af346ff33e3eb068ecdcb96c",
            "1": "55e10dd3.03e14947.7e9a28a2.139c59a8.8ef86c74.7e8c1782.081ac3f4.ebed174f.55e10dd3.03e14947.7e9a28a2.139c59a8.8ef86c74.7e8c1782.081ac3f4.ebed174f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/hash.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 233,
                            "endLine": 233,
                            "startColumn": 18,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 806,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureCipher",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "The DES cipher is insecure. Consider using AES instead.",
            "markdown": "The {0} cipher is insecure. Consider using AES instead.",
            "arguments": [
              "[DES](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/hash.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 235,
                  "endLine": 235,
                  "startColumn": 18,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0ef013476c6d3a24496de7bf63b75ce2210dd40f7959c6796dd7d5b096beb543",
            "1": "55e10dd3.03e14947.7e9a28a2.139c59a8.8ef86c74.7e8c1782.a2237efa.f46ed94e.55e10dd3.03e14947.7e9a28a2.139c59a8.8ef86c74.7e8c1782.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/hash.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 235,
                            "endLine": 235,
                            "startColumn": 18,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 806,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureCipher",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "The DES cipher is insecure. Consider using AES instead.",
            "markdown": "The {0} cipher is insecure. Consider using AES instead.",
            "arguments": [
              "[DES](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/hash.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 238,
                  "endLine": 238,
                  "startColumn": 18,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b5d3e6774cbf9b14b9896650f813039f0cdd5d90fea52cae56d9e99cd68e2799",
            "1": "55e10dd3.03e14947.7e9a28a2.a279717e.1d07cee4.7e8c1782.081ac3f4.0990edd8.55e10dd3.03e14947.7e9a28a2.a279717e.1d07cee4.7e8c1782.081ac3f4.0990edd8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/hash.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 238,
                            "endLine": 238,
                            "startColumn": 18,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 806,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureCipher",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "The DES cipher is insecure. Consider using AES instead.",
            "markdown": "The {0} cipher is insecure. Consider using AES instead.",
            "arguments": [
              "[DES](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/hash.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 240,
                  "endLine": 240,
                  "startColumn": 18,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ecc1cc0ae379f6689ef2c374481c2f00b816af9ed417be567bf74543df6e4aba",
            "1": "55e10dd3.03e14947.7e9a28a2.139c59a8.1d07cee4.7e8c1782.a2237efa.f46ed94e.55e10dd3.03e14947.7e9a28a2.139c59a8.1d07cee4.7e8c1782.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/hash.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 240,
                            "endLine": 240,
                            "startColumn": 18,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 806,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/XSS",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into the return value of _, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[the return value of _](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/api.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 452,
                  "endLine": 452,
                  "startColumn": 12,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0a219df84474490e4cb6e7d610c187e9d035593863c74a46a974e269987f73a7",
            "1": "66a3aa7e.24e08296.6d91c2a7.81d7de13.a9ee1a61.ba14daf2.158c10fb.0990edd8.66a3aa7e.3575c5ab.11fea29e.03d71cbf.a9ee1a61.9a595e8a.6096a416.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 443,
                            "endLine": 443,
                            "startColumn": 17,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 443,
                            "endLine": 443,
                            "startColumn": 17,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 447,
                            "endLine": 447,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 451,
                            "endLine": 451,
                            "startColumn": 47,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 452,
                            "endLine": 452,
                            "startColumn": 65,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 452,
                            "endLine": 452,
                            "startColumn": 49,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 452,
                            "endLine": 452,
                            "startColumn": 49,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 452,
                            "endLine": 452,
                            "startColumn": 38,
                            "endColumn": 86
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 452,
                            "endLine": 452,
                            "startColumn": 20,
                            "endColumn": 87
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 452,
                            "endLine": 452,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 452,
                            "endLine": 452,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 809,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/XSS",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into the return value of _, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[the return value of _](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/api.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 525,
                  "endLine": 525,
                  "startColumn": 12,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9dcc8ec9f33c46e1bde22e8ac878bf7270e5f40c730d4c80fae9bded1a2679f0",
            "1": "8a30cfc6.24e08296.2683ade8.81d7de13.b92799e4.ba14daf2.0a7337bb.0990edd8.a6b41d6e.3575c5ab.700c25d7.03d71cbf.b92799e4.9a595e8a.6096a416.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 499,
                            "endLine": 499,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 499,
                            "endLine": 499,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 504,
                            "endLine": 504,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 522,
                            "endLine": 522,
                            "startColumn": 21,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 524,
                            "endLine": 524,
                            "startColumn": 40,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 525,
                            "endLine": 525,
                            "startColumn": 66,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 525,
                            "endLine": 525,
                            "startColumn": 50,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 525,
                            "endLine": 525,
                            "startColumn": 50,
                            "endColumn": 87
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 525,
                            "endLine": 525,
                            "startColumn": 38,
                            "endColumn": 89
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 525,
                            "endLine": 525,
                            "startColumn": 20,
                            "endColumn": 90
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 525,
                            "endLine": 525,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 525,
                            "endLine": 525,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 809,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/XSS",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into the return value of _, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[the return value of _](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/api.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 573,
                  "endLine": 573,
                  "startColumn": 12,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e3be4f856dd6b66a0a1364c78250268504fea3cfd3383c0d0545475e1bf9c9ea",
            "1": "a6b41d6e.24e08296.216804cc.1e2c0147.30c69829.ba14daf2.a2237efa.aabfc200.a6b41d6e.3575c5ab.a9b112b6.03d71cbf.885720a7.bff21958.6096a416.aabfc200"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 558,
                            "endLine": 558,
                            "startColumn": 17,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 558,
                            "endLine": 558,
                            "startColumn": 17,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 563,
                            "endLine": 563,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 567,
                            "endLine": 567,
                            "startColumn": 24,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 572,
                            "endLine": 572,
                            "startColumn": 49,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 576,
                            "endLine": 576,
                            "startColumn": 39,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 576,
                            "endLine": 576,
                            "startColumn": 23,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 576,
                            "endLine": 576,
                            "startColumn": 23,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 576,
                            "endLine": 576,
                            "startColumn": 9,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 573,
                            "endLine": 577,
                            "startColumn": 20,
                            "endColumn": 6
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 573,
                            "endLine": 573,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 573,
                            "endLine": 573,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 809,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/XSS",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into the return value of _, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14)",
              "[the return value of _](15)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/api.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 601,
                  "endLine": 601,
                  "startColumn": 12,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "da9abc96c3bbe0d95b1f457b3e7c1488815ce4dd2e80752071ede16c3395ea66",
            "1": "6f2175e3.24e08296.7ab64615.98569367.ba3b896d.3df0c333.0a7337bb.0990edd8.f10831f4.3575c5ab.8f62c327.7369b21f.ba3b896d.9a595e8a.6096a416.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 580,
                            "endLine": 580,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 580,
                            "endLine": 580,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 588,
                            "endLine": 588,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 593,
                            "endLine": 593,
                            "startColumn": 151,
                            "endColumn": 157
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 593,
                            "endLine": 593,
                            "startColumn": 150,
                            "endColumn": 159
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 593,
                            "endLine": 593,
                            "startColumn": 40,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 593,
                            "endLine": 593,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 594,
                            "endLine": 594,
                            "startColumn": 45,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 594,
                            "endLine": 594,
                            "startColumn": 35,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 594,
                            "endLine": 594,
                            "startColumn": 34,
                            "endColumn": 101
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 594,
                            "endLine": 594,
                            "startColumn": 9,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 601,
                            "endLine": 601,
                            "startColumn": 46,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 601,
                            "endLine": 601,
                            "startColumn": 38,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 601,
                            "endLine": 601,
                            "startColumn": 20,
                            "endColumn": 94
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 601,
                            "endLine": 601,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 601,
                            "endLine": 601,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 809,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/XSS",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into the return value of _, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14)",
              "[the return value of _](15)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/api.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 628,
                  "endLine": 628,
                  "startColumn": 12,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5e5ccf936ade7ad7f5181eef246b139df8968608b2dfecc3f8068891d79c1924",
            "1": "94b5f6f2.24e08296.79e62dc9.f94a4362.438d73c5.3df0c333.0a7337bb.0990edd8.f10831f4.3575c5ab.d2b05817.7369b21f.813a85bb.0e9254a3.1a00b5b5.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 605,
                            "endLine": 605,
                            "startColumn": 22,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 605,
                            "endLine": 605,
                            "startColumn": 22,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 612,
                            "endLine": 612,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 624,
                            "endLine": 624,
                            "startColumn": 162,
                            "endColumn": 168
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 624,
                            "endLine": 624,
                            "startColumn": 161,
                            "endColumn": 181
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 624,
                            "endLine": 624,
                            "startColumn": 34,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 624,
                            "endLine": 624,
                            "startColumn": 9,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 625,
                            "endLine": 625,
                            "startColumn": 43,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 625,
                            "endLine": 625,
                            "startColumn": 35,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 625,
                            "endLine": 625,
                            "startColumn": 34,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 625,
                            "endLine": 625,
                            "startColumn": 9,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 628,
                            "endLine": 628,
                            "startColumn": 45,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 628,
                            "endLine": 628,
                            "startColumn": 38,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 628,
                            "endLine": 628,
                            "startColumn": 20,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 628,
                            "endLine": 628,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 628,
                            "endLine": 628,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 809,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/XSS",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into the return value of _, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14)",
              "[the return value of _](15)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils/api.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 647,
                  "endLine": 647,
                  "startColumn": 12,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8d64840246d5594276c17a94f44431cf7bee2e6197359f92310f5c2b1bbe589a",
            "1": "94b5f6f2.24e08296.79e62dc9.f94a4362.34557c9d.3df0c333.0a7337bb.0990edd8.f10831f4.3575c5ab.d2b05817.7369b21f.34557c9d.0e9254a3.6096a416.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 631,
                            "endLine": 631,
                            "startColumn": 14,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 631,
                            "endLine": 631,
                            "startColumn": 14,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 638,
                            "endLine": 638,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 643,
                            "endLine": 643,
                            "startColumn": 138,
                            "endColumn": 144
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 643,
                            "endLine": 643,
                            "startColumn": 137,
                            "endColumn": 146
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 643,
                            "endLine": 643,
                            "startColumn": 34,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 643,
                            "endLine": 643,
                            "startColumn": 9,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 644,
                            "endLine": 644,
                            "startColumn": 43,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 644,
                            "endLine": 644,
                            "startColumn": 35,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 644,
                            "endLine": 644,
                            "startColumn": 34,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 644,
                            "endLine": 644,
                            "startColumn": 9,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 647,
                            "endLine": 647,
                            "startColumn": 45,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 647,
                            "endLine": 647,
                            "startColumn": 38,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 647,
                            "endLine": 647,
                            "startColumn": 20,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 647,
                            "endLine": 647,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils/api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 647,
                            "endLine": 647,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 809,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "isSupported": true,
            "lang": "HTML",
            "files": 1,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "C++",
            "files": 3,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Python",
            "files": 468,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "XML",
            "files": 20,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "C",
            "files": 2,
            "type": "SUPPORTED"
          }
        ]
      }
    }
  ]
}
