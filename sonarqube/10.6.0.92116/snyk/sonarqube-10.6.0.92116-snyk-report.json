{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "javascript/HardcodedNonCryptoSecret",
              "name": "HardcodedNonCryptoSecret",
              "shortDescription": {
                "text": "Hardcoded Secret"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n## Best practices for prevention\n- Never hard code security-related constants; use symbolic names or configuration lookup files.\n- As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n- Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "HardcodedNonCryptoSecret",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/markstock7/FileManager/commit/50572778825dea6b6fdb34c9ae950d9915743e4c?diff=split#diff-408990876524f4737b49693cedc52fd267e31f665d0a7f71792dcb986d6a8268L-1",
                    "lines": [
                      {
                        "line": "accessKeyId: 'pT3KujnBPxc0ey7G',\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "secretAccessKey: 'CcHjh2y7tIFljxgUT4U8sQLctkMBHu',\n",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "accessKeyId: '',\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      },
                      {
                        "line": "secretAccessKey: '',\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/rodrigotamura/go-stack-2019/commit/26e020dfc2272fe76c82c28d86f492c3c84a94c5?diff=split#diff-92f76c0bccc1f970244da3b50449f200d4787cf60a87be14ff4f250d0ba1a590L-1",
                    "lines": [
                      {
                        "line": "secret: '632ca4dfc8b2269e6fdf03ab5a55d2ec',\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "secret: process.env.APP_SECRET,\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/appcypher/events-manager-io/commit/656fdf6bfb902894db36b4b3ea98441ee607b75e?diff=split#diff-0cd5bb6f9779938a122d3bfef4a22f6fc66e59742c3a377dde667d8a6c5f5e16L-1",
                    "lines": [
                      {
                        "line": "password: bcrypt.hashSync('admin', 10),\n",
                        "lineNumber": 6,
                        "lineChange": "removed"
                      },
                      {
                        "line": "password: bcrypt.hashSync(process.env.ADMIN_SEED_PASSWORD, 10),\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 68,
                "cwe": [
                  "CWE-547"
                ]
              }
            },
            {
              "id": "java/HardcodedSecret",
              "name": "HardcodedSecret",
              "shortDescription": {
                "text": "Hardcoded Secret"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n## Best practices for prevention\n- Never hard code security-related constants; use symbolic names or configuration lookup files.\n- As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n- Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "HardcodedSecret",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/aerogear-attic/aerogear-simplepush-server/commit/bb4cf06c590f70475f56de7ae0eae732eac8f379?diff=split#diff-e4415092a1eaff762c4670199db1bbb113813b0335c8a41b21f3b1a363880ff6L-1",
                    "lines": [
                      {
                        "line": "final PBEKeySpec keySpec = new PBEKeySpec(seed.toCharArray(), SALT, 65536, 128);\n",
                        "lineNumber": 112,
                        "lineChange": "removed"
                      },
                      {
                        "line": "final PBEKeySpec keySpec = new PBEKeySpec(seed.toCharArray(), salt(8), 65536, 128);\n",
                        "lineNumber": 109,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/qinyou/my_curd/commit/37f84f898b75948532d38faa1cd92d193d0df76f?diff=split#diff-d9f7bc7636c0ad9c54abd4d95c443411b00796f4fbc660c88fcde0c84ed78640L-1",
                    "lines": [
                      {
                        "line": "    private static final String ISS = \"my_curd\";         // 签名 签发者\n",
                        "lineNumber": 22,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    private static final String SECRET = \"AAAABBBCCC\";   // 签名 密钥\n",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    private static final Long EXPIRATION_TIME_VALUE = 60L * 60 * 24 * 30; // 30 天有效期 (单位为秒)\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    private static final String ISS ;                 // 签名 签发者\n",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "    private static final String SECRET ;              // 签名 密钥\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "    private static final Long EXPIRATION_TIME_VALUE ; // 过期时间 (单位为秒)\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "    static{\n",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "        ISS = AppConfig.configProp.get(\"jwt.iss\");\n",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "        SECRET = AppConfig.configProp.get(\"jwt.secret\");\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "        EXPIRATION_TIME_VALUE = 60L * 60 * 24 * AppConfig.configProp.getInt(\"jwt.exp\");\n",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "    /**\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "     * 生成签名\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "     *\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "     * @param username       用户名\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "     * @param roleList       角色集合\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "     * @param permissionList 权限集合\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "     * @return\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "     */\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public static String buildToken(String username, List<String> roleList, List<String> permissionList) {\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "        // HS256签名算法\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "        SignatureAlgorithm signatureAlgorithm = SignatureAlgorithm.HS256;\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "        byte[] apiKeySecretBytes = DatatypeConverter.parseBase64Binary(SECRET);\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Key signingKey = new SecretKeySpec(apiKeySecretBytes, signatureAlgorithm.getJcaName());\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/bulktrade/SMSC/commit/a28a9bf2a975e27ad7ccecce47588fe1a57659f3?diff=split#diff-d61a5e31effad4932c402c2638bba72d6d72eda975f375bf21ce055846a911d9L-1",
                    "lines": [
                      {
                        "line": "Key key = new SecretKeySpec(KEY, \"AES\");\n",
                        "lineNumber": 16,
                        "lineChange": "removed"
                      },
                      {
                        "line": "Key key = new SecretKeySpec(secretKey.getBytes(), \"AES\");\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 19,
                "cwe": [
                  "CWE-547"
                ]
              }
            },
            {
              "id": "javascript/NoRateLimitingForExpensiveWebOperation",
              "name": "NoRateLimitingForExpensiveWebOperation",
              "shortDescription": {
                "text": "Allocation of Resources Without Limits or Throttling"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nWithout unlimited resources, software operating in the real world is inherently limited in the resources it may consume; similarly, servers are limited by the number of simultaneous sessions they can handle. Therefore, it is important for developers to design software that considers these real-world physical (or virtual) limitations and limits user sessions accordingly, both in terms of the number of user sessions and in the quantity of resources each user may demand. Software with this weakness does not include such limitations and as a result, individual user sessions may consume too many resources, leading to unintended software behavior including, potentially, denial of service. This can be compared to a single restaurant customer emptying out the entire buffet, leaving no food for other customers--or an entire busload mobbing the buffet all at once, with a similar effect. This may happen inadvertently or as a result of an attack by a malicious user.\n\n## Best practices for prevention\n* Test extensively to obtain baseline values indicating how the software performs in the real world under various conditions (normal and peak); use these values to determine reasonable software limits.\n* Set clear limits for all flexible parameters such as maximum allocable memory, number of processes within a given timeframe, file descriptors, requests per client, number of records per request, etc. This is particularly true for any parameters within user control.\n* Release all resources when no longer in use, including incorporating timeouts for inactive users, processes, and resources.\n* Familiarize Dev, Ops, and IT teams with best practices for recognizing and preventing DoS attacks and out-of-control resource allocation to prevent catastrophic failures.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "NoRateLimitingForExpensiveWebOperation",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/natsukagami/themis-web-interface/commit/e1ef34f8b95e7eefab54c204b78fbdee70169a6d?diff=split#diff-cd0e12b228a7dea99a7346adf68cfc7a6a2c321846cc8a90fc6cd92cf8066d5eL-1",
                    "lines": [
                      {
                        "line": "router.post('/', (req, res, next) => {\n",
                        "lineNumber": 8,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const rateLimiter = require('../controls/rate-limiter')({\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t// Allow 3 submits, then slows down\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tfreeRetries: 30,\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tminWait: 2 * 60 * 60,\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tmaxWait: 2 * 60 * 60,\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tlifetime: 60 * 60\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      },
                      {
                        "line": "router.post('/', rateLimiter.prevent, (req, res, next) => {\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Waifu-pics/waifu-api/commit/da0d3b4ee8dd4e2ab0a789dfd04cb304a537368e?diff=split#diff-0eddd48e85f4f98a238d49bfe0b4cf514b1430322bcdc196b1a97786e0ec30c8L-1",
                    "lines": [
                      {
                        "line": "const rateLimit = require(\"express-rate-limit\")\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "module.exports = ({ db, app, config, s3 }) => {\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      },
                      {
                        "line": "    // Checking if user is Admin to prevent rate limit middleware\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "    const chkAdmin = async (req, res, next) => {\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "        const { token } = req.headers\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "        const Admins = db.collection('admins')\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "        req.chkAdmin = Boolean(req.headers.token && typeof token === \"string\" && Boolean(await Admins.findOne({token})))\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "        \n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "        next()\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "    // Rate limit middleware\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "    const limiter = rateLimit({\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "        windowMs: 10 * 60 * 1000, // 10 minutes\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "        max: 15,\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "        message: \"You can only upload 15 files per 10 minutes!\",\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "        statusCode: 400,\n",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "        skip: function (req) {\n",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "            return req.chkAdmin\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "    })\n",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "    // Do shit to upload\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "    app.use(\"/api/upload\", chkAdmin, limiter)\n",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "    app.use(fileUpload({\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "        limits: { fileSize: config.maxUploadSize * 1024 * 1024 },\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "        abortOnLimit: true,\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "        createParentPath: true\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }))\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "    app.post('/api/upload', async (req, res) => {\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/davidmerfield/Blot/commit/f2bcb51b129075c8ebe5c1c23fac36dee35e800c?diff=split#diff-31b7f0d966974821a84da24ef72a8b290d5b82d34861dbdf7be2743821b2f4f5L-1",
                    "lines": [
                      {
                        "line": "// stores state locally, don't use this in production\n",
                        "lineNumber": 10,
                        "lineChange": "removed"
                      },
                      {
                        "line": "// var brute = require('express-brute');\n",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": "// var store = new brute.MemoryStore();\n",
                        "lineNumber": 12,
                        "lineChange": "removed"
                      },
                      {
                        "line": "// var limiter = new brute(store);\n",
                        "lineNumber": 13,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var client = require('client');\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "var Brute = require('express-brute');\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "var RedisStore = require('express-brute-redis');\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "var store = new RedisStore({\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "    client: client,\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      },
                      {
                        "line": "    prefix: 'brute:'\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "var limiter = new Brute(store, {\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "  freeRetries: 200,\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "  failCallback: onLimit,\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "var login = Express.Router();\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "var form = login.route('/');\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "form.all(limiter.prevent);\n",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "form.get(checkToken, function(req, res){\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.render('log-in-email');\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "form.post(parse, checkEmail, checkReset, checkPassword);\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "form.all(errorHandler);\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "function onLimit (req, res, next, until) {\n",
                        "lineNumber": 37,
                        "lineChange": "added"
                      },
                      {
                        "line": "  res.status(429).send('Log in rate limit hit. Please wait ' + moment(until).toNow(true) + ' before retrying.');\n",
                        "lineNumber": 38,
                        "lineChange": "added"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 40,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 27,
                "cwe": [
                  "CWE-770"
                ]
              }
            },
            {
              "id": "javascript/OR",
              "name": "OR",
              "shortDescription": {
                "text": "Open Redirect"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\nAn open redirect attack takes place when a web application redirects the user to an unauthorized and untrusted site. In general, URL redirection refers to the ability of a website or application to redirect users to another site. This is often a benign and useful feature. For example, if a resource has moved to a new location, URL redirection can transfer the user to that location rather than displaying an error message.\nHowever, this ability can be exploited through social engineering, tricking the user into believing they are accessing one site when, in reality, they are being redirected to a dangerous site, such as a phishing site. Once there, the user may be further tricked into entering credentials or personally identifiable information (PII), believing they are still within the original, trusted domain. Attackers can then use these credentials to gain unauthorized access or leverage the user's PII for sale or ransom.\n\n## Best practices for prevention\n* When developing a site or web app, consider implementing a disclaimer page to remind users that they are leaving a secure site.\n* Adopt a zero-trust approach in which all input is treated with suspicion.\n* Validate all input against deny-lists to ensure it does not contain code to redirect the user. This method is good but inherently incomplete.\n* Be aware of all sources of untrusted input being sent to the server that could be used to redirect the user, such as cookies, URL components, filenames, query results, request headers, and more.\n* In particular, be aware of potential API calls that could send input indirectly to redirect the user.\n* To protect end users, use a firewall to block known malicious sites, train users to recognize basic signs of a phishing attack, and ensure that all network endpoints are patched with the most current updates.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "OR",
                  "Security",
                  "SourceServer",
                  "SourceRequestUrl",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/deanoemcke/thegreatsuspender/commit/a2d115a3f1762534fcbb2526f485cc5b2e7ee34f?diff=split#diff-7522343359c6bd41f5a1feb5740b34c1ac3a3767f53b91a523f6bb0b81e55fe6L-1",
                    "lines": [
                      {
                        "line": "const backgroundPage = chrome.extension.getBackgroundPage();\n",
                        "lineNumber": 3,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if (!backgroundPage || !backgroundPage.tgs) {\n",
                        "lineNumber": 4,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  setTimeout(() => location.replace(location.href), 1000);\n",
                        "lineNumber": 5,
                        "lineChange": "removed"
                      },
                      {
                        "line": "try {\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      },
                      {
                        "line": "  chrome.extension.getBackgroundPage().tgs.setViewGlobals(global, 'options');\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "} catch (e) {\n",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "  window.setTimeout(() => window.location.reload(), 1000);\n",
                        "lineNumber": 6,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/davidmerfield/Blot/commit/f304c11a46c1b7fb152a07def70a97dc893bc64f?diff=split#diff-99f770f613cdd250d6d39a092a5ab3a5ac4031a3c23500e88d3e18410166a2bcL-1",
                    "lines": [
                      {
                        "line": "res.message({error: message});\n",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.redirect(req.path);\n",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.message(req.path, err);\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Midburn/spark/commit/a4ed80954090d9869d7e384e8b23567642b25fa8?diff=split#diff-d995cd46019e674b6792d7cc828b99307a9c05ce2f862e2f417e3eccea8a9707L-1",
                    "lines": [
                      {
                        "line": "if (r) {\n",
                        "lineNumber": 97,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if (r && constants.LOGIN_REDIRECT_URL_WHITELIST.indexOf(r) > 0) {\n",
                        "lineNumber": 97,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return res.redirect(r);\n",
                        "lineNumber": 98,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 68,
                "cwe": [
                  "CWE-601"
                ]
              }
            },
            {
              "id": "java/NoHardcodedCredentials",
              "name": "NoHardcodedCredentials",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n## Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "NoHardcodedCredentials",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-798"
                ]
              }
            },
            {
              "id": "java/SpringCSRF/test",
              "name": "SpringCSRF/test",
              "shortDescription": {
                "text": "Spring Cross-Site Request Forgery (CSRF)"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nWhen a web server is designed to receive a request from a client without any mechanism for verifying that it was intentionally sent, then it might be possible for an attacker to trick a client into making an unintentional request to the web server which will be treated as an authentic request. This can be done via a URL, image load, XMLHttpRequest, etc. and can result in exposure of data or unintended code execution.\n\n## Best practices for prevention\n* Use a vetted library or framework which has anti-CSRF packages that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Consider including Spring Security library within your application.\n\n\n## References\n* [Spring Security Docs](https://docs.spring.io/spring-security/site/docs/5.0.x/reference/html/csrf.html)\n* [A Guide to CSRF Protection in Spring Security](https://www.baeldung.com/spring-security-csrf)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "SpringCSRF",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-352"
                ]
              }
            },
            {
              "id": "java/InsecurelyGeneratedPassword/test",
              "name": "InsecurelyGeneratedPassword/test",
              "shortDescription": {
                "text": "Use of Insufficiently Random Values"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nComputer security relies on random numbers for many things: generating secure, confidential session keys; hashing password data; encryption for transmitting sensitive data, and more. It's easy to understand why. If session keys, for example, were generated sequentially, attackers would be able to guess these easily and then hijack legitimate user sessions. Similarly, if encryption techniques used easy-to-guess numbers, attackers could use brute-force attacks to gain unauthorized access.\n\nIn reality, since computers cannot generate truly random numbers, they use \"pseudorandom\" numbers instead, generated using an algorithm that is \"seeded\" in a variety of ways to produce highly variable values in a random-seeming order, making them very hard-in theory-for attackers to guess. However, if developers inadvertently make use of a weak random algorithm, attackers may be able to discover the algorithm, seed, or pattern, ultimately unlocking access to commands or sensitive data, which can then be held for ransom or sold.\n\n## Best practices for prevention\n* Avoid using weak pseudorandom number generators (PRNGs), such as statistical PRNGs. Instead, choose a cryptographically secure PRNG.\n* Avoid using predictable seed values, such as user ID or server start time. Instead, use a seed that is itself pseudorandom, such as one taken from an external hardware source.\n* Use standard, accepted security algorithms and libraries rather than taking a DIY approach and creating custom code that may contain inherent weaknesses or overlook critical flaws.\n* Use static analysis tools to identify potential instances of this weakness in code and then ensure good test coverage with appropriate white-box testing.\n* Educate developers about the importance of entropy in security systems development, and consider adopting tools that are FIPS 140-2 compliant.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "InsecurelyGeneratedPassword",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/korpling/ANNIS/commit/513501c6da25e0fa151c19cb66848a7c5a5cac78?diff=split#diff-e9eaa4844599621b1eeab9299f9b0150f7538482ce9826a7137d5de45d68e60fL-1",
                    "lines": [
                      {
                        "line": "// Generate a random password\n",
                        "lineNumber": 64,
                        "lineChange": "removed"
                      },
                      {
                        "line": "this.password = RandomStringUtils.random(50);\n",
                        "lineNumber": 65,
                        "lineChange": "removed"
                      },
                      {
                        "line": "// Hash the password with bcrypt and add it to the configuration\n",
                        "lineNumber": 66,
                        "lineChange": "removed"
                      },
                      {
                        "line": "BCryptPasswordEncoder passwordEncoder = new BCryptPasswordEncoder();\n",
                        "lineNumber": 67,
                        "lineChange": "removed"
                      },
                      {
                        "line": "Map<String, Object> desktopUser = new LinkedHashMap<>();\n",
                        "lineNumber": 68,
                        "lineChange": "removed"
                      },
                      {
                        "line": "desktopUser.put(\"password\", passwordEncoder.encode(this.password));\n",
                        "lineNumber": 69,
                        "lineChange": "removed"
                      },
                      {
                        "line": "// The generated user is an adminstrator\n",
                        "lineNumber": 70,
                        "lineChange": "removed"
                      },
                      {
                        "line": "desktopUser.put(\"admin\", true);\n",
                        "lineNumber": 71,
                        "lineChange": "removed"
                      },
                      {
                        "line": "// Generate a random secret used to sign the JWT token\n",
                        "lineNumber": 71,
                        "lineChange": "added"
                      },
                      {
                        "line": "this.secret = RandomStringUtils.randomAlphanumeric(50);\n",
                        "lineNumber": 72,
                        "lineChange": "added"
                      },
                      {
                        "line": "// Add it to the configuration\n",
                        "lineNumber": 73,
                        "lineChange": "added"
                      },
                      {
                        "line": "Map<String, Object> tokenVerification = new LinkedHashMap<>();\n",
                        "lineNumber": 74,
                        "lineChange": "added"
                      },
                      {
                        "line": "tokenVerification.put(\"type\", \"HS256\");\n",
                        "lineNumber": 75,
                        "lineChange": "added"
                      },
                      {
                        "line": "tokenVerification.put(\"secret\", secret);\n",
                        "lineNumber": 76,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/airsonic/airsonic/commit/83882b18d9bd84189181e7f617cf868dcb05b6d7?diff=split#diff-a9977e03d4ea4fa858c475aa9a0f25315d0cfae9ce74a467f054f88037f57810L-1",
                    "lines": [
                      {
                        "line": "    private static final String SYMBOLS = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\";\n",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "    private final SecureRandom random = new SecureRandom();\n",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "    private static final int PASSWORD_LENGTH = 32;\n",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "    @Autowired\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "    private SettingsService settingsService;\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "    @Autowired\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "    private SecurityService securityService;\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "    @RequestMapping(method = {RequestMethod.GET, RequestMethod.POST})\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public ModelAndView recover(HttpServletRequest request, HttpServletResponse response) throws Exception {\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Map<String, Object> map = new HashMap<String, Object>();\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "        String usernameOrEmail = StringUtils.trimToNull(request.getParameter(\"usernameOrEmail\"));\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if (usernameOrEmail != null) {\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "            map.put(\"usernameOrEmail\", usernameOrEmail);\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "            User user = getUserByUsernameOrEmail(usernameOrEmail);\n",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "            boolean captchaOk;\n",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "            if (settingsService.isCaptchaEnabled()) {\n",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "                String recaptchaResponse = request.getParameter(\"g-recaptcha-response\");\n",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "                ReCaptcha captcha = new ReCaptcha(settingsService.getRecaptchaSecretKey());\n",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "                captchaOk = recaptchaResponse != null && captcha.isValid(recaptchaResponse);\n",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "            } else {\n",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "                captchaOk = true;\n",
                        "lineNumber": 65,
                        "lineChange": "none"
                      },
                      {
                        "line": "            }\n",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "            \n",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "            if (!captchaOk) {\n",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "                map.put(\"error\", \"recover.error.invalidcaptcha\");\n",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "            } else if (user == null) {\n",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "                map.put(\"error\", \"recover.error.usernotfound\");\n",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "            } else if (user.getEmail() == null) {\n",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "                map.put(\"error\", \"recover.error.noemail\");\n",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "            } else {\n",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "                String password = RandomStringUtils.randomAlphanumeric(8);\n",
                        "lineNumber": 71,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                StringBuilder sb = new StringBuilder(PASSWORD_LENGTH);\n",
                        "lineNumber": 75,
                        "lineChange": "added"
                      },
                      {
                        "line": "                for(int i=0; i<PASSWORD_LENGTH; i++) {\n",
                        "lineNumber": 76,
                        "lineChange": "added"
                      },
                      {
                        "line": "                  int index = random.nextInt(SYMBOLS.length());\n",
                        "lineNumber": 77,
                        "lineChange": "added"
                      },
                      {
                        "line": "                  sb.append(SYMBOLS.charAt(index));\n",
                        "lineNumber": 78,
                        "lineChange": "added"
                      },
                      {
                        "line": "                }\n",
                        "lineNumber": 79,
                        "lineChange": "added"
                      },
                      {
                        "line": "                String password = sb.toString();\n",
                        "lineNumber": 80,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 81,
                        "lineChange": "added"
                      },
                      {
                        "line": "                if (emailPassword(password, user.getUsername(), user.getEmail())) {\n",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    map.put(\"sentTo\", user.getEmail());\n",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    user.setLdapAuthenticated(false);\n",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    user.setPassword(password);\n",
                        "lineNumber": 85,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/mas802/stata-ux/commit/?diff=split#diff-921aa6236945243bd6fcc832da38809cd0928cf7d50771a440df7d81c9a5a928L-1",
                    "lines": [
                      {
                        "line": "String password = \"\"\n",
                        "lineNumber": 27,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        + (Math.round(Math.random() * 899999999) + 100000000);\n",
                        "lineNumber": 28,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String password = UUID.randomUUID();\n",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "System.out.println(\"The password is: \" + password);\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "auth.inMemoryAuthentication().withUser(\"user\").password(password)\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 32,
                "cwe": [
                  "CWE-330"
                ]
              }
            },
            {
              "id": "javascript/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "PT",
                  "Security",
                  "SourceNonServer",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "<unknown>",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/eclipse-vertx/vert.x/commit/d1183271de193b6bef158e2b1dfb5ba65a15cbc9?diff=split#diff-fa3b44a1f7fa945e9aedd043ef316ad52d191aef30871789663bea3426ba14baL-1",
                    "lines": [
                      {
                        "line": "} else if (req.path.indexOf('..') == -1) {\n",
                        "lineNumber": 8,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  req.response.sendFile(\".\" + req.path);\n",
                        "lineNumber": 9,
                        "lineChange": "removed"
                      },
                      {
                        "line": "} else if (req.path().indexOf('..') == -1) {\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "  req.response.sendFile(\".\" + req.path());\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/iamfrntdv/adm-dev-kit/commit/8edeb067e703a642cb7ac7c88fb95fce8dd9c248?diff=split#diff-52baeef6a12dda5ae6078825eeb32958966ba6cbdd56792899f6273fecd26eabL-1",
                    "lines": [
                      {
                        "line": "const img = fs.readFileSync(filePath);\n",
                        "lineNumber": 7,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.end(img);\n",
                        "lineNumber": 8,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.sendFile(filePath, {root: './'});\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/substack/shipboard/commit/e2722480410eea3f3d7b51730dcdea49df649cd2?diff=split#diff-e727e4bdf3657fd1d798edcd6b099d6e092f8573cba266154583a746bba0f346L-1",
                    "lines": [
                      {
                        "line": "    if (has(pages, req.url)) {\n",
                        "lineNumber": 14,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    var p = req.url.split(/[#?]/)[0];\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (p === '/') {\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "        html('layout.html').pipe(hyperstream({\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "            '#content': html(pages[req.url])\n",
                        "lineNumber": 16,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            '[page=create]': html('create.html'),\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "            '[page=view]': html('view.html'),\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "            '[page=edit]': html('edit.html')\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "        })).pipe(res);\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else st(req, res);\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "};\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "function html (file) {\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return fs.createReadStream(path.join(__dirname, 'html', file));\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 40,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "javascript/HardcodedNonCryptoSecret/test",
              "name": "HardcodedNonCryptoSecret/test",
              "shortDescription": {
                "text": "Hardcoded Secret"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n## Best practices for prevention\n- Never hard code security-related constants; use symbolic names or configuration lookup files.\n- As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n- Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "HardcodedNonCryptoSecret",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/markstock7/FileManager/commit/50572778825dea6b6fdb34c9ae950d9915743e4c?diff=split#diff-408990876524f4737b49693cedc52fd267e31f665d0a7f71792dcb986d6a8268L-1",
                    "lines": [
                      {
                        "line": "accessKeyId: 'pT3KujnBPxc0ey7G',\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "secretAccessKey: 'CcHjh2y7tIFljxgUT4U8sQLctkMBHu',\n",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "accessKeyId: '',\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      },
                      {
                        "line": "secretAccessKey: '',\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/rodrigotamura/go-stack-2019/commit/26e020dfc2272fe76c82c28d86f492c3c84a94c5?diff=split#diff-92f76c0bccc1f970244da3b50449f200d4787cf60a87be14ff4f250d0ba1a590L-1",
                    "lines": [
                      {
                        "line": "secret: '632ca4dfc8b2269e6fdf03ab5a55d2ec',\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "secret: process.env.APP_SECRET,\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/appcypher/events-manager-io/commit/656fdf6bfb902894db36b4b3ea98441ee607b75e?diff=split#diff-0cd5bb6f9779938a122d3bfef4a22f6fc66e59742c3a377dde667d8a6c5f5e16L-1",
                    "lines": [
                      {
                        "line": "password: bcrypt.hashSync('admin', 10),\n",
                        "lineNumber": 6,
                        "lineChange": "removed"
                      },
                      {
                        "line": "password: bcrypt.hashSync(process.env.ADMIN_SEED_PASSWORD, 10),\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 68,
                "cwe": [
                  "CWE-547"
                ]
              }
            },
            {
              "id": "java/InsecureHash/test",
              "name": "InsecureHash/test",
              "shortDescription": {
                "text": "Use of Password Hash With Insufficient Computational Effort"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n## Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "InsecureHash",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/javabeanz/owasp-security-logging/commit/477ecf68f3102f309f3ec9af01ab852294cbd826?diff=split#diff-c14e8b3d208e6acad1c0ca88a8a8227e4140088dfe2206349680aec0558df5cbL-1",
                    "lines": [
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"SHA-1\");\n",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/serenity-bdd/serenity-core/commit/0f81a03ae3f907922a05167688dadc8c3e3fbfb8?diff=split#diff-801c01409e6adce75757fddee032ee993bc0d54328d0632f7d728689a4b8effdL-1",
                    "lines": [
                      {
                        "line": "return DigestUtils.md5Hex(screenshotData) + \".png\";\n",
                        "lineNumber": 7,
                        "lineChange": "removed"
                      },
                      {
                        "line": "return DigestUtils.sha256Hex(screenshotData) + \".png\";\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/freenet/fred/commit/90a727b4116eafd4b6892fa49295966de4e355ae?diff=split#diff-385b90a2c9a20669f73977a4d82d2dcebad9b0728cfe0479f26285a8cec90bbeL-1",
                    "lines": [
                      {
                        "line": "md = MessageDigest.getInstance(\"SHA-1\");\n",
                        "lineNumber": 75,
                        "lineChange": "removed"
                      },
                      {
                        "line": "md = MessageDigest.getInstance(\"SHA-256\");\n",
                        "lineNumber": 75,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 64,
                "cwe": [
                  "CWE-916"
                ]
              }
            },
            {
              "id": "javascript/HttpToHttps",
              "name": "HttpToHttps",
              "shortDescription": {
                "text": "Cleartext Transmission of Sensitive Information"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\nThis weakness occurs when software transmits sensitive information, such as passwords or credit card numbers, in unencrypted form. This information may then be intercepted by threat actors using sniffer tools or interception techniques such as man-in-the-middle (MITM) attacks (often involving social engineering). Attackers can then use information gleaned to perform a variety of actions, depending on the information type. Possible actions include gaining unauthorized access, impersonating a user, moving laterally within the organization's network, or retrieving and potentially modifying files. This weakness is almost completely avoidable through intelligent architecture and design.\n\n## Best practices for prevention\n* Build web applications around a security mindset and the awareness that sniffers may be present at any time.\n* Ensure that all sensitive data transmission uses reliable encryption.\n* Implement security measures so that sensitive results are never returned in plain text.\n* Implement multiple-factor authentication methods to validate remote instances.\n* Use SSL not only at logon but throughout communications.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "HttpToHttps",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/eserozvataf/apibone/commit/bbac9343971a20f4fee124b6f0a2f6a80895fb35?diff=split#diff-8b733ca241b0609b1fc0f2e60d14f911b3a82997a939e7eb01fe6c25b759c234L-1",
                    "lines": [
                      {
                        "line": "const http = require('http'),\n",
                        "lineNumber": 0,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const https = require('https'),\n",
                        "lineNumber": 0,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/RetireJS/retire.js/commit/82d44d60c98acba0e4c3772709e76b989c4274bb?diff=split#diff-89d400752fb89d946a43778e9f0b3dba25968dcdf8604ae08adbb3ecb236338fL-1",
                    "lines": [
                      {
                        "line": "var http = require('http'),\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var http = require('https'),\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Rich-Harris/packd/commit/c14d17da80ed075ee007de3121422fb2c5b77e4d?diff=split#diff-1821d11fbffbab2187701c42616688d46bf66d7b2cf6eaf363548dd66caa6ebaL-1",
                    "lines": [
                      {
                        "line": "const http = require( 'http' );\n",
                        "lineNumber": 0,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const https = require( 'https' );\n",
                        "lineNumber": 0,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 1,
                        "lineChange": "none"
                      },
                      {
                        "line": "module.exports = function get ( url ) {\n",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "\treturn new Promise( ( fulfil, reject ) => {\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\thttp.get( url, response => {\n",
                        "lineNumber": 4,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\thttps.get( url, response => {\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 122,
                "cwe": [
                  "CWE-319"
                ]
              }
            },
            {
              "id": "javascript/PrototypePollution",
              "name": "PrototypePollution",
              "shortDescription": {
                "text": "Prototype Pollution"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `_proto_`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n\n-   Property definition by path\n\n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>\n\nWhen the source object contains a property named `_proto_` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of \"path\", they can set this value to `_proto_.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n\n-   Web server\n\n\n## Best practices for prevention\n\n1.  Freeze the prototype - use `Object.freeze (Object.prototype)`.\n\n2.  Require schema validation of JSON input.\n\n3.  Avoid using unsafe recursive merge functions.\n\n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n\n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. \"JavaScript prototype pollution attack in NodeJS application.\" GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "PrototypePollution",
                  "Security",
                  "SourceNonServer",
                  "SourceResourceAccess",
                  "SourceNetworkRequest",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/VincentLoy/tweetParser.js/commit/31ccbf365abbb6398fb78705074c11458421cec6?diff=split#diff-343e9403c50c367c18f841170513c764a80c01c26a0d9c2746a5fd632febe770L-1",
                    "lines": [
                      {
                        "line": "        for (var i in datas) {\n",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        var i;\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "        for (i = 0; i < datas.length; i += 1) {\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "            if (datas[i].contributions > 1) {\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "                datas[i].wording = \"contributions\";\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/wachunga/omega/commit/0ea594b103c957680b02e5b3d3e6763cf49d2c3a?diff=split#diff-a4c65ede64197e1a112899a68bf994485b889c4b143198bac4af53425b38406fL-1",
                    "lines": [
                      {
                        "line": "issues[id].assignee = assignee; \n",
                        "lineNumber": 47,
                        "lineChange": "removed"
                      },
                      {
                        "line": "issues[id-1].assignee = assignee; \n",
                        "lineNumber": 47,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/egret-labs/Lark/commit/?diff=split#diff-e3b400691c90bad7f3c153db9c2bc92e207e9776932cefae02a13a04a6626d20L-1",
                    "lines": [
                      {
                        "line": "var projects = {};\n",
                        "lineNumber": 7,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var projects = Object.create(null);\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "http.createServer(function (req, res) {\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    var uri = url.parse(req.url,true);\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "    var info: TaskInfo = uri.query;\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "    console.log(info);\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (info.init) {\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "        var proj: Project = projects[info.path];\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 32,
                "cwe": [
                  "CWE-1321"
                ]
              }
            },
            {
              "id": "java/HardcodedPassword",
              "name": "HardcodedPassword",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n## Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "HardcodedPassword",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/winstonli/writelatex-git-bridge/commit/1117c70f31cee7d9a84c565c143f353d8bbab19e?diff=split#diff-16d090e60dcd386546c2164ae454bd356cbf326d715a66796582e8c003d8af10L-1",
                    "lines": [
                      {
                        "line": "    public static void setBasicAuth(String username, String password) {\n",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "        USERNAME = username;\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "        PASSWORD = password;\n",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "    public static void setBaseURL(String baseURL) {\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "        BASE_URL = baseURL;\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/clowee/OpenSZZ-Cloud-Native/commit/ee429faf9d384074cf33515eda2a52e4e85ef061?diff=split#diff-a125fdf9d37b8daa4d9f0a7a46aedd416a80a49936bdee4bae40db3f3eef22deL-1",
                    "lines": [
                      {
                        "line": "final String username = \"noreply.openszz@gmail.com\";\n",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "final String password = \"Aa30011992\";\n",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "final String username = System.getenv(\"EMAIL\");\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "final String password = System.getenv(\"PWD\");\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/ScaleSec/vulnado/commit/d4666a783ce3e1edcccdecf44cffcd33efbc18f8?diff=split#diff-0a97815f45976f1bd8887fa62f7671e9f85344c4efeeeef612b6d219e86e50b1L-1",
                    "lines": [
                      {
                        "line": "return DriverManager.getConnection(\"jdbc:postgresql://localhost:5432/vulnado\",\n",
                        "lineNumber": 13,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        \"postgres\", \"vulnado\");\n",
                        "lineNumber": 14,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String url = new StringBuilder()\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      },
                      {
                        "line": "        .append(\"jdbc:postgresql://\")\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "        .append(System.getenv(\"PGHOST\"))\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "        .append(\"/\")\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "        .append(System.getenv(\"PGDATABASE\")).toString();\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "return DriverManager.getConnection(url,\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "        System.getenv(\"PGUSER\"), System.getenv(\"PGPASSWORD\"));\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 84,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            },
            {
              "id": "java/SpringCSRF",
              "name": "SpringCSRF",
              "shortDescription": {
                "text": "Spring Cross-Site Request Forgery (CSRF)"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nWhen a web server is designed to receive a request from a client without any mechanism for verifying that it was intentionally sent, then it might be possible for an attacker to trick a client into making an unintentional request to the web server which will be treated as an authentic request. This can be done via a URL, image load, XMLHttpRequest, etc. and can result in exposure of data or unintended code execution.\n\n## Best practices for prevention\n* Use a vetted library or framework which has anti-CSRF packages that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Consider including Spring Security library within your application.\n\n\n## References\n* [Spring Security Docs](https://docs.spring.io/spring-security/site/docs/5.0.x/reference/html/csrf.html)\n* [A Guide to CSRF Protection in Spring Security](https://www.baeldung.com/spring-security-csrf)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "SpringCSRF",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-352"
                ]
              }
            },
            {
              "id": "java/InsecureDefaultAesCipher",
              "name": "InsecureDefaultAesCipher",
              "shortDescription": {
                "text": "Use of a Broken or Risky Cryptographic Algorithm"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nWhen sensitive information is transmitted with weak encryption, attackers are potentially able to intercept the information and decrypt it, with a wide range of negative consequences. This includes accessing code or content they are not authorized to view and changing or taking down a site or app, often with a demand for ransom. Every developer is aware of the risks of transmitting sensitive information in plain text. Yet many still use outdated or inferior cryptographic methods to protect information under their control. As cryptographic methods grow stronger with time, code must be updated to incorporate more modern and secure cryptography.\n\n## Best practices for prevention\n* Avoid using DES, and use AES (in a secure mode, such as Galois/Counter Mode) or another strong encryption algorithm instead.\n* Be aware of outdated hashes, such as MD5 and SHA1 (along with many others); recognize and implement current cryptographic standards instead.\n* Never use custom or DIY security and cryptographic methods; instead, use methods that are part of an accepted library or framework.\n* Ensure that code dealing with cryptographic methods is highly modular and can be easily replaced as security standards change.\n* Increase developer awareness of proper encryption key management and protection to ensure best practices throughout the application.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "InsecureDefaultAesCipher",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/onap/so/commit/6fa3d2b80d2384b830e3231fe69a8daf7884a35e?diff=split#diff-7bb705668b97050164d764bf182913306c10ce7bf21268620854a1af7c0137baL-1",
                    "lines": [
                      {
                        "line": "    private static final int GCM_TAG_LENGTH = 16;\n",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "    private static final int GCM_IV_LENGTH = 12;\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "    private static final String AES_GCM_NO_PADDING = \"AES/GCM/NoPadding\";\n",
                        "lineNumber": 46,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 47,
                        "lineChange": "added"
                      },
                      {
                        "line": "    /**\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "     * encrypt a value and generate a keyfile\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "     * if the keyfile is not found then a new one is created\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "     * \n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "     * @throws GeneralSecurityException\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "     */\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public static String encrypt (String value, String keyString) throws GeneralSecurityException {\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "        SecretKeySpec sks = getSecretKeySpec (keyString);\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Cipher cipher = Cipher.getInstance (CryptoUtils.AES);\n",
                        "lineNumber": 52,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        cipher.init (Cipher.ENCRYPT_MODE, sks, cipher.getParameters ());\n",
                        "lineNumber": 53,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        byte[] encrypted = cipher.doFinal (value.getBytes ());\n",
                        "lineNumber": 54,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        return byteArrayToHexString (encrypted);\n",
                        "lineNumber": 55,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        Cipher cipher = Cipher.getInstance(AES_GCM_NO_PADDING);\n",
                        "lineNumber": 56,
                        "lineChange": "added"
                      },
                      {
                        "line": "        byte[] initVector = new byte[GCM_IV_LENGTH];\n",
                        "lineNumber": 57,
                        "lineChange": "added"
                      },
                      {
                        "line": "        (new SecureRandom()).nextBytes(initVector);\n",
                        "lineNumber": 58,
                        "lineChange": "added"
                      },
                      {
                        "line": "        GCMParameterSpec spec = new GCMParameterSpec(GCM_TAG_LENGTH * java.lang.Byte.SIZE, initVector);\n",
                        "lineNumber": 59,
                        "lineChange": "added"
                      },
                      {
                        "line": "        cipher.init(Cipher.ENCRYPT_MODE, sks, spec);\n",
                        "lineNumber": 60,
                        "lineChange": "added"
                      },
                      {
                        "line": "        byte[] encoded = value.getBytes(java.nio.charset.StandardCharsets.UTF_8);\n",
                        "lineNumber": 61,
                        "lineChange": "added"
                      },
                      {
                        "line": "        byte[] cipherText = new byte[initVector.length + cipher.getOutputSize(encoded.length)];\n",
                        "lineNumber": 62,
                        "lineChange": "added"
                      },
                      {
                        "line": "        System.arraycopy(initVector, 0, cipherText, 0, initVector.length);\n",
                        "lineNumber": 63,
                        "lineChange": "added"
                      },
                      {
                        "line": "        cipher.doFinal(encoded, 0, encoded.length, cipherText, initVector.length);\n",
                        "lineNumber": 64,
                        "lineChange": "added"
                      },
                      {
                        "line": "        return byteArrayToHexString(cipherText);\n",
                        "lineNumber": 65,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Kieaer/Essentials/commit/94b20cb6e2228771886d17fcd448f2c3fdf85682?diff=split#diff-29d43d0fc4f6de5274306cc92230811a2e15d5ba7a796b112df8ecc1c442951cL-1",
                    "lines": [
                      {
                        "line": "cipher = Cipher.getInstance(\"AES\");\n",
                        "lineNumber": 54,
                        "lineChange": "removed"
                      },
                      {
                        "line": "cipher = Cipher.getInstance(\"AES/GCM/NoPadding\");\n",
                        "lineNumber": 54,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/surespot/android/commit/1e71e20b9c583b21bd31d7d86050c31d48a7df53?diff=split#diff-7e8f41b10ef7ba36f068ff36a384984f0dc0f5e8f0db95aab17501a1b926414bL-1",
                    "lines": [
                      {
                        "line": "import javax.crypto.spec.GCMParameterSpec;\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "import javax.crypto.spec.IvParameterSpec;\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "import javax.crypto.spec.SecretKeySpec;\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "/**\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": " * Created by owen on 8/24/15.\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": " */\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "public class KeyStoreEncryptionController {\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "    private static SecureRandom mSecureRandom = new SurespotSecureRandom();\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public static byte[] simpleEncrypt(SecretKey key, String input) throws InvalidKeyException {\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "        //final byte[] iv = new byte[IV_LENGTH];\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "        //mSecureRandom.nextBytes(iv);\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "      //  final IvParameterSpec ivParams = new IvParameterSpec(iv);\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try {\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return aesEncrypt(input, key, null);\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "        } catch (BadPaddingException | IllegalBlockSizeException | NoSuchPaddingException | NoSuchAlgorithmException | InvalidAlgorithmParameterException e) {\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "            e.printStackTrace();\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "        } catch (ShortBufferException e) {\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "            e.printStackTrace();\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return null;\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public static byte[] aesEncrypt(String originalString, SecretKey key, byte[] iv) throws BadPaddingException, IllegalBlockSizeException, NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, InvalidAlgorithmParameterException, ShortBufferException {\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "        byte[] original = new byte[0];\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try {\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "            String s = android.util.Base64.encodeToString(originalString.getBytes(\"UTF8\"), Base64.NO_WRAP);\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "            original = s.getBytes(\"UTF8\");\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "        } catch (UnsupportedEncodingException e) {\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "            e.printStackTrace();\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Cipher cipher = null;\n",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if(iv != null)\n",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "        {\n",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "            cipher = Cipher.getInstance(\"AES/ECB/NoPadding\");///CBC/PKCS7Padding\");//PKCS7Padding\");\n",
                        "lineNumber": 52,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            cipher.init(Cipher.ENCRYPT_MODE, key, new IvParameterSpec(iv));\n",
                        "lineNumber": 53,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            cipher = Cipher.getInstance(\"AES/GCM/NoPadding\");///CBC/PKCS7Padding\");//PKCS7Padding\");\n",
                        "lineNumber": 60,
                        "lineChange": "added"
                      },
                      {
                        "line": "            cipher.init(Cipher.ENCRYPT_MODE, key, new GCMParameterSpec(128,iv));\n",
                        "lineNumber": 61,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 5,
                "cwe": [
                  "CWE-327"
                ]
              }
            },
            {
              "id": "java/NoHardcodedCredentials/test",
              "name": "NoHardcodedCredentials/test",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n## Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "NoHardcodedCredentials",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-798"
                ]
              }
            },
            {
              "id": "java/HardcodedSecret/test",
              "name": "HardcodedSecret/test",
              "shortDescription": {
                "text": "Hardcoded Secret"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n## Best practices for prevention\n- Never hard code security-related constants; use symbolic names or configuration lookup files.\n- As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n- Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "HardcodedSecret",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/aerogear-attic/aerogear-simplepush-server/commit/bb4cf06c590f70475f56de7ae0eae732eac8f379?diff=split#diff-e4415092a1eaff762c4670199db1bbb113813b0335c8a41b21f3b1a363880ff6L-1",
                    "lines": [
                      {
                        "line": "final PBEKeySpec keySpec = new PBEKeySpec(seed.toCharArray(), SALT, 65536, 128);\n",
                        "lineNumber": 112,
                        "lineChange": "removed"
                      },
                      {
                        "line": "final PBEKeySpec keySpec = new PBEKeySpec(seed.toCharArray(), salt(8), 65536, 128);\n",
                        "lineNumber": 109,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/qinyou/my_curd/commit/37f84f898b75948532d38faa1cd92d193d0df76f?diff=split#diff-d9f7bc7636c0ad9c54abd4d95c443411b00796f4fbc660c88fcde0c84ed78640L-1",
                    "lines": [
                      {
                        "line": "    private static final String ISS = \"my_curd\";         // 签名 签发者\n",
                        "lineNumber": 22,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    private static final String SECRET = \"AAAABBBCCC\";   // 签名 密钥\n",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    private static final Long EXPIRATION_TIME_VALUE = 60L * 60 * 24 * 30; // 30 天有效期 (单位为秒)\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    private static final String ISS ;                 // 签名 签发者\n",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "    private static final String SECRET ;              // 签名 密钥\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "    private static final Long EXPIRATION_TIME_VALUE ; // 过期时间 (单位为秒)\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "    static{\n",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "        ISS = AppConfig.configProp.get(\"jwt.iss\");\n",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "        SECRET = AppConfig.configProp.get(\"jwt.secret\");\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "        EXPIRATION_TIME_VALUE = 60L * 60 * 24 * AppConfig.configProp.getInt(\"jwt.exp\");\n",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "    /**\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "     * 生成签名\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "     *\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "     * @param username       用户名\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "     * @param roleList       角色集合\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "     * @param permissionList 权限集合\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "     * @return\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "     */\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public static String buildToken(String username, List<String> roleList, List<String> permissionList) {\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "        // HS256签名算法\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "        SignatureAlgorithm signatureAlgorithm = SignatureAlgorithm.HS256;\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "        byte[] apiKeySecretBytes = DatatypeConverter.parseBase64Binary(SECRET);\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Key signingKey = new SecretKeySpec(apiKeySecretBytes, signatureAlgorithm.getJcaName());\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/bulktrade/SMSC/commit/a28a9bf2a975e27ad7ccecce47588fe1a57659f3?diff=split#diff-d61a5e31effad4932c402c2638bba72d6d72eda975f375bf21ce055846a911d9L-1",
                    "lines": [
                      {
                        "line": "Key key = new SecretKeySpec(KEY, \"AES\");\n",
                        "lineNumber": 16,
                        "lineChange": "removed"
                      },
                      {
                        "line": "Key key = new SecretKeySpec(secretKey.getBytes(), \"AES\");\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 19,
                "cwe": [
                  "CWE-547"
                ]
              }
            },
            {
              "id": "java/InsecureSecret/test",
              "name": "InsecureSecret/test",
              "shortDescription": {
                "text": "Use of Insufficiently Random Values"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nComputer security relies on random numbers for many things: generating secure, confidential session keys; hashing password data; encryption for transmitting sensitive data, and more. It's easy to understand why. If session keys, for example, were generated sequentially, attackers would be able to guess these easily and then hijack legitimate user sessions. Similarly, if encryption techniques used easy-to-guess numbers, attackers could use brute-force attacks to gain unauthorized access.\n\nIn reality, since computers cannot generate truly random numbers, they use \"pseudorandom\" numbers instead, generated using an algorithm that is \"seeded\" in a variety of ways to produce highly variable values in a random-seeming order, making them very hard-in theory-for attackers to guess. However, if developers inadvertently make use of a weak random algorithm, attackers may be able to discover the algorithm, seed, or pattern, ultimately unlocking access to commands or sensitive data, which can then be held for ransom or sold.\n\n## Best practices for prevention\n* Avoid using weak pseudorandom number generators (PRNGs), such as statistical PRNGs. Instead, choose a cryptographically secure PRNG.\n* Avoid using predictable seed values, such as user ID or server start time. Instead, use a seed that is itself pseudorandom, such as one taken from an external hardware source.\n* Use standard, accepted security algorithms and libraries rather than taking a DIY approach and creating custom code that may contain inherent weaknesses or overlook critical flaws.\n* Use static analysis tools to identify potential instances of this weakness in code and then ensure good test coverage with appropriate white-box testing.\n* Educate developers about the importance of entropy in security systems development, and consider adopting tools that are FIPS 140-2 compliant.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "InsecureSecret",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/adrian/upm-swing/commit/e27b794a3ac1a4e25a8f03b436f4e72430cce57b?diff=split#diff-a692680a02fef754cebcdb780e87d9f352c7626e8a5331b2325b6650c130db49L-1",
                    "lines": [
                      {
                        "line": "import java.util.Random;\r\n",
                        "lineNumber": 34,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 35,
                        "lineChange": "removed"
                      },
                      {
                        "line": "import java.security.SecureRandom;\r\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "import javax.crypto.IllegalBlockSizeException;\r\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "import javax.crypto.BadPaddingException;\r\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "import java.io.File;\r\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "import java.io.FileNotFoundException;\r\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "public class EncryptionService {\r\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tprivate Cipher encryptionCipher; \r\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tprivate Cipher decryptionCipher;\r\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tprivate byte[] salt;\r\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tpublic static final int SALT_LENGTH = 8;\r\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t//Would prefer if I could use AES or Twofish here. Sun doesn't \r\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t//distribute one with their JRE. Might want to look into\r\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t//http://www.bouncycastle.org\r\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tprivate static final String algorithm = \"PBEWithMD5AndDES\";\r\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tprivate static final String randomAlgorithm = \"SHA1PRNG\";\r\n",
                        "lineNumber": 53,
                        "lineChange": "added"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\r\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tpublic EncryptionService(char[] password) throws GeneralSecurityException {\r\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t    //Generate a random salt\r\n",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t    Random saltGen = new Random();\r\n",
                        "lineNumber": 58,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t    SecureRandom saltGen = SecureRandom.getInstance(randomAlgorithm);\r\n",
                        "lineNumber": 58,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t    byte pSalt[] = new byte[SALT_LENGTH];\r\n",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t    saltGen.nextBytes(pSalt);\r\n",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t    init(password, pSalt);\r\n",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t}\r\n",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\r\n",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\r\n",
                        "lineNumber": 65,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tpublic EncryptionService(char[] password, byte[] salt) throws GeneralSecurityException {\r\n",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tinit(password, salt);\r\n",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t}\r\n",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\r\n",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\r\n",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tprivate void init(char[] password, byte[] salt) throws GeneralSecurityException {\r\n",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\r\n",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tPBEKeySpec pbeKeySpec;\r\n",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t    PBEParameterSpec pbeParamSpec;\r\n",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t    SecretKeyFactory keyFac;\r\n",
                        "lineNumber": 75,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t    this.salt = salt;\r\n",
                        "lineNumber": 77,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t    int count = 20;\r\n",
                        "lineNumber": 78,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 79,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t    pbeParamSpec = new PBEParameterSpec(salt, count);\r\n",
                        "lineNumber": 80,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/iamMehedi/Secured-Preference-Store/commit/7a497d4dfff92ecab67c5a2f9bb16360da08d913?diff=split#diff-de40959904a796181a2efe5c3901765c74a125a6aa36dadb150b5712fbea711bL-1",
                    "lines": [
                      {
                        "line": "        Random rng = new Random();\n",
                        "lineNumber": 158,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        SecureRandom rng = new SecureRandom();\n",
                        "lineNumber": 166,
                        "lineChange": "added"
                      },
                      {
                        "line": "        rng.nextBytes(iv);\n",
                        "lineNumber": 167,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return iv;\n",
                        "lineNumber": 168,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 169,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 170,
                        "lineChange": "none"
                      },
                      {
                        "line": "    @TargetApi(Build.VERSION_CODES.KITKAT)\n",
                        "lineNumber": 171,
                        "lineChange": "none"
                      },
                      {
                        "line": "    byte[] encryptAES(byte[] bytes, byte[] IV) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidAlgorithmParameterException, InvalidKeyException, BadPaddingException, IllegalBlockSizeException, UnsupportedEncodingException {\n",
                        "lineNumber": 172,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Cipher cipher = Cipher.getInstance(AES_CIPHER);\n",
                        "lineNumber": 173,
                        "lineChange": "none"
                      },
                      {
                        "line": "        cipher.init(Cipher.ENCRYPT_MODE, aesKey, new GCMParameterSpec(GCM_TAG_LENGTH, IV));\n",
                        "lineNumber": 174,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/aionnetwork/aion_api/commit/6e5dae82db3a09ec6f0d793db4786a2d1bc82378?diff=split#diff-c8bd572e4ae7988eb491b292debae15d99da6286d384ad9b5b17081d9d08f85fL-1",
                    "lines": [
                      {
                        "line": "import java.security.*;\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "import java.util.Arrays;\n",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "import java.util.Random;\n",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "import java.util.UUID;\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "import javax.crypto.BadPaddingException;\n",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "import javax.crypto.Cipher;\n",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "import javax.crypto.IllegalBlockSizeException;\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "import javax.crypto.NoSuchPaddingException;\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "import javax.crypto.SecretKeyFactory;\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "import javax.crypto.spec.IvParameterSpec;\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "import javax.crypto.spec.PBEKeySpec;\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      },
                      {
                        "line": "import javax.crypto.spec.SecretKeySpec;\n",
                        "lineNumber": 37,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 38,
                        "lineChange": "added"
                      },
                      {
                        "line": "import org.aion.crypto.ECKey;\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "import org.aion.crypto.ECKeyFac;\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "import org.aion.crypto.HashUtil;\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "import org.spongycastle.crypto.generators.SCrypt;\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "import org.spongycastle.util.encoders.Hex;\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "import javax.crypto.*;\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "import javax.crypto.spec.IvParameterSpec;\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "import javax.crypto.spec.PBEKeySpec;\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "import javax.crypto.spec.SecretKeySpec;\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "import java.security.GeneralSecurityException;\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "import java.security.InvalidAlgorithmParameterException;\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "import java.security.InvalidKeyException;\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "import java.security.NoSuchAlgorithmException;\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "import java.util.Arrays;\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "import java.util.Random;\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "import java.util.UUID;\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "public class KeystoreFormat {\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public byte[] toKeystore(final ECKey key, String password) {\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try {\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "            // n,r,p = 2^18, 8, 1 uses 256MB memory and approx 1s CPU time on a\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "            // modern CPU.\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "            // final int ScryptN = ((Double) Math.pow(10.0, 18.0)).intValue();\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "            final int ScryptN = 262144;\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "            final int ScryptR = 8;\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "            final int ScryptP = 1;\n",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "            final int ScryptDklen = 32;\n",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "            // salt\n",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "            final byte[] salt = generateRandomBytes(32);\n",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "            final byte[] derivedKey = scrypt(password.getBytes(), salt, ScryptN, ScryptR, ScryptP, ScryptDklen);\n",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "            // 128-bit initialisation vector for the cipher (16 bytes)\n",
                        "lineNumber": 65,
                        "lineChange": "none"
                      },
                      {
                        "line": "            final byte[] iv = generateRandomBytes(16);\n",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "            final byte[] privateKey = key.getPrivKeyBytes();\n",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "            final byte[] encryptKey = Arrays.copyOfRange(derivedKey, 0, 16);\n",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "            final byte[] cipherText = encryptAes(iv, encryptKey, privateKey);\n",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "            final byte[] mac = HashUtil.h256(concat(Arrays.copyOfRange(derivedKey, 16, 32), cipherText));\n",
                        "lineNumber": 65,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "            final KeystoreItem keystore = new KeystoreItem();\n",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "            keystore.address = Hex.toHexString(key.getAddress());\n",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "            keystore.id = UUID.randomUUID().toString();\n",
                        "lineNumber": 75,
                        "lineChange": "none"
                      },
                      {
                        "line": "            keystore.version = 3;\n",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "            keystore.crypto = new KeystoreCrypto();\n",
                        "lineNumber": 77,
                        "lineChange": "none"
                      },
                      {
                        "line": "            keystore.crypto.setKdf(\"scrypt\");\n",
                        "lineNumber": 78,
                        "lineChange": "none"
                      },
                      {
                        "line": "            keystore.crypto.setMac(Hex.toHexString(mac));\n",
                        "lineNumber": 79,
                        "lineChange": "none"
                      },
                      {
                        "line": "            keystore.crypto.setCipher(\"aes-128-ctr\");\n",
                        "lineNumber": 80,
                        "lineChange": "none"
                      },
                      {
                        "line": "            keystore.crypto.setCipherText(Hex.toHexString(cipherText));\n",
                        "lineNumber": 81,
                        "lineChange": "none"
                      },
                      {
                        "line": "            keystore.crypto.setCipherParams(new CipherParams());\n",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "            keystore.crypto.getCipherParams().setIv(Hex.toHexString(iv));\n",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "            keystore.crypto.setKdfParams(new KdfParams());\n",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "            keystore.crypto.getKdfParams().setN(ScryptN);\n",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "            keystore.crypto.getKdfParams().setR(ScryptR);\n",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "            keystore.crypto.getKdfParams().setP(ScryptP);\n",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "            keystore.crypto.getKdfParams().setDklen(ScryptDklen);\n",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "            keystore.crypto.getKdfParams().setSalt(Hex.toHexString(salt));\n",
                        "lineNumber": 89,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return keystore.toRlp();\n",
                        "lineNumber": 90,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 91,
                        "lineChange": "none"
                      },
                      {
                        "line": "        } catch (Exception e) {\n",
                        "lineNumber": 92,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 93,
                        "lineChange": "none"
                      },
                      {
                        "line": "            throw new RuntimeException(\"Problem storing key. Message: \" + e.getMessage(), e);\n",
                        "lineNumber": 94,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 96,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 97,
                        "lineChange": "none"
                      },
                      {
                        "line": "    private byte[] generateRandomBytes(int size) {\n",
                        "lineNumber": 98,
                        "lineChange": "none"
                      },
                      {
                        "line": "        final byte[] bytes = new byte[size];\n",
                        "lineNumber": 99,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Random random = new Random();\n",
                        "lineNumber": 94,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        Random random = new SecureRandom();\n",
                        "lineNumber": 100,
                        "lineChange": "added"
                      },
                      {
                        "line": "        random.nextBytes(bytes);\n",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return bytes;\n",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 104,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public static ECKey fromKeystore(final byte[] content, final String password) {\n",
                        "lineNumber": 105,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 106,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try {\n",
                        "lineNumber": 107,
                        "lineChange": "none"
                      },
                      {
                        "line": "            final KeystoreItem keystore = KeystoreItem.parse(content);\n",
                        "lineNumber": 108,
                        "lineChange": "none"
                      },
                      {
                        "line": "            final byte[] cipherKey;\n",
                        "lineNumber": 109,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 110,
                        "lineChange": "none"
                      },
                      {
                        "line": "            if (keystore.version != 3) {\n",
                        "lineNumber": 111,
                        "lineChange": "none"
                      },
                      {
                        "line": "                throw new RuntimeException(\"Keystore version 3 only supported.\");\n",
                        "lineNumber": 112,
                        "lineChange": "none"
                      },
                      {
                        "line": "            }\n",
                        "lineNumber": 113,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 114,
                        "lineChange": "none"
                      },
                      {
                        "line": "            switch (keystore.getKeystoreCrypto().getKdf()) {\n",
                        "lineNumber": 115,
                        "lineChange": "none"
                      },
                      {
                        "line": "                case \"pbkdf2\":\n",
                        "lineNumber": 116,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    cipherKey = checkMacSha3(keystore, password);\n",
                        "lineNumber": 117,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    break;\n",
                        "lineNumber": 118,
                        "lineChange": "none"
                      },
                      {
                        "line": "                case \"scrypt\":\n",
                        "lineNumber": 119,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    cipherKey = checkMacScrypt(keystore, password);\n",
                        "lineNumber": 120,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    break;\n",
                        "lineNumber": 121,
                        "lineChange": "none"
                      },
                      {
                        "line": "                default:\n",
                        "lineNumber": 122,
                        "lineChange": "none"
                      },
                      {
                        "line": "                throw new RuntimeException(\"non valid algorithm \" + keystore.getKeystoreCrypto().getCipher());\n",
                        "lineNumber": 117,
                        "lineChange": "none"
                      },
                      {
                        "line": "            }\n",
                        "lineNumber": 125,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 126,
                        "lineChange": "none"
                      },
                      {
                        "line": "            byte[] privateKey = decryptAes(Hex.decode(keystore.getKeystoreCrypto().getCipherParams().getIv()),\n",
                        "lineNumber": 120,
                        "lineChange": "none"
                      },
                      {
                        "line": "                cipherKey, Hex.decode(keystore.getKeystoreCrypto().getCipherText()));\n",
                        "lineNumber": 129,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return ECKeyFac.inst().create().fromPrivate(privateKey);\n",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "        } catch (Exception e) {\n",
                        "lineNumber": 131,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return null;\n",
                        "lineNumber": 132,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 133,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 134,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 135,
                        "lineChange": "none"
                      },
                      {
                        "line": "    private static byte[] decryptAes(byte[] iv, byte[] keyBytes, byte[] cipherText)\n",
                        "lineNumber": 136,
                        "lineChange": "none"
                      },
                      {
                        "line": "        throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidAlgorithmParameterException,\n",
                        "lineNumber": 137,
                        "lineChange": "none"
                      },
                      {
                        "line": "        InvalidKeyException, BadPaddingException, IllegalBlockSizeException {\n",
                        "lineNumber": 138,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return processAes(iv, keyBytes, cipherText, Cipher.DECRYPT_MODE);\n",
                        "lineNumber": 139,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 140,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 141,
                        "lineChange": "none"
                      },
                      {
                        "line": "    private byte[] encryptAes(byte[] iv, byte[] keyBytes, byte[] cipherText)\n",
                        "lineNumber": 142,
                        "lineChange": "none"
                      },
                      {
                        "line": "        throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidAlgorithmParameterException,\n",
                        "lineNumber": 143,
                        "lineChange": "none"
                      },
                      {
                        "line": "        InvalidKeyException, BadPaddingException, IllegalBlockSizeException {\n",
                        "lineNumber": 144,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return processAes(iv, keyBytes, cipherText, Cipher.ENCRYPT_MODE);\n",
                        "lineNumber": 145,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 146,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 147,
                        "lineChange": "none"
                      },
                      {
                        "line": "    private static byte[] processAes(byte[] iv, byte[] keyBytes, byte[] cipherText, int encryptMode)\n",
                        "lineNumber": 148,
                        "lineChange": "none"
                      },
                      {
                        "line": "        throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException,\n",
                        "lineNumber": 149,
                        "lineChange": "none"
                      },
                      {
                        "line": "        InvalidAlgorithmParameterException, IllegalBlockSizeException, BadPaddingException {\n",
                        "lineNumber": 150,
                        "lineChange": "none"
                      },
                      {
                        "line": "        SecretKeySpec key = new SecretKeySpec(keyBytes, \"AES\");\n",
                        "lineNumber": 151,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 4,
                "cwe": [
                  "CWE-330"
                ]
              }
            },
            {
              "id": "java/NonCryptoHardcodedSecret/test",
              "name": "NonCryptoHardcodedSecret/test",
              "shortDescription": {
                "text": "Use of Hardcoded, Security-relevant Constants"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n## Best practices for prevention\n* Never hard code security-related constants; use symbolic names or configuration lookup files.\n* As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n* Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "NonCryptoHardcodedSecret",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/shuxianfeng/movision/commit/5ee84a05bac382bea508e6a42da3330b1ccf4371?diff=split#diff-bdd70437062ccb0d3735e4c014d182875ef0c029af6c9c8c3e2a42e4136d410fL-1",
                    "lines": [
                      {
                        "line": "        String accessKeyId = \"LTAITI0FOKgMZQty\";\n",
                        "lineNumber": 15,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        String accessKeySecret = \"5x12H1yASg31OlPanhTCg0z0PzNr3t\";\n",
                        "lineNumber": 16,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        String accessKeyId = PropertiesLoader.getValue(\"access.key.id\");\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "        String accessKeySecret = PropertiesLoader.getValue(\"access.key.secret\");\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/xiexianbin/UEditor-for-aliyun-OSS/commit/324d6fd48c4c99d43ac30545ba30f9736b505c61?diff=split#diff-4d95e836c61d2ea3ffdda0f95df204e45f3b74f5ba58cb53c85cdb5114efa29fL-1",
                    "lines": [
                      {
                        "line": "static {\r\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "String OSSKeyPath = SystemUtil.getProjectClassesPath() + \"OSSKey.properties\";\r\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "// 生成文件输入流\r\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "FileInputStream inpf = null;\r\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "try {\r\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "    inpf = new FileInputStream(new File(OSSKeyPath));\r\n",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "    OSSKeyProperties.load(inpf);\r\n",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "    useStatus = (Boolean) OSSKeyProperties.get(\"useStatus\");\r\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "    key = (String) OSSKeyProperties.get(\"key\");\r\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "    secret = (String) OSSKeyProperties.get(\"secret\");\r\n",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "    endPoint = (String) OSSKeyProperties.get(\"endPoint\");\r\n",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "} catch (Exception e) {\r\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "    e.printStackTrace();\r\n",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "}\r\n",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "}\r\n",
                        "lineNumber": 31,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/tronprotocol/java-tron/commit/84148c19e3d15f344fc164913be5bee478c1f637?diff=split#diff-9ff136527c21b19349c00267ff04c85b76dae23a2d28bc0f17a7c5b2eac78565L-1",
                    "lines": [
                      {
                        "line": "private String ownerAddress = \"TDZdB4ogHSgU1CGrun8WXaMb2QDDkvAKQm\";\n",
                        "lineNumber": 17,
                        "lineChange": "removed"
                      },
                      {
                        "line": "private String ownerAddress = Configuration.getByPath(\"stress.conf\").getString(\"address.exchangeOwnerAddress\");\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "private long exchangeID = commonexchangeid;\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "private long quant = 1000000L;\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "private String privateKey = \"549c7797b351e48ab1c6bb5857138b418012d97526fc2acba022357d49c93ac0\";\n",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "private String privateKey = Configuration.getByPath(\"stress.conf\").getString(\"privateKey.exchangeOwnerKey\");\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 52,
                "cwe": [
                  "CWE-547"
                ]
              }
            },
            {
              "id": "java/HttpResponseSplitting",
              "name": "HttpResponseSplitting",
              "shortDescription": {
                "text": "Improper Neutralization of CRLF Sequences in HTTP Headers"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nCRLF is an abbreviation for the terms \"carriage return\" and \"line feed.\" These two special characters are a legacy of old-fashioned printing terminals used in the early days of computing. However, today both are still often used as delimiters between data. When this weakness exists, CR and LF characters (represented respectively in code as `\\r` and `\\n`) are permitted to be present in HTTP headers, usually due to poor planning for data handling during development.\n\nCRLF sequences in HTTP headers are known as \"response splitting\" because these characters effectively split the response from the browser, causing the single line to be accepted as multiple lines by the server (for example, the single line First Line\\r\\nSecond Line would be accepted by the server as two lines of input).\n\nWhile response splitting in itself is not an attack, and can be completely harmless unless exploited, its presence could lead to an injection attack (known as CRLF injection) and a variety of unpredictable and potentially dangerous behavior. This weakness can be exploited in a number of ways, such as page hijacking or cross-user defacement, in which an attacker displays false site content and/or captures confidential information such as credentials. It can even lead to cross-site scripting attacks, in which attackers can cause malicious code to execute in the user's browser.\n\nFor example, the following code is vulnerable:\n\n```\nprotected void doGet(HttpServletRequest request, HttpServletResponse response) {\n  Cookie cookie = new Cookie(\"name\", request.getParameter(\"name\"));\n  response.addCookie(cookie);\n}\n```\n\nbecause the user may provide a name parameter with a value like `XYZ\\r\\nHTTP/1.1 200 OK\\nATTACKER CONTROLLED`. In this case, they will produce a second HTTP response:\n\n```\nHTTP/1.1 200 OK\nATTACKER CONTROLLED\n```\n\nA possible fix is to remove all non-alphanumerical characters:\n\n```\nprotected void doGet(HttpServletRequest request, HttpServletResponse response) {\n  String name = request.getParameter(\"name\")\n      .replaceAll(\"[^a-zA-Z ]\", \"\");\n  Cookie cookie = new Cookie(\"name\", name);\n  response.addCookie(cookie);\n}\n```\n\nIn this case, the attacker would be unable to produce a second HTTP response.\n\n\n## Best practices for prevention\n* Assume all input is potentially malicious. Define acceptable responses wherever possible, and if not possible, encode CR and LF characters to prevent header splitting.\n* Replace both `\\r` (carriage return) and `\\n` (line feed) with \"\" (empty string)-many platforms handle these characters interchangeably so the weakness may still exist if one of the two is permitted.\nFollow best practices and strip all other special characters (\", /, \\, ;, etc., as well as spaces) wherever possible.\nBe sure to sanitize special characters in both directions-from the browser to the server and also in data sent back to the browser.\nIdeally, adopt current development resources, such as languages and libraries, that block CR and LF injection in headers.\nBe vigilant with all input types that could potentially be tampered with or modified at the user end (intentionally or unintentionally), which could lead to injection attacks. These include GET, POST, cookies, and other HTTP headers.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "HttpResponseSplitting",
                  "Security",
                  "SourceServer",
                  "SourceCookie",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/playframework/play1/commit/c92abeb5001de4b51e10cc1204a390a152dd17f9?diff=split#diff-b41f93b234c340ad9986e88f65237c8ac4eee80b862dc3856f5ecb052112fb51L-1",
                    "lines": [
                      {
                        "line": "encoder.addCookie(c);\n",
                        "lineNumber": 351,
                        "lineChange": "removed"
                      },
                      {
                        "line": "nettyResponse.addHeader(SET_COOKIE, encoder.encode());\n",
                        "lineNumber": 352,
                        "lineChange": "removed"
                      },
                      {
                        "line": "nettyResponse.headers().add(SET_COOKIE, ServerCookieEncoder.STRICT.encode(c));\n",
                        "lineNumber": 362,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/KTHse/webtex/commit/55e3c21bdee3200cdaf58a6ea033a381e8c27252?diff=split#diff-4ffd4bea4121d3e0b9e22262d415a0092f5ae68a9ea81a8f6403cc930b7deec6L-1",
                    "lines": [
                      {
                        "line": "    private String encodeURIComponent (String unencoded) {\n",
                        "lineNumber": 159,
                        "lineChange": "added"
                      },
                      {
                        "line": "    \ttry {\n",
                        "lineNumber": 160,
                        "lineChange": "added"
                      },
                      {
                        "line": "    \t\tString escaped = unencoded.replace(\"\\\\\",  \"\\\\\\\\\")\n",
                        "lineNumber": 161,
                        "lineChange": "added"
                      },
                      {
                        "line": "    \t\t\t\t.replaceAll(\"(\\\\r|\\\\n)+\", \" \")\n",
                        "lineNumber": 162,
                        "lineChange": "added"
                      },
                      {
                        "line": "    \t\t\t\t.replace(\"'\", \"\\\\'\");\n",
                        "lineNumber": 163,
                        "lineChange": "added"
                      },
                      {
                        "line": "    \t\treturn (String) engine.eval(\"encodeURIComponent('\" + escaped + \"')\");\n",
                        "lineNumber": 164,
                        "lineChange": "added"
                      },
                      {
                        "line": "    \t} catch (ScriptException e) {\n",
                        "lineNumber": 165,
                        "lineChange": "added"
                      },
                      {
                        "line": "    \t\tSystem.out.println(\"Error encoding string: '\" + unencoded + \"': \" + e.getMessage());\n",
                        "lineNumber": 166,
                        "lineChange": "added"
                      },
                      {
                        "line": "    \t\treturn \"\";\n",
                        "lineNumber": 167,
                        "lineChange": "added"
                      },
                      {
                        "line": "    \t}\n",
                        "lineNumber": 168,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 169,
                        "lineChange": "added"
                      },
                      {
                        "line": "    \n",
                        "lineNumber": 170,
                        "lineChange": "added"
                      },
                      {
                        "line": "    private void writeHeaders(HttpServletResponse response, String expression, int resolution) {\n",
                        "lineNumber": 171,
                        "lineChange": "none"
                      },
                      {
                        "line": "        File file = cache.file(expression, resolution);\n",
                        "lineNumber": 172,
                        "lineChange": "none"
                      },
                      {
                        "line": "        String logMessage = cache.logMessage(expression, resolution);\n",
                        "lineNumber": 173,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 174,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if (logMessage == null) {\n",
                        "lineNumber": 175,
                        "lineChange": "none"
                      },
                      {
                        "line": "            response.addHeader(\"X-MathImage-log\", \"OK\");\n",
                        "lineNumber": 176,
                        "lineChange": "none"
                      },
                      {
                        "line": "        } else {\n",
                        "lineNumber": 177,
                        "lineChange": "none"
                      },
                      {
                        "line": "            response.addHeader(\"X-MathImage-log\", logMessage);\n",
                        "lineNumber": 164,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            response.addHeader(\"X-MathImage-log\", encodeURIComponent(logMessage));\n",
                        "lineNumber": 178,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/thm-projects/arsnova-backend/commit/89e32cfb780c5e40e4cbf07f4dcd3fb4bfd979f1?diff=split#diff-d3ba533a52eea865843e214ed943a20e14ba581be384e32e53fbe8e92d737e58L-1",
                    "lines": [
                      {
                        "line": "\t\t\tresponse.addHeader(\"Access-Control-Allow-Origin\", request.getHeader(\"origin\"));\n",
                        "lineNumber": 43,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t\tresponse.addHeader(\"Access-Control-Allow-Origin\", sanitizeOriginUrl(request.getHeader(\"origin\")));\n",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t}\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tfilterChain.doFilter(request, response);\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t}\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 48,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tprivate String sanitizeOriginUrl(String originUrl) {\n",
                        "lineNumber": 49,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\treturn originUrl.replaceAll(\"[\\n\\r]+\",\" \");\n",
                        "lineNumber": 50,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t}\n",
                        "lineNumber": 51,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 44,
                "cwe": [
                  "CWE-113"
                ]
              }
            },
            {
              "id": "java/PT/test",
              "name": "PT/test",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "PT",
                  "Security",
                  "InTest",
                  "SourceNonServer",
                  "SourceResourceAccess",
                  "SourceArchive",
                  "Taint"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/blackducksoftware/synopsys-detect/commit/36555b9322986e9560f241d05f2262c29a17663b?diff=split#diff-0762b4660a948292965002710b58e8fdfe28da3fe4aacdf01a6bac7406a33934L-1",
                    "lines": [
                      {
                        "line": "import java.nio.file.Path;\r\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "import java.util.Enumeration;\r\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "import java.util.zip.ZipEntry;\r\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "import java.util.zip.ZipFile;\r\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "import org.apache.commons.compress.utils.IOUtils;\r\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "public class DetectZipUtil {\r\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public static void unzip(File zip, File dest, Charset charset) throws IOException {\r\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Path destPath = dest.toPath();\r\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try (ZipFile zipFile = new ZipFile(zip, ZipFile.OPEN_READ, charset)) {\r\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "            Enumeration<? extends ZipEntry> entries = zipFile.entries();\r\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "            while (entries.hasMoreElements()) {\r\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "                ZipEntry entry = entries.nextElement();\r\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "                Path entryPath = destPath.resolve(entry.getName());\r\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "                if (!entryPath.normalize().startsWith(dest.toPath()))\r\n",
                        "lineNumber": 48,
                        "lineChange": "added"
                      },
                      {
                        "line": "                    throw new IOException(\"Zip entry contained path traversal\");\r\n",
                        "lineNumber": 49,
                        "lineChange": "added"
                      },
                      {
                        "line": "                if (entry.isDirectory()) {\r\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    Files.createDirectories(entryPath);\r\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "                } else {\r\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    Files.createDirectories(entryPath.getParent());\r\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    try (InputStream in = zipFile.getInputStream(entry)) {\r\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "                        try (OutputStream out = new FileOutputStream(entryPath.toFile())) {\r\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/tingley/globalsight/commit/9e9ea721f67f3a7b7c8d207f34ea549fb4ec52ee?diff=split#diff-10bf7160d01d941d63b0f194ae52f54d3b55ae8e8e33beaa7334783770d39117L-1",
                    "lines": [
                      {
                        "line": " File rootFile = new File(docRoot);\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "  String rootPath = rootFile.getCanonicalPath();\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "  String path = file.getCanonicalPath();\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "  if (!path.startsWith(rootPath)) {\n",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": " \t out.print(\"Failed to get XSL file for reason: Bad pathname.\");\n",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": " \t return;\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "  input =  new BufferedReader(new FileReader(file));\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/OpenRefine/OpenRefine/commit/7f7b71459ca031978c3f8024cb14af13446d6d9c?diff=split#diff-c8321cdc05ebb81f79c44f1f701d1659b3b20baa5d22df0c9ff29cdc5ec7d1a6L-1",
                    "lines": [
                      {
                        "line": "// For CVE-2018-19859, issue #1840\n",
                        "lineNumber": 443,
                        "lineChange": "added"
                      },
                      {
                        "line": "if (!file.toPath().normalize().startsWith(dir.toPath().normalize())) {\n",
                        "lineNumber": 444,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tthrow new IllegalArgumentException(\"Zip archives with files escaping their root directory are not allowed.\");\n",
                        "lineNumber": 445,
                        "lineChange": "added"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 446,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 447,
                        "lineChange": "none"
                      },
                      {
                        "line": "int dot = name.indexOf('.');\n",
                        "lineNumber": 448,
                        "lineChange": "none"
                      },
                      {
                        "line": "String prefix = dot < 0 ? name : name.substring(0, dot);\n",
                        "lineNumber": 449,
                        "lineChange": "none"
                      },
                      {
                        "line": "String suffix = dot < 0 ? \"\" : name.substring(dot);\n",
                        "lineNumber": 450,
                        "lineChange": "none"
                      },
                      {
                        "line": "int index = 2;\n",
                        "lineNumber": 451,
                        "lineChange": "none"
                      },
                      {
                        "line": "while (file.exists()) {\n",
                        "lineNumber": 452,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 49,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "java/HardcodedPassword/test",
              "name": "HardcodedPassword/test",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n## Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "HardcodedPassword",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/winstonli/writelatex-git-bridge/commit/1117c70f31cee7d9a84c565c143f353d8bbab19e?diff=split#diff-16d090e60dcd386546c2164ae454bd356cbf326d715a66796582e8c003d8af10L-1",
                    "lines": [
                      {
                        "line": "    public static void setBasicAuth(String username, String password) {\n",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "        USERNAME = username;\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "        PASSWORD = password;\n",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "    public static void setBaseURL(String baseURL) {\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "        BASE_URL = baseURL;\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/clowee/OpenSZZ-Cloud-Native/commit/ee429faf9d384074cf33515eda2a52e4e85ef061?diff=split#diff-a125fdf9d37b8daa4d9f0a7a46aedd416a80a49936bdee4bae40db3f3eef22deL-1",
                    "lines": [
                      {
                        "line": "final String username = \"noreply.openszz@gmail.com\";\n",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "final String password = \"Aa30011992\";\n",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "final String username = System.getenv(\"EMAIL\");\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "final String password = System.getenv(\"PWD\");\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/ScaleSec/vulnado/commit/d4666a783ce3e1edcccdecf44cffcd33efbc18f8?diff=split#diff-0a97815f45976f1bd8887fa62f7671e9f85344c4efeeeef612b6d219e86e50b1L-1",
                    "lines": [
                      {
                        "line": "return DriverManager.getConnection(\"jdbc:postgresql://localhost:5432/vulnado\",\n",
                        "lineNumber": 13,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        \"postgres\", \"vulnado\");\n",
                        "lineNumber": 14,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String url = new StringBuilder()\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      },
                      {
                        "line": "        .append(\"jdbc:postgresql://\")\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "        .append(System.getenv(\"PGHOST\"))\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "        .append(\"/\")\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "        .append(System.getenv(\"PGDATABASE\")).toString();\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "return DriverManager.getConnection(url,\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "        System.getenv(\"PGUSER\"), System.getenv(\"PGPASSWORD\"));\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 84,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            },
            {
              "id": "java/Sqli/test",
              "name": "Sqli/test",
              "shortDescription": {
                "text": "SQL Injection"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nIn an SQL injection attack, the user can submit an SQL query directly to the database, gaining access without providing appropriate credentials. Attackers can then view, export, modify, and delete confidential information; change passwords and other authentication information; and possibly gain access to other systems within the network. This is one of the most commonly exploited categories of vulnerability, but can largely be avoided through good coding practices.\n\n## Best practices for prevention\n* Avoid passing user-entered parameters directly to the SQL server.\n* Avoid using string concatenation to build SQL queries from user-entered parameters.\n* When coding, define SQL code first, then pass in parameters. Use prepared statements with parameterized queries. Examples include `SqlCommand()` in .NET and `bindParam()` in PHP.\n* Use strong typing for all parameters so unexpected user data will be rejected.\n* Where direct user input cannot be avoided for performance reasons, validate input against a very strict allowlist of permitted characters, avoiding special characters such as `? & / < > ; - ' \" \\` and spaces. Use a vendor-supplied escaping routine if possible.\n* Develop your application in an environment and/or using libraries that provide protection against SQL injection.\n* Harden your entire environment around a least-privilege model, ideally with isolated accounts with privileges only for particular tasks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "Sqli",
                  "Security",
                  "InTest",
                  "SourceNonServer",
                  "SourceResourceAccess",
                  "SourceDatabase",
                  "Taint"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/apache/incubator-brooklyn/commit/7c2b05e8f5d303c4ca8ddf41951f3469c1dff6d3?diff=split#diff-d4388a2198569fe21fe96a59744ad0eabc692c2cc2a8d400c7b2401030dc3167L-1",
                    "lines": [
                      {
                        "line": "stmt.execute(\"INSERT INTO MESSAGES values (default, '\"+request.getParameter(\"name\")+\r\n",
                        "lineNumber": 50,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        \"', '\"+request.getParameter(\"message\")+\"')\");\r\n",
                        "lineNumber": 51,
                        "lineChange": "removed"
                      },
                      {
                        "line": "stmt.execute(\"INSERT INTO MESSAGES values (default, '\"+\r\n",
                        "lineNumber": 50,
                        "lineChange": "added"
                      },
                      {
                        "line": "        //better escaping and security desired... \r\n",
                        "lineNumber": 51,
                        "lineChange": "added"
                      },
                      {
                        "line": "        //this essentially does StringEscapeUtils.escapeSql (either brooklyn.util or apache commons)\r\n",
                        "lineNumber": 52,
                        "lineChange": "added"
                      },
                      {
                        "line": "        request.getParameter(\"name\").replaceAll(\"'\", \"''\")+\r\n",
                        "lineNumber": 53,
                        "lineChange": "added"
                      },
                      {
                        "line": "        \"', '\"+\r\n",
                        "lineNumber": 54,
                        "lineChange": "added"
                      },
                      {
                        "line": "        request.getParameter(\"message\").replaceAll(\"'\", \"''\")+\r\n",
                        "lineNumber": 55,
                        "lineChange": "added"
                      },
                      {
                        "line": "        \"')\");\r\n",
                        "lineNumber": 56,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/romainguefveneu/naonedbus/commit/221b7952f2720954617be208a32aa5d9c52fc2ad?diff=split#diff-e8e3d3bc49298718faa0faa152cbe9283b50dceacd56b4a535ceed55209d8757L-1",
                    "lines": [
                      {
                        "line": "queryBuilder.appendWhere(HoraireTable.YEAR + \" = \" + year);\n",
                        "lineNumber": 88,
                        "lineChange": "removed"
                      },
                      {
                        "line": "queryBuilder.appendWhere(\" AND \");\n",
                        "lineNumber": 89,
                        "lineChange": "removed"
                      },
                      {
                        "line": "queryBuilder.appendWhere(HoraireTable.DAY_OF_YEAR + \" = \" + dayOfYear);\n",
                        "lineNumber": 90,
                        "lineChange": "removed"
                      },
                      {
                        "line": "queryBuilder.appendWhere(HoraireTable.JOUR + \" = \");\n",
                        "lineNumber": 86,
                        "lineChange": "added"
                      },
                      {
                        "line": "queryBuilder.appendWhereEscapeString(jour);\n",
                        "lineNumber": 87,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/nVisium/MoneyX/commit/f9c8ea0b88e2e1612a54263d60d7f541c1df99fa?diff=split#diff-919c59d5b4e2446907d73f57a076efc70adf52bb56e16ab74c288b4d06fcc78eL-1",
                    "lines": [
                      {
                        "line": "\t@PathVariable String id,\n",
                        "lineNumber": 83,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t@PathVariable Integer id,\n",
                        "lineNumber": 82,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tModel model) {\n",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "// List<Payment> payments = paymentService.getSentPayments(userService.loadUserById(id));\n",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "@SuppressWarnings(\"unchecked\")\n",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "List<Payment> payments = \n",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tem.createNativeQuery(\"select * from Payments p where p.sender = \" + id, Payment.class)\n",
                        "lineNumber": 89,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 24,
                "cwe": [
                  "CWE-89"
                ]
              }
            },
            {
              "id": "java/InsecureCipherNoIntegrity",
              "name": "InsecureCipherNoIntegrity",
              "shortDescription": {
                "text": "Use of a Broken or Risky Cryptographic Algorithm"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nWhen sensitive information is transmitted with weak encryption, attackers are potentially able to intercept the information and decrypt it, with a wide range of negative consequences. This includes accessing code or content they are not authorized to view and changing or taking down a site or app, often with a demand for ransom. Every developer is aware of the risks of transmitting sensitive information in plain text. Yet many still use outdated or inferior cryptographic methods to protect information under their control. As cryptographic methods grow stronger with time, code must be updated to incorporate more modern and secure cryptography.\n\n## Best practices for prevention\n* Avoid using DES, and use AES (in a secure mode, such as Galois/Counter Mode) or another strong encryption algorithm instead.\n* Be aware of outdated hashes, such as MD5 and SHA1 (along with many others); recognize and implement current cryptographic standards instead.\n* Never use custom or DIY security and cryptographic methods; instead, use methods that are part of an accepted library or framework.\n* Ensure that code dealing with cryptographic methods is highly modular and can be easily replaced as security standards change.\n* Increase developer awareness of proper encryption key management and protection to ensure best practices throughout the application.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "InsecureCipherNoIntegrity",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/egovernments/egov-services/commit/438110bfc0c743ed1412e1bb18ba501f544d3562?diff=split#diff-1a3429cb59b5a59624cabe5733d449f3c8622cb36cc37d775273e952271e8ac3L-1",
                    "lines": [
                      {
                        "line": "Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS7Padding\");\n",
                        "lineNumber": 21,
                        "lineChange": "removed"
                      },
                      {
                        "line": "Cipher cipher = Cipher.getInstance(\"AES/GCM/NoPadding\");\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/guardianproject/InformaCore/commit/595e853f1aec6c4cb78aaec9fb8124f339fa32a8?diff=split#diff-96ad06f55d21e0316725abbf7f41106d6110c8fade8c2884af8b04abfc12f7c1L-1",
                    "lines": [
                      {
                        "line": "Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n",
                        "lineNumber": 40,
                        "lineChange": "removed"
                      },
                      {
                        "line": "Cipher cipher = Cipher.getInstance(\"AES/GCM/NoPadding\");\n",
                        "lineNumber": 41,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/quarkusio/quarkus/commit/1678f080d8b2df19f72d33a2fb81659a1c44e0ca?diff=split#diff-b86e78becf86450eb08e45756566d5bfca1e1a4f9b2e9deecf67ba498e959c54L-1",
                    "lines": [
                      {
                        "line": "private static final String ENC_ALGORITHM = \"AES/GCM/NoPadding\";\n",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "private static final int ENC_TAG_LENGTH = 128;\n",
                        "lineNumber": 31,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 15,
                "cwe": [
                  "CWE-327"
                ]
              }
            },
            {
              "id": "java/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "PT",
                  "Security",
                  "SourceServer",
                  "SourceRequestUrl",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/blackducksoftware/synopsys-detect/commit/36555b9322986e9560f241d05f2262c29a17663b?diff=split#diff-0762b4660a948292965002710b58e8fdfe28da3fe4aacdf01a6bac7406a33934L-1",
                    "lines": [
                      {
                        "line": "import java.nio.file.Path;\r\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "import java.util.Enumeration;\r\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "import java.util.zip.ZipEntry;\r\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "import java.util.zip.ZipFile;\r\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "import org.apache.commons.compress.utils.IOUtils;\r\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "public class DetectZipUtil {\r\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public static void unzip(File zip, File dest, Charset charset) throws IOException {\r\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Path destPath = dest.toPath();\r\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try (ZipFile zipFile = new ZipFile(zip, ZipFile.OPEN_READ, charset)) {\r\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "            Enumeration<? extends ZipEntry> entries = zipFile.entries();\r\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "            while (entries.hasMoreElements()) {\r\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "                ZipEntry entry = entries.nextElement();\r\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "                Path entryPath = destPath.resolve(entry.getName());\r\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "                if (!entryPath.normalize().startsWith(dest.toPath()))\r\n",
                        "lineNumber": 48,
                        "lineChange": "added"
                      },
                      {
                        "line": "                    throw new IOException(\"Zip entry contained path traversal\");\r\n",
                        "lineNumber": 49,
                        "lineChange": "added"
                      },
                      {
                        "line": "                if (entry.isDirectory()) {\r\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    Files.createDirectories(entryPath);\r\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "                } else {\r\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    Files.createDirectories(entryPath.getParent());\r\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    try (InputStream in = zipFile.getInputStream(entry)) {\r\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "                        try (OutputStream out = new FileOutputStream(entryPath.toFile())) {\r\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/tingley/globalsight/commit/9e9ea721f67f3a7b7c8d207f34ea549fb4ec52ee?diff=split#diff-10bf7160d01d941d63b0f194ae52f54d3b55ae8e8e33beaa7334783770d39117L-1",
                    "lines": [
                      {
                        "line": " File rootFile = new File(docRoot);\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "  String rootPath = rootFile.getCanonicalPath();\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "  String path = file.getCanonicalPath();\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "  if (!path.startsWith(rootPath)) {\n",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": " \t out.print(\"Failed to get XSL file for reason: Bad pathname.\");\n",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": " \t return;\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "  input =  new BufferedReader(new FileReader(file));\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/OpenRefine/OpenRefine/commit/7f7b71459ca031978c3f8024cb14af13446d6d9c?diff=split#diff-c8321cdc05ebb81f79c44f1f701d1659b3b20baa5d22df0c9ff29cdc5ec7d1a6L-1",
                    "lines": [
                      {
                        "line": "// For CVE-2018-19859, issue #1840\n",
                        "lineNumber": 443,
                        "lineChange": "added"
                      },
                      {
                        "line": "if (!file.toPath().normalize().startsWith(dir.toPath().normalize())) {\n",
                        "lineNumber": 444,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tthrow new IllegalArgumentException(\"Zip archives with files escaping their root directory are not allowed.\");\n",
                        "lineNumber": 445,
                        "lineChange": "added"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 446,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 447,
                        "lineChange": "none"
                      },
                      {
                        "line": "int dot = name.indexOf('.');\n",
                        "lineNumber": 448,
                        "lineChange": "none"
                      },
                      {
                        "line": "String prefix = dot < 0 ? name : name.substring(0, dot);\n",
                        "lineNumber": 449,
                        "lineChange": "none"
                      },
                      {
                        "line": "String suffix = dot < 0 ? \"\" : name.substring(dot);\n",
                        "lineNumber": 450,
                        "lineChange": "none"
                      },
                      {
                        "line": "int index = 2;\n",
                        "lineNumber": 451,
                        "lineChange": "none"
                      },
                      {
                        "line": "while (file.exists()) {\n",
                        "lineNumber": 452,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 49,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "java/InsecureHash",
              "name": "InsecureHash",
              "shortDescription": {
                "text": "Use of Password Hash With Insufficient Computational Effort"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n## Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "InsecureHash",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/javabeanz/owasp-security-logging/commit/477ecf68f3102f309f3ec9af01ab852294cbd826?diff=split#diff-c14e8b3d208e6acad1c0ca88a8a8227e4140088dfe2206349680aec0558df5cbL-1",
                    "lines": [
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"SHA-1\");\n",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/serenity-bdd/serenity-core/commit/0f81a03ae3f907922a05167688dadc8c3e3fbfb8?diff=split#diff-801c01409e6adce75757fddee032ee993bc0d54328d0632f7d728689a4b8effdL-1",
                    "lines": [
                      {
                        "line": "return DigestUtils.md5Hex(screenshotData) + \".png\";\n",
                        "lineNumber": 7,
                        "lineChange": "removed"
                      },
                      {
                        "line": "return DigestUtils.sha256Hex(screenshotData) + \".png\";\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/freenet/fred/commit/90a727b4116eafd4b6892fa49295966de4e355ae?diff=split#diff-385b90a2c9a20669f73977a4d82d2dcebad9b0728cfe0479f26285a8cec90bbeL-1",
                    "lines": [
                      {
                        "line": "md = MessageDigest.getInstance(\"SHA-1\");\n",
                        "lineNumber": 75,
                        "lineChange": "removed"
                      },
                      {
                        "line": "md = MessageDigest.getInstance(\"SHA-256\");\n",
                        "lineNumber": 75,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 64,
                "cwe": [
                  "CWE-916"
                ]
              }
            },
            {
              "id": "java/Sqli",
              "name": "Sqli",
              "shortDescription": {
                "text": "SQL Injection"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nIn an SQL injection attack, the user can submit an SQL query directly to the database, gaining access without providing appropriate credentials. Attackers can then view, export, modify, and delete confidential information; change passwords and other authentication information; and possibly gain access to other systems within the network. This is one of the most commonly exploited categories of vulnerability, but can largely be avoided through good coding practices.\n\n## Best practices for prevention\n* Avoid passing user-entered parameters directly to the SQL server.\n* Avoid using string concatenation to build SQL queries from user-entered parameters.\n* When coding, define SQL code first, then pass in parameters. Use prepared statements with parameterized queries. Examples include `SqlCommand()` in .NET and `bindParam()` in PHP.\n* Use strong typing for all parameters so unexpected user data will be rejected.\n* Where direct user input cannot be avoided for performance reasons, validate input against a very strict allowlist of permitted characters, avoiding special characters such as `? & / < > ; - ' \" \\` and spaces. Use a vendor-supplied escaping routine if possible.\n* Develop your application in an environment and/or using libraries that provide protection against SQL injection.\n* Harden your entire environment around a least-privilege model, ideally with isolated accounts with privileges only for particular tasks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "Sqli",
                  "Security",
                  "SourceNonServer",
                  "SourceResourceAccess",
                  "SourceDatabase",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/apache/incubator-brooklyn/commit/7c2b05e8f5d303c4ca8ddf41951f3469c1dff6d3?diff=split#diff-d4388a2198569fe21fe96a59744ad0eabc692c2cc2a8d400c7b2401030dc3167L-1",
                    "lines": [
                      {
                        "line": "stmt.execute(\"INSERT INTO MESSAGES values (default, '\"+request.getParameter(\"name\")+\r\n",
                        "lineNumber": 50,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        \"', '\"+request.getParameter(\"message\")+\"')\");\r\n",
                        "lineNumber": 51,
                        "lineChange": "removed"
                      },
                      {
                        "line": "stmt.execute(\"INSERT INTO MESSAGES values (default, '\"+\r\n",
                        "lineNumber": 50,
                        "lineChange": "added"
                      },
                      {
                        "line": "        //better escaping and security desired... \r\n",
                        "lineNumber": 51,
                        "lineChange": "added"
                      },
                      {
                        "line": "        //this essentially does StringEscapeUtils.escapeSql (either brooklyn.util or apache commons)\r\n",
                        "lineNumber": 52,
                        "lineChange": "added"
                      },
                      {
                        "line": "        request.getParameter(\"name\").replaceAll(\"'\", \"''\")+\r\n",
                        "lineNumber": 53,
                        "lineChange": "added"
                      },
                      {
                        "line": "        \"', '\"+\r\n",
                        "lineNumber": 54,
                        "lineChange": "added"
                      },
                      {
                        "line": "        request.getParameter(\"message\").replaceAll(\"'\", \"''\")+\r\n",
                        "lineNumber": 55,
                        "lineChange": "added"
                      },
                      {
                        "line": "        \"')\");\r\n",
                        "lineNumber": 56,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/romainguefveneu/naonedbus/commit/221b7952f2720954617be208a32aa5d9c52fc2ad?diff=split#diff-e8e3d3bc49298718faa0faa152cbe9283b50dceacd56b4a535ceed55209d8757L-1",
                    "lines": [
                      {
                        "line": "queryBuilder.appendWhere(HoraireTable.YEAR + \" = \" + year);\n",
                        "lineNumber": 88,
                        "lineChange": "removed"
                      },
                      {
                        "line": "queryBuilder.appendWhere(\" AND \");\n",
                        "lineNumber": 89,
                        "lineChange": "removed"
                      },
                      {
                        "line": "queryBuilder.appendWhere(HoraireTable.DAY_OF_YEAR + \" = \" + dayOfYear);\n",
                        "lineNumber": 90,
                        "lineChange": "removed"
                      },
                      {
                        "line": "queryBuilder.appendWhere(HoraireTable.JOUR + \" = \");\n",
                        "lineNumber": 86,
                        "lineChange": "added"
                      },
                      {
                        "line": "queryBuilder.appendWhereEscapeString(jour);\n",
                        "lineNumber": 87,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/nVisium/MoneyX/commit/f9c8ea0b88e2e1612a54263d60d7f541c1df99fa?diff=split#diff-919c59d5b4e2446907d73f57a076efc70adf52bb56e16ab74c288b4d06fcc78eL-1",
                    "lines": [
                      {
                        "line": "\t@PathVariable String id,\n",
                        "lineNumber": 83,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t@PathVariable Integer id,\n",
                        "lineNumber": 82,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tModel model) {\n",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "// List<Payment> payments = paymentService.getSentPayments(userService.loadUserById(id));\n",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "@SuppressWarnings(\"unchecked\")\n",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "List<Payment> payments = \n",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tem.createNativeQuery(\"select * from Payments p where p.sender = \" + id, Payment.class)\n",
                        "lineNumber": 89,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 24,
                "cwe": [
                  "CWE-89"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-web/src/main/js/helpers/mocks/alm-settings.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 87,
                  "endLine": 87,
                  "startColumn": 5,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7ff83f792d83c68a7dec3daf1c3d30dee4b8b70b331c0989c2426e82232858c6",
            "1": "c2ac01b9.3f481afb.2147bb98.e052b9a9.79a7d027.fcf3002d.ce4a9d89.b022beba.c1c3be60.7e3a3c2e.611805fc.0755de8f.601e4ccc.0c17bcdd.cd61fc56.878abbf9"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/helpers/mocks/alm-settings.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 19,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/helpers/mocks/alm-settings.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 5,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 803,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-web/src/main/js/helpers/mocks/alm-settings.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 101,
                  "endLine": 101,
                  "startColumn": 5,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f7ddaa6b1904c4a410ba7344d75c3dde887fb6636aaded2c32c9ae8e906d46f2",
            "1": "c2ac01b9.3f481afb.2147bb98.e052b9a9.79a7d027.fcf3002d.ce4a9d89.b022beba.40cf35ae.7e3a3c2e.9e026c7d.0755de8f.601e4ccc.0c17bcdd.b5a5f80a.87e1a947"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/helpers/mocks/alm-settings.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 19,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/helpers/mocks/alm-settings.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 5,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 803,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-web/src/main/js/helpers/mocks/alm-settings.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 102,
                  "endLine": 102,
                  "startColumn": 5,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3f77b8ea16d7e7be0bffdc6ea4fe554e7c2f52e1343245f570151f04e4ce60b8",
            "1": "60d59d19.3f481afb.4d0c4123.e052b9a9.79a7d027.83c53b71.ce4a9d89.940f053e.40cf35ae.7e3a3c2e.9e026c7d.0755de8f.601e4ccc.0c17bcdd.b5a5f80a.87e1a947"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/helpers/mocks/alm-settings.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 102,
                            "endLine": 102,
                            "startColumn": 17,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/helpers/mocks/alm-settings.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 102,
                            "endLine": 102,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 803,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-web/src/main/js/apps/settings/constants.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 55,
                  "endLine": 55,
                  "startColumn": 3,
                  "endColumn": 10
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d9300d79e8914962576de1b45c65b9ac378112b1bea8573e2ee34b948ddad671",
            "1": "311fcde1.1e2d27b2.e1bd57c8.d7919eeb.79a7d027.c6e632b9.d64d840f.1c63c9a5.99fa6c6e.0d006ff0.e1bd57c8.311f8fd8.79a7d027.c6e632b9.d2cd9111.6808287e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/apps/settings/constants.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 35,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/apps/settings/constants.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 3,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 753,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedSecret",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "Hardcoded value array {...} is used as a cipher initialization value. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "markdown": "Hardcoded value {0} is used as a {1}. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "arguments": [
              "[array {...}](0)",
              "[cipher initialization value](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-plugin-api-impl/src/main/java/org/sonar/api/config/internal/AesGCMCipher.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 69,
                  "endLine": 69,
                  "startColumn": 75,
                  "endColumn": 91
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fbaac68b9031e7ce58acfb532b83c0e341775ed857fdd7ff52b98b3041d2b169",
            "1": "e93d0a43.a4c78996.abb7aee4.6c52ae28.178caa9c.7d022bbb.76eb3147.203bd690.8df8fa68.8d55b20a.8f415be7.6c52ae28.c0115a3e.7d022bbb.76eb3147.c0fe4abd"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-plugin-api-impl/src/main/java/org/sonar/api/config/internal/AesGCMCipher.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 65,
                            "endLine": 65,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-plugin-api-impl/src/main/java/org/sonar/api/config/internal/AesGCMCipher.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 69,
                            "endLine": 69,
                            "startColumn": 75,
                            "endColumn": 91
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 752,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedSecret",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "Hardcoded value string is used as a cipher key. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "markdown": "Hardcoded value {0} is used as a {1}. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "arguments": [
              "[string](0)",
              "[cipher key](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-ws/src/testFixtures/java/org/sonarqube/ws/tester/AlmSettingsTester.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 38,
                  "endLine": 42,
                  "startColumn": 51,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "eb29ce127fb3f5542c055be9b5c5f2b7bcba9938fc6f8e0dd11fb60685b3cf4c",
            "1": "b39fc9a5.a8853d72.50e43a33.5efcde2a.ffa0b76e.3fe77750.4f3db424.886fae62.b39fc9a5.a8853d72.50e43a33.5efcde2a.ffa0b76e.3fe77750.4f3db424.886fae62"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-ws/src/testFixtures/java/org/sonarqube/ws/tester/AlmSettingsTester.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 34,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-ws/src/testFixtures/java/org/sonarqube/ws/tester/AlmSettingsTester.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 42,
                            "startColumn": 51,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 752,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-web/scripts/start.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 45,
                  "endLine": 45,
                  "startColumn": 10,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fb22a9704cee1c4dc065bdbcc8f31a1fbe119364088454a2505e271619be512c",
            "1": "5adcd128.4773f344.8b18f948.8002da70.fd1fa73f.5fce695c.83265159.60e37020.c3f8dfad.4773f344.8b18f948.8002da70.b6be8b13.5fce695c.83265159.60e37020"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/scripts/start.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 10,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/scripts/start.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 3,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-web/scripts/start.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 98,
                  "endLine": 119,
                  "startColumn": 23,
                  "endColumn": 10
                }
              }
            }
          ],
          "fingerprints": {
            "0": "65b74f398f1e82bbb93f7e8d7029c4186f76759b7393db1a4725d8a3222a0b05",
            "1": "aac70831.4773f344.607187b5.c559ebce.fd1fa73f.6f0d36d4.83265159.821cdfbf.c3f8dfad.4773f344.c760e037.8002da70.b6be8b13.5fce695c.83265159.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/scripts/start.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 98,
                            "endLine": 119,
                            "startColumn": 23,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/scripts/start.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 3,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/OR",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from the document location flows into replace, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
            "arguments": [
              "[the document location](0)",
              "[flows](1),(2),(3)",
              "[replace](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-web/src/main/js/apps/maintenance/components/App.tsx",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 155,
                  "endLine": 155,
                  "startColumn": 23,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "af8bbae1c910535f7e333763b32105a30135a1e5a5bd5eed1db91a3ddefa629c",
            "1": "a88cbcc4.b6e32c83.6b34b398.8ea11f9c.ef9f7d82.8020cfdf.cd61fc56.26150c29.a88cbcc4.b6e32c83.3cda4776.f3badd67.ef9f7d82.33cb344c.aa518733.26150c29"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/helpers/urls.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 397,
                            "endLine": 397,
                            "startColumn": 49,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/helpers/urls.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 397,
                            "endLine": 397,
                            "startColumn": 49,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/helpers/urls.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 397,
                            "endLine": 397,
                            "startColumn": 12,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/apps/maintenance/components/App.tsx",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 155,
                            "endLine": 155,
                            "startColumn": 31,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/apps/maintenance/components/App.tsx",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 155,
                            "endLine": 155,
                            "startColumn": 23,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 502,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/OR",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from the document location flows into replace, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
            "arguments": [
              "[the document location](0)",
              "[flows](1),(2),(3)",
              "[replace](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-web/src/main/js/apps/sessions/components/LoginContainer.tsx",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 90,
                  "endLine": 90,
                  "startColumn": 21,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0f113cb91a93ab1cc0bfaaa84a009c2c739c0ee1ac98764709e5760dce4d02f6",
            "1": "a88cbcc4.b6e32c83.6b34b398.8ea11f9c.ef9f7d82.8020cfdf.cd61fc56.26150c29.a88cbcc4.b6e32c83.3cda4776.f3badd67.ef9f7d82.33cb344c.aa518733.26150c29"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/helpers/urls.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 397,
                            "endLine": 397,
                            "startColumn": 49,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/helpers/urls.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 397,
                            "endLine": 397,
                            "startColumn": 49,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/helpers/urls.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 397,
                            "endLine": 397,
                            "startColumn": 12,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/apps/sessions/components/LoginContainer.tsx",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 29,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/apps/sessions/components/LoginContainer.tsx",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 21,
                            "endColumn": 28
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 502,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/NoHardcodedCredentials",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code.",
            "markdown": "Do not hardcode credentials in code.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-db-core/src/testFixtures/java/org/sonar/db/CoreH2Database.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 59,
                  "endLine": 59,
                  "startColumn": 30,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c13f17ce16fe03d7465a67d7671920a5bdac74af00cc309e890eb9a5dedf4e08",
            "1": "ac4e7c8b.d45b4d06.9340a9cd.6fbc19e5.4a9c8cbc.f0f4d39e.e8779bf1.54d46e25.5387ee68.e8c02a15.33fa5dbe.e22980a8.d31a8364.7fda7c5e.e8779bf1.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-core/src/testFixtures/java/org/sonar/db/CoreH2Database.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 30,
                            "endColumn": 37
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 151,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF/test",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "The request parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[request](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-webapi-v2/src/test/java/org/sonar/server/v2/common/DeprecatedHandlerTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 187,
                  "endLine": 187,
                  "startColumn": 25,
                  "endColumn": 52
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9f01427c05f51240a857e9d541f515ff7275876180cc8ebdce10fafc7ba2330b",
            "1": "2b534c10.7f413d6f.a224ef38.3519ac88.f0e1baa5.58c3080a.5b1ccecb.13c56f84.2b534c10.7f413d6f.a224ef38.3519ac88.f0e1baa5.58c3080a.1a0c7c19.13c56f84"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-webapi-v2/src/test/java/org/sonar/server/v2/common/DeprecatedHandlerTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 187,
                            "endLine": 187,
                            "startColumn": 25,
                            "endColumn": 52
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 202,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF/test",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "The request parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[request](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-webapi-v2/src/test/java/org/sonar/server/v2/common/DeprecatedHandlerTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 192,
                  "endLine": 192,
                  "startColumn": 28,
                  "endColumn": 55
                }
              }
            }
          ],
          "fingerprints": {
            "0": "56246eb4f03e72cb4594516f8982e4b37a2eba2a96755d19028bfb299f600358",
            "1": "cb724ed2.7f413d6f.a224ef38.3519ac88.f0e1baa5.58c3080a.5b1ccecb.42f64560.cb724ed2.7f413d6f.a224ef38.3519ac88.f0e1baa5.58c3080a.1a0c7c19.42f64560"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-webapi-v2/src/test/java/org/sonar/server/v2/common/DeprecatedHandlerTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 192,
                            "endLine": 192,
                            "startColumn": 28,
                            "endColumn": 55
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 202,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecurelyGeneratedPassword/test",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "An insecure random number generator is used to create a password (the random value flows from org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric). Consider using java.security.SecureRandom to generate strong passwords.",
            "markdown": "An insecure random number generator is used to create a password (the random value {0} from {1}). Consider using java.security.SecureRandom to generate strong passwords.",
            "arguments": [
              "[flows](0)",
              "[org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/authentication/CredentialsLocalAuthenticationIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 92,
                  "endLine": 92,
                  "startColumn": 27,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2c790353ac72905955f90206eeff98fe9f29d5c80f8180b3ace40daa294ac108",
            "1": "9725733e.01c94e75.71a71d19.5ba4ef16.bc6ac6aa.dd62fee0.2b807cc3.8a6c0d71.b0dc34ae.9897ae37.71a71d19.5ba4ef16.ca58bf6e.dd62fee0.59ddc3dd.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/authentication/CredentialsLocalAuthenticationIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 23,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/authentication/CredentialsLocalAuthenticationIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 23,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecurelyGeneratedPassword/test",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "An insecure random number generator is used to create a password (the random value flows from org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric). Consider using java.security.SecureRandom to generate strong passwords.",
            "markdown": "An insecure random number generator is used to create a password (the random value {0} from {1}). Consider using java.security.SecureRandom to generate strong passwords.",
            "arguments": [
              "[flows](0)",
              "[org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/authentication/CredentialsLocalAuthenticationIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 123,
                  "endLine": 123,
                  "startColumn": 27,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e749b6d5ea010ab935da8c26d62a951cce8dbebddf9f0859a549066b2aa359f1",
            "1": "9725733e.01c94e75.71a71d19.5ba4ef16.bc6ac6aa.dd62fee0.2b807cc3.8a6c0d71.b0dc34ae.9897ae37.71a71d19.5ba4ef16.ca58bf6e.dd62fee0.59ddc3dd.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/authentication/CredentialsLocalAuthenticationIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 23,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/authentication/CredentialsLocalAuthenticationIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 23,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecurelyGeneratedPassword/test",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "An insecure random number generator is used to create a password (the random value flows from org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric). Consider using java.security.SecureRandom to generate strong passwords.",
            "markdown": "An insecure random number generator is used to create a password (the random value {0} from {1}). Consider using java.security.SecureRandom to generate strong passwords.",
            "arguments": [
              "[flows](0)",
              "[org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/authentication/CredentialsLocalAuthenticationIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 149,
                  "endLine": 149,
                  "startColumn": 27,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "eb89d8d4b475b3712f13b254c9f40fad69cf15990241cd3db577936199004c8a",
            "1": "c14f34b3.01c94e75.71a71d19.5ba4ef16.bc6ac6aa.dd62fee0.2b807cc3.8a6c0d71.b0dc34ae.9897ae37.71a71d19.5ba4ef16.ca58bf6e.dd62fee0.59ddc3dd.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/authentication/CredentialsLocalAuthenticationIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 23,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/authentication/CredentialsLocalAuthenticationIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 23,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/PT",
          "ruleIndex": 7,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into fs.readFileSync, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[fs.readFileSync](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-web/scripts/update-cwes.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 63,
                  "endLine": 63,
                  "startColumn": 14,
                  "endColumn": 29
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b5d0c106bf0a2445528d711e0895fb53f86fa75ad108156569cb22d2cd3fdcf8",
            "1": "92fcdfe8.4773f344.990e644d.1c0eb7ca.b0f6e810.e9c60572.df7e59ba.7b9afb6b.6e283998.4773f344.990e644d.99f4e1a5.b0f6e810.5fce695c.83265159.83183368"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/scripts/update-cwes.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 43,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/scripts/update-cwes.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 43,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/scripts/update-cwes.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 35,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/scripts/update-cwes.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 25,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/scripts/update-cwes.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 21,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/scripts/update-cwes.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 21,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/scripts/update-cwes.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 30,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/scripts/update-cwes.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 14,
                            "endColumn": 29
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 502,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/PT",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the request URL flows into fs.readFile, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2)",
              "[fs.readFile](3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-web/scripts/start.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 46,
                  "endLine": 46,
                  "startColumn": 3,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0c335566924544fec72dc832a06991b83a9f01986cfa6707919b7ff46a90bfb6",
            "1": "c3f8dfad.4773f344.607187b5.1c0eb7ca.b6be8b13.8020cfdf.cd61fc56.d3c1a93e.c3f8dfad.4773f344.607187b5.8002da70.b6be8b13.5fce695c.83265159.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/scripts/start.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 36,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/scripts/start.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 36,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/scripts/start.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 15,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/scripts/start.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 3,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 802,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-web/src/main/js/helpers/__tests__/sonarlint-test.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 168,
                  "endLine": 168,
                  "startColumn": 11,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "00e8d699bc4da16f7b8a34a53b6312cea59412b6e937f5cc9c8a31d2df97db3b",
            "1": "46b7c801.4773f344.d4943c86.b3a7a260.5f5d4eae.8020cfdf.cd61fc56.5691ba88.46b7c801.4773f344.d4943c86.b3a7a260.a6176a79.7ae4a366.cd61fc56.6723ddeb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/helpers/__tests__/sonarlint-test.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 14,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/helpers/__tests__/sonarlint-test.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 168,
                            "endLine": 168,
                            "startColumn": 11,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-web/src/main/js/helpers/__tests__/sonarlint-test.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 197,
                  "endLine": 197,
                  "startColumn": 11,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "946c0457efea8d2c44824344ea1da423c5bf268fb8648faca3ce752a82e2e640",
            "1": "46b7c801.3f481afb.d4943c86.b3a7a260.5f5d4eae.12378dc5.cd61fc56.5691ba88.46b7c801.b6d22dc6.d4943c86.b3a7a260.a6176a79.7ae4a366.cd61fc56.6723ddeb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/helpers/__tests__/sonarlint-test.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 202,
                            "endLine": 202,
                            "startColumn": 14,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/helpers/__tests__/sonarlint-test.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 197,
                            "endLine": 197,
                            "startColumn": 11,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The SHA1 hash (used in org.apache.commons.codec.digest.DigestUtils.sha1Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The SHA1 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.sha1Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/authentication/CredentialsLocalAuthenticationIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 103,
                  "endLine": 103,
                  "startColumn": 19,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "67b13a07782aefd7539ef855ac077ebc727fb774ddc308525cfe96022361b7f7",
            "1": "19689298.1cbd3ff4.0b5bfb25.b1d78af9.ae63d11c.f940a352.e1124db7.54d46e25.19689298.1cbd3ff4.0b5bfb25.b1d78af9.ae63d11c.f940a352.e1124db7.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/authentication/CredentialsLocalAuthenticationIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 19,
                            "endColumn": 38
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The SHA1 hash (used in org.apache.commons.codec.digest.DigestUtils.sha1Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The SHA1 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.sha1Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/authentication/CredentialsLocalAuthenticationIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 107,
                  "endLine": 107,
                  "startColumn": 27,
                  "endColumn": 46
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d4a72703684c21dca97875f61ef9dd8463f53462cf65b2a1bc71936e032f548a",
            "1": "e6fcc0e0.1cbd3ff4.0b5bfb25.b1d78af9.ae63d11c.f940a352.e1124db7.b5ffc0a3.e6fcc0e0.1cbd3ff4.0b5bfb25.b1d78af9.ae63d11c.f940a352.e1124db7.b5ffc0a3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/authentication/CredentialsLocalAuthenticationIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 107,
                            "endLine": 107,
                            "startColumn": 27,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The SHA1 hash (used in org.apache.commons.codec.digest.DigestUtils.sha1Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The SHA1 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.sha1Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-auth/src/test/java/org/sonar/server/authentication/OAuthCsrfVerifierTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 104,
                  "endLine": 104,
                  "startColumn": 81,
                  "endColumn": 88
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2f3c4af071a26ce3e393402c3d043f019370ed49c711a06b8c0d95c5013edeb4",
            "1": "bdc4fe63.b4074dda.bf05a696.b1d78af9.2a93a0a0.fbc789db.fb31ce31.c5659686.bdc4fe63.b4074dda.bf05a696.b1d78af9.2a93a0a0.fbc789db.fb31ce31.c5659686"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/test/java/org/sonar/server/authentication/OAuthCsrfVerifierTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 104,
                            "startColumn": 81,
                            "endColumn": 88
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The SHA1 hash (used in org.apache.commons.codec.digest.DigestUtils.sha1Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The SHA1 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.sha1Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-auth/src/test/java/org/sonar/server/authentication/OAuthCsrfVerifierTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 126,
                  "endLine": 126,
                  "startColumn": 81,
                  "endColumn": 88
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b341e3de140a7e49562279afe2c1b91ee0cc91c9ec997b95cbba03151eb379cd",
            "1": "bdc4fe63.b4074dda.bf05a696.b1d78af9.2a93a0a0.fbc789db.fb31ce31.c5659686.bdc4fe63.b4074dda.bf05a696.b1d78af9.2a93a0a0.fbc789db.fb31ce31.c5659686"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/test/java/org/sonar/server/authentication/OAuthCsrfVerifierTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 126,
                            "endLine": 126,
                            "startColumn": 81,
                            "endColumn": 88
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-scanner-engine/src/test/java/org/sonar/scanner/bootstrap/PluginFilesTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 281,
                  "endLine": 281,
                  "startColumn": 20,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f59ed90e984ef8da7a864fcbdb7d7d113354670645c36384620cc34c40882202",
            "1": "2708beb0.1cbd3ff4.33fa5dbe.e22980a8.f6d438cc.7fda7c5e.2501145e.54d46e25.2708beb0.1cbd3ff4.33fa5dbe.e22980a8.f6d438cc.7fda7c5e.2501145e.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-scanner-engine/src/test/java/org/sonar/scanner/bootstrap/PluginFilesTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 281,
                            "endLine": 281,
                            "startColumn": 20,
                            "endColumn": 38
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 374,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-scanner-engine/src/it/java/org/sonar/scanner/mediumtest/scm/ScmMediumIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 73,
                  "endLine": 73,
                  "startColumn": 66,
                  "endColumn": 84
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d7ab7fb86753371366497f7286fc4cd83ccc7a83780680d2c387d1167ca9a758",
            "1": "2708beb0.1cbd3ff4.b5ab8c5b.6c52ae28.b4f952f0.21032181.c0003825.203bd690.2708beb0.1cbd3ff4.b5ab8c5b.6c52ae28.b4f952f0.21032181.c0003825.203bd690"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-scanner-engine/src/it/java/org/sonar/scanner/mediumtest/scm/ScmMediumIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 66,
                            "endColumn": 84
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-scanner-engine/src/it/java/org/sonar/scanner/mediumtest/scm/ScmMediumIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "startColumn": 66,
                  "endColumn": 84
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4c40d9c8bcbdf770cc6d57bb8a99304026830b2d1f8111599134cf5580b5bf1c",
            "1": "2708beb0.1cbd3ff4.0363d321.6c52ae28.b4f952f0.f940a352.9caa99bd.203bd690.2708beb0.1cbd3ff4.0363d321.6c52ae28.b4f952f0.f940a352.9caa99bd.203bd690"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-scanner-engine/src/it/java/org/sonar/scanner/mediumtest/scm/ScmMediumIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 74,
                            "endLine": 74,
                            "startColumn": 66,
                            "endColumn": 84
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-scanner-engine/src/it/java/org/sonar/scanner/mediumtest/scm/ScmMediumIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 75,
                  "endLine": 75,
                  "startColumn": 63,
                  "endColumn": 81
                }
              }
            }
          ],
          "fingerprints": {
            "0": "086f022a8602d84a192edb4447376cd71932ac236687f16da1097b71db9428f6",
            "1": "2708beb0.1cbd3ff4.29f916cf.6c52ae28.b4f952f0.d4e45b56.076a7e2e.203bd690.2708beb0.1cbd3ff4.29f916cf.6c52ae28.b4f952f0.d4e45b56.076a7e2e.203bd690"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-scanner-engine/src/it/java/org/sonar/scanner/mediumtest/scm/ScmMediumIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 75,
                            "endLine": 75,
                            "startColumn": 63,
                            "endColumn": 81
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-scanner-engine/src/it/java/org/sonar/scanner/mediumtest/scm/ScmMediumIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 76,
                  "endLine": 76,
                  "startColumn": 59,
                  "endColumn": 77
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0179212f5dd01a44956fc2f8da47576f0ce66bea9a982a8adb33c5e84c4b66cb",
            "1": "2708beb0.1cbd3ff4.29f916cf.6c52ae28.b4f952f0.d4e45b56.076a7e2e.203bd690.2708beb0.1cbd3ff4.29f916cf.6c52ae28.b4f952f0.d4e45b56.076a7e2e.203bd690"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-scanner-engine/src/it/java/org/sonar/scanner/mediumtest/scm/ScmMediumIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 59,
                            "endColumn": 77
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-core/src/test/java/org/sonar/core/hash/SourceLinesHashesComputerTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 60,
                  "endLine": 60,
                  "startColumn": 7,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2e00b001832d1075f4bee8c4815aeed51171c246a6fbddc90a07c5ecc71d94e5",
            "1": "2708beb0.1cbd3ff4.ecc5c209.44ab356c.4a9c8cbc.4cb70bfe.ac851237.54d46e25.2708beb0.1cbd3ff4.ecc5c209.44ab356c.4a9c8cbc.4cb70bfe.ac851237.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-core/src/test/java/org/sonar/core/hash/SourceLinesHashesComputerTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 7,
                            "endColumn": 25
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 374,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-ce-task-projectanalysis/src/it/java/org/sonar/ce/task/projectanalysis/source/PersistFileSourcesStepIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 433,
                  "endLine": 433,
                  "startColumn": 23,
                  "endColumn": 41
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9590825fcd57206d1e251086c2264e33356b5b10167fd5102412186d54e73ea1",
            "1": "2708beb0.1cbd3ff4.d0d1fedc.c81e2a8c.cdbb82cf.a80db726.b06a92ca.c5b28e25.2708beb0.1cbd3ff4.d0d1fedc.c81e2a8c.cdbb82cf.a80db726.b06a92ca.c5b28e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-ce-task-projectanalysis/src/it/java/org/sonar/ce/task/projectanalysis/source/PersistFileSourcesStepIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 433,
                            "endLine": 433,
                            "startColumn": 23,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-ce-task-projectanalysis/src/it/java/org/sonar/ce/task/projectanalysis/source/PersistFileSourcesStepIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 454,
                  "endLine": 454,
                  "startColumn": 23,
                  "endColumn": 41
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f44ea08daefc683dd7c60db9d18488e2418023ecfd748f3d45dac4043a3af772",
            "1": "2708beb0.1cbd3ff4.d0d1fedc.c81e2a8c.cdbb82cf.a80db726.b06a92ca.c5b28e25.2708beb0.1cbd3ff4.d0d1fedc.c81e2a8c.cdbb82cf.a80db726.b06a92ca.c5b28e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-ce-task-projectanalysis/src/it/java/org/sonar/ce/task/projectanalysis/source/PersistFileSourcesStepIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 454,
                            "endLine": 454,
                            "startColumn": 23,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-ce-task-projectanalysis/src/test/java/org/sonar/ce/task/projectanalysis/issue/ComputeLocationHashesVisitorTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 251,
                  "endLine": 251,
                  "startColumn": 77,
                  "endColumn": 95
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f2414a86e5f289f0e2c82c38294276dfc88aa9999d243d6af85448340c790526",
            "1": "2708beb0.1cbd3ff4.a850d40d.42309021.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25.2708beb0.1cbd3ff4.a850d40d.42309021.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-ce-task-projectanalysis/src/test/java/org/sonar/ce/task/projectanalysis/issue/ComputeLocationHashesVisitorTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 251,
                            "endLine": 251,
                            "startColumn": 77,
                            "endColumn": 95
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-ce-task-projectanalysis/src/test/java/org/sonar/ce/task/projectanalysis/issue/ComputeLocationHashesVisitorTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 279,
                  "endLine": 279,
                  "startColumn": 77,
                  "endColumn": 95
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7e117f8ac2febe2860d539b460da7a4ad43e4a91045bf452adbfc7b3feb90b35",
            "1": "2708beb0.1cbd3ff4.a850d40d.42309021.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25.2708beb0.1cbd3ff4.a850d40d.42309021.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-ce-task-projectanalysis/src/test/java/org/sonar/ce/task/projectanalysis/issue/ComputeLocationHashesVisitorTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 279,
                            "endLine": 279,
                            "startColumn": 77,
                            "endColumn": 95
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-ce-task-projectanalysis/src/test/java/org/sonar/ce/task/projectanalysis/issue/ComputeLocationHashesVisitorTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 280,
                  "endLine": 280,
                  "startColumn": 77,
                  "endColumn": 95
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2985bfb593bf04fcad81aca76f2c9993adc3f07c0385219fa8ad40ec6800da4f",
            "1": "2708beb0.1cbd3ff4.ecc5c209.42309021.68e56b0d.4cb70bfe.4ed8a9eb.54d46e25.2708beb0.1cbd3ff4.ecc5c209.42309021.68e56b0d.4cb70bfe.4ed8a9eb.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-ce-task-projectanalysis/src/test/java/org/sonar/ce/task/projectanalysis/issue/ComputeLocationHashesVisitorTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 280,
                            "endLine": 280,
                            "startColumn": 77,
                            "endColumn": 95
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-ce-task-projectanalysis/src/test/java/org/sonar/ce/task/projectanalysis/issue/ComputeLocationHashesVisitorTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 307,
                  "endLine": 307,
                  "startColumn": 77,
                  "endColumn": 95
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b33df7279189a48793d8cd6f5baf3ae5bd31afde630df7bb50964a4d7f72236a",
            "1": "2708beb0.1cbd3ff4.a850d40d.42309021.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25.2708beb0.1cbd3ff4.a850d40d.42309021.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-ce-task-projectanalysis/src/test/java/org/sonar/ce/task/projectanalysis/issue/ComputeLocationHashesVisitorTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 307,
                            "endLine": 307,
                            "startColumn": 77,
                            "endColumn": 95
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-ce-task-projectanalysis/src/test/java/org/sonar/ce/task/projectanalysis/issue/ComputeLocationHashesVisitorTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 308,
                  "endLine": 308,
                  "startColumn": 77,
                  "endColumn": 95
                }
              }
            }
          ],
          "fingerprints": {
            "0": "401ba4a79c26ef5db36c8422054e0fb3a91f17f834d3baf338a3c1c2b7d79b47",
            "1": "2708beb0.1cbd3ff4.a410c612.42309021.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25.2708beb0.1cbd3ff4.a410c612.42309021.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-ce-task-projectanalysis/src/test/java/org/sonar/ce/task/projectanalysis/issue/ComputeLocationHashesVisitorTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 308,
                            "endLine": 308,
                            "startColumn": 77,
                            "endColumn": 95
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-ce-task-projectanalysis/src/test/java/org/sonar/ce/task/projectanalysis/issue/ComputeLocationHashesVisitorTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 368,
                  "endLine": 368,
                  "startColumn": 27,
                  "endColumn": 45
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a315ec295d7857191d0ec58b92840d5023ab65de28a6582db98f608d3b51ed3c",
            "1": "2708beb0.1cbd3ff4.7063733b.de01f1e4.e014651e.e04143cf.acaf7093.54d46e25.2708beb0.1cbd3ff4.7063733b.de01f1e4.e014651e.e04143cf.acaf7093.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-ce-task-projectanalysis/src/test/java/org/sonar/ce/task/projectanalysis/issue/ComputeLocationHashesVisitorTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 368,
                            "endLine": 368,
                            "startColumn": 27,
                            "endColumn": 45
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-core/src/test/java/org/sonar/core/issue/tracking/TrackerTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 521,
                  "endLine": 521,
                  "startColumn": 21,
                  "endColumn": 39
                }
              }
            }
          ],
          "fingerprints": {
            "0": "809173c79072cec7a3ee223decefc8a80d498108d7aef8bada4d2cd71a6186ec",
            "1": "2708beb0.1cbd3ff4.33fa5dbe.e22980a8.025462d2.7fda7c5e.0e032760.54d46e25.2708beb0.1cbd3ff4.33fa5dbe.e22980a8.025462d2.7fda7c5e.0e032760.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-core/src/test/java/org/sonar/core/issue/tracking/TrackerTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 521,
                            "endLine": 521,
                            "startColumn": 21,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 374,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-scanner-engine/src/test/java/org/sonar/scanner/scan/filesystem/MetadataGeneratorTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 102,
                  "endLine": 102,
                  "startColumn": 47,
                  "endColumn": 53
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e7c72950eaf7b7fa74f0bf4309677184566cee3b03b638d5687f010b6174df67",
            "1": "2708beb0.1cbd3ff4.0376d93e.42309021.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25.2708beb0.1cbd3ff4.0376d93e.42309021.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-scanner-engine/src/test/java/org/sonar/scanner/scan/filesystem/MetadataGeneratorTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 102,
                            "endLine": 102,
                            "startColumn": 47,
                            "endColumn": 53
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 374,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-core/src/test/java/org/sonar/core/hash/SourceHashComputerTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 47,
                  "endLine": 47,
                  "startColumn": 18,
                  "endColumn": 36
                }
              }
            }
          ],
          "fingerprints": {
            "0": "be7f4d69adb0585d7b232399d70d0ead4d09ddecd9b24130cb481447e9e0977f",
            "1": "2708beb0.1cbd3ff4.ecc5c209.44ab356c.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25.2708beb0.1cbd3ff4.ecc5c209.44ab356c.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-core/src/test/java/org/sonar/core/hash/SourceHashComputerTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 18,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 374,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 79,
                  "endLine": 79,
                  "startColumn": 43,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c5a8725715586d0f4f699447ecedb136193c29765544f33b67028bf38360d439",
            "1": "2708beb0.1cbd3ff4.0376d93e.42309021.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25.2708beb0.1cbd3ff4.0376d93e.42309021.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 43,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 92,
                  "endLine": 92,
                  "startColumn": 43,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2c6ba689831fed8573f5027e2d2be70afc67413022adfec30e86cdfef70acf86",
            "1": "2708beb0.1cbd3ff4.4a261e8c.8d5b8e5f.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25.2708beb0.1cbd3ff4.4a261e8c.8d5b8e5f.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 92,
                            "endLine": 92,
                            "startColumn": 43,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 104,
                  "endLine": 104,
                  "startColumn": 43,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1934fdbd8d8352f52fbc67947770ac85822fd407b87bf8db8df8c8caaa900712",
            "1": "2708beb0.1cbd3ff4.ecc5c209.42309021.4a9c8cbc.4cb70bfe.2a6adc94.54d46e25.2708beb0.1cbd3ff4.ecc5c209.42309021.4a9c8cbc.4cb70bfe.2a6adc94.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 104,
                            "startColumn": 43,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 115,
                  "endLine": 115,
                  "startColumn": 43,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2c760290c5b1f8d60c42fbf53446d4d649e706254aaf56c03477bcbca32ade5f",
            "1": "2708beb0.1cbd3ff4.ecc5c209.44ab356c.4a9c8cbc.4cb70bfe.2a6adc94.54d46e25.2708beb0.1cbd3ff4.ecc5c209.44ab356c.4a9c8cbc.4cb70bfe.2a6adc94.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 43,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 127,
                  "endLine": 127,
                  "startColumn": 43,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "07bae4b5df0929464ec7ac47ca207d2dd5cff414b0c562aef890b3ded8e8853d",
            "1": "2708beb0.1cbd3ff4.0376d93e.42309021.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25.2708beb0.1cbd3ff4.0376d93e.42309021.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 43,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 141,
                  "endLine": 141,
                  "startColumn": 43,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4bd7aeece2630775bca8f3694aa752032399e9fe17275175998aed316dec6e9b",
            "1": "2708beb0.1cbd3ff4.ecc5c209.42309021.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25.2708beb0.1cbd3ff4.ecc5c209.42309021.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 141,
                            "endLine": 141,
                            "startColumn": 43,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 154,
                  "endLine": 154,
                  "startColumn": 43,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "401805751aaf2b2752846c806d6d74ea6898e01990734d1c32ea8f09c4d0f2be",
            "1": "2708beb0.1cbd3ff4.0376d93e.42309021.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25.2708beb0.1cbd3ff4.0376d93e.42309021.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 154,
                            "endLine": 154,
                            "startColumn": 43,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 167,
                  "endLine": 167,
                  "startColumn": 43,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "abb0b931763878b339a0666017be9b0039a5862c8b6828fd58d7d609192176ba",
            "1": "2708beb0.1cbd3ff4.ecc5c209.42309021.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25.2708beb0.1cbd3ff4.ecc5c209.42309021.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 167,
                            "endLine": 167,
                            "startColumn": 43,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 180,
                  "endLine": 180,
                  "startColumn": 43,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4685e954f4b8dda861481666a7fdba27c954f50cf9b17c3c8f5aeea38f5badb0",
            "1": "2708beb0.1cbd3ff4.ecc5c209.42309021.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25.2708beb0.1cbd3ff4.ecc5c209.42309021.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 180,
                            "startColumn": 43,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 193,
                  "endLine": 193,
                  "startColumn": 43,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e987446a1056c9bf1b133d4ee43db2945e7377ce4c16d476786866253cd18813",
            "1": "2708beb0.1cbd3ff4.aa9ec5a6.42309021.28b03613.4cb70bfe.4ed8a9eb.54d46e25.2708beb0.1cbd3ff4.aa9ec5a6.42309021.28b03613.4cb70bfe.4ed8a9eb.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 193,
                            "endLine": 193,
                            "startColumn": 43,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 206,
                  "endLine": 206,
                  "startColumn": 43,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3b60735a6c45d56c48134b9661ff8fa255d5817b8687327b7715d7a2a4da1a2b",
            "1": "2708beb0.1cbd3ff4.0376d93e.42309021.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25.2708beb0.1cbd3ff4.0376d93e.42309021.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 206,
                            "endLine": 206,
                            "startColumn": 43,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 219,
                  "endLine": 219,
                  "startColumn": 43,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2651691a5f424e9b135966253b6f00c36c45a699934716487ade6611866b784b",
            "1": "2708beb0.1cbd3ff4.ecc5c209.58b6a02a.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25.2708beb0.1cbd3ff4.ecc5c209.58b6a02a.4a9c8cbc.4cb70bfe.4ed8a9eb.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 43,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 239,
                  "endLine": 239,
                  "startColumn": 61,
                  "endColumn": 67
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a21f24e263a7406a0ac6a71304288c9b52157f26b1f9c821134457b977e72346",
            "1": "2708beb0.1cbd3ff4.ecc5c209.42309021.4a9c8cbc.4cb70bfe.9fde09a8.54d46e25.2708beb0.1cbd3ff4.ecc5c209.42309021.4a9c8cbc.4cb70bfe.9fde09a8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 239,
                            "endLine": 239,
                            "startColumn": 61,
                            "endColumn": 67
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 242,
                  "endLine": 242,
                  "startColumn": 61,
                  "endColumn": 67
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bf0caa70c7ea1f05d54e3e42142531c4cb98671923457d025b83947987a3a286",
            "1": "2708beb0.1cbd3ff4.fd396cbd.42309021.4a9c8cbc.4cb70bfe.473f5c8d.54d46e25.2708beb0.1cbd3ff4.fd396cbd.42309021.4a9c8cbc.4cb70bfe.473f5c8d.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 242,
                            "endLine": 242,
                            "startColumn": 61,
                            "endColumn": 67
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 245,
                  "endLine": 245,
                  "startColumn": 61,
                  "endColumn": 67
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2bba660be0ad55490cf6b3b3c8e1b080f15d8ba6096eb6142315433646463f3f",
            "1": "2708beb0.1cbd3ff4.44f8f566.42309021.b979da9a.4cb70bfe.4ed8a9eb.54d46e25.2708beb0.1cbd3ff4.44f8f566.42309021.b979da9a.4cb70bfe.4ed8a9eb.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-plugin-api-impl/src/test/java/org/sonar/api/batch/fs/internal/fs/FileMetadataTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 245,
                            "endLine": 245,
                            "startColumn": 61,
                            "endColumn": 67
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 424,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HttpToHttps",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "http.createServer uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.",
            "markdown": "{0} uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.",
            "arguments": [
              "[http.createServer](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-web/scripts/start.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 97,
                  "endLine": 98,
                  "startColumn": 7,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b7f4c4b4009fd3240fe05faa82f15e90b9d522ea9ba7ac634bc87d87effab961",
            "1": "d22593cc.4773f344.607187b5.c559ebce.2fce9a75.6f0d36d4.cd61fc56.b1b5c7cb.69ce48b3.4773f344.c760e037.c559ebce.f7b6c27c.5fce695c.afaa7cb8.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/scripts/start.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 98,
                            "startColumn": 7,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/PrototypePollution",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into a member access and is used to access a property of this object by name. This may allow a malicious user to pollute the Object.prototype and cause a crash, remote code execution or logic bypasses.",
            "markdown": "Unsanitized input from {0} {1} into a member access and is used to access a property of {2} by name. This may allow a malicious user to pollute the Object.prototype and cause a crash, remote code execution or logic bypasses.",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22)",
              "[this object](23)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-web/src/main/js/api/issues.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 143,
                  "endLine": 143,
                  "startColumn": 11,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6d452111bac015156ba01901b612f2ec209f5e9efa5cd963efb0252bce0f5de7",
            "1": "3900f8ff.4773f344.9a1ec670.a517c54b.ee888e38.8020cfdf.df7e59ba.1f42738c.40866a6c.b6e32c83.8fa2b70f.c559ebce.79a7d027.becd9ff1.83265159.331ca275"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/helpers/request.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 218,
                            "endLine": 218,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/helpers/request.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 218,
                            "endLine": 218,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/helpers/request.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 6,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/helpers/request.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 218,
                            "endLine": 219,
                            "startColumn": 10,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/helpers/request.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 220,
                            "endLine": 220,
                            "startColumn": 6,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/helpers/request.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 221,
                            "endLine": 221,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/helpers/request.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 221,
                            "endLine": 221,
                            "startColumn": 37,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/helpers/request.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 221,
                            "endLine": 221,
                            "startColumn": 25,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/helpers/request.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 221,
                            "endLine": 221,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/helpers/request.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 218,
                            "endLine": 221,
                            "startColumn": 10,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/api/issues.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 133,
                            "endLine": 133,
                            "startColumn": 10,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/api/issues.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 12,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/api/issues.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 135,
                            "endLine": 135,
                            "startColumn": 11,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/api/issues.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 138,
                            "endLine": 138,
                            "startColumn": 24,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/api/issues.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 138,
                            "endLine": 138,
                            "startColumn": 14,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/api/issues.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/api/issues.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 140,
                            "endLine": 140,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/api/issues.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 141,
                            "endLine": 141,
                            "startColumn": 19,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/api/issues.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 141,
                            "endLine": 141,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/api/issues.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 141,
                            "endLine": 141,
                            "startColumn": 36,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/api/issues.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 142,
                            "endLine": 142,
                            "startColumn": 20,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/api/issues.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 38,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/api/issues.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 18,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-web/src/main/js/api/issues.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 11,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword",
          "ruleIndex": 12,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-core/src/main/java/org/sonar/server/platform/monitoring/SettingsSection.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 56,
                  "endLine": 56,
                  "startColumn": 48,
                  "endColumn": 58
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2b0026a3f54168f690100ac8970ee6e003407453cf853d4428f6185c79fb6c4e",
            "1": "416089e6.d6ef6b48.cc275a3a.de031890.8b2d3351.ce109560.5d75f427.87dfd8cc.19689298.d6ef6b48.cc275a3a.de031890.bb61bed7.ce109560.5d75f427.87974e34"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-core/src/main/java/org/sonar/server/platform/monitoring/SettingsSection.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 48,
                            "endColumn": 58
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 502,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword",
          "ruleIndex": 12,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-core/src/main/java/org/sonar/core/config/SvnProperties.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 26,
                  "endLine": 26,
                  "startColumn": 50,
                  "endColumn": 78
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4c30f79f09e50920a0e749afc7fd69048f62d30f0909c5a4dc6136bec345d328",
            "1": "3b4cc0e2.dd05ec30.3c7d90aa.de031890.8b2d3351.ce109560.e4580e17.87dfd8cc.3b4cc0e2.dd05ec30.3c7d90aa.de031890.bb61bed7.ce109560.7115c551.87dfd8cc"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-core/src/main/java/org/sonar/core/config/SvnProperties.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 50,
                            "endColumn": 78
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 502,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF",
          "ruleIndex": 13,
          "level": "note",
          "message": {
            "text": "The createRequest parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[createRequest](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-webapi-v2/src/main/java/org/sonar/server/v2/api/gitlab/config/controller/GitlabConfigurationController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 85,
                  "endLine": 85,
                  "startColumn": 38,
                  "endColumn": 108
                }
              }
            }
          ],
          "fingerprints": {
            "0": "39a13538a965eea5480f77a7e2a08d6bdbb293dc77ff4117bef3b882f6d1bb61",
            "1": "cb724ed2.7f413d6f.c226adb8.3519ac88.f0e1baa5.58c3080a.3fdad29d.13c56f84.cb724ed2.7f413d6f.c226adb8.3519ac88.f0e1baa5.58c3080a.1a0c7c19.13c56f84"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-webapi-v2/src/main/java/org/sonar/server/v2/api/gitlab/config/controller/GitlabConfigurationController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 38,
                            "endColumn": 108
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 152,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF",
          "ruleIndex": 13,
          "level": "note",
          "message": {
            "text": "The createRequest parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[createRequest](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-webapi-v2/src/main/java/org/sonar/server/v2/api/github/config/controller/GithubConfigurationController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 85,
                  "endLine": 85,
                  "startColumn": 57,
                  "endColumn": 127
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4de8d6003248dff9e817cfbc2d82b04410bb63ea99fcf8b134be3d6d88cb2926",
            "1": "cb724ed2.7f413d6f.0e8fb213.a9b6d469.f0e1baa5.58c3080a.cfe52e6a.6df6ca29.cb724ed2.7f413d6f.0e8fb213.a9b6d469.f0e1baa5.58c3080a.1a0c7c19.6df6ca29"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-webapi-v2/src/main/java/org/sonar/server/v2/api/github/config/controller/GithubConfigurationController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 57,
                            "endColumn": 127
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 152,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF",
          "ruleIndex": 13,
          "level": "note",
          "message": {
            "text": "The request parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[request](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-webapi-v2/src/main/java/org/sonar/server/v2/api/projects/controller/BoundProjectsController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 47,
                  "endLine": 47,
                  "startColumn": 53,
                  "endColumn": 110
                }
              }
            }
          ],
          "fingerprints": {
            "0": "38c33d0770fe7682a27e67f1c55bef9872e242d3dcedac7640c5ac91a854477d",
            "1": "37491bea.daf10368.a224ef38.3519ac88.034a150e.58c3080a.ab4f38ac.6dfde234.37491bea.daf10368.a224ef38.3519ac88.034a150e.58c3080a.1a0c7c19.6dfde234"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-webapi-v2/src/main/java/org/sonar/server/v2/api/projects/controller/BoundProjectsController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 53,
                            "endColumn": 110
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 152,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureDefaultAesCipher",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "Default AES/ECB algorithm (AES) used in javax.crypto.Cipher.getInstance may be insecure, because equal messages get encrypted to equal data. Consider using Galois/Counter Mode (algorithm AES/GCM/NoPadding).",
            "markdown": "Default AES/ECB algorithm ({0}) used in {1} may be insecure, because equal messages get encrypted to equal data. Consider using Galois/Counter Mode (algorithm AES/GCM/NoPadding).",
            "arguments": [
              "[AES](0)",
              "[javax.crypto.Cipher.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-plugin-api-impl/src/main/java/org/sonar/api/config/internal/AesECBCipher.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 42,
                  "startColumn": 36,
                  "endColumn": 67
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5bc1107dc1792c9e61c0ec52e76b19e067b4b78d9d148d88e12253d5dcc7e7ae",
            "1": "f76884db.1cbd3ff4.fdf08d99.8593c2f0.74c2d841.dee4b315.3a890aa4.54d46e25.f76884db.dd05ec30.ba832df5.de031890.8b2d3351.ce109560.3a890aa4.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-plugin-api-impl/src/main/java/org/sonar/api/config/internal/AesECBCipher.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "endLine": 33,
                            "startColumn": 45,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-plugin-api-impl/src/main/java/org/sonar/api/config/internal/AesECBCipher.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 36,
                            "endColumn": 67
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureDefaultAesCipher",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "Default AES/ECB algorithm (AES) used in javax.crypto.Cipher.getInstance may be insecure, because equal messages get encrypted to equal data. Consider using Galois/Counter Mode (algorithm AES/GCM/NoPadding).",
            "markdown": "Default AES/ECB algorithm ({0}) used in {1} may be insecure, because equal messages get encrypted to equal data. Consider using Galois/Counter Mode (algorithm AES/GCM/NoPadding).",
            "arguments": [
              "[AES](0)",
              "[javax.crypto.Cipher.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-plugin-api-impl/src/main/java/org/sonar/api/config/internal/AesECBCipher.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 56,
                  "endLine": 56,
                  "startColumn": 36,
                  "endColumn": 67
                }
              }
            }
          ],
          "fingerprints": {
            "0": "848535675dc0e1d74346cab61be3483658f231a96ce5947e95bed021210871c7",
            "1": "f76884db.1cbd3ff4.fdf08d99.8593c2f0.74c2d841.dee4b315.3a890aa4.54d46e25.f76884db.dd05ec30.ba832df5.de031890.8b2d3351.ce109560.3a890aa4.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-plugin-api-impl/src/main/java/org/sonar/api/config/internal/AesECBCipher.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "endLine": 33,
                            "startColumn": 45,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-plugin-api-impl/src/main/java/org/sonar/api/config/internal/AesECBCipher.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 36,
                            "endColumn": 67
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/NoHardcodedCredentials/test",
          "ruleIndex": 15,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code.",
            "markdown": "Do not hardcode credentials in code.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-webapi/src/it/java/org/sonar/server/almintegration/ws/SetPatActionIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 98,
                  "endLine": 98,
                  "startColumn": 23,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b1d9f0804e29d5bce1b4cf0604ef589994f4760bfde948bf5b4f5980ab72db7f",
            "1": "19689298.b1f2e576.f3ece984.f73dd188.4351da80.ba2b7f9a.0257fea4.54d46e25.19689298.b1f2e576.c2dbeeec.e22980a8.f5f4b203.ba2b7f9a.d75a0942.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-webapi/src/it/java/org/sonar/server/almintegration/ws/SetPatActionIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 98,
                            "endLine": 98,
                            "startColumn": 23,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 154,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/NoHardcodedCredentials/test",
          "ruleIndex": 15,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code.",
            "markdown": "Do not hardcode credentials in code.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-ws/src/test/java/org/sonarqube/ws/client/HttpConnectorTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 194,
                  "endLine": 194,
                  "startColumn": 76,
                  "endColumn": 86
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b8133dc69260e0114569080ae1456bc34c2e4e1a0ad02bdb9474faf0915ca311",
            "1": "455f12f9.81c775d1.29afd482.5da9b209.b6cbe0be.f940a352.ef1a010c.df0541a3.455f12f9.81c775d1.29afd482.5da9b209.b6cbe0be.4cb70bfe.ef1a010c.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-ws/src/test/java/org/sonarqube/ws/client/HttpConnectorTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 194,
                            "endLine": 194,
                            "startColumn": 76,
                            "endColumn": 86
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 204,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/NoHardcodedCredentials/test",
          "ruleIndex": 15,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code.",
            "markdown": "Do not hardcode credentials in code.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-ws/src/test/java/org/sonarqube/ws/client/HttpConnectorTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 209,
                  "endLine": 209,
                  "startColumn": 76,
                  "endColumn": 86
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6e9e3cf1dbbc367ad0060f13de7677160cc31139a42ee8aefac9dc449d9b4a7f",
            "1": "c9f51d48.81c775d1.000ea970.5da9b209.b6cbe0be.8e98e979.0ac97cd8.df0541a3.c9f51d48.81c775d1.000ea970.5da9b209.b6cbe0be.4cb70bfe.0ac97cd8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-ws/src/test/java/org/sonarqube/ws/client/HttpConnectorTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 209,
                            "endLine": 209,
                            "startColumn": 76,
                            "endColumn": 86
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 204,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/NoHardcodedCredentials/test",
          "ruleIndex": 15,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code.",
            "markdown": "Do not hardcode credentials in code.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-ws/src/test/java/org/sonarqube/ws/client/HttpConnectorTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 248,
                  "endLine": 248,
                  "startColumn": 76,
                  "endColumn": 86
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d6e1d10284c983a02d201df273e155838015fca57e7e73752856d4016f10b31b",
            "1": "c9f51d48.81c775d1.000ea970.5da9b209.b6cbe0be.258ac957.0ac97cd8.9ec18d1e.c9f51d48.81c775d1.000ea970.5da9b209.b6cbe0be.4cb70bfe.0ac97cd8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-ws/src/test/java/org/sonarqube/ws/client/HttpConnectorTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 248,
                            "endLine": 248,
                            "startColumn": 76,
                            "endColumn": 86
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 204,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/NoHardcodedCredentials/test",
          "ruleIndex": 15,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code.",
            "markdown": "Do not hardcode credentials in code.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-ws/src/test/java/org/sonarqube/ws/client/HttpConnectorTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 287,
                  "endLine": 287,
                  "startColumn": 84,
                  "endColumn": 99
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b335e305c25aedb19f78393e9493424ea18d01afcd4630352226a2f45444f307",
            "1": "ca9876a9.81c775d1.3a1d09d6.5da9b209.b6cbe0be.f940a352.ef1e4a8a.0cbafb74.ca9876a9.81c775d1.3a1d09d6.5da9b209.b6cbe0be.4cb70bfe.ef1e4a8a.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-ws/src/test/java/org/sonarqube/ws/client/HttpConnectorTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 287,
                            "endLine": 287,
                            "startColumn": 84,
                            "endColumn": 99
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 204,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/NoHardcodedCredentials/test",
          "ruleIndex": 15,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code.",
            "markdown": "Do not hardcode credentials in code.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-ws/src/test/java/org/sonarqube/ws/client/HttpConnectorTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 311,
                  "endLine": 311,
                  "startColumn": 84,
                  "endColumn": 99
                }
              }
            }
          ],
          "fingerprints": {
            "0": "19311d73ac0760a14aacb1531e11d09a6180dde440e23acf9794cfedddff6850",
            "1": "ca9876a9.81c775d1.3a1d09d6.5da9b209.e2a0c3ad.90f63daa.ef1e4a8a.82be4920.ca9876a9.81c775d1.3a1d09d6.5da9b209.e2a0c3ad.4cb70bfe.ef1e4a8a.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-ws/src/test/java/org/sonarqube/ws/client/HttpConnectorTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 311,
                            "endLine": 311,
                            "startColumn": 84,
                            "endColumn": 99
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 204,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedSecret/test",
          "ruleIndex": 16,
          "level": "note",
          "message": {
            "text": "Hardcoded value string is used as a cipher key. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "markdown": "Hardcoded value {0} is used as a {1}. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "arguments": [
              "[string](0)",
              "[cipher key](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-db-dao/src/it/java/org/sonar/db/alm/setting/AlmSettingDaoWithPersisterIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 79,
                  "endLine": 79,
                  "startColumn": 5,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c924bab4b5f7d73de124bd5bc54f21386f36cf4e7bbb804992bbefd73ec31b86",
            "1": "5d647093.c5c158c1.fc7d5400.e22980a8.f1d9f854.fb89e642.84bb7a7b.54d46e25.5d647093.c5c158c1.fc7d5400.e22980a8.f1d9f854.fb89e642.84bb7a7b.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-dao/src/it/java/org/sonar/db/alm/setting/AlmSettingDaoWithPersisterIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 33,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-dao/src/it/java/org/sonar/db/alm/setting/AlmSettingDaoWithPersisterIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 5,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 354,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedSecret/test",
          "ruleIndex": 16,
          "level": "note",
          "message": {
            "text": "Hardcoded value string is used as a cipher key. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "markdown": "Hardcoded value {0} is used as a {1}. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "arguments": [
              "[string](0)",
              "[cipher key](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-webapi/src/it/java/org/sonar/server/almsettings/ws/GetBindingActionIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 169,
                  "startColumn": 24,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ca085f996ba42f69b7121617fb7324ed18c7af047fe5dab22541224b4be4f86b",
            "1": "e7c81212.a8853d72.91af9c5c.acd619cf.f2a5bca1.fb89e642.d6712bb3.54d46e25.e7c81212.a8853d72.91af9c5c.acd619cf.f2a5bca1.fb89e642.d6712bb3.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-webapi/src/it/java/org/sonar/server/almsettings/ws/GetBindingActionIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 169,
                            "endLine": 169,
                            "startColumn": 24,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-webapi/src/it/java/org/sonar/server/almsettings/ws/GetBindingActionIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 165,
                            "endLine": 169,
                            "startColumn": 24,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 354,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedSecret/test",
          "ruleIndex": 16,
          "level": "note",
          "message": {
            "text": "Hardcoded value string is used as a cipher key. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "markdown": "Hardcoded value {0} is used as a {1}. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "arguments": [
              "[string](0)",
              "[cipher key](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-webapi/src/it/java/org/sonar/server/almsettings/ws/CountBindingActionIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 117,
                  "endLine": 120,
                  "startColumn": 24,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0c408171fd7b950448f8690baa1e7589ed5f7dc9fb957cef91b4406367a6f6b1",
            "1": "e7c81212.a8853d72.91af9c5c.acd619cf.f2a5bca1.fb89e642.d6712bb3.54d46e25.e7c81212.a8853d72.91af9c5c.acd619cf.f2a5bca1.fb89e642.d6712bb3.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-webapi/src/it/java/org/sonar/server/almsettings/ws/CountBindingActionIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 120,
                            "endLine": 120,
                            "startColumn": 24,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-webapi/src/it/java/org/sonar/server/almsettings/ws/CountBindingActionIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 120,
                            "startColumn": 24,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 354,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedSecret/test",
          "ruleIndex": 16,
          "level": "note",
          "message": {
            "text": "Hardcoded value string is used as a cipher key. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "markdown": "Hardcoded value {0} is used as a {1}. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "arguments": [
              "[string](0)",
              "[cipher key](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-webapi/src/it/java/org/sonar/server/almsettings/ws/ListDefinitionsActionIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 169,
                  "startColumn": 24,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "682e27b1ddd5b6480e88c8e16140132caebcf0e50f4f8c0420d239e1682ce357",
            "1": "5d647093.7a9fbfb8.91af9c5c.d1cc40d7.24283c7d.fb89e642.7fdcb97d.54d46e25.5d647093.7a9fbfb8.91af9c5c.d1cc40d7.24283c7d.fb89e642.7fdcb97d.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-webapi/src/it/java/org/sonar/server/almsettings/ws/ListDefinitionsActionIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 169,
                            "endLine": 169,
                            "startColumn": 24,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-webapi/src/it/java/org/sonar/server/almsettings/ws/ListDefinitionsActionIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 165,
                            "endLine": 169,
                            "startColumn": 24,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 354,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedSecret/test",
          "ruleIndex": 16,
          "level": "note",
          "message": {
            "text": "Hardcoded value string is used as a cipher key. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "markdown": "Hardcoded value {0} is used as a {1}. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "arguments": [
              "[string](0)",
              "[cipher key](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubGlobalSettingsValidatorTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 135,
                  "endLine": 135,
                  "startColumn": 5,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "06ce25d49d889a39adcb456e20cc0001f00b92eecc092cdfa76069589c1070bc",
            "1": "19689298.37c009d0.fc7d5400.e22980a8.43acada5.8c64ec23.ba2bdda3.54d46e25.19689298.37c009d0.6edac7f7.de031890.6b4ad46c.ce109560.ba2bdda3.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubGlobalSettingsValidatorTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 53,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubGlobalSettingsValidatorTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 135,
                            "endLine": 135,
                            "startColumn": 5,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 354,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedSecret/test",
          "ruleIndex": 16,
          "level": "note",
          "message": {
            "text": "Hardcoded value string is used as a cipher key. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "markdown": "Hardcoded value {0} is used as a {1}. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "arguments": [
              "[string](0)",
              "[cipher key](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-db-dao/src/it/java/org/sonar/db/alm/setting/AlmSettingDaoIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 138,
                  "endLine": 138,
                  "startColumn": 5,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fb61973b3acdccdc51d7a33cadc3c5efad1218b778b3d1c81db3912711d6afb3",
            "1": "5d647093.2e99d069.fc7d5400.e22980a8.355ddd66.fb89e642.84bb7a7b.54d46e25.5d647093.2e99d069.fc7d5400.e22980a8.355ddd66.fb89e642.84bb7a7b.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-dao/src/it/java/org/sonar/db/alm/setting/AlmSettingDaoIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 138,
                            "endLine": 138,
                            "startColumn": 28,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-dao/src/it/java/org/sonar/db/alm/setting/AlmSettingDaoIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 138,
                            "endLine": 138,
                            "startColumn": 5,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 354,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureSecret/test",
          "ruleIndex": 17,
          "level": "note",
          "message": {
            "text": "Insecure random data flows from org.apache.commons.lang3.RandomStringUtils.randomAlphabetic and is used as a secret data. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "markdown": "Insecure random data {0} from {1} and is used as a {2}. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "arguments": [
              "[flows](0),(1),(2)",
              "[org.apache.commons.lang3.RandomStringUtils.randomAlphabetic](3)",
              "[secret data](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GenericApplicationHttpClientTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 69,
                  "endLine": 69,
                  "startColumn": 29,
                  "endColumn": 84
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a437023e70dbcfc7375a0bf5f782a5f5c39b4a6755d20e4a39521f2496ae54cb",
            "1": "82f8622a.cb5ca174.02b47c1d.de031890.a67bd94f.ea8f4fa5.c66d287d.bd75b03c.82f8622a.cb5ca174.02b47c1d.de031890.a67bd94f.ea8f4fa5.c66d287d.bd75b03c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GenericApplicationHttpClientTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 69,
                            "endLine": 69,
                            "startColumn": 29,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GenericApplicationHttpClientTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 69,
                            "endLine": 69,
                            "startColumn": 47,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GenericApplicationHttpClientTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 69,
                            "endLine": 69,
                            "startColumn": 63,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GenericApplicationHttpClientTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 69,
                            "endLine": 69,
                            "startColumn": 63,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GenericApplicationHttpClientTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 69,
                            "endLine": 69,
                            "startColumn": 29,
                            "endColumn": 84
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 360,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureSecret/test",
          "ruleIndex": 17,
          "level": "note",
          "message": {
            "text": "Insecure random data flows from org.apache.commons.lang3.RandomStringUtils.randomAlphabetic and is used as a secret data. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "markdown": "Insecure random data {0} from {1} and is used as a {2}. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "arguments": [
              "[flows](0),(1)",
              "[org.apache.commons.lang3.RandomStringUtils.randomAlphabetic](2)",
              "[secret data](3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-auth-github/src/test/java/org/sonar/auth/github/GithubAppConfigurationTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 78,
                  "endLine": 78,
                  "startColumn": 12,
                  "endColumn": 44
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ca803cd0c7fab9bf6a7716f1553375ec273daf8480de38943ac0c657dca8f379",
            "1": "19689298.1cbd3ff4.bf05a696.e22980a8.129dceea.f940a352.efcbc9cc.54d46e25.19689298.1cbd3ff4.bf05a696.e22980a8.129dceea.f940a352.efcbc9cc.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-github/src/test/java/org/sonar/auth/github/GithubAppConfigurationTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 12,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-github/src/test/java/org/sonar/auth/github/GithubAppConfigurationTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 25,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-github/src/test/java/org/sonar/auth/github/GithubAppConfigurationTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 25,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-github/src/test/java/org/sonar/auth/github/GithubAppConfigurationTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 12,
                            "endColumn": 44
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureSecret/test",
          "ruleIndex": 17,
          "level": "note",
          "message": {
            "text": "Insecure random data flows from org.apache.commons.lang3.RandomStringUtils.randomAlphabetic and is used as a secret data. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "markdown": "Insecure random data {0} from {1} and is used as a {2}. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "arguments": [
              "[flows](0),(1)",
              "[org.apache.commons.lang3.RandomStringUtils.randomAlphabetic](2)",
              "[secret data](3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-auth-github/src/test/java/org/sonar/auth/github/GithubAppConfigurationTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 91,
                  "endLine": 91,
                  "startColumn": 12,
                  "endColumn": 44
                }
              }
            }
          ],
          "fingerprints": {
            "0": "31a3a17d802134448e901af2a5d9f0af99fb1b249af30303933c4103230c3d65",
            "1": "19689298.5594c865.fc7d5400.e22980a8.f1d9f854.f940a352.9e58c73e.54d46e25.19689298.5594c865.fc7d5400.e22980a8.f1d9f854.f940a352.9e58c73e.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-github/src/test/java/org/sonar/auth/github/GithubAppConfigurationTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 12,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-github/src/test/java/org/sonar/auth/github/GithubAppConfigurationTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 25,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-github/src/test/java/org/sonar/auth/github/GithubAppConfigurationTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 25,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-github/src/test/java/org/sonar/auth/github/GithubAppConfigurationTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 12,
                            "endColumn": 44
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureSecret/test",
          "ruleIndex": 17,
          "level": "note",
          "message": {
            "text": "Insecure random data flows from org.apache.commons.lang3.RandomStringUtils.randomAlphabetic and is used as a secret data. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "markdown": "Insecure random data {0} from {1} and is used as a {2}. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "arguments": [
              "[flows](0),(1)",
              "[org.apache.commons.lang3.RandomStringUtils.randomAlphabetic](2)",
              "[secret data](3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-auth-github/src/test/java/org/sonar/auth/github/GithubAppConfigurationTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 120,
                  "endLine": 120,
                  "startColumn": 12,
                  "endColumn": 44
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fb5189456fadc9293839d619f98f189386567c8f7b6068684875046f329117ea",
            "1": "19689298.595a3a84.d28b9498.e22980a8.f1d9f854.f940a352.a9aa177e.54d46e25.19689298.595a3a84.d28b9498.e22980a8.f1d9f854.f940a352.a9aa177e.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-github/src/test/java/org/sonar/auth/github/GithubAppConfigurationTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 120,
                            "endLine": 120,
                            "startColumn": 12,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-github/src/test/java/org/sonar/auth/github/GithubAppConfigurationTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 120,
                            "endLine": 120,
                            "startColumn": 25,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-github/src/test/java/org/sonar/auth/github/GithubAppConfigurationTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 120,
                            "endLine": 120,
                            "startColumn": 25,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-github/src/test/java/org/sonar/auth/github/GithubAppConfigurationTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 120,
                            "endLine": 120,
                            "startColumn": 12,
                            "endColumn": 44
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureSecret/test",
          "ruleIndex": 17,
          "level": "note",
          "message": {
            "text": "Insecure random data flows from org.apache.commons.lang3.RandomStringUtils.randomAlphabetic and is used as a secret data. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "markdown": "Insecure random data {0} from {1} and is used as a {2}. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "arguments": [
              "[flows](0),(1)",
              "[org.apache.commons.lang3.RandomStringUtils.randomAlphabetic](2)",
              "[secret data](3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-auth-github/src/test/java/org/sonar/auth/github/GithubAppConfigurationTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 133,
                  "endLine": 133,
                  "startColumn": 12,
                  "endColumn": 44
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cb9cc2c3d26570c5c7f90d55a197e47e995bd77447c5884e3ac173c82b9bbc94",
            "1": "19689298.595a3a84.d28b9498.e22980a8.f1d9f854.f940a352.a9aa177e.54d46e25.19689298.595a3a84.d28b9498.e22980a8.f1d9f854.f940a352.a9aa177e.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-github/src/test/java/org/sonar/auth/github/GithubAppConfigurationTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 133,
                            "endLine": 133,
                            "startColumn": 12,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-github/src/test/java/org/sonar/auth/github/GithubAppConfigurationTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 133,
                            "endLine": 133,
                            "startColumn": 25,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-github/src/test/java/org/sonar/auth/github/GithubAppConfigurationTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 133,
                            "endLine": 133,
                            "startColumn": 25,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-github/src/test/java/org/sonar/auth/github/GithubAppConfigurationTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 133,
                            "endLine": 133,
                            "startColumn": 12,
                            "endColumn": 44
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureSecret/test",
          "ruleIndex": 17,
          "level": "note",
          "message": {
            "text": "Insecure random data flows from org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric and is used as a cipher key. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "markdown": "Insecure random data {0} from {1} and is used as a {2}. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "arguments": [
              "[flows](0)",
              "[org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric](1)",
              "[cipher key](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-db-dao/src/testFixtures/java/org/sonar/db/almsettings/AlmSettingsTesting.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 37,
                  "endLine": 43,
                  "startColumn": 12,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ac56596b3ef8df16cdb2bb5359cebe38576e138dc34a87064eb137bdaa43931e",
            "1": "c4d23fe5.7a9fbfb8.1e67271a.e22980a8.24283c7d.fb89e642.59ddc3dd.369eef4a.d09c2ea9.7a9fbfb8.1e67271a.e22980a8.24283c7d.fb89e642.59ddc3dd.369eef4a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-dao/src/testFixtures/java/org/sonar/db/almsettings/AlmSettingsTesting.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 22,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-dao/src/testFixtures/java/org/sonar/db/almsettings/AlmSettingsTesting.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 22,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-dao/src/testFixtures/java/org/sonar/db/almsettings/AlmSettingsTesting.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 43,
                            "startColumn": 12,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 360,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureSecret/test",
          "ruleIndex": 17,
          "level": "note",
          "message": {
            "text": "Insecure random data flows from org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric and is used as a secret data. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "markdown": "Insecure random data {0} from {1} and is used as a {2}. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "arguments": [
              "[flows](0),(1),(2)",
              "[org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric](3)",
              "[secret data](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 382,
                  "endLine": 382,
                  "startColumn": 17,
                  "endColumn": 74
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c39eb8ee51e287412e0cbb577221881c5e2193439d2912dae55c2fb9a9d3e8ee",
            "1": "19689298.9897ae37.d7c52322.e22980a8.d3ba2bc9.ea8f4fa5.59ddc3dd.54d46e25.19689298.9897ae37.d7c52322.e22980a8.d3ba2bc9.ea8f4fa5.59ddc3dd.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 382,
                            "endLine": 382,
                            "startColumn": 17,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 382,
                            "endLine": 382,
                            "startColumn": 35,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 382,
                            "endLine": 382,
                            "startColumn": 51,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 382,
                            "endLine": 382,
                            "startColumn": 51,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 382,
                            "endLine": 382,
                            "startColumn": 17,
                            "endColumn": 74
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureSecret/test",
          "ruleIndex": 17,
          "level": "note",
          "message": {
            "text": "Insecure random data flows from org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric and is used as a secret data. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "markdown": "Insecure random data {0} from {1} and is used as a {2}. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "arguments": [
              "[flows](0),(1),(2)",
              "[org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric](3)",
              "[secret data](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 414,
                  "endLine": 414,
                  "startColumn": 17,
                  "endColumn": 74
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a7485759a2c224c9f860dc3e3f42e616a1f3a8a14bd650e40ce1c5b61fa5b9ae",
            "1": "19689298.9897ae37.d7c52322.e22980a8.d3ba2bc9.ea8f4fa5.59ddc3dd.54d46e25.19689298.9897ae37.d7c52322.e22980a8.d3ba2bc9.ea8f4fa5.59ddc3dd.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 414,
                            "endLine": 414,
                            "startColumn": 17,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 414,
                            "endLine": 414,
                            "startColumn": 35,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 414,
                            "endLine": 414,
                            "startColumn": 51,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 414,
                            "endLine": 414,
                            "startColumn": 51,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 414,
                            "endLine": 414,
                            "startColumn": 17,
                            "endColumn": 74
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureSecret/test",
          "ruleIndex": 17,
          "level": "note",
          "message": {
            "text": "Insecure random data flows from org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric and is used as a secret data. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "markdown": "Insecure random data {0} from {1} and is used as a {2}. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "arguments": [
              "[flows](0),(1),(2)",
              "[org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric](3)",
              "[secret data](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 431,
                  "endLine": 431,
                  "startColumn": 17,
                  "endColumn": 74
                }
              }
            }
          ],
          "fingerprints": {
            "0": "82f2e88b02a8dd336716e0237555b1c4e4366527f65d95ea6c8cb60b4cd1e3f1",
            "1": "19689298.9897ae37.d7c52322.e22980a8.d3ba2bc9.ea8f4fa5.59ddc3dd.54d46e25.19689298.9897ae37.d7c52322.e22980a8.d3ba2bc9.ea8f4fa5.59ddc3dd.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 431,
                            "endLine": 431,
                            "startColumn": 17,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 431,
                            "endLine": 431,
                            "startColumn": 35,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 431,
                            "endLine": 431,
                            "startColumn": 51,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 431,
                            "endLine": 431,
                            "startColumn": 51,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 431,
                            "endLine": 431,
                            "startColumn": 17,
                            "endColumn": 74
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureSecret/test",
          "ruleIndex": 17,
          "level": "note",
          "message": {
            "text": "Insecure random data flows from org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric and is used as a secret data. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "markdown": "Insecure random data {0} from {1} and is used as a {2}. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "arguments": [
              "[flows](0),(1),(2)",
              "[org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric](3)",
              "[secret data](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 600,
                  "endLine": 600,
                  "startColumn": 17,
                  "endColumn": 74
                }
              }
            }
          ],
          "fingerprints": {
            "0": "87fb51e1f1a0b2e2be77b0e660165d8e6f4e8da18c1ec0ac0ce8b0ec1b88e337",
            "1": "19689298.9897ae37.d7c52322.e22980a8.d3ba2bc9.ea8f4fa5.59ddc3dd.54d46e25.19689298.9897ae37.d7c52322.e22980a8.d3ba2bc9.ea8f4fa5.59ddc3dd.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 600,
                            "endLine": 600,
                            "startColumn": 17,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 600,
                            "endLine": 600,
                            "startColumn": 35,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 600,
                            "endLine": 600,
                            "startColumn": 51,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 600,
                            "endLine": 600,
                            "startColumn": 51,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 600,
                            "endLine": 600,
                            "startColumn": 17,
                            "endColumn": 74
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureSecret/test",
          "ruleIndex": 17,
          "level": "note",
          "message": {
            "text": "Insecure random data flows from org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric and is used as a secret data. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "markdown": "Insecure random data {0} from {1} and is used as a {2}. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "arguments": [
              "[flows](0),(1),(2)",
              "[org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric](3)",
              "[secret data](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 632,
                  "endLine": 632,
                  "startColumn": 17,
                  "endColumn": 74
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f85427d3057f8dd92e24df6b6e1e178e6b44571030abe31326984877f21c2182",
            "1": "19689298.9897ae37.d7c52322.e22980a8.d3ba2bc9.ea8f4fa5.59ddc3dd.54d46e25.19689298.9897ae37.d7c52322.e22980a8.d3ba2bc9.ea8f4fa5.59ddc3dd.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 632,
                            "endLine": 632,
                            "startColumn": 17,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 632,
                            "endLine": 632,
                            "startColumn": 35,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 632,
                            "endLine": 632,
                            "startColumn": 51,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 632,
                            "endLine": 632,
                            "startColumn": 51,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 632,
                            "endLine": 632,
                            "startColumn": 17,
                            "endColumn": 74
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureSecret/test",
          "ruleIndex": 17,
          "level": "note",
          "message": {
            "text": "Insecure random data flows from org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric and is used as a secret data. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "markdown": "Insecure random data {0} from {1} and is used as a {2}. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "arguments": [
              "[flows](0),(1),(2)",
              "[org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric](3)",
              "[secret data](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 649,
                  "endLine": 649,
                  "startColumn": 17,
                  "endColumn": 74
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8895d1b7246f704251afcae597a3595aeb85db301b030aa01e6d0f93ba552620",
            "1": "19689298.9897ae37.d7c52322.e22980a8.d3ba2bc9.ea8f4fa5.59ddc3dd.54d46e25.19689298.9897ae37.d7c52322.e22980a8.d3ba2bc9.ea8f4fa5.59ddc3dd.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 649,
                            "endLine": 649,
                            "startColumn": 17,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 649,
                            "endLine": 649,
                            "startColumn": 35,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 649,
                            "endLine": 649,
                            "startColumn": 51,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 649,
                            "endLine": 649,
                            "startColumn": 51,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 649,
                            "endLine": 649,
                            "startColumn": 17,
                            "endColumn": 74
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureSecret/test",
          "ruleIndex": 17,
          "level": "note",
          "message": {
            "text": "Insecure random data flows from org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric and is used as a secret data. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "markdown": "Insecure random data {0} from {1} and is used as a {2}. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "arguments": [
              "[flows](0),(1),(2)",
              "[org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric](3)",
              "[secret data](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 738,
                  "endLine": 738,
                  "startColumn": 17,
                  "endColumn": 74
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3ebe4921770dae0d952bc2a5e4c397bf749a5ea0e59463326c170be93a693a5b",
            "1": "19689298.9897ae37.d7c52322.e22980a8.d3ba2bc9.ea8f4fa5.59ddc3dd.54d46e25.19689298.9897ae37.d7c52322.e22980a8.d3ba2bc9.ea8f4fa5.59ddc3dd.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 738,
                            "endLine": 738,
                            "startColumn": 17,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 738,
                            "endLine": 738,
                            "startColumn": 35,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 738,
                            "endLine": 738,
                            "startColumn": 51,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 738,
                            "endLine": 738,
                            "startColumn": 51,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 738,
                            "endLine": 738,
                            "startColumn": 17,
                            "endColumn": 74
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureSecret/test",
          "ruleIndex": 17,
          "level": "note",
          "message": {
            "text": "Insecure random data flows from org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric and is used as a secret data. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "markdown": "Insecure random data {0} from {1} and is used as a {2}. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "arguments": [
              "[flows](0),(1),(2)",
              "[org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric](3)",
              "[secret data](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 837,
                  "endLine": 837,
                  "startColumn": 17,
                  "endColumn": 74
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e0cf939340d2f6cb7debc7476907a58c69203a494cac4719eae57cbcf35011e4",
            "1": "19689298.9897ae37.d7c52322.e22980a8.d3ba2bc9.ea8f4fa5.59ddc3dd.54d46e25.19689298.9897ae37.d7c52322.e22980a8.d3ba2bc9.ea8f4fa5.59ddc3dd.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 837,
                            "endLine": 837,
                            "startColumn": 17,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 837,
                            "endLine": 837,
                            "startColumn": 35,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 837,
                            "endLine": 837,
                            "startColumn": 51,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 837,
                            "endLine": 837,
                            "startColumn": 51,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 837,
                            "endLine": 837,
                            "startColumn": 17,
                            "endColumn": 74
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureSecret/test",
          "ruleIndex": 17,
          "level": "note",
          "message": {
            "text": "Insecure random data flows from org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric and is used as a secret data. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "markdown": "Insecure random data {0} from {1} and is used as a {2}. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "arguments": [
              "[flows](0),(1)",
              "[org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric](2)",
              "[secret data](3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1126,
                  "endLine": 1126,
                  "startColumn": 12,
                  "endColumn": 39
                }
              }
            }
          ],
          "fingerprints": {
            "0": "073c1067eb449bd221b534b1a43364d76312984be0bd1c7bf83996eed304a6cf",
            "1": "19689298.ed5795ad.34b5b2db.e22980a8.7627735f.0830d4dc.73e774fa.54d46e25.19689298.ed5795ad.34b5b2db.e22980a8.7627735f.0830d4dc.73e774fa.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1126,
                            "endLine": 1126,
                            "startColumn": 12,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1126,
                            "endLine": 1126,
                            "startColumn": 18,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1126,
                            "endLine": 1126,
                            "startColumn": 18,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-alm-client/src/test/java/org/sonar/alm/client/github/GithubApplicationClientImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1126,
                            "endLine": 1126,
                            "startColumn": 12,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/NonCryptoHardcodedSecret/test",
          "ruleIndex": 18,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found hardcoded secret.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found hardcoded {0}.",
            "arguments": [
              "[secret](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-webapi/src/it/java/org/sonar/server/webhook/ws/UpdateActionIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 57,
                  "endLine": 57,
                  "startColumn": 58,
                  "endColumn": 82
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cc8856fff6b14054783a390f390a9ed9a33b659a15a1312380d90465de500cee",
            "1": "416089e6.dd05ec30.f94d07cb.de031890.8b2d3351.91a0f0e4.6d632f6b.87dfd8cc.7656a3d1.dd05ec30.f94d07cb.de031890.75f548fa.91a0f0e4.7115c551.06849284"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-webapi/src/it/java/org/sonar/server/webhook/ws/UpdateActionIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 58,
                            "endColumn": 82
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 354,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/NonCryptoHardcodedSecret/test",
          "ruleIndex": 18,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found hardcoded secret.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found hardcoded {0}.",
            "arguments": [
              "[secret](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-auth-saml/src/test/java/org/sonar/auth/saml/SamlStatusCheckerTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "startColumn": 48,
                  "endColumn": 1726
                }
              }
            }
          ],
          "fingerprints": {
            "0": "89438e07a5058fd053fbbc1ab72d2d0998807c675dbc89a10be24144527f8d6e",
            "1": "416089e6.dd05ec30.8ebd3ca4.de031890.8b2d3351.ce109560.c80c31e8.02da8c88.416089e6.dd05ec30.8ebd3ca4.de031890.8b2d3351.ce109560.c80c31e8.02da8c88"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-saml/src/test/java/org/sonar/auth/saml/SamlStatusCheckerTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 48,
                            "endColumn": 1726
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 354,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/NonCryptoHardcodedSecret/test",
          "ruleIndex": 18,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found hardcoded secret.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found hardcoded {0}.",
            "arguments": [
              "[secret](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-auth-saml/src/it/java/org/sonar/auth/saml/SamlIdentityProviderIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 68,
                  "endLine": 68,
                  "startColumn": 48,
                  "endColumn": 1726
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f359be9c45c072a0faefcec1e816583e5c80de75c87430465dbd7833c5f76bf5",
            "1": "416089e6.dd05ec30.8ebd3ca4.de031890.8b2d3351.ce109560.c80c31e8.02da8c88.416089e6.dd05ec30.8ebd3ca4.de031890.8b2d3351.ce109560.c80c31e8.02da8c88"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-saml/src/it/java/org/sonar/auth/saml/SamlIdentityProviderIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 48,
                            "endColumn": 1726
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 354,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/NonCryptoHardcodedSecret/test",
          "ruleIndex": 18,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found hardcoded secret.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found hardcoded {0}.",
            "arguments": [
              "[secret](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/authentication/CredentialsAuthenticationIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "startColumn": 38,
                  "endColumn": 80
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5eca937573e03ab6470c6805b70f6b2c5390a34a1f8336bcbab01f8ec2564756",
            "1": "416089e6.dd05ec30.3c7d90aa.de031890.8b2d3351.ce109560.21b42eec.f79c075d.c14f34b3.dd05ec30.3c7d90aa.de031890.bb61bed7.ce109560.21b42eec.3339a365"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/authentication/CredentialsAuthenticationIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 38,
                            "endColumn": 80
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 354,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/NonCryptoHardcodedSecret/test",
          "ruleIndex": 18,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found hardcoded secret.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found hardcoded {0}.",
            "arguments": [
              "[secret](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-webapi/src/it/java/org/sonar/server/webhook/ws/CreateActionIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 61,
                  "endLine": 61,
                  "startColumn": 58,
                  "endColumn": 82
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d6b1bb662382753e513afe59aeb3590862ee85327784abfbe8333050dc077943",
            "1": "416089e6.dd05ec30.f94d07cb.de031890.8b2d3351.91a0f0e4.6d632f6b.87dfd8cc.bd7107ef.dd05ec30.f94d07cb.de031890.75f548fa.91a0f0e4.7115c551.06849284"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-webapi/src/it/java/org/sonar/server/webhook/ws/CreateActionIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 58,
                            "endColumn": 82
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 354,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HttpResponseSplitting",
          "ruleIndex": 19,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from cookies flows into addHeader and reaches an HTTP header returned to the user. This may allow a malicious input that contain CR/LF to split the http response into two responses and the second response to be controlled by the attacker. This may be used to mount a range of attacks such as cross-site scripting or cache poisoning.",
            "markdown": "Unsanitized input from {0} {1} into {2} and reaches an HTTP header returned to the user. This may allow a malicious input that contain CR/LF to split the http response into two responses and the second response to be controlled by the attacker. This may be used to mount a range of attacks such as cross-site scripting or cache poisoning.",
            "arguments": [
              "[cookies](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43)",
              "[addHeader](44)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 182,
                  "endLine": 182,
                  "startColumn": 5,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c86a8de7a4741736ab1e401b54d4679abb047e2e8399dc5fc8ba295cfb0e5bb2",
            "1": "23d4fd88.277c621c.de8eeddf.f128e3b7.6c69ab4e.34a5a9ba.76a0da3b.54d46e25.e1d7cd7c.277c621c.1703b4ff.9998adc9.dd06b926.7fda7c5e.b58e453e.7496f367"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/Cookies.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 24,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/Cookies.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 24,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/Cookies.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 14,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/Cookies.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/Cookies.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 54,
                            "startColumn": 12,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/Cookies.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 55,
                            "startColumn": 12,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 131,
                            "endLine": 131,
                            "startColumn": 34,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 131,
                            "endLine": 131,
                            "startColumn": 22,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 9,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 135,
                            "endLine": 135,
                            "startColumn": 21,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 135,
                            "endLine": 135,
                            "startColumn": 21,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 135,
                            "endLine": 135,
                            "startColumn": 12,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 20,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 20,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 12,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 140,
                            "endLine": 140,
                            "startColumn": 12,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 22,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 10,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 126,
                            "endLine": 126,
                            "startColumn": 39,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 126,
                            "endLine": 126,
                            "startColumn": 39,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 62,
                            "endColumn": 81
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 31,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 22,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 145,
                            "endLine": 145,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 20,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 20,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 12,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 150,
                            "endLine": 150,
                            "startColumn": 98,
                            "endColumn": 103
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 159,
                            "endLine": 159,
                            "startColumn": 30,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 162,
                            "endLine": 162,
                            "startColumn": 51,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 162,
                            "endLine": 162,
                            "startColumn": 78,
                            "endColumn": 83
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 164,
                            "endLine": 164,
                            "startColumn": 49,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 172,
                            "endLine": 172,
                            "startColumn": 42,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 165,
                            "endLine": 165,
                            "startColumn": 51,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 79,
                            "endColumn": 101
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 182,
                            "endLine": 182,
                            "startColumn": 62,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 182,
                            "endLine": 182,
                            "startColumn": 62,
                            "endColumn": 81
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtHttpHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 182,
                            "endLine": 182,
                            "startColumn": 53,
                            "endColumn": 97
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtCsrfVerifier.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 72,
                            "endColumn": 88
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtCsrfVerifier.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 91,
                            "startColumn": 7,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtCsrfVerifier.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 92,
                            "startColumn": 7,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtCsrfVerifier.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 93,
                            "startColumn": 7,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtCsrfVerifier.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 94,
                            "startColumn": 7,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtCsrfVerifier.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 95,
                            "startColumn": 7,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/JwtCsrfVerifier.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 20,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a zip file flows into java.nio.file.Files.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[a zip file](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[java.nio.file.Files.copy](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-scanner-engine/src/it/java/org/sonar/scm/svn/SvnBlameCommandIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 372,
                  "endLine": 372,
                  "startColumn": 13,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bca3b2a159852dc4431fcee2c3ad4ebbfaa266746f7644936e857bf433c4acea",
            "1": "bfd5653a.6d9d0001.bb993ef0.b224e60b.6c352203.f940a352.d262161c.54d46e25.bfd5653a.6d9d0001.bb993ef0.b224e60b.6c352203.be5cd0f2.d262161c.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-scanner-engine/src/it/java/org/sonar/scm/svn/SvnBlameCommandIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 363,
                            "endLine": 363,
                            "startColumn": 37,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-scanner-engine/src/it/java/org/sonar/scm/svn/SvnBlameCommandIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 363,
                            "endLine": 363,
                            "startColumn": 37,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-scanner-engine/src/it/java/org/sonar/scm/svn/SvnBlameCommandIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 363,
                            "endLine": 363,
                            "startColumn": 25,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-scanner-engine/src/it/java/org/sonar/scm/svn/SvnBlameCommandIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 363,
                            "endLine": 363,
                            "startColumn": 16,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-scanner-engine/src/it/java/org/sonar/scm/svn/SvnBlameCommandIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 367,
                            "endLine": 367,
                            "startColumn": 27,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-scanner-engine/src/it/java/org/sonar/scm/svn/SvnBlameCommandIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 372,
                            "endLine": 372,
                            "startColumn": 55,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-scanner-engine/src/it/java/org/sonar/scm/svn/SvnBlameCommandIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 372,
                            "endLine": 372,
                            "startColumn": 55,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-scanner-engine/src/it/java/org/sonar/scm/svn/SvnBlameCommandIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 372,
                            "endLine": 372,
                            "startColumn": 13,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 352,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 20,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a zip file flows into java.nio.file.Files.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[a zip file](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[java.nio.file.Files.copy](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-scanner-engine/src/test/java/org/sonar/scm/git/Utils.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 59,
                  "endLine": 59,
                  "startColumn": 13,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b9c19af2d7525066eb53685ba86c620acdfa032ff946b3c4d27ee22acef567f7",
            "1": "bfd5653a.6d9d0001.bb993ef0.b224e60b.6c352203.f940a352.d262161c.54d46e25.bfd5653a.6d9d0001.bb993ef0.b224e60b.6c352203.be5cd0f2.d262161c.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-scanner-engine/src/test/java/org/sonar/scm/git/Utils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 37,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-scanner-engine/src/test/java/org/sonar/scm/git/Utils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 37,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-scanner-engine/src/test/java/org/sonar/scm/git/Utils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 25,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-scanner-engine/src/test/java/org/sonar/scm/git/Utils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 16,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-scanner-engine/src/test/java/org/sonar/scm/git/Utils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 27,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-scanner-engine/src/test/java/org/sonar/scm/git/Utils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 55,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-scanner-engine/src/test/java/org/sonar/scm/git/Utils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 55,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-scanner-engine/src/test/java/org/sonar/scm/git/Utils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 13,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 352,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-auth/src/test/java/org/sonar/server/authentication/BasicAuthenticationTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 96,
                  "endLine": 96,
                  "startColumn": 23,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "17eb2c93a431954c38d79275f82fe9b5c11fc9685203cda3c5badced52e60e71",
            "1": "19689298.83dbfe52.71a71d19.bd0e4e78.ae63d11c.dd62fee0.5cd65e98.54d46e25.19689298.83dbfe52.d1b658f2.e22980a8.ae63d11c.dd62fee0.5cd65e98.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/test/java/org/sonar/server/authentication/BasicAuthenticationTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 23,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 373,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-server-common/src/test/java/org/sonar/server/webhook/WebhookCallerImplTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 167,
                  "endLine": 167,
                  "startColumn": 86,
                  "endColumn": 99
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4eb50dbc7cefb01c9f7d9cb232bc7e4e96b01de4f67ac7a312b02365749a8ff8",
            "1": "455f12f9.97acdc08.29afd482.30877db4.918d6076.e09655a9.02b9ead2.843ff358.a736fbc1.fd0baefc.29afd482.b57fe009.7679c6a8.e09655a9.76e47c71.df0541a3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-server-common/src/test/java/org/sonar/server/webhook/WebhookCallerImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 167,
                            "endLine": 167,
                            "startColumn": 86,
                            "endColumn": 99
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-server-common/src/test/java/org/sonar/server/webhook/WebhookCallerImplTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 220,
                  "endLine": 220,
                  "startColumn": 82,
                  "endColumn": 95
                }
              }
            }
          ],
          "fingerprints": {
            "0": "846cb863d4d93be34b1b789e1e3d3eabf4ee080aedeaedab8fc0970126a29ddd",
            "1": "455f12f9.97acdc08.29afd482.30877db4.918d6076.e09655a9.02b9ead2.843ff358.a736fbc1.fd0baefc.29afd482.b57fe009.7679c6a8.e09655a9.76e47c71.df0541a3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-server-common/src/test/java/org/sonar/server/webhook/WebhookCallerImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 220,
                            "endLine": 220,
                            "startColumn": 82,
                            "endColumn": 95
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/authentication/DefaultAdminCredentialsVerifierImplIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 97,
                  "endLine": 97,
                  "startColumn": 27,
                  "endColumn": 43
                }
              }
            }
          ],
          "fingerprints": {
            "0": "993d53e383f63dc37a28750eb65a1adb4d01dbd10ef78294911d328cd6041ed5",
            "1": "cff696f9.1cbd3ff4.71a71d19.8eb6a66a.8765d4ab.dd62fee0.3814f57a.54d46e25.cff696f9.7f413d6f.71a71d19.33d6c8dc.8765d4ab.dd62fee0.5b1ccecb.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/authentication/DefaultAdminCredentialsVerifierImplIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 27,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 373,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-ws/src/test/java/org/sonarqube/ws/client/HttpConnectorTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 194,
                  "endLine": 194,
                  "startColumn": 88,
                  "endColumn": 101
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7b5a725aff1e9ffc4ce9ec201a4378b0abe1bb72b702eb1836526a6cba891c7c",
            "1": "455f12f9.81c775d1.29afd482.5da9b209.b6cbe0be.f940a352.ef1a010c.df0541a3.455f12f9.81c775d1.29afd482.5da9b209.b6cbe0be.4cb70bfe.ef1a010c.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-ws/src/test/java/org/sonarqube/ws/client/HttpConnectorTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 194,
                            "endLine": 194,
                            "startColumn": 88,
                            "endColumn": 101
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-ws/src/test/java/org/sonarqube/ws/client/HttpConnectorTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 287,
                  "endLine": 287,
                  "startColumn": 101,
                  "endColumn": 119
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a2e1050affea309005e8ea7a653154d1fbff0da2ee596639dad8e955f374ed63",
            "1": "ca9876a9.81c775d1.3a1d09d6.5da9b209.b6cbe0be.f940a352.ef1e4a8a.0cbafb74.ca9876a9.81c775d1.3a1d09d6.5da9b209.b6cbe0be.4cb70bfe.ef1e4a8a.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-ws/src/test/java/org/sonarqube/ws/client/HttpConnectorTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 287,
                            "endLine": 287,
                            "startColumn": 101,
                            "endColumn": 119
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-ws/src/test/java/org/sonarqube/ws/client/HttpConnectorTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 311,
                  "endLine": 311,
                  "startColumn": 101,
                  "endColumn": 116
                }
              }
            }
          ],
          "fingerprints": {
            "0": "48e20ddfb6660c9908c07fb87cc3bf7f5452c0ff5fc591fb6fa2e6b6a4e8303d",
            "1": "ca9876a9.81c775d1.3a1d09d6.5da9b209.e2a0c3ad.90f63daa.ef1e4a8a.82be4920.ca9876a9.81c775d1.3a1d09d6.5da9b209.e2a0c3ad.4cb70bfe.ef1e4a8a.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-ws/src/test/java/org/sonarqube/ws/client/HttpConnectorTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 311,
                            "endLine": 311,
                            "startColumn": 101,
                            "endColumn": 116
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/user/UserUpdaterUpdateIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 153,
                  "endLine": 153,
                  "startColumn": 20,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "761f107e2ef957ebd7ffe225ca35946c2a6dcd0f667333d71b6789e18d3c4f1a",
            "1": "c0328ee7.1132ee3e.e9af62a5.6ac39c1a.82796c9a.935029da.0ae4ebf9.fde7589e.c0328ee7.1132ee3e.0f47f9eb.6c52ae28.0bf67f0b.935029da.5fa5ecf9.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/user/UserUpdaterUpdateIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 153,
                            "endLine": 153,
                            "startColumn": 20,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/user/UserUpdaterUpdateIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 341,
                  "endLine": 341,
                  "startColumn": 20,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6ef2a2a366dd0a98157a60634dd1c399f8ad1e55064465049667d140be465861",
            "1": "5387ee68.e8c02a15.e9af62a5.6c52ae28.82796c9a.935029da.6746c5af.fde7589e.5387ee68.e8c02a15.6be8e552.e6299acf.0bf67f0b.4e1269f6.5fa5ecf9.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/user/UserUpdaterUpdateIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 341,
                            "endLine": 341,
                            "startColumn": 20,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/user/UserUpdaterUpdateIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 364,
                  "endLine": 364,
                  "startColumn": 20,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "40f97cd8271987d5424578caa0dfb90cdf612c8d0a90d0fd993de24eb4c46fad",
            "1": "5387ee68.e8c02a15.e9af62a5.6c52ae28.82796c9a.935029da.6746c5af.fde7589e.5387ee68.e8c02a15.6be8e552.e6299acf.0bf67f0b.4e1269f6.5fa5ecf9.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/user/UserUpdaterUpdateIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 364,
                            "endLine": 364,
                            "startColumn": 20,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/user/UserUpdaterUpdateIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 487,
                  "endLine": 487,
                  "startColumn": 58,
                  "endColumn": 69
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6651ce706b0551606b7233bc89c9562fa8a29c58c1179f2acd19e9b5d73c2647",
            "1": "5387ee68.e8c02a15.caf1c772.3c268104.82796c9a.935029da.6746c5af.fde7589e.19689298.e8c02a15.1bdb9a3b.3c268104.82796c9a.935029da.6746c5af.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/user/UserUpdaterUpdateIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 487,
                            "endLine": 487,
                            "startColumn": 58,
                            "endColumn": 69
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/user/UserUpdaterUpdateIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 502,
                  "endLine": 502,
                  "startColumn": 20,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a10e1f825c55425efd3c8762b3f4948e2a03f4605f6ee5b34b57e89a58240898",
            "1": "c0328ee7.1132ee3e.e9af62a5.6ac39c1a.82796c9a.935029da.0ae4ebf9.fde7589e.c0328ee7.1132ee3e.0f47f9eb.6c52ae28.0bf67f0b.935029da.5fa5ecf9.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/user/UserUpdaterUpdateIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 502,
                            "endLine": 502,
                            "startColumn": 20,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/user/UserUpdaterUpdateIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 524,
                  "endLine": 524,
                  "startColumn": 20,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b0f3cef3c0208896703522cb47bc8cba3006584680945a441fb6c98d71cfb425",
            "1": "c0328ee7.1132ee3e.e9af62a5.6ac39c1a.82796c9a.935029da.0ae4ebf9.fde7589e.c0328ee7.1132ee3e.0f47f9eb.6c52ae28.0bf67f0b.935029da.5fa5ecf9.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/user/UserUpdaterUpdateIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 524,
                            "endLine": 524,
                            "startColumn": 20,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/user/UserUpdaterUpdateIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 542,
                  "endLine": 542,
                  "startColumn": 20,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5f39762be0b0ab6895ac6c304344dc51e1ff3e6234e2b4157f10535bd776643b",
            "1": "c0328ee7.1132ee3e.e9af62a5.6ac39c1a.82796c9a.935029da.0ae4ebf9.fde7589e.19689298.1132ee3e.1bdb9a3b.3c268104.82796c9a.935029da.0ae4ebf9.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/user/UserUpdaterUpdateIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 542,
                            "endLine": 542,
                            "startColumn": 20,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/user/UserUpdaterReactivateIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 75,
                  "endLine": 75,
                  "startColumn": 20,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "94fb184dbc260353556e0822076dbdc5eb63cc2a4840c1ac92ccc61c4fd32bf8",
            "1": "5387ee68.1132ee3e.e9af62a5.30877db4.82796c9a.935029da.6746c5af.fde7589e.b9afdb69.1132ee3e.8349664b.30877db4.0bf67f0b.66cbd305.d11a1cde.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/user/UserUpdaterReactivateIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 75,
                            "endLine": 75,
                            "startColumn": 20,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/user/UserUpdaterReactivateIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 103,
                  "endLine": 103,
                  "startColumn": 20,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "354ea2c8f876866507257210eff9cc2db6e3a6d8fa5fa2ebd2e58a0659e8285b",
            "1": "5387ee68.1132ee3e.e9af62a5.30877db4.82796c9a.935029da.6746c5af.fde7589e.c44709a1.1132ee3e.4a5e9331.30877db4.0bf67f0b.9b9d4ba7.d11a1cde.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/user/UserUpdaterReactivateIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 20,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/user/UserUpdaterReactivateIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 244,
                  "endLine": 244,
                  "startColumn": 24,
                  "endColumn": 35
                }
              }
            }
          ],
          "fingerprints": {
            "0": "32a161712e1efb672b25df9d3c0d6a237a237d752896e4a41700f6c65fb0b760",
            "1": "5387ee68.e8c02a15.e9af62a5.30877db4.82796c9a.935029da.6746c5af.fde7589e.b9afdb69.e8c02a15.4a5e9331.30877db4.0bf67f0b.66cbd305.d11a1cde.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-auth/src/it/java/org/sonar/server/user/UserUpdaterReactivateIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 244,
                            "endLine": 244,
                            "startColumn": 24,
                            "endColumn": 35
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-server-common/src/test/java/org/sonar/server/es/EsClientTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 267,
                  "endLine": 267,
                  "startColumn": 23,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e7d598516bcf89dbc7196e6cdd905458a6f9e502d4fe8c927d4ed66d2e482df8",
            "1": "19689298.83dbfe52.71a71d19.bd0e4e78.bc6ac6aa.dd62fee0.5cd65e98.54d46e25.19689298.83dbfe52.71a71d19.e22980a8.f1d9f854.dd62fee0.5cd65e98.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-server-common/src/test/java/org/sonar/server/es/EsClientTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 267,
                            "endLine": 267,
                            "startColumn": 23,
                            "endColumn": 38
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 373,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-auth-ldap/src/it/java/org/sonar/auth/ldap/DefaultLdapAuthenticatorIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "startColumn": 96,
                  "endColumn": 105
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ac5c5b564a0aa83a9857d9096f8be467b8974cf1af7cf4cf6049f02118c7369f",
            "1": "4c38c367.1cbd3ff4.71a71d19.5659e6d4.2db332b2.dd62fee0.0ac97cd8.203bd690.4c38c367.7f413d6f.71a71d19.5659e6d4.f0e1baa5.dd62fee0.0ac97cd8.203bd690"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-ldap/src/it/java/org/sonar/auth/ldap/DefaultLdapAuthenticatorIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 96,
                            "endColumn": 105
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-auth-ldap/src/it/java/org/sonar/auth/ldap/DefaultLdapAuthenticatorIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 67,
                  "endLine": 67,
                  "startColumn": 97,
                  "endColumn": 106
                }
              }
            }
          ],
          "fingerprints": {
            "0": "544a4a8610892fb7bdfbfd2693a81f3394e0ff18b4b58ae117fab7fee2fb0334",
            "1": "4c38c367.1cbd3ff4.71a71d19.5659e6d4.2db332b2.dd62fee0.0ac97cd8.203bd690.4c38c367.7f413d6f.71a71d19.5659e6d4.f0e1baa5.dd62fee0.0ac97cd8.203bd690"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-ldap/src/it/java/org/sonar/auth/ldap/DefaultLdapAuthenticatorIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 97,
                            "endColumn": 106
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-auth-ldap/src/it/java/org/sonar/auth/ldap/DefaultLdapAuthenticatorIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 73,
                  "endLine": 73,
                  "startColumn": 98,
                  "endColumn": 107
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dce9c20b57c902d35019082a46e18dc5a44886e05e0a6cf7360b418872fcece4",
            "1": "4c38c367.1cbd3ff4.71a71d19.5659e6d4.2db332b2.dd62fee0.0ac97cd8.203bd690.4c38c367.7f413d6f.71a71d19.5659e6d4.f0e1baa5.dd62fee0.0ac97cd8.203bd690"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-ldap/src/it/java/org/sonar/auth/ldap/DefaultLdapAuthenticatorIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 98,
                            "endColumn": 107
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-auth-ldap/src/it/java/org/sonar/auth/ldap/DefaultLdapAuthenticatorIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 91,
                  "endLine": 91,
                  "startColumn": 97,
                  "endColumn": 106
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3282345d089014ec3a051a85cb7de9250f8b10852cb790365b08c8d5f3cea377",
            "1": "4c38c367.1cbd3ff4.71a71d19.5659e6d4.2db332b2.dd62fee0.0ac97cd8.203bd690.4c38c367.7f413d6f.71a71d19.5659e6d4.f0e1baa5.dd62fee0.0ac97cd8.203bd690"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-ldap/src/it/java/org/sonar/auth/ldap/DefaultLdapAuthenticatorIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 97,
                            "endColumn": 106
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-auth-ldap/src/it/java/org/sonar/auth/ldap/DefaultLdapAuthenticatorIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 96,
                  "endLine": 96,
                  "startColumn": 105,
                  "endColumn": 114
                }
              }
            }
          ],
          "fingerprints": {
            "0": "645e7963879470eb3b703a3a332724d4cba27654e8f872050c5c5838211b1d4d",
            "1": "4c38c367.1cbd3ff4.71a71d19.5659e6d4.2db332b2.dd62fee0.0ac97cd8.203bd690.4c38c367.7f413d6f.71a71d19.5659e6d4.f0e1baa5.dd62fee0.0ac97cd8.203bd690"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-ldap/src/it/java/org/sonar/auth/ldap/DefaultLdapAuthenticatorIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 105,
                            "endColumn": 114
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-auth-ldap/src/it/java/org/sonar/auth/ldap/DefaultLdapAuthenticatorIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 100,
                  "endLine": 100,
                  "startColumn": 105,
                  "endColumn": 114
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b068949072e2e0102669ecd32db73e54e88a78b733086d179a20b3e134cfc292",
            "1": "4c38c367.1cbd3ff4.71a71d19.5659e6d4.2db332b2.dd62fee0.0ac97cd8.203bd690.4c38c367.7f413d6f.71a71d19.5659e6d4.f0e1baa5.dd62fee0.0ac97cd8.203bd690"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-ldap/src/it/java/org/sonar/auth/ldap/DefaultLdapAuthenticatorIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 105,
                            "endColumn": 114
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-auth-ldap/src/it/java/org/sonar/auth/ldap/DefaultLdapAuthenticatorIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 112,
                  "endLine": 112,
                  "startColumn": 97,
                  "endColumn": 106
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f5c4867f8e0f09f53c688eeea8a10c5198f4a7f20d01b553c4d8dc3ef8865d4a",
            "1": "4c38c367.1cbd3ff4.71a71d19.5659e6d4.2db332b2.dd62fee0.0ac97cd8.203bd690.4c38c367.7f413d6f.71a71d19.5659e6d4.f0e1baa5.dd62fee0.0ac97cd8.203bd690"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-ldap/src/it/java/org/sonar/auth/ldap/DefaultLdapAuthenticatorIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 97,
                            "endColumn": 106
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-auth-ldap/src/it/java/org/sonar/auth/ldap/DefaultLdapAuthenticatorIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 128,
                  "endLine": 128,
                  "startColumn": 97,
                  "endColumn": 106
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ebc964e8610a2f08124ef2ee65f9454404a41f57579aed69c1391b713e135247",
            "1": "4c38c367.1cbd3ff4.71a71d19.5659e6d4.2db332b2.dd62fee0.0ac97cd8.203bd690.4c38c367.7f413d6f.71a71d19.5659e6d4.f0e1baa5.dd62fee0.0ac97cd8.203bd690"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-ldap/src/it/java/org/sonar/auth/ldap/DefaultLdapAuthenticatorIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 97,
                            "endColumn": 106
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-auth-ldap/src/it/java/org/sonar/auth/ldap/DefaultLdapAuthenticatorIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 134,
                  "endLine": 134,
                  "startColumn": 98,
                  "endColumn": 107
                }
              }
            }
          ],
          "fingerprints": {
            "0": "866e6ff9d0422bdffc4865b60fad9fbd2fa66905d9cd12f2933f827a9385d3d3",
            "1": "4c38c367.1cbd3ff4.71a71d19.5659e6d4.2db332b2.dd62fee0.0ac97cd8.203bd690.4c38c367.7f413d6f.71a71d19.5659e6d4.f0e1baa5.dd62fee0.0ac97cd8.203bd690"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-ldap/src/it/java/org/sonar/auth/ldap/DefaultLdapAuthenticatorIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 98,
                            "endColumn": 107
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-auth-ldap/src/it/java/org/sonar/auth/ldap/DefaultLdapAuthenticatorIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 149,
                  "endLine": 149,
                  "startColumn": 97,
                  "endColumn": 106
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c03b4a9a4fd9aa28ce42239ca44b32b8b5e13bc7e03a65180eb8bdc111162c00",
            "1": "4c38c367.1cbd3ff4.71a71d19.5659e6d4.2db332b2.dd62fee0.0ac97cd8.203bd690.4c38c367.7f413d6f.71a71d19.5659e6d4.f0e1baa5.dd62fee0.0ac97cd8.203bd690"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-ldap/src/it/java/org/sonar/auth/ldap/DefaultLdapAuthenticatorIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 97,
                            "endColumn": 106
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-auth-ldap/src/it/java/org/sonar/auth/ldap/DefaultLdapAuthenticatorIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 153,
                  "endLine": 153,
                  "startColumn": 105,
                  "endColumn": 114
                }
              }
            }
          ],
          "fingerprints": {
            "0": "43894f1c8821a128401863a7ddf9775341f3dcedb4625f9f25f85aa727a56e72",
            "1": "4c38c367.1cbd3ff4.71a71d19.5659e6d4.2db332b2.dd62fee0.0ac97cd8.203bd690.4c38c367.7f413d6f.71a71d19.5659e6d4.f0e1baa5.dd62fee0.0ac97cd8.203bd690"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-ldap/src/it/java/org/sonar/auth/ldap/DefaultLdapAuthenticatorIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 153,
                            "endLine": 153,
                            "startColumn": 105,
                            "endColumn": 114
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-auth-ldap/src/it/java/org/sonar/auth/ldap/DefaultLdapAuthenticatorIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 157,
                  "endLine": 157,
                  "startColumn": 105,
                  "endColumn": 114
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4adb607fd1002f790400c546c31e5dba17833e5c35694a059a4716e2b3379095",
            "1": "4c38c367.1cbd3ff4.71a71d19.5659e6d4.2db332b2.dd62fee0.0ac97cd8.203bd690.4c38c367.7f413d6f.71a71d19.5659e6d4.f0e1baa5.dd62fee0.0ac97cd8.203bd690"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-ldap/src/it/java/org/sonar/auth/ldap/DefaultLdapAuthenticatorIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 157,
                            "endLine": 157,
                            "startColumn": 105,
                            "endColumn": 114
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-auth-ldap/src/it/java/org/sonar/auth/ldap/DefaultLdapAuthenticatorIT.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "startColumn": 97,
                  "endColumn": 106
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f85c40ec907ebd571ae3f50cf84a88a86f08ed80b231826a3ae1fecd8c7b9bc3",
            "1": "4c38c367.1cbd3ff4.71a71d19.5659e6d4.2db332b2.dd62fee0.0ac97cd8.203bd690.4c38c367.7f413d6f.71a71d19.5659e6d4.f0e1baa5.dd62fee0.0ac97cd8.203bd690"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-auth-ldap/src/it/java/org/sonar/auth/ldap/DefaultLdapAuthenticatorIT.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 165,
                            "endLine": 165,
                            "startColumn": 97,
                            "endColumn": 106
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-scanner-engine/src/test/java/org/sonar/scanner/http/ScannerWsClientProviderTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 278,
                  "endLine": 278,
                  "startColumn": 47,
                  "endColumn": 61
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dd01511467b1a4f99ccbde06d9f3baf3541e8cba3272c6e1a1c62e37cb60e78b",
            "1": "416089e6.b24d18d4.3c7d90aa.de031890.8b2d3351.ce109560.5c36aff3.87dfd8cc.7656a3d1.b24d18d4.82512474.de031890.bb61bed7.ce109560.5c36aff3.87dfd8cc"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-scanner-engine/src/test/java/org/sonar/scanner/http/ScannerWsClientProviderTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 278,
                            "endLine": 278,
                            "startColumn": 47,
                            "endColumn": 61
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-scanner-engine/src/test/java/org/sonar/scanner/http/ScannerWsClientProviderTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 327,
                  "endLine": 327,
                  "startColumn": 47,
                  "endColumn": 61
                }
              }
            }
          ],
          "fingerprints": {
            "0": "abee40e27cb878257a2cc22a851053aefcc04a6bf8472d8ae5ac862821d750d6",
            "1": "416089e6.b24d18d4.3c7d90aa.de031890.8b2d3351.ce109560.5c36aff3.87dfd8cc.7656a3d1.b24d18d4.7613cbe5.de031890.bb61bed7.ce109560.5c36aff3.87dfd8cc"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-scanner-engine/src/test/java/org/sonar/scanner/http/ScannerWsClientProviderTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 327,
                            "endLine": 327,
                            "startColumn": 47,
                            "endColumn": 61
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 423,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-main/src/test/java/org/sonar/application/es/EsConnectorImplTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 119,
                  "endLine": 119,
                  "startColumn": 23,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4aaf40060938e62f0443aa970ce3afac821c654fa41c8c62cbd209e28d5e97c4",
            "1": "19689298.83dbfe52.71a71d19.bd0e4e78.bc6ac6aa.dd62fee0.5cd65e98.54d46e25.19689298.83dbfe52.71a71d19.e22980a8.f1d9f854.dd62fee0.ca97c260.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-main/src/test/java/org/sonar/application/es/EsConnectorImplTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 23,
                            "endColumn": 38
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 373,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/Sqli/test",
          "ruleIndex": 22,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "arguments": [
              "[a database](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[execute](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-db-dao/src/test/java/org/sonar/db/dump/SQSchemaDumper.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 92,
                  "endLine": 92,
                  "startColumn": 16,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7e63c5b75ff5c358c9e1ee88fa84e18c74f49a45600445ecb1191d44eb883f27",
            "1": "3347686d.0d5cb2c5.62790746.31cb6f48.607b06a6.0d476878.e7a45c0d.87dfd8cc.e1d7cd7c.06c4391f.925380ba.62508587.2b083fa0.c8fb3269.bae646e8.b983d0ad"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-dao/src/test/java/org/sonar/db/dump/SQSchemaDumper.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 84,
                            "endLine": 84,
                            "startColumn": 24,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-dao/src/test/java/org/sonar/db/dump/SQSchemaDumper.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 84,
                            "endLine": 84,
                            "startColumn": 24,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-dao/src/test/java/org/sonar/db/dump/SQSchemaDumper.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 84,
                            "endLine": 84,
                            "startColumn": 9,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-dao/src/test/java/org/sonar/db/dump/SQSchemaDumper.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-dao/src/test/java/org/sonar/db/dump/SQSchemaDumper.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-dao/src/test/java/org/sonar/db/dump/SQSchemaDumper.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 20,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-dao/src/test/java/org/sonar/db/dump/SQSchemaDumper.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 31,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-dao/src/test/java/org/sonar/db/dump/SQSchemaDumper.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 19,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-dao/src/test/java/org/sonar/db/dump/SQSchemaDumper.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 66,
                            "endColumn": 82
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-dao/src/test/java/org/sonar/db/dump/SQSchemaDumper.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 92,
                            "endLine": 92,
                            "startColumn": 34,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-dao/src/test/java/org/sonar/db/dump/SQSchemaDumper.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 92,
                            "endLine": 92,
                            "startColumn": 16,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 351,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureCipherNoIntegrity",
          "ruleIndex": 23,
          "level": "warning",
          "message": {
            "text": "The ECB mode used in javax.crypto.Cipher.getInstance does not provide integrity. Consided using Galois/Counter Mode.",
            "markdown": "The {0} mode used in {1} does not provide integrity. Consided using Galois/Counter Mode.",
            "arguments": [
              "[ECB](0)",
              "[javax.crypto.Cipher.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-plugin-api-impl/src/main/java/org/sonar/api/config/internal/AesECBCipher.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 42,
                  "startColumn": 36,
                  "endColumn": 67
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5a067ff456b8f79780a5dc7fad7e8d2ae8b9757209649bec9f564c0d7858be1e",
            "1": "f76884db.1cbd3ff4.fdf08d99.8593c2f0.74c2d841.dee4b315.3a890aa4.54d46e25.f76884db.dd05ec30.ba832df5.de031890.8b2d3351.ce109560.3a890aa4.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-plugin-api-impl/src/main/java/org/sonar/api/config/internal/AesECBCipher.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "endLine": 33,
                            "startColumn": 45,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-plugin-api-impl/src/main/java/org/sonar/api/config/internal/AesECBCipher.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 36,
                            "endColumn": 67
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureCipherNoIntegrity",
          "ruleIndex": 23,
          "level": "warning",
          "message": {
            "text": "The ECB mode used in javax.crypto.Cipher.getInstance does not provide integrity. Consided using Galois/Counter Mode.",
            "markdown": "The {0} mode used in {1} does not provide integrity. Consided using Galois/Counter Mode.",
            "arguments": [
              "[ECB](0)",
              "[javax.crypto.Cipher.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-plugin-api-impl/src/main/java/org/sonar/api/config/internal/AesECBCipher.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 56,
                  "endLine": 56,
                  "startColumn": 36,
                  "endColumn": 67
                }
              }
            }
          ],
          "fingerprints": {
            "0": "27420b869ef5f362611c9d53896366fb2e32bffcb97f29ba9453ca32c89e1916",
            "1": "f76884db.1cbd3ff4.fdf08d99.8593c2f0.74c2d841.dee4b315.3a890aa4.54d46e25.f76884db.dd05ec30.ba832df5.de031890.8b2d3351.ce109560.3a890aa4.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-plugin-api-impl/src/main/java/org/sonar/api/config/internal/AesECBCipher.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "endLine": 33,
                            "startColumn": 45,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-plugin-api-impl/src/main/java/org/sonar/api/config/internal/AesECBCipher.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 36,
                            "endColumn": 67
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 24,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the request URL flows into getResourceAsStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[getResourceAsStream](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver/src/main/java/org/sonar/server/platform/web/StaticResourcesServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 76,
                  "endLine": 76,
                  "startColumn": 28,
                  "endColumn": 66
                }
              }
            }
          ],
          "fingerprints": {
            "0": "109a5428dcda12bab8c07b0253e7ce33990e30e4b8e5beb7e80cfb78a594c0a4",
            "1": "19689298.8883ba38.33fa5dbe.c48320d7.4f10cfb3.7fda7c5e.bf4053d9.54d46e25.bbbd7c96.1e97cf61.fab6d5c7.c48320d7.74e82ab6.7fda7c5e.76a0da3b.d40a65d7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver/src/main/java/org/sonar/server/platform/web/StaticResourcesServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 39,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver/src/main/java/org/sonar/server/platform/web/StaticResourcesServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 39,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver/src/main/java/org/sonar/server/platform/web/StaticResourcesServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 12,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver/src/main/java/org/sonar/server/platform/web/StaticResourcesServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 124,
                            "endLine": 124,
                            "startColumn": 24,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver/src/main/java/org/sonar/server/platform/web/StaticResourcesServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 124,
                            "endLine": 124,
                            "startColumn": 12,
                            "endColumn": 93
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver/src/main/java/org/sonar/server/platform/web/StaticResourcesServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 12,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver/src/main/java/org/sonar/server/platform/web/StaticResourcesServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 67,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver/src/main/java/org/sonar/server/platform/web/StaticResourcesServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 147,
                            "endLine": 147,
                            "startColumn": 49,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver/src/main/java/org/sonar/server/platform/web/StaticResourcesServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 62,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver/src/main/java/org/sonar/server/platform/web/StaticResourcesServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 14,
                            "endColumn": 61
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 802,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 24,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the request URL flows into getResourceAsStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[getResourceAsStream](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver/src/main/java/org/sonar/server/platform/web/StaticResourcesServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 76,
                  "endLine": 76,
                  "startColumn": 79,
                  "endColumn": 110
                }
              }
            }
          ],
          "fingerprints": {
            "0": "109a5428dcda12bab8c07b0253e7ce33990e30e4b8e5beb7e80cfb78a594c0a4",
            "1": "19689298.8883ba38.33fa5dbe.c48320d7.4f10cfb3.7fda7c5e.bf4053d9.54d46e25.bbbd7c96.1e97cf61.33fa5dbe.c48320d7.74e82ab6.7fda7c5e.76a0da3b.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver/src/main/java/org/sonar/server/platform/web/StaticResourcesServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 39,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver/src/main/java/org/sonar/server/platform/web/StaticResourcesServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 39,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver/src/main/java/org/sonar/server/platform/web/StaticResourcesServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 12,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver/src/main/java/org/sonar/server/platform/web/StaticResourcesServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 124,
                            "endLine": 124,
                            "startColumn": 24,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver/src/main/java/org/sonar/server/platform/web/StaticResourcesServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 124,
                            "endLine": 124,
                            "startColumn": 12,
                            "endColumn": 93
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver/src/main/java/org/sonar/server/platform/web/StaticResourcesServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 12,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver/src/main/java/org/sonar/server/platform/web/StaticResourcesServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 122,
                            "endColumn": 130
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver/src/main/java/org/sonar/server/platform/web/StaticResourcesServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 141,
                            "endLine": 141,
                            "startColumn": 60,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver/src/main/java/org/sonar/server/platform/web/StaticResourcesServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 52,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver/src/main/java/org/sonar/server/platform/web/StaticResourcesServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 14,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 802,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash",
          "ruleIndex": 25,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in com.google.common.hash.Hashing.md5) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[com.google.common.hash.Hashing.md5](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-common/src/main/java/org/sonar/server/common/avatar/AvatarResolverImpl.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 39,
                  "endLine": 39,
                  "startColumn": 12,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b2eb337396cde7340079a0aaddcc9d3e3134047cf8dbf89b1661c1bb03fed6a0",
            "1": "63c12074.5bbb3faf.a05291bc.4eaca7c0.bfa50cdd.435e3fe1.67aea5cd.eaa0b1e4.63c12074.5bbb3faf.a05291bc.4eaca7c0.bfa50cdd.435e3fe1.67aea5cd.eaa0b1e4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-common/src/main/java/org/sonar/server/common/avatar/AvatarResolverImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 12,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 356,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash",
          "ruleIndex": 25,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-db-core/src/testFixtures/java/org/sonar/db/CoreTestDb.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 85,
                  "endLine": 85,
                  "startColumn": 66,
                  "endColumn": 84
                }
              }
            }
          ],
          "fingerprints": {
            "0": "041a418a31b5dfc1f13e3998f873257d62718960af421ea1c45f87a66cbd6502",
            "1": "2708beb0.92e378d2.a3861223.b6ca27fe.ae63d11c.f940a352.2ed7aa4c.5626b4a5.2708beb0.92e378d2.a3861223.b6ca27fe.ae63d11c.f940a352.2ed7aa4c.5626b4a5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-core/src/testFixtures/java/org/sonar/db/CoreTestDb.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 66,
                            "endColumn": 84
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 356,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash",
          "ruleIndex": 25,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-ce-task-projectanalysis/src/main/java/org/sonar/ce/task/projectanalysis/issue/ComputeLocationHashesVisitor.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 259,
                  "endLine": 259,
                  "startColumn": 21,
                  "endColumn": 39
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b8d22496804258fa4c48ecaabb56a1d10bc46aa1b6e9c2f94217b12f9d68e8b0",
            "1": "2708beb0.1cbd3ff4.8504bdd7.5927b067.82a59e05.f940a352.90f21725.54d46e25.2708beb0.1cbd3ff4.8504bdd7.5927b067.82a59e05.f940a352.90f21725.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-ce-task-projectanalysis/src/main/java/org/sonar/ce/task/projectanalysis/issue/ComputeLocationHashesVisitor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 259,
                            "endLine": 259,
                            "startColumn": 21,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 356,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash",
          "ruleIndex": 25,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sonar-scanner-engine/src/main/java/org/sonar/scanner/bootstrap/PluginFiles.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 169,
                  "endLine": 169,
                  "startColumn": 14,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0ce1a2fccab733ef5b9b548506230b222bfaab8aa3c2eef8956ac10e6a6ddc9e",
            "1": "2708beb0.1cbd3ff4.fc7d5400.e22980a8.41e2364d.f940a352.bae646e8.54d46e25.2708beb0.1cbd3ff4.fc7d5400.e22980a8.41e2364d.f940a352.bae646e8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sonar-scanner-engine/src/main/java/org/sonar/scanner/bootstrap/PluginFiles.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 169,
                            "endLine": 169,
                            "startColumn": 14,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 356,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash",
          "ruleIndex": 25,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-ce-task-projectanalysis/src/main/java/org/sonar/ce/task/projectanalysis/source/PersistFileSourcesStep.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 107,
                  "endLine": 107,
                  "startColumn": 25,
                  "endColumn": 43
                }
              }
            }
          ],
          "fingerprints": {
            "0": "37963e49df9357e88d26b61b0fb903d736cd940b03a9d35aa79f921eebd07fda",
            "1": "2708beb0.1cbd3ff4.d0d1fedc.34b94a50.cdbb82cf.31ccdec6.b06a92ca.54d46e25.2708beb0.1cbd3ff4.d0d1fedc.34b94a50.cdbb82cf.31ccdec6.b06a92ca.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-ce-task-projectanalysis/src/main/java/org/sonar/ce/task/projectanalysis/source/PersistFileSourcesStep.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 107,
                            "endLine": 107,
                            "startColumn": 25,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 356,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash",
          "ruleIndex": 25,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-db-dao/src/testFixtures/java/org/sonar/db/TestDbImpl.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 65,
                  "endLine": 65,
                  "startColumn": 64,
                  "endColumn": 82
                }
              }
            }
          ],
          "fingerprints": {
            "0": "22af862234ed4bb8785f10ad84c7810240ce5bbcdf525d8059e417f5ccf92b0d",
            "1": "2708beb0.1cbd3ff4.97d21f98.d6739d3d.3c83da13.5c386c50.f0e0ed1a.25a3969a.2708beb0.1cbd3ff4.97d21f98.d6739d3d.3c83da13.5c386c50.f0e0ed1a.25a3969a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-dao/src/testFixtures/java/org/sonar/db/TestDbImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 65,
                            "endLine": 65,
                            "startColumn": 64,
                            "endColumn": 82
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 356,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash",
          "ruleIndex": 25,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-api/src/main/java/org/sonar/server/plugins/PluginFilesAndMd5.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 60,
                  "endLine": 60,
                  "startColumn": 20,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "85c253b57ec886a8ba8fe0526a64c7de32a9371b6d548a12ee26ccf55c45c9be",
            "1": "2708beb0.1cbd3ff4.06373764.e22980a8.f6d438cc.7fda7c5e.2501145e.54d46e25.2708beb0.1cbd3ff4.06373764.e22980a8.f6d438cc.7fda7c5e.2501145e.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-api/src/main/java/org/sonar/server/plugins/PluginFilesAndMd5.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 20,
                            "endColumn": 38
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 356,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash",
          "ruleIndex": 25,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-webserver-webapi/src/main/java/org/sonar/server/batch/BatchIndex.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 65,
                  "endLine": 65,
                  "startColumn": 52,
                  "endColumn": 70
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fcaf4858eb34bcea68db1d338dd9e924b6e02ebb8e803196bfd07c83db061c3e",
            "1": "2708beb0.1cbd3ff4.1f50d238.ede9cf8e.6bacdef5.f940a352.2501145e.c3e3c6ad.2708beb0.1cbd3ff4.1f50d238.ede9cf8e.6bacdef5.f940a352.2501145e.c3e3c6ad"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-webserver-webapi/src/main/java/org/sonar/server/batch/BatchIndex.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 65,
                            "endLine": 65,
                            "startColumn": 52,
                            "endColumn": 70
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 356,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/Sqli",
          "ruleIndex": 26,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "arguments": [
              "[a database](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30)",
              "[execute](31)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 80,
                  "endLine": 80,
                  "startColumn": 51,
                  "endColumn": 66
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0766e0d4fd9ef741156b49557dc00b3688faf411cade787a75a7da1881927896",
            "1": "bdd5ffbb.1cbd3ff4.19b37a51.47b5e41b.a29dd9fe.476f64fa.eebe9fe2.5e1b62ad.87514bc3.2c474bf8.19b37a51.584fb599.dd06b926.e4d7b7ac.88e519ec.0708bcc6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 7,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 14,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 20,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 14,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlMetadataReader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 12,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 31,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 21,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 29,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 29,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 29,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 29,
                            "endColumn": 90
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 20,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 26,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 14,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 45,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 67,
                            "endColumn": 76
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 33,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 124,
                            "endLine": 124,
                            "startColumn": 12,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 124,
                            "endLine": 125,
                            "startColumn": 12,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 124,
                            "endLine": 126,
                            "startColumn": 12,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 124,
                            "endLine": 127,
                            "startColumn": 12,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 79,
                            "endColumn": 103
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 108,
                            "endLine": 108,
                            "startColumn": 23,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 108,
                            "endLine": 109,
                            "startColumn": 12,
                            "endColumn": 105
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 111,
                            "endLine": 111,
                            "startColumn": 45,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 7,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 554,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/Sqli",
          "ruleIndex": 26,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "arguments": [
              "[a database](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21)",
              "[execute](22)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 102,
                  "endLine": 102,
                  "startColumn": 7,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "46fd0662bfcf4e038a116b7f7851c0a9785fcf11e9cd588e7f3b0344bac096dc",
            "1": "94e8d757.e7e006b5.f40cd3dc.6483b32f.fa5f6fc4.c562754a.2b07c918.54d46e25.2ed2959b.277c621c.58c2bb6d.6edaef59.fa5f6fc4.eefe0a80.5d71240d.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 7,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 14,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 20,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 14,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlMetadataReader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 12,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 31,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 21,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 29,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 29,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 29,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 29,
                            "endColumn": 90
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 20,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 61,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 102,
                            "endLine": 102,
                            "startColumn": 74,
                            "endColumn": 80
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 102,
                            "endLine": 102,
                            "startColumn": 74,
                            "endColumn": 89
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 102,
                            "endLine": 102,
                            "startColumn": 47,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 7,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 554,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/Sqli",
          "ruleIndex": 26,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "arguments": [
              "[a database](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25)",
              "[execute](26)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 111,
                  "endLine": 111,
                  "startColumn": 5,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "894900b3e4269dfab7e55a9ad53f2294ae7c2c5edd963894f35b5ba028ddc540",
            "1": "3f1f3cef.e7e006b5.bf6fb969.6483b32f.fa5f6fc4.c562754a.2b07c918.54d46e25.e1d7cd7c.2c474bf8.14535f1c.fcfded40.0acd59f9.cc716412.47267f8a.0708bcc6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 7,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 14,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 20,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 14,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlMetadataReader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 12,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 31,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 21,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 29,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 29,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 29,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 29,
                            "endColumn": 90
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 20,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 61,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 106,
                            "endLine": 106,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 107,
                            "endLine": 107,
                            "startColumn": 19,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 109,
                            "endLine": 109,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 109,
                            "endLine": 109,
                            "startColumn": 7,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 108,
                            "endLine": 108,
                            "startColumn": 23,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 108,
                            "endLine": 109,
                            "startColumn": 12,
                            "endColumn": 105
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 111,
                            "endLine": 111,
                            "startColumn": 45,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 7,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 554,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/Sqli",
          "ruleIndex": 26,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "arguments": [
              "[a database](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31)",
              "[execute](32)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 117,
                  "endLine": 117,
                  "startColumn": 7,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2252fc0659dc3912126f56ba0e3c1ff1c77a42ee9addec9f77124584704ebbe1",
            "1": "19689298.785ca8d1.1b9dbf53.6483b32f.fa5f6fc4.c562754a.be04624c.54d46e25.2ed2959b.277c621c.bf6fb969.fcfded40.0acd59f9.eefe0a80.0b562c6c.0708bcc6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 7,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 14,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 20,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 14,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlMetadataReader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 12,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 31,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 21,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 29,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 29,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 29,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 29,
                            "endColumn": 90
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 20,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 61,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 106,
                            "endLine": 106,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 107,
                            "endLine": 107,
                            "startColumn": 19,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 109,
                            "endLine": 109,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 109,
                            "endLine": 109,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 109,
                            "endLine": 109,
                            "startColumn": 46,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 110,
                            "endLine": 110,
                            "startColumn": 78,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 110,
                            "endLine": 110,
                            "startColumn": 97,
                            "endColumn": 103
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 110,
                            "endLine": 110,
                            "startColumn": 117,
                            "endColumn": 123
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 94,
                            "endColumn": 100
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 94,
                            "endColumn": 109
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 31,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 14,
                            "endColumn": 130
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 47,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 7,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 554,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/Sqli",
          "ruleIndex": 26,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a database flows into prepareStatement, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "arguments": [
              "[a database](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26)",
              "[prepareStatement](27)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 98,
                  "endLine": 98,
                  "startColumn": 33,
                  "endColumn": 58
                }
              }
            }
          ],
          "fingerprints": {
            "0": "76900e1181f907ff1a528f97794fe8c0b650a148c0db1affcdd1e19a1fe88afd",
            "1": "94e8d757.33311739.58c2bb6d.6edaef59.fa5f6fc4.eefe0a80.5d71240d.598e73ab.e1d7cd7c.33311739.58c2bb6d.6edaef59.fa5f6fc4.cc716412.5d71240d.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 7,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 14,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 20,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 14,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlMetadataReader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 12,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 31,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 21,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 29,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 29,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 29,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 29,
                            "endColumn": 90
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 20,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 61,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlCharsetHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 98,
                            "endLine": 98,
                            "startColumn": 71,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlMetadataReader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 81,
                            "endColumn": 97
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlMetadataReader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 53,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlMetadataReader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 72,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlMetadataReader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 72,
                            "endColumn": 88
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlMetadataReader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 31,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlMetadataReader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 70,
                            "startColumn": 12,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/MssqlMetadataReader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 43,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 52,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 42,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server/sonar-db-migration/src/main/java/org/sonar/server/platform/db/migration/charset/SqlExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 14,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 554,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "isSupported": true,
            "lang": "XML",
            "files": 197,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Java",
            "files": 7488,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "TypeScript",
            "files": 2122,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "JavaScript",
            "files": 52,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "HTML",
            "files": 4,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Ruby",
            "files": 12,
            "type": "SUPPORTED"
          },
          {
            "isSupported": false,
            "lang": ".config",
            "files": 1,
            "type": "FAILED_PARSING"
          },
          {
            "isSupported": false,
            "lang": "XML",
            "files": 3,
            "type": "FAILED_PARSING"
          },
          {
            "isSupported": false,
            "lang": "Java",
            "files": 6,
            "type": "FAILED_PARSING"
          },
          {
            "isSupported": false,
            "lang": "HTML",
            "files": 1,
            "type": "FAILED_PARSING"
          },
          {
            "isSupported": false,
            "lang": "JavaScript",
            "files": 16,
            "type": "FAILED_PARSING"
          }
        ]
      }
    }
  ]
}
