{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "cpp/MemoryLeak",
              "name": "MemoryLeak",
              "shortDescription": {
                "text": "Missing Release of Memory after Effective Lifetime"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nHeap allocated memory is not sufficiently tracked and released after it is has been used, which slowly consumes remaining memory.\n\n\n## Best practices for Prevention\n* Allocate and free memory in the same module, at the same level of abstraction, [see example](https://wiki.sei.cmu.edu/confluence/display/c/MEM00-C.+Allocate+and+free+memory+in+the+same+module%2C+at+the+same+level+of+abstraction)\n\n\n## References\n* [CERT MEM00-C](https://wiki.sei.cmu.edu/confluence/display/c/MEM00-C.+Allocate+and+free+memory+in+the+same+module%2C+at+the+same+level+of+abstraction)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "MemoryLeak",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/stanfordnlp/spinn/commit/b3575456973332425d9ce4339ca50a7514461795?diff=split#diff-64540c38ca1b79e4e84eecff13ce24011cc4e92689e96ddf84ffa904a5c4456dL-1",
                    "lines": [
                      {
                        "line": "  float *ret = (float *) malloc(N * sizeof(float));\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "  ifstream file(filename);\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "  float x;\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "  for (int i = 0; i < N; i++) {\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "    file >> x;\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cout << x << endl;\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ret[i] = x;\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "  return ret;\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "float *load_weights_cuda(string filename, int N) {\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "  float *h_weights = load_weights(filename, N);\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "  float *d_weights;\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "  cudaMalloc(&d_weights, N * sizeof(float));\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "  cudaMemcpy(d_weights, h_weights, N * sizeof(float),\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "      cudaMemcpyHostToDevice);\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "  free(h_weights);\n",
                        "lineNumber": 22,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/luohaha/CSpider/commit/16cfb833cc993dc4a70a485737ae58990847f0aa?diff=split#diff-73ac80300bd77b06962065e0f2b544ff11b545899c989846a9b78cf07406d4e2L-1",
                    "lines": [
                      {
                        "line": "char *buf = (char*)malloc(sizeof(char));\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "node->data = &buf;\n",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "node->data = buf;\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/brynet/file/commit/736f80d192566563afeb00826754a4b7cf64d4b3?diff=split#diff-64aad63a3595c827d932213f1f692fbc2a6c2350c6a150cabbb7d0752a8b1cd5L-1",
                    "lines": [
                      {
                        "line": "void *zptr = malloc(0);\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "assert(zptr != NULL);\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "return ptr;\n",
                        "lineNumber": 50,
                        "lineChange": "removed"
                      },
                      {
                        "line": "return zptr;\n",
                        "lineNumber": 50,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 35,
                "cwe": [
                  "CWE-401"
                ]
              }
            },
            {
              "id": "python/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "PT",
                  "Security",
                  "SourceNonServer",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/Guad/fuwa/commit/955baf1c0e8824f08a96e48a350ee3cd0e3c5493?diff=split#diff-568470d013cd12e4f388206520da39ab9a4e4c3c6b95846cbc281abc1ba3c959L-1",
                    "lines": [
                      {
                        "line": "import string, random\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "import string, random, hashlib, os\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      },
                      {
                        "line": "from werkzeug import secure_filename\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      },
                      {
                        "line": "#Load config file\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "config = {}\n",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "with open('config.ini', 'r') as file:\n",
                        "lineNumber": 6,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tfor line in file.read().splitlines():\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tline = line.split('==')\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tconfig[line[0]] = line[1]\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "app = flask.Flask(__name__) #Initialize our application\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.config['MAX_CONTENT_LENGTH'] = 10 * 1024 * 1024 #Set the upload limit to 10MiB\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "def genHash(seed): #Generate five letter filenames for our files\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "    base = string.ascii_lowercase+string.digits \n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "    random.seed(seed)\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "    hash_value = \"\"\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for i in range(5):\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "        hash_value += random.choice(base)\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return hash_value\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "@app.route('/', methods=['GET', 'POST'])\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "def index():\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tif flask.request.method == 'POST':\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\"\"\"\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tFile upload happens here.\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tWe get your filename and convert it to our hash with your extension.\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tThen we redirect to the file itself.\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\"\"\"\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tf = flask.request.files['file']\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\textension = f.filename.split('.')[-1]\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tfilename = genHash(f.filename) + '.' + extension\n",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tf.save('static/files/%s' % filename)\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tprint 'Uploaded file \\'%s\\'' % filename #Log what file was uploaded\n",
                        "lineNumber": 27,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\treturn flask.redirect(flask.url_for('getFile', filename=filename))\n",
                        "lineNumber": 28,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\thasher = hashlib.md5() \t\t\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tbuf = f.read()\t\t   \t\t\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tf.seek(0) #Set cursor back to position 0 so we can read it again in the save function.\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\t\t\t\t\t\t\t# We hash the file to get its filename.\t   \t\t\n",
                        "lineNumber": 37,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\t\t\t\t\t\t\t# So that we can upload two different images with the same filename,\n",
                        "lineNumber": 38,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\thasher.update(buf)\t   \t\t# But not two same images with different filenames.\n",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tdirname = genHash(hasher.hexdigest())\n",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tif not os.path.exists(\"static/files/%s\" % dirname): # Check if the folder already exists\n",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tos.mkdir('static/files/%s' % dirname) #Make it\n",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tf.save('static/files/%s/%s' % (dirname, secure_filename(f.filename)))\n",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tprint 'Uploaded file \\'%s\\'' % secure_filename(f.filename) #Log what file was uploaded\n",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\treturn flask.redirect(flask.url_for('getFile', dirname=dirname,filename=secure_filename(f.filename)))\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\telse:\n",
                        "lineNumber": 46,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tflask.flash('File already exists in %s!' % dirname) #Display a message for the user.\n",
                        "lineNumber": 47,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\treturn flask.redirect(flask.url_for('index'))\n",
                        "lineNumber": 48,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/fonttools/fonttools/commit/0b99c8968e04e2e36c6c46ad8bb1a550d25969b4?diff=split#diff-e8b6161353c7ce5b13e62df1da329a85de0ef80ce8f039d283c25bf892b2b600L-1",
                    "lines": [
                      {
                        "line": "os.system('gzip -9v %s' % tar)\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "os.rename(gz, tgz)\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "if destdir:\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tprint \"destination directory:\", destdir\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tos.system('mv %s %s' % (gz, destdir))\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Chenwe-i-lin/KnowledgeFruits/commit/?diff=split#diff-ab8c675e5b4b07c550455b0884835f1df471bb69ad7142f6ad43b26cf33eb4e6L-1",
                    "lines": [
                      {
                        "line": "base_path = os.path.abspath(os.path.dirname(__file__))\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "base_path_for_data =  os.path.join(base_path,'data/texture')\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "file = os.path.join(base_path_for_data, image + '.png')\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "if os.path.abspath(file).startswith(base_path_for_data):\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "with open(os.getcwd() + \"/data/texture/\" + image + '.png', \"rb\") as f:\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 36,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "python/TarSlip/test",
              "name": "TarSlip/test",
              "shortDescription": {
                "text": "Arbitrary File Write via Archive Extraction (Tar Slip)"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nZip Slip is a form of directory traversal that can be exploited by extracting files from an archive. The premise of the directory traversal vulnerability is that an attacker can gain access to parts of the file system outside of the target folder in which they should reside. The attacker can then overwrite executable files and either invoke them remotely or wait for the system or user to call them, thus achieving remote command execution on the victim’s machine. The vulnerability can also cause damage by overwriting configuration files or other sensitive resources, and can be exploited on both client (user) machines and servers.\n\n## Example\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "TarSlip",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/AlexKuhnle/ShapeWorld/commit/798a52fa5a7e01e6822dcf157600ec9b9b3e1350?diff=split#diff-be0584efe894029a1b0526edab5d2e8f7c2888ce3648e9ef4287200f61b6ac32L-1",
                    "lines": [
                      {
                        "line": "import tarfile\n",
                        "lineNumber": 16,
                        "lineChange": "removed"
                      },
                      {
                        "line": "with tarfile.open(os.path.join(directory, 'resources', language + '.dat.tar.gz'), 'r:gz') as filehandle:\n",
                        "lineNumber": 17,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    try:\n",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        fileinfo = filehandle.getmember(language + '.dat')\n",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    except KeyError:\n",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        assert False\n",
                        "lineNumber": 21,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    filehandle.extract(member=fileinfo)\n",
                        "lineNumber": 22,
                        "lineChange": "removed"
                      },
                      {
                        "line": "import gzip\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "with gzip.open(os.path.join(directory, 'resources', language + '.dat.gz'), 'rb') as gzip_filehandle:\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "    with open(os.path.join(directory, 'resources', language + '.dat'), 'wb') as filehandle:\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "        filehandle.write(gzip_filehandle.read())\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Hydrospheredata/kubeflow-workshop/commit/754457fccfe919cde60d4ca240f28b374f593334?diff=split#diff-8ac076fbde9e80ce02018a52a6ad9e873aa9be704e8dac4b8abc44b314b588b9L-1",
                    "lines": [
                      {
                        "line": "import os, gzip, tarfile, shutil, glob\n",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "import urllib, urllib.parse, urllib.request\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "def download_files(base_url, base_dir, files):\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\" Download required data \"\"\"\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "    downloaded = []\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "    os.makedirs(base_dir, exist_ok=True)\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for file in files:\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "        print(f\"Started downloading {file}\", flush=True)\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "        download_url = urllib.parse.urljoin(base_url, file)\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "        download_path = os.path.join(base_dir, file)\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "        local_file, _ = urllib.request.urlretrieve(download_url, download_path)\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "        unpack_file(local_file, base_dir)\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return downloaded\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "def unpack_file(file, base_dir):\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\" Unpacking all compressed files. \"\"\"\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "    print(f\"Unpacking {file}\", flush=True)\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if os.path.split(base_dir)[-1] == \"mnist\":\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "with gzip.open(file, 'rb') as f_in, open(file[:-3],'wb') as f_out:\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "    shutil.copyfileobj(f_in, f_out)\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "if os.path.split(base_dir)[-1] == \"notmnist\":\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "    with tarfile.open(file) as f_tar: \n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "        f_tar.extractall(base_dir)\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/lpcinelli/foreground-segmentation/commit/17489eb13e3d50a2b2c373258d05a6c0160fd4f5?diff=split#diff-0127893470062e012505a30a335e174e59d3db3e164684944b6a83e57cdb6cb2L-1",
                    "lines": [
                      {
                        "line": "import tarfile\n",
                        "lineNumber": 3,
                        "lineChange": "removed"
                      },
                      {
                        "line": "import urllib\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      },
                      {
                        "line": "from zipfile import ZipFile\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "import glob2 as glob\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "import numpy as np\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "import pandas as pd\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "from PIL import Image\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "from tqdm import tqdm\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "URL = \"http://wordpress-jodoin.dmi.usherb.ca/static/dataset/dataset2014.zip\"\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "MD5 = \"d86332547edbc25f4ddbcd49f92413cf\"\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "BASE_PATH = os.path.dirname(os.path.abspath(__file__))\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "def md5file(fname):\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "    hash_md5 = hashlib.md5()\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "    with open(fname, \"rb\") as f:\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "        for chunk in iter(lambda: f.read(4096), b\"\"):\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "            hash_md5.update(chunk)\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return hash_md5.hexdigest()\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "def download(url, md5sum, target_dir):\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"Download file from url to target_dir, and check md5sum.\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Adapted from PaddlePaddle/DeepSpeech repo\"\"\"\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if not os.path.exists(target_dir): os.makedirs(target_dir)\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "    filepath = os.path.join(target_dir, url.split(\"/\")[-1])\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "if not (os.path.exists(filepath) and md5file(filepath) == md5sum):\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "    print(\"Downloading %s ...\" % url)\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "    os.system(\"wget -c \" + url + \" -P \" + target_dir)\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "    print(\"\\nMD5 Chesksum %s ...\" % filepath)\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if not md5file(filepath) == md5sum:\n",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "            raise RuntimeError(\"MD5 checksum failed.\")\n",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:\n",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "        print(\"File exists, skip downloading. (%s)\" % filepath)\n",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return filepath\n",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 65,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "def unpack(filepath, target_dir, rm_tar=False):\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"Unpack the file to the target_dir.\"\"\"\n",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "    print(\"Unpacking %s ...\" % filepath)\n",
                        "lineNumber": 43,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    tar = tarfile.open(filepath)\n",
                        "lineNumber": 44,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    tar.extractall(target_dir)\n",
                        "lineNumber": 45,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    tar.close()\n",
                        "lineNumber": 46,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    if rm_tar == True:\n",
                        "lineNumber": 47,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    if os.path.exists(os.path.join(target_dir, 'dataset')):\n",
                        "lineNumber": 69,
                        "lineChange": "added"
                      },
                      {
                        "line": "        print(\"Skip unpacking. Data already extracted at %s.\" % os.path.join(\n",
                        "lineNumber": 70,
                        "lineChange": "added"
                      },
                      {
                        "line": "            target_dir, 'dataset'))\n",
                        "lineNumber": 71,
                        "lineChange": "added"
                      },
                      {
                        "line": "        return\n",
                        "lineNumber": 72,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 73,
                        "lineChange": "added"
                      },
                      {
                        "line": "    print(\"Unpacking {}...\".format(filepath))\n",
                        "lineNumber": 74,
                        "lineChange": "added"
                      },
                      {
                        "line": "    with ZipFile(filepath) as fzip:\n",
                        "lineNumber": 75,
                        "lineChange": "added"
                      },
                      {
                        "line": "        fzip.extractall(target_dir)\n",
                        "lineNumber": 76,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 77,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if remove:\n",
                        "lineNumber": 78,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 49,
                "cwe": [
                  "CWE-22"
                ]
              }
            },
            {
              "id": "cpp/IntegerOverflow/test",
              "name": "IntegerOverflow/test",
              "shortDescription": {
                "text": "Integer Overflow"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nAn integer overflow is a type of an arithmetic overflow error when the result of an integer operation does not fit within the allocated memory space. Instead of an error in the program, it usually causes the result to be unexpected. In the context of application security, this could lead to bypass of application logic or validation, and in some cases may lead to buffer overflow vulnerabilities.\n\nExample:\n\n```\nnresp = packet_get_int();\nif (nresp > 0) {\n response = xmalloc(nresp*sizeof(char*));\n for (i = 0; i < nresp; i++)\n  response[i] = packet_get_string(NULL);\n}\n```\n\nIf `nresp` is 1073741824 and `sizeof(char*)` is 4 (which is typical), then `nresp*sizeof(char*)` results in an overflow. Therefore, `xmalloc()` receives and allocates a 0-byte buffer. The subsequent loop causes a heap buffer overflow, which may, in turn, be used by an attacker to execute arbitrary code.\n\n## Best practices for prevention\n\nInteger overflow can be hard to detect and prevent, especially in large and complex codebases. Developers should perform checks as appropriate to determine that arithmetic operations do not result in an overflow. This could be as simple as ensuring the result of the additive operation is not less than the operands themselves (and the inverse for subtractive operations). Libraries and processes can help to prevent such issues too - in the case of the GCC compiler, for example, there are built-in functions that check for integer overflows. In the case of C++ programs, there is a library called SafeInt that performs safe operations.\n\n## References\n\n* [CWE-190: Integer Overflow or Wraparound](https://cwe.mitre.org/data/definitions/190.html)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "IntegerOverflow",
                  "Security",
                  "InTest",
                  "SourceResourceAccess",
                  "SourceFile",
                  "Taint"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-190"
                ]
              }
            },
            {
              "id": "python/unquoted~csv~writer/test",
              "name": "unquoted~csv~writer/test",
              "shortDescription": {
                "text": "unquoted~csv~writer/test"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "unquoted~csv~writer",
                  "Security",
                  "InTest",
                  "SourceNonServer",
                  "SourceLocalEnv",
                  "SourceEnvironmentVariable",
                  "Taint"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0
              }
            },
            {
              "id": "python/CommandInjection",
              "name": "CommandInjection",
              "shortDescription": {
                "text": "Command Injection"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nWith an OS command injection attack a web application user can pass commands directly to the system shell, attached to a legitimate request. These commands can then be executed on the application server, potentially leading to harmful consequences, including data exposure or deletion. Like code injection attacks, command injection attacks are essentially a failure of data validation. Unlike code injection attacks, which introduce new code, command injection attacks use existing system functions, often taking advantage of the application's unnecessarily high privilege level, increasing the risk of serious harm and reputational damage.\n\n## Best practices for prevention\n- Never trust user input. Assume any input may transmit harmful values.\n- Adopt the principle of least privilege: No application should have a greater access level than needed to run its required tasks.\n- Control user access policies on a task-by-task basis.\n- Don't pass user input directly to the system; use libraries or APIs that lack system access.\n- Where shell commands must be passed, escape values using functions like shlex for Python, or escapeshellarg() for PHP.\n- Sanitize user input with regular expressions to define permitted characters along with maximum string length.\n- Convert special characters such as `& |  ; $ > < \\ !` before passing to the server.\n- Whitelist permitted commands and validate user responses against these expectations.\n- Remember that code injection can take place on multiple fronts: GET and POST requests, but also cookies and HTTP headers.\n- Ensure up-to-date patching across all systems to remediate known vulnerabilities.\n- Educate all team members on safer data handling procedures to prevent attacks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "CommandInjection",
                  "Security",
                  "SourceNonServer",
                  "SourceLocalEnv",
                  "SourceEnvironmentVariable",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/ucbvislab/speecheditor/commit/70f2fb2290a28a1db5e65755c3a8307ef538ea99?diff=split#diff-568470d013cd12e4f388206520da39ab9a4e4c3c6b95846cbc281abc1ba3c959L-1",
                    "lines": [
                      {
                        "line": "subprocess.call('cp \"%s\" \"%s\"' % (orig_name, full_name), shell=True)\n",
                        "lineNumber": 285,
                        "lineChange": "removed"
                      },
                      {
                        "line": "shutil.copyfile(orig_name, full_name)\n",
                        "lineNumber": 303,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/esozh/eso_zh_ui/commit/7ef4d63f4c7c2e0275daf08862f615dcc6cf69f5?diff=split#diff-483aa1e8daa36090ed6724943f7abfef3f885823db8620ee30cc5ead97b91053L-1",
                    "lines": [
                      {
                        "line": "os.system('mv %s %s' % (filename, new_name))\n",
                        "lineNumber": 29,
                        "lineChange": "removed"
                      },
                      {
                        "line": "shutil.move(filename, new_name)\n",
                        "lineNumber": 29,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/jjgod/opf-cc/commit/d03202eab8278189bc3d9ebd6ff353772a72189d?diff=split#diff-fd2c598923afdaa788e7469b2866ea4d019adcb333e33494e563810508d06700L-1",
                    "lines": [
                      {
                        "line": "cmd = \"rm -rf '%s'\" % input_path\n",
                        "lineNumber": 143,
                        "lineChange": "removed"
                      },
                      {
                        "line": "os.system(cmd)\n",
                        "lineNumber": 144,
                        "lineChange": "removed"
                      },
                      {
                        "line": "shutil.rmtree(input_path)\n",
                        "lineNumber": 143,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 81,
                "cwe": [
                  "CWE-78"
                ]
              }
            },
            {
              "id": "cpp/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "PT",
                  "Security",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/qpdf/qpdf/commit/ac4deac1873ca1bb570ffd479ed2cc1010762f89?diff=split#diff-86ce344dc69debd78135a45c16f074eecc538658a36ca4dab21839bcd330dbaeL-1",
                    "lines": [
                      {
                        "line": "    FILE* infile = fopen(infilename, \"rb\"); // XXXX\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    if (infile == 0)\n",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    {\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\tstd::cerr << \"can't open \" << infilename << std::endl;\n",
                        "lineNumber": 27,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\texit(2);\n",
                        "lineNumber": 28,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 29,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 30,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    FILE* infile = QUtil::safe_fopen(infilename, \"rb\");\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/awslabs/aws-c-compression/commit/25cd4134377b6e2ed787d42a3a221582bdc1fa57?diff=split#diff-7be55cd889d1d7041835371d751f0ab01f17a3bb46e6d94acdcbf92473244ba2L-1",
                    "lines": [
                      {
                        "line": "FILE *file = fopen(input_path, \"r\");\n",
                        "lineNumber": 44,
                        "lineChange": "removed"
                      },
                      {
                        "line": "FILE *file = aws_fopen(input_path, \"r\");\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/steveicarus/iverilog/commit/aaa734690ffa6f7196357d6dee1a2f21b5ce17a2?diff=split#diff-0225fc36ffec899e5e238b258d4a2c782344607fe3500e76abf8177ec5b03f27L-1",
                    "lines": [
                      {
                        "line": "file = fopen(pathbuf, \"w\");\n",
                        "lineNumber": 150,
                        "lineChange": "removed"
                      },
                      {
                        "line": "file = fopen_safe(pathbuf);\n",
                        "lineNumber": 178,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 26,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "cpp/CMissingClose",
              "name": "CMissingClose",
              "shortDescription": {
                "text": "Missing Release of File Descriptor or Handle after Effective Lifetime"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nA file descriptor or handler is allocated, and is not released after its effective lifetime has ended, i.e., after the file descriptor/handle is no longer needed.\n\nThis can lead to a denial of service, as an OS has a finite pool of file descriptors, and it may prevent other processes from obtaining their own file descriptors.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "CMissingClose",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/NCAR/ncl/commit/e0223ba7f96e77f00809a415e3308c70303f9542?diff=split#diff-df5e9e724e8583ee52188d12a745d16920f767c1810b04a27c6eeb7232423b58L-1",
                    "lines": [
                      {
                        "line": "\tif ((fp = fopen(\"/dev/tty\", \"w\")) == NULL) {\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tfp = stderr;\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t}\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tif (header) (void) fprintf(fp, \"%s - \", header);\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t(void) fprintf(fp, \"Version %s\\n\", VERSION);\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t(void) fflush(fp);\n",
                        "lineNumber": 32,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tif (fp != stderr) fclose(fp);\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/sirupsen/flying-cat/commit/c06788fa4d076221fa4a00c3b1fd1452660c34fe?diff=split#diff-29219c331c8b7f6acd9f5ceb186c4e811fc2d027b47aae3368f1cf93973b8af0L-1",
                    "lines": [
                      {
                        "line": "FILE* s = fopen(argv[1], \"rb\");\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "FILE* d = fopen(argv[2], \"wb\");\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "int o = atoi(argv[3]);\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "if(o < 0)\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "{\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tprintf(\"Offset must be a positive integer\\n\");\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "\treturn 1;\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "if(s == NULL)\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "{\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tprintf(\"Can't open %s for reading\\n\", argv[1]);\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\treturn 1;\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "if(d == NULL)\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "{\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tprintf(\"Can't open %s for writing\\n\", argv[2]);\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\treturn 1;\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "fseek(s, o, SEEK_SET);\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "while(1)\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "{\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tchar c = fgetc(s);\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tif(c == EOF)\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tbreak;\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tfputc(c, d);\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "printf(\"Done\\n\");\n",
                        "lineNumber": 41,
                        "lineChange": "removed"
                      },
                      {
                        "line": "fclose(s);\n",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "fclose(d);\n",
                        "lineNumber": 42,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/ElektraInitiative/libelektra/commit/3e7a05a62786a2a235d2643f968ef6d6866bcb07?diff=split#diff-ac0fd3922116dc1d1a71b721ae20637cf3d454929f3c80778b02fa9aa12b128bL-1",
                    "lines": [
                      {
                        "line": "\tFILE * fp = fopen (keyString (parentKey), \"w\");\n",
                        "lineNumber": 143,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 144,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tif (!fp)\n",
                        "lineNumber": 145,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t{\n",
                        "lineNumber": 146,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tELEKTRA_SET_ERROR_SET (parentKey);\n",
                        "lineNumber": 147,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\treturn -1;\n",
                        "lineNumber": 148,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t}\n",
                        "lineNumber": 149,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 150,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tksGenerate (returned, fp, 0);\n",
                        "lineNumber": 151,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 152,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tfclose (fp);\n",
                        "lineNumber": 150,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 57,
                "cwe": [
                  "CWE-775"
                ]
              }
            },
            {
              "id": "cpp/CDivisionByZero/test",
              "name": "CDivisionByZero/test",
              "shortDescription": {
                "text": "Division By Zero"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\nA value is divided by zero, this can result in unexpected program behaviour.\n\n## Best practices for prevention\nEnsure that any value being used as a divisor cannot be zero.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "CDivisionByZero",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/intel-ctrlsys/sensys/commit/58818452a80ec87478e1e1864b972b3edc6f8a93?diff=split#diff-2aad9f6fb562a2b63480e8392da2ee468ae679a660e83b8f729ed8a24b127a20L-1",
                    "lines": [
                      {
                        "line": "\n",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (0 == n) return -1;\n",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "    avg = sum / n;\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/tundra/neutrino/commit/a162f38b6fe88c0d32701fd47802312e91c76940?diff=split#diff-7263d3059b960d3cabdd8d66f28b023d6ff2d89fc9a818f6f8bcee713fa8b494L-1",
                    "lines": [
                      {
                        "line": "double average = 65536.0 / total_failures;\n",
                        "lineNumber": 127,
                        "lineChange": "removed"
                      },
                      {
                        "line": "double average = 65536.0 / ((double) total_failures);\n",
                        "lineNumber": 127,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/libav/libav/commit/eeaa742c3e77077628f9d4e87b5faf24f2b7e183?diff=split#diff-4528f439de40c2872c5d8a66af37daa78af8724948b73fc2c48568a8a77142faL-1",
                    "lines": [
                      {
                        "line": "if(!i) i=1;\n",
                        "lineNumber": 122,
                        "lineChange": "added"
                      },
                      {
                        "line": "dev= int_sqrt((sse*F*F)/i);\n",
                        "lineNumber": 123,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 45,
                "cwe": [
                  "CWE-369"
                ]
              }
            },
            {
              "id": "python/Ssrf",
              "name": "Ssrf",
              "shortDescription": {
                "text": "Server-Side Request Forgery (SSRF)"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\nIn a server-side request forgery attack, a malicious user supplies a URL (an external URL or a network IP address such as 127.0.0.1) to the application's back end. The server then accesses the URL and shares its results, which may include sensitive information such as AWS metadata, internal configuration information, or database contents with the attacker. Because the request comes from the back end, it bypasses access controls, potentially exposing information the user does not have sufficient privileges to receive. The attacker can then exploit this information to gain access, modify the web application, or demand a ransom payment.\n\n## Best practices for prevention\n* Blacklists are problematic and attackers have numerous ways to bypass them; ideally, use a whitelist of all permitted domains and IP addresses.\n* Use authentication even within your own network to prevent exploitation of server-side requests.\n* Implement zero trust and sanitize and validate all URL and header data returning to the server from the user. Strip invalid or suspect characters, then inspect to be certain it contains a valid and expected value.\n* Ideally, avoid sending server requests based on user-provided data altogether.\n* Ensure that you are not sending raw response bodies from the server directly to the client. Only deliver expected responses.\n* Disable suspect and exploitable URL schemas. Common culprits include obscure and little-used schemas such as `file://`, `dict://`, `ftp://`, and `gopher://`.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "Ssrf",
                  "Security",
                  "SourceNonServer",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/rowanlupton/pylodon/commit/6d2e152f41f5073d6b224307690087ebdce3df12?diff=split#diff-0c2bad94cd303c5944a38a94f62a63355b8bed2e102dc87c0f44de95cf135b8aL-1",
                    "lines": [
                      {
                        "line": "import json, requests\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "from flask_pymongo import PyMongo\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "from activipy import vocab\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "from .forms import userLogin, userRegister, composePost\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "from .users import User\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "# from .emails import lostPassword, checkToken\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "mongo = PyMongo(app)\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "SERVER_URL = 'http://populator.smilodon.social/'\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "API_HEADERS = {'Content-Type': 'application/ld+json', 'profile': 'https://www.w3.org/ns/activitystreams'}\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "@lm.user_loader\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "def load_user(handle):\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    u = mongo.db.users.find_one({\"id\": handle})\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if not u:\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return None\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return User(u['id'])\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "@app.route('/', methods=['GET', 'POST'])\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "@login_required\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "def index():\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tuser = mongo.db.users.find_one({'id': current_user.get_id()})\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tr = requests.get(user['inbox'], headers=API_HEADERS)\n",
                        "lineNumber": 29,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\tr = requests.get('http://localhost:5000/api/roo/inbox', headers=API_HEADERS)\n",
                        "lineNumber": 30,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/ARM-software/vulkan_best_practice_for_mobile_developers/commit/23ad832af741f0354949a72e6c6f799eb9d2bace?diff=split#diff-7efee2ee97af01f846ed5818e84c955c51bd8efe06588e0dfa341c68966d945fL-1",
                    "lines": [
                      {
                        "line": "    parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter, description=\"Downloads and unpacks assets\")\n",
                        "lineNumber": 31,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    parser.add_argument(\"zip_url\", action=\"store\", type=str, help=\"URL of the assets package\")\n",
                        "lineNumber": 32,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    args = parser.parse_args()\n",
                        "lineNumber": 33,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    url = \"https://github.com/ARM-software/vulkan_best_practice_for_mobile_developers/releases/download/v1.1.2/scenes.zip\"\n",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try:\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "        request = requests.get(args.zip_url, stream=True)\n",
                        "lineNumber": 36,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        request = requests.get(url, stream=True)\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/schlosser/eventum/commit/?diff=split#diff-f4729fea0d9ecf9950ff3b36ce5dfba2ab27cf3fffa642b9e0d176234cdfc8a1L-1",
                    "lines": [
                      {
                        "line": "old_site_url = 'http://adicu.github.com' + request.path\n",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": "old_site_url = 'http://adicu.github.com/' + request.path\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "response = requests.get(old_site_url)\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 25,
                "cwe": [
                  "CWE-918"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "cpp/MemoryLeak",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Leaking memory. ONNX_NAMESPACE::Node is allocated on the heap and never freed",
            "markdown": "Leaking memory. {0} is allocated on the heap and never freed",
            "arguments": [
              "[ONNX_NAMESPACE::Node](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/common/ir.h",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1013,
                  "endLine": 1013,
                  "startColumn": 12,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6bca7faa90a780137de9be65df63460d4d7792006ab8a3c2632ba139c9d1e654",
            "1": "6068b444.624e1374.ff84dc6f.69da5583.ec473651.6a274ab8.30ad82ea.13b094cf.55b93f8d.0ed74b42.a1780f56.035a9432.fdd903f3.e11f9d36.12dada8a.13b094cf"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/common/ir.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1013,
                            "endLine": 1013,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 508,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/MemoryLeak",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Leaking memory. MainWindow is allocated on the heap and never freed",
            "markdown": "Leaking memory. {0} is allocated on the heap and never freed",
            "arguments": [
              "[MainWindow](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 56,
                  "endLine": 56,
                  "startColumn": 29,
                  "endColumn": 45
                }
              }
            }
          ],
          "fingerprints": {
            "0": "529b9eb690626870ae757b7a3d14960e39f88d1c8512dbad0f98060980ace835",
            "1": "a845e1bb.61ef3bcb.6145333e.1bd0bc43.d426d94c.6a274ab8.30ad82ea.acd45df7.37e5e6d9.2be46978.8347c54c.1bd0bc43.c8261454.45493475.30ad82ea.bce64922"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 35,
                            "endColumn": 45
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 508,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[open](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/label_speed.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 96,
                  "endLine": 96,
                  "startColumn": 6,
                  "endColumn": 10
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2449bb6a195d8b25d51f93bbd538035ffce2f6eb1ecf56b20ea13a419b30f9b6",
            "1": "2e8ddaeb.e3d9b656.187bf175.139c59a8.f3eda546.ba14daf2.081ac3f4.a4830b9a.2e8ddaeb.04ad2656.094e9cf7.9cd2dfe0.4608c58f.0a892d8d.22a8b49e.a4830b9a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/label_speed.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/label_speed.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/label_speed.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 1,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/label_speed.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/label_speed.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 7,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/label_speed.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 11,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/label_speed.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 11,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/label_speed.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 529,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17)",
              "[open](18)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/gen_proto.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 171,
                  "endLine": 171,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3a527a5c7ea472698ea2048730d1aec72168d1e2aea3b133a3f3cf1bceb43c54",
            "1": "2e8ddaeb.09b47a5b.187bf175.139c59a8.f3eda546.ba14daf2.0f091897.419db015.b1a04c58.04ad2656.187bf175.9cd2dfe0.4608c58f.b807a2e4.f6dc7859.be6cae2f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/gen_proto.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 199,
                            "endLine": 199,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/gen_proto.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 199,
                            "endLine": 199,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/gen_proto.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 199,
                            "endLine": 199,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/gen_proto.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 201,
                            "endLine": 201,
                            "startColumn": 27,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/gen_proto.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 204,
                            "endLine": 204,
                            "startColumn": 17,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/gen_proto.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 206,
                            "endLine": 206,
                            "startColumn": 30,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/gen_proto.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 207,
                            "endLine": 207,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/gen_proto.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 207,
                            "endLine": 207,
                            "startColumn": 24,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/gen_proto.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 124,
                            "endLine": 124,
                            "startColumn": 33,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/gen_proto.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 131,
                            "endLine": 131,
                            "startColumn": 59,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/gen_proto.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 120,
                            "endLine": 120,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/gen_proto.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 61,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/gen_proto.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 161,
                            "endLine": 161,
                            "startColumn": 71,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/gen_proto.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 25,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/gen_proto.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/gen_proto.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 161,
                            "endLine": 161,
                            "startColumn": 5,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/gen_proto.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 170,
                            "endLine": 170,
                            "startColumn": 34,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/gen_proto.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 171,
                            "endLine": 171,
                            "startColumn": 15,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/gen_proto.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 171,
                            "endLine": 171,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 529,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[open](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/pybind11/tools/libsize.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 36,
                  "startColumn": 6,
                  "endColumn": 10
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f10af5fcdf5c01d7ab4dd03c7c9f12706c433673f6c7446946c39677d5ce454b",
            "1": "af411450.854beada.187bf175.139c59a8.f3eda546.ba14daf2.aa34d093.f46ed94e.af411450.bd21faec.187bf175.86f164fa.4608c58f.48e1de78.22a8b49e.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/pybind11/tools/libsize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 8,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/pybind11/tools/libsize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 8,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/pybind11/tools/libsize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 8,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/pybind11/tools/libsize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 1,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/pybind11/tools/libsize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/pybind11/tools/libsize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 11,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/pybind11/tools/libsize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 579,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[open](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/pybind11/tools/libsize.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 24,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e13c4215291ad0f5c2f2ae20e604c49c2314abd5eb732bafbb7742ca7b5f2c06",
            "1": "af411450.854beada.187bf175.139c59a8.f3eda546.ba14daf2.aa34d093.f46ed94e.af411450.df125dd5.187bf175.139c59a8.93c7c4ce.48e1de78.22a8b49e.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/pybind11/tools/libsize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 8,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/pybind11/tools/libsize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 8,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/pybind11/tools/libsize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 8,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/pybind11/tools/libsize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 1,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/pybind11/tools/libsize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/pybind11/tools/libsize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 15,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/pybind11/tools/libsize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 579,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4)",
              "[open](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/tools/net_drawer.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 133,
                  "endLine": 133,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a2730d3050b056e7607116b47ff23a54649f65b30518ecdb5ca8da0e69d07fa2",
            "1": "e76ac861.e3d9b656.3d5f3d50.b5f6ec27.f3eda546.ba14daf2.081ac3f4.ebed174f.fe1b2080.4d8ae9af.3d5f3d50.9cd2dfe0.0bddba9c.0a892d8d.f6dc7859.083f8e42"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/tools/net_drawer.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 131,
                            "endLine": 131,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/tools/net_drawer.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 131,
                            "endLine": 131,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/tools/net_drawer.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 131,
                            "endLine": 131,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/tools/net_drawer.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 133,
                            "endLine": 133,
                            "startColumn": 15,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/tools/net_drawer.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 133,
                            "endLine": 133,
                            "startColumn": 15,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/tools/net_drawer.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 133,
                            "endLine": 133,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 529,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48)",
              "[open](49)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 156,
                  "endLine": 156,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cb56c187e423df1c559fee05d1a76da6a0ce9da4e2ce9621ac6472af9985e800",
            "1": "7b0793b4.bff3b117.187bf175.c40dd5e5.162476c1.26111803.f9f89fbf.55ba49f2.29f70f0d.5cfed915.4533d7b6.f6463326.4608c58f.a2b9e3b0.463ca50c.bda92d95"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 9,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 27,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 20,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 13,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 22,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 22,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 13,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 21,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 21,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 13,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 46,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 46,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 46,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 46,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 41,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 37,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 29,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 23,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 13,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 43,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 23,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 84,
                            "endLine": 84,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 181,
                            "endLine": 181,
                            "startColumn": 9,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 184,
                            "endLine": 184,
                            "startColumn": 30,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 184,
                            "endLine": 184,
                            "startColumn": 30,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 184,
                            "endLine": 184,
                            "startColumn": 26,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 184,
                            "endLine": 184,
                            "startColumn": 15,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 226,
                            "endLine": 226,
                            "startColumn": 39,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 226,
                            "endLine": 226,
                            "startColumn": 32,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 226,
                            "endLine": 226,
                            "startColumn": 28,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 226,
                            "endLine": 226,
                            "startColumn": 27,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 226,
                            "endLine": 226,
                            "startColumn": 19,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 226,
                            "endLine": 226,
                            "startColumn": 9,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 225,
                            "endLine": 225,
                            "startColumn": 12,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 225,
                            "endLine": 231,
                            "startColumn": 5,
                            "endColumn": 6
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 233,
                            "endLine": 233,
                            "startColumn": 43,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 59,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 36,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 125,
                            "endLine": 125,
                            "startColumn": 19,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 131,
                            "endLine": 131,
                            "startColumn": 34,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 21,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 45,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 155,
                            "endLine": 155,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 46,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 155,
                            "endLine": 155,
                            "startColumn": 15,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 47,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 155,
                            "endLine": 155,
                            "startColumn": 5,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 48,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 156,
                            "endLine": 156,
                            "startColumn": 15,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 49,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 156,
                            "endLine": 156,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 579,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into os.remove, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51)",
              "[os.remove](52)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 163,
                  "endLine": 163,
                  "startColumn": 5,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1e26d3b21ee16ce987f9b17025405e8fb526fa7f8181c136cbf82950994ea5ac",
            "1": "5b57990b.bff3b117.2683ade8.139c59a8.162476c1.ba14daf2.081ac3f4.4201a018.29f70f0d.5cfed915.4533d7b6.f6463326.cb6ba951.a2b9e3b0.463ca50c.bda92d95"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 9,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 27,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 20,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 13,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 22,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 22,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 13,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 21,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 21,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 13,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 46,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 46,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 46,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 46,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 41,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 37,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 29,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 23,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 13,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 43,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 23,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 84,
                            "endLine": 84,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 181,
                            "endLine": 181,
                            "startColumn": 9,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 184,
                            "endLine": 184,
                            "startColumn": 30,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 184,
                            "endLine": 184,
                            "startColumn": 30,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 184,
                            "endLine": 184,
                            "startColumn": 26,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 184,
                            "endLine": 184,
                            "startColumn": 15,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 226,
                            "endLine": 226,
                            "startColumn": 39,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 226,
                            "endLine": 226,
                            "startColumn": 32,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 226,
                            "endLine": 226,
                            "startColumn": 28,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 226,
                            "endLine": 226,
                            "startColumn": 27,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 226,
                            "endLine": 226,
                            "startColumn": 19,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 226,
                            "endLine": 226,
                            "startColumn": 9,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 225,
                            "endLine": 225,
                            "startColumn": 12,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 225,
                            "endLine": 231,
                            "startColumn": 5,
                            "endColumn": 6
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 233,
                            "endLine": 233,
                            "startColumn": 43,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 59,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 36,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 125,
                            "endLine": 125,
                            "startColumn": 19,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 131,
                            "endLine": 131,
                            "startColumn": 34,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 21,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 45,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 155,
                            "endLine": 155,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 46,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 155,
                            "endLine": 155,
                            "startColumn": 15,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 47,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 155,
                            "endLine": 155,
                            "startColumn": 5,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 48,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 156,
                            "endLine": 156,
                            "startColumn": 15,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 49,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 162,
                            "endLine": 162,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 50,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 114,
                            "endLine": 114,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 51,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 163,
                            "endLine": 163,
                            "startColumn": 15,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 52,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 163,
                            "endLine": 163,
                            "startColumn": 5,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 579,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/TarSlip/test",
          "ruleIndex": 2,
          "level": "note",
          "message": {
            "text": "Calling extractall to extract all files from a tar file without sanitization. This may result files outside destination directory to be overwritten, resulting in an arbitrary file write.",
            "markdown": "Calling {0} to extract all files from a tar file without sanitization. This may result files outside destination directory to be overwritten, resulting in an arbitrary file write.",
            "arguments": [
              "[extractall](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/backend/test/runner/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 191,
                  "endLine": 191,
                  "startColumn": 17,
                  "endColumn": 29
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e4c9062309433d35e87685038ce3e7e07e0c0d43bfb49aab9e13c32ffb6a3f72",
            "1": "59db2697.755ecede.187bf175.139c59a8.075a0498.fb8cc529.28caaf2d.4201a018.59db2697.755ecede.187bf175.139c59a8.3f5ff851.ba14daf2.292a8005.4201a018"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/backend/test/runner/__init__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 191,
                            "endLine": 191,
                            "startColumn": 17,
                            "endColumn": 29
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 354,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a file flows into a subtraction operator (-), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into a subtraction operator (-), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 273,
                  "endLine": 273,
                  "startColumn": 37,
                  "endColumn": 41
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4707866704a33e7116fbcab56d5f5045836e2f88aa568b4d217ef13e0ee1974e",
            "1": "575a72a2.76503df6.66e58c8d.1c706e52.f0ffe2b3.34c6cc13.5db3d4a6.683c1dbf.575a72a2.e12bf525.66e58c8d.1c706e52.baf5e6ff.ac989eab.50e07b35.683c1dbf"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 215,
                            "endLine": 215,
                            "startColumn": 15,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 215,
                            "endLine": 215,
                            "startColumn": 15,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 26,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 225,
                            "endLine": 225,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 251,
                            "endLine": 251,
                            "startColumn": 33,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 6,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 254,
                            "endLine": 254,
                            "startColumn": 25,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 264,
                            "endLine": 264,
                            "startColumn": 54,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 266,
                            "endLine": 266,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 268,
                            "endLine": 268,
                            "startColumn": 26,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 269,
                            "endLine": 269,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 271,
                            "endLine": 271,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 272,
                            "endLine": 272,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 273,
                            "endLine": 273,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 275,
                            "endLine": 275,
                            "startColumn": 11,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 275,
                            "endLine": 275,
                            "startColumn": 11,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 275,
                            "endLine": 275,
                            "startColumn": 5,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 276,
                            "endLine": 276,
                            "startColumn": 12,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 276,
                            "endLine": 276,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 270,
                            "endLine": 270,
                            "startColumn": 11,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 272,
                            "endLine": 272,
                            "startColumn": 13,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 272,
                            "endLine": 272,
                            "startColumn": 31,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 273,
                            "endLine": 273,
                            "startColumn": 37,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 216,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a file flows into a subtraction operator (-), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into a subtraction operator (-), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 273,
                  "endLine": 273,
                  "startColumn": 42,
                  "endColumn": 46
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4707866704a33e7116fbcab56d5f5045836e2f88aa568b4d217ef13e0ee1974e",
            "1": "3ef501d5.76503df6.66e58c8d.88d1f3b9.baf5e6ff.34c6cc13.30ad82ea.683c1dbf.575a72a2.e12bf525.66e58c8d.1c706e52.baf5e6ff.ac989eab.50e07b35.683c1dbf"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 215,
                            "endLine": 215,
                            "startColumn": 15,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 215,
                            "endLine": 215,
                            "startColumn": 15,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 26,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 225,
                            "endLine": 225,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 251,
                            "endLine": 251,
                            "startColumn": 33,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 6,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 254,
                            "endLine": 254,
                            "startColumn": 25,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 264,
                            "endLine": 264,
                            "startColumn": 54,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 266,
                            "endLine": 266,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 268,
                            "endLine": 268,
                            "startColumn": 26,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 269,
                            "endLine": 269,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 271,
                            "endLine": 271,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 272,
                            "endLine": 272,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 273,
                            "endLine": 273,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 275,
                            "endLine": 275,
                            "startColumn": 11,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 275,
                            "endLine": 275,
                            "startColumn": 11,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 275,
                            "endLine": 275,
                            "startColumn": 5,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 276,
                            "endLine": 276,
                            "startColumn": 12,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 276,
                            "endLine": 276,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 269,
                            "endLine": 269,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 274,
                            "endLine": 274,
                            "startColumn": 12,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 274,
                            "endLine": 274,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 274,
                            "endLine": 274,
                            "startColumn": 5,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 271,
                            "endLine": 271,
                            "startColumn": 13,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 273,
                            "endLine": 273,
                            "startColumn": 42,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 216,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a file flows into a subtraction operator (-), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into a subtraction operator (-), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 281,
                  "endLine": 281,
                  "startColumn": 35,
                  "endColumn": 39
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2d78efe627accd023d0776d91586a60569bf1904f87d6bfb04ef6e3ce70c41fd",
            "1": "575a72a2.76503df6.66e58c8d.cc899355.f0ffe2b3.34c6cc13.5db3d4a6.683c1dbf.575a72a2.e12bf525.66e58c8d.93cc8d4d.baf5e6ff.ac989eab.50e07b35.683c1dbf"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 215,
                            "endLine": 215,
                            "startColumn": 15,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 215,
                            "endLine": 215,
                            "startColumn": 15,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 26,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 225,
                            "endLine": 225,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 251,
                            "endLine": 251,
                            "startColumn": 33,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 6,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 254,
                            "endLine": 254,
                            "startColumn": 25,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 264,
                            "endLine": 264,
                            "startColumn": 54,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 266,
                            "endLine": 266,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 268,
                            "endLine": 268,
                            "startColumn": 26,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 269,
                            "endLine": 269,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 278,
                            "endLine": 278,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 278,
                            "endLine": 278,
                            "startColumn": 10,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 278,
                            "endLine": 278,
                            "startColumn": 3,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 280,
                            "endLine": 280,
                            "startColumn": 11,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 280,
                            "endLine": 280,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 281,
                            "endLine": 281,
                            "startColumn": 35,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 216,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a file flows into a subtraction operator (-), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into a subtraction operator (-), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 281,
                  "endLine": 281,
                  "startColumn": 40,
                  "endColumn": 44
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2d78efe627accd023d0776d91586a60569bf1904f87d6bfb04ef6e3ce70c41fd",
            "1": "3ef501d5.76503df6.66e58c8d.88d1f3b9.baf5e6ff.34c6cc13.30ad82ea.683c1dbf.575a72a2.e12bf525.66e58c8d.1c706e52.baf5e6ff.ac989eab.50e07b35.683c1dbf"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 215,
                            "endLine": 215,
                            "startColumn": 15,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 215,
                            "endLine": 215,
                            "startColumn": 15,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 26,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 225,
                            "endLine": 225,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 251,
                            "endLine": 251,
                            "startColumn": 33,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 6,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 254,
                            "endLine": 254,
                            "startColumn": 25,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 264,
                            "endLine": 264,
                            "startColumn": 54,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 266,
                            "endLine": 266,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 268,
                            "endLine": 268,
                            "startColumn": 26,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 269,
                            "endLine": 269,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 271,
                            "endLine": 271,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 272,
                            "endLine": 272,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 273,
                            "endLine": 273,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 275,
                            "endLine": 275,
                            "startColumn": 11,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 275,
                            "endLine": 275,
                            "startColumn": 11,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 275,
                            "endLine": 275,
                            "startColumn": 5,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 276,
                            "endLine": 276,
                            "startColumn": 12,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 276,
                            "endLine": 276,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 269,
                            "endLine": 269,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 274,
                            "endLine": 274,
                            "startColumn": 12,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 274,
                            "endLine": 274,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 274,
                            "endLine": 274,
                            "startColumn": 5,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 279,
                            "endLine": 279,
                            "startColumn": 11,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/test/output_test_helper.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 281,
                            "endLine": 281,
                            "startColumn": 40,
                            "endColumn": 44
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 216,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/unquoted~csv~writer/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into an unquoted CSV-writer (csv.writer). Use quoting=csv.QUOTE_ALL when the input is flowing from an untrusted source.",
            "markdown": "Unsanitized input from an environment variable {0} into an unquoted CSV-writer ({1}). Use quoting=csv.QUOTE_ALL when the input is flowing from an untrusted source.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6)",
              "[csv.writer](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/backend/test/report/coverage.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 251,
                  "endLine": 251,
                  "startColumn": 31,
                  "endColumn": 41
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f04e9e68d861fc949a0d59fe0af473951962487b32956d7cb6327565ee565831",
            "1": "66be2f5a.09b47a5b.187bf175.139c59a8.f3eda546.ba14daf2.081ac3f4.69b73b47.67af29ad.096525dd.187bf175.139c59a8.f3eda546.ba14daf2.c5db1881.cadd00d0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/backend/test/report/coverage.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 249,
                            "endLine": 249,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/backend/test/report/coverage.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 249,
                            "endLine": 249,
                            "startColumn": 36,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/backend/test/report/coverage.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 249,
                            "endLine": 249,
                            "startColumn": 32,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/backend/test/report/coverage.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 249,
                            "endLine": 249,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/backend/test/report/coverage.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 249,
                            "endLine": 249,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/backend/test/report/coverage.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 250,
                            "endLine": 250,
                            "startColumn": 42,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/backend/test/report/coverage.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 251,
                            "endLine": 251,
                            "startColumn": 42,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/onnx/backend/test/report/coverage.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 251,
                            "endLine": 251,
                            "startColumn": 31,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 154,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 5,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into subprocess.check_call, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17)",
              "[subprocess.check_call](18),(19)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 120,
                  "endLine": 120,
                  "startColumn": 11,
                  "endColumn": 58
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3f604c75d8172888518ad12cf0d526107c3799669306706d571505f5e80e8715",
            "1": "e06468b8.5b46cdac.79e62dc9.0e65be6b.146bf8fd.73cfdf26.a2237efa.f46ed94e.f2a819f0.f16887a3.4efdaf86.f6463326.f1a9f2e8.698b1cba.cb317a58.608cbc0c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 16,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 9,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 13,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 9,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 61,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 17,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 104,
                            "startColumn": 5,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 105,
                            "endLine": 105,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 109,
                            "endLine": 109,
                            "startColumn": 31,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 110,
                            "endLine": 110,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 110,
                            "endLine": 110,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 118,
                            "startColumn": 5,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 120,
                            "endLine": 120,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 120,
                            "endLine": 120,
                            "startColumn": 11,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 9,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 554,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into std::ifstream constructor, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[std::ifstream constructor](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 116,
                  "endLine": 116,
                  "startColumn": 8,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "840695e6f82d8a785fb946acb35f5246221831d5fef92ed7ee23bdbeb98a368d",
            "1": "73e5bd6e.957caf25.66e58c8d.6ac3b10d.ec93605b.1fa3e305.3dbae84d.3269a000.73e5bd6e.957caf25.66e58c8d.1bd0bc43.dce0faad.433d1839.30ad82ea.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 105,
                            "endLine": 105,
                            "startColumn": 31,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 105,
                            "endLine": 105,
                            "startColumn": 31,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 105,
                            "endLine": 105,
                            "startColumn": 15,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 22,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 22,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 22,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 8,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 566,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into std::ifstream constructor, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[std::ifstream constructor](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 185,
                  "endLine": 186,
                  "startColumn": 19,
                  "endColumn": 62
                }
              }
            }
          ],
          "fingerprints": {
            "0": "82c767ced682f0196abb9b1f4fbdb49d61a839a63cd68c42b40dbdc0b0076613",
            "1": "73e5bd6e.a6b45f06.66e58c8d.b6461bb4.f0ffaa5f.5e8ccf37.30ad82ea.3269a000.1eb90662.76503df6.66e58c8d.b6461bb4.54c45487.5e8ccf37.30ad82ea.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 105,
                            "endLine": 105,
                            "startColumn": 31,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 105,
                            "endLine": 105,
                            "startColumn": 31,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 105,
                            "endLine": 105,
                            "startColumn": 15,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 22,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 59,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 61,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 37,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 185,
                            "endLine": 185,
                            "startColumn": 29,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 185,
                            "endLine": 185,
                            "startColumn": 29,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 185,
                            "endLine": 185,
                            "startColumn": 29,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 185,
                            "endLine": 186,
                            "startColumn": 19,
                            "endColumn": 62
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 566,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[open](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 122,
                  "endLine": 122,
                  "startColumn": 20,
                  "endColumn": 45
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a9c4bddfe255ebea178d774dcac3a2488d4a5228447a72c1359e1e923942ff21",
            "1": "73e5bd6e.a6b45f06.66e58c8d.1bd0bc43.f69720e9.6a274ab8.30ad82ea.5b6cf5fb.73e5bd6e.957caf25.66e58c8d.1bd0bc43.dce0faad.34c6cc13.30ad82ea.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 105,
                            "endLine": 105,
                            "startColumn": 31,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 105,
                            "endLine": 105,
                            "startColumn": 31,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 105,
                            "endLine": 105,
                            "startColumn": 15,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 22,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 59,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 59,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 59,
                            "endColumn": 80
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/common.hpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 26,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/common.hpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 84,
                            "endLine": 84,
                            "startColumn": 21,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/common.hpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 84,
                            "endLine": 84,
                            "startColumn": 14,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 566,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[open](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 123,
                  "endLine": 123,
                  "startColumn": 22,
                  "endColumn": 47
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a3e0d243a3ff8c8ef021b7bcba14a127de1b7a4af5c09f7d333f819f7b8ee5c9",
            "1": "73e5bd6e.957caf25.66e58c8d.6ac3b10d.f69720e9.1fa3e305.3dbae84d.5b6cf5fb.73e5bd6e.957caf25.66e58c8d.1bd0bc43.dce0faad.34c6cc13.30ad82ea.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 105,
                            "endLine": 105,
                            "startColumn": 31,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 105,
                            "endLine": 105,
                            "startColumn": 31,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 105,
                            "endLine": 105,
                            "startColumn": 15,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 22,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 59,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 61,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 61,
                            "endColumn": 80
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 61,
                            "endColumn": 82
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/common.hpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 26,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/common.hpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 21,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/common.hpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 14,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 566,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/CMissingClose",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "File opened by open may not be closed. The file does not seem to be closed on all possible execution paths.",
            "markdown": "File opened by {0} may not be closed. The file does not seem to be closed on all possible execution paths.",
            "arguments": [
              "[open](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/common/onnx_models/onnx-tensorrt/common.hpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 84,
                  "endLine": 84,
                  "startColumn": 14,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bf528259970a2712db8390f897dc6bfaca407dcb8c77ceb093f8d5e4aca68064",
            "1": "73e5bd6e.d984bf35.88e65af6.93cc8d4d.d662de49.6a274ab8.30ad82ea.ceb10d4b.73e5bd6e.2a0650de.88e65af6.93cc8d4d.68bbacbc.6a274ab8.30ad82ea.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/common.hpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 84,
                            "endLine": 84,
                            "startColumn": 14,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 408,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/CMissingClose",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "File opened by open may not be closed. The file does not seem to be closed on all possible execution paths.",
            "markdown": "File opened by {0} may not be closed. The file does not seem to be closed on all possible execution paths.",
            "arguments": [
              "[open](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/common/onnx_models/onnx-tensorrt/common.hpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 96,
                  "endLine": 96,
                  "startColumn": 14,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "15a45befb72352851c0103f6adfc1df147ac8f863f5f8d050cddef619871086d",
            "1": "73e5bd6e.d984bf35.88e65af6.93cc8d4d.d662de49.6a274ab8.30ad82ea.ceb10d4b.73e5bd6e.d984bf35.88e65af6.93cc8d4d.68bbacbc.6a274ab8.30ad82ea.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/common.hpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 14,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 408,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/CDivisionByZero/test",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "The divisor in the division operator is possibly zero, which may cause a division by zero to occur. Divisors should be checked to be non-zero before use.",
            "markdown": "The divisor in the {0} operator is possibly zero, which may cause a division by zero to occur. Divisors should be checked to be non-zero before use.",
            "arguments": [
              "[division](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/lane_detection/test_lane_detector.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 52,
                  "endLine": 52,
                  "startColumn": 43,
                  "endColumn": 51
                }
              }
            }
          ],
          "fingerprints": {
            "0": "281cb3c536c4c9d364665c566c715a68c2626a5249cbda464d26bcb4a6e65007",
            "1": "2d06e3d6.10ac658c.fe44cc90.1bd0bc43.4717bd83.e723426a.30ad82ea.314873b4.2d06e3d6.10ac658c.4bfab525.1bd0bc43.ca808d95.e723426a.30ad82ea.11c71d76"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/lane_detection/test_lane_detector.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 30,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 358,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/CDivisionByZero/test",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "The divisor in the division operator is possibly zero, which may cause a division by zero to occur. Divisors should be checked to be non-zero before use.",
            "markdown": "The divisor in the {0} operator is possibly zero, which may cause a division by zero to occur. Divisors should be checked to be non-zero before use.",
            "arguments": [
              "[division](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/object_detection/traffic_sign_classification/test_sign_classifier.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 51,
                  "endLine": 51,
                  "startColumn": 43,
                  "endColumn": 51
                }
              }
            }
          ],
          "fingerprints": {
            "0": "943b5ff26b160f64657490a2d70f2117f14eee676a836f22ee0c95c8358cbf18",
            "1": "2d06e3d6.10ac658c.fe44cc90.1bd0bc43.4717bd83.e723426a.30ad82ea.314873b4.2d06e3d6.10ac658c.4bfab525.1bd0bc43.ca808d95.e723426a.30ad82ea.11c71d76"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/object_detection/traffic_sign_classification/test_sign_classifier.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 30,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 358,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/Ssrf",
          "ruleIndex": 9,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into urllib.request.urlopen, where it is used as an URL to perform a request. This may result in a Server Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server Side Request Forgery vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25)",
              "[urllib.request.urlopen](26)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 135,
                  "endLine": 135,
                  "startColumn": 14,
                  "endColumn": 29
                }
              }
            }
          ],
          "fingerprints": {
            "0": "787c21be1c831f792280d5d0a738092c1fbaa0c564c1b94aba6b5fe497360dfe",
            "1": "9d0461a3.b14f298f.7dc6970d.22222ad5.25ac000c.e280548d.d9d37e2f.d62b86e0.635b23f2.5cfed915.bc300d19.3beeacb6.c88a6252.97b734ee.f6dc7859.bda92d95"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 287,
                            "endLine": 287,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 287,
                            "endLine": 287,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 287,
                            "endLine": 287,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 296,
                            "endLine": 296,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 298,
                            "endLine": 298,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 302,
                            "endLine": 302,
                            "startColumn": 32,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 302,
                            "endLine": 302,
                            "startColumn": 54,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 303,
                            "endLine": 303,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 303,
                            "endLine": 303,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 172,
                            "endLine": 172,
                            "startColumn": 40,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 180,
                            "startColumn": 22,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 184,
                            "endLine": 184,
                            "startColumn": 15,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 184,
                            "endLine": 184,
                            "startColumn": 15,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 184,
                            "endLine": 184,
                            "startColumn": 5,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 213,
                            "endLine": 213,
                            "startColumn": 20,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 213,
                            "endLine": 213,
                            "startColumn": 11,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 213,
                            "endLine": 213,
                            "startColumn": 11,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 213,
                            "endLine": 213,
                            "startColumn": 11,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 213,
                            "endLine": 213,
                            "startColumn": 11,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 213,
                            "endLine": 213,
                            "startColumn": 11,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 213,
                            "endLine": 213,
                            "startColumn": 5,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 221,
                            "endLine": 221,
                            "startColumn": 29,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 31,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 125,
                            "endLine": 125,
                            "startColumn": 14,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 130,
                            "endLine": 130,
                            "startColumn": 29,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 135,
                            "endLine": 135,
                            "startColumn": 30,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/common/onnx_models/onnx-tensorrt/third_party/onnx/third_party/benchmark/mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 135,
                            "endLine": 135,
                            "startColumn": 14,
                            "endColumn": 29
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 554,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "isSupported": true,
            "lang": "C",
            "files": 3,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "C++",
            "files": 390,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Python",
            "files": 230,
            "type": "SUPPORTED"
          },
          {
            "isSupported": false,
            "lang": "C++",
            "files": 28,
            "type": "FAILED_PARSING"
          },
          {
            "isSupported": false,
            "lang": "Python",
            "files": 1,
            "type": "FAILED_PARSING"
          }
        ]
      }
    }
  ]
}
