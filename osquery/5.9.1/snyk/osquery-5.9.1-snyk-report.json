{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "python/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "PT",
                  "Security",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/pynickle/amazing-python/commit/80d2cc8c3e2c8330416b91f17a09b51830915b86?diff=split#diff-f626b00ab4d99fdbd4cb2bd61ae29469L118",
                    "lines": [
                      {
                        "line": "if request.method == \"POST\":",
                        "lineNumber": 161,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try:",
                        "lineNumber": 162,
                        "lineChange": "none"
                      },
                      {
                        "line": "        f = request.files['file']",
                        "lineNumber": 163,
                        "lineChange": "none"
                      },
                      {
                        "line": "        filename = f.filename",
                        "lineNumber": 118,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        filename = secure_filename(f.filename)",
                        "lineNumber": 164,
                        "lineChange": "added"
                      },
                      {
                        "line": "        f.save(filename)",
                        "lineNumber": 165,
                        "lineChange": "none"
                      },
                      {
                        "line": "        with open(filename, \"r\", encoding=\"utf-8\") as f:",
                        "lineNumber": 166,
                        "lineChange": "none"
                      },
                      {
                        "line": "            success, errors = words_validate(f.read())",
                        "lineNumber": 167,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/WhaleShark-Team/cobra/commit/1ac467a2c1cf8427a5bf60031677817140fe181c?diff=split#diff-dc0ad7c98d7072655327746f1bc95b3aL72",
                    "lines": [
                      {
                        "line": "task_type = 1",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "# check if there is a file or gitlab url",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "if len(request.files) == 0:",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # no files, should check username and password",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "    task_type = 1",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "# there is a file, check file format and uncompress it.",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "task_type = 2",
                        "lineNumber": 89,
                        "lineChange": "none"
                      },
                      {
                        "line": "upload_src = request.files['file']",
                        "lineNumber": 90,
                        "lineChange": "none"
                      },
                      {
                        "line": "filename = str(int(time.time())) + '_' + upload_src.filename",
                        "lineNumber": 90,
                        "lineChange": "removed"
                      },
                      {
                        "line": "filename = str(int(time.time())) + '_' + secure_filename(upload_src.filename)",
                        "lineNumber": 91,
                        "lineChange": "added"
                      },
                      {
                        "line": "filepath = 'uploads/' + filename",
                        "lineNumber": 92,
                        "lineChange": "none"
                      },
                      {
                        "line": "upload_src.save(filepath)",
                        "lineNumber": 93,
                        "lineChange": "none"
                      },
                      {
                        "line": "# if you upload a rar file, upload_src.mimetype will returns \"application/octet-stream\"",
                        "lineNumber": 95,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Wordseer/wordseer/commit/ea92ade27f7a7a12d057a2b71daf9ffa1cf4385e?diff=split#diff-e86334029c6a0118169cce848ff474ddR13",
                    "lines": [
                      {
                        "line": " PROJECT_ROUTE = \"/projects/\"",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": " ",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "def allowed_file(filename):",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return os.path.splitext(filename)[1] in app.config[\"ALLOWED_EXTENSIONS\"]",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": " @app.route(PROJECT_ROUTE, methods=[\"GET\", \"POST\"])",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": " def projects():",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "if request.method == \"POST\":",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "    uploaded_file = request.files[\"uploaded_file\"]",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if uploaded_file and allowed_file(uploaded_file.filename):",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "        filename = secure_filename(uploaded_file.filename)",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "        dest_path = os.path.join(app.config[\"UPLOAD_DIR\"],",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "            filename)",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "        uploaded_file.save(dest_path)",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "        #TODO: send the user somewhere useful?",
                        "lineNumber": 49,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 553,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "python/UnsupportedLanguage",
              "name": "UnsupportedLanguage",
              "shortDescription": {
                "text": "Python 2 source code"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nThe Python 2 interpreter has been unsupported since January 2020 and does not receive security updates.\nThese source files appear to be in the Python 2 syntax, and therefore depend on unsupported 3rd party components for operation.\n\n## Best practices for prevention\n* If this code is still in use, port it to Python 3",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "UnsupportedLanguage",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-1104"
                ]
              }
            },
            {
              "id": "python/UseTlsInsteadOfSsl/test",
              "name": "UseTlsInsteadOfSsl/test",
              "shortDescription": {
                "text": "Selection of Less-Secure Algorithm During Negotiation (SSL instead of TLS)"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nImplementing encryption for the transmission and storage of sensitive information is essential. But encryption standards are constantly changing since attackers have more and more powerful resources at their disposal-along with more sophisticated attack algorithms. This means that encryption is only useful if it meets current standards appropriate for the type of data being transmitted or stored.\nWhen organizations use weakly encoded passwords or weak hashes (especially when they also utilize single-factor authentication, which places too much emphasis on passwords), attackers can potentially gain unauthorized access through a brute-force attack.\n\n## Best practices for prevention\n* Use TLS instead of SSL",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "UseTlsInsteadOfSsl",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/MagicStack/uvloop/commit/5905f27a95c9d358a747b277cb5956562f876712?diff=split#diff-e62eced65ccdc5a0aeca1691c87dd15eL275",
                    "lines": [
                      {
                        "line": "def _create_server_ssl_context(self, certfile, keyfile=None):",
                        "lineNumber": 273,
                        "lineChange": "none"
                      },
                      {
                        "line": "    sslcontext = ssl.SSLContext(ssl.PROTOCOL_SSLv23)",
                        "lineNumber": 274,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    sslcontext = ssl.SSLContext(ssl.PROTOCOL_TLS)",
                        "lineNumber": 275,
                        "lineChange": "added"
                      },
                      {
                        "line": "else:",
                        "lineNumber": 276,
                        "lineChange": "added"
                      },
                      {
                        "line": "    sslcontext = ssl.SSLContext(ssl.PROTOCOL_SSLv23)",
                        "lineNumber": 277,
                        "lineChange": "added"
                      },
                      {
                        "line": "sslcontext.options |= ssl.OP_NO_SSLv2",
                        "lineNumber": 278,
                        "lineChange": "none"
                      },
                      {
                        "line": "sslcontext.load_cert_chain(certfile, keyfile)",
                        "lineNumber": 279,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/yasoob/youtube-dl-GUI/commit/aa1affdefc34984c60587fa1ce2f1fac0bbefa23?diff=split#diff-41e5a35fe85b286fe4b4f735f8ac8faeL575",
                    "lines": [
                      {
                        "line": "    return HTTPSHandlerV3(**kwargs)",
                        "lineNumber": 572,
                        "lineChange": "removed"
                      },
                      {
                        "line": "else:",
                        "lineNumber": 573,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    context = ssl.SSLContext(ssl.PROTOCOL_SSLv3)",
                        "lineNumber": 574,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return YoutubeDLHTTPSHandler(params, https_conn_class=HTTPSConnectionV3, **kwargs)",
                        "lineNumber": 429,
                        "lineChange": "added"
                      },
                      {
                        "line": "else:  # Python < 3.4",
                        "lineNumber": 430,
                        "lineChange": "added"
                      },
                      {
                        "line": "    context = ssl.SSLContext(ssl.PROTOCOL_SSLv23)",
                        "lineNumber": 431,
                        "lineChange": "added"
                      },
                      {
                        "line": "    context.verify_mode = (ssl.CERT_NONE",
                        "lineNumber": 575,
                        "lineChange": "none"
                      },
                      {
                        "line": "                           if opts_no_check_certificate",
                        "lineNumber": 576,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/mitmproxy/mitmproxy/commit/759496e24eeef8572f8f57e47254e7df0b178d19?diff=split#diff-07f17ee919fc349fbd2af2890a9b4c96L538",
                    "lines": [
                      {
                        "line": "            )",
                        "lineNumber": 535,
                        "lineChange": "none"
                      },
                      {
                        "line": "self.wfile.flush()",
                        "lineNumber": 536,
                        "lineChange": "none"
                      },
                      {
                        "line": "self.connection = ssl.wrap_socket(",
                        "lineNumber": 537,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    self.connection,",
                        "lineNumber": 538,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    certfile = self.find_cert(host,port),",
                        "lineNumber": 539,
                        "lineChange": "none"
                      },
                      {
                        "line": "    keyfile = self.find_key(host,port),",
                        "lineNumber": 540,
                        "lineChange": "none"
                      },
                      {
                        "line": "    server_side = True,",
                        "lineNumber": 541,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ssl_version = ssl.PROTOCOL_SSLv23,",
                        "lineNumber": 542,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ciphers = config.ciphers,",
                        "lineNumber": 543,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    do_handshake_on_connect = False",
                        "lineNumber": 544,
                        "lineChange": "none"
                      },
                      {
                        "line": " )",
                        "lineNumber": 545,
                        "lineChange": "none"
                      },
                      {
                        "line": "if sys.version_info[1] > 6:",
                        "lineNumber": 544,
                        "lineChange": "added"
                      },
                      {
                        "line": "    kwargs[\"ciphers\"] = config.ciphers",
                        "lineNumber": 545,
                        "lineChange": "added"
                      },
                      {
                        "line": "self.connection = ssl.wrap_socket(self.connection, **kwargs)",
                        "lineNumber": 546,
                        "lineChange": "added"
                      },
                      {
                        "line": " self.rfile = FileLike(self.connection)",
                        "lineNumber": 547,
                        "lineChange": "none"
                      },
                      {
                        "line": " self.wfile = FileLike(self.connection)",
                        "lineNumber": 548,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 26,
                "cwe": [
                  "CWE-757"
                ]
              }
            },
            {
              "id": "python/reDOS",
              "name": "reDOS",
              "shortDescription": {
                "text": "Regular Expression Denial of Service (ReDoS)"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet's take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn't match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "reDOS",
                  "Security",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/apache/allura/commit/ce23a31516818ba803fd801504fe6f9566e3cbab?diff=split#diff-a01e9f95ec248a880acfe90cbc6c0117L326",
                    "lines": [
                      {
                        "line": "        redirect(g.forge_static('images/user.png'))",
                        "lineNumber": 323,
                        "lineChange": "none"
                      },
                      {
                        "line": "@expose('json:')",
                        "lineNumber": 325,
                        "lineChange": "none"
                      },
                      {
                        "line": "def user_search(self,term=''):",
                        "lineNumber": 326,
                        "lineChange": "none"
                      },
                      {
                        "line": "    name_regex = re.compile('(?i)%s' % term)",
                        "lineNumber": 327,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    name_regex = re.compile('(?i)%s' % re.escape(term))",
                        "lineNumber": 327,
                        "lineChange": "added"
                      },
                      {
                        "line": "    users = M.User.query.find({",
                        "lineNumber": 328,
                        "lineChange": "none"
                      },
                      {
                        "line": "                '_id':{'$in':[role.user_id for role in c.project.roles]},",
                        "lineNumber": 329,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/tomashanacek/mock-server/commit/6d9d908f23940b69dfe8a375b57db98182a4e2d3?diff=split#diff-137164440312cbcacfcd58d690995780L655",
                    "lines": [
                      {
                        "line": "class TodoHandler(BaseHandler):",
                        "lineNumber": 654,
                        "lineChange": "none"
                      },
                      {
                        "line": "    @tornado.web.authenticated",
                        "lineNumber": 656,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def post(self):",
                        "lineNumber": 657,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # check xsrf cookie",
                        "lineNumber": 658,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.check_xsrf_cookie()",
                        "lineNumber": 659,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # get data from request body",
                        "lineNumber": 661,
                        "lineChange": "none"
                      },
                      {
                        "line": "        data = tornado.escape.json_decode(self.request.body)",
                        "lineNumber": 662,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if data[\"protocol\"] == \"rest\":",
                        "lineNumber": 664,
                        "lineChange": "none"
                      },
                      {
                        "line": "            method, url_path = data[\"id\"].split(\"-\")",
                        "lineNumber": 665,
                        "lineChange": "none"
                      },
                      {
                        "line": "            method_file = ResourceMethod(self.api_dir, url_path, method)",
                        "lineNumber": 666,
                        "lineChange": "none"
                      },
                      {
                        "line": "        elif data[\"protocol\"] == \"rpc\":",
                        "lineNumber": 667,
                        "lineChange": "none"
                      },
                      {
                        "line": "            method_file = RPCMethod(",
                        "lineNumber": 668,
                        "lineChange": "none"
                      },
                      {
                        "line": "                os.path.join(self.api_dir, RPCHandler.PATH), data[\"id\"])",
                        "lineNumber": 669,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # load description",
                        "lineNumber": 671,
                        "lineChange": "none"
                      },
                      {
                        "line": "# set todo",
                        "lineNumber": 674,
                        "lineChange": "none"
                      },
                      {
                        "line": "value = \" %s\" % data[\"value\"].strip()",
                        "lineNumber": 675,
                        "lineChange": "none"
                      },
                      {
                        "line": "todo = \"%s%s\" % (\"[x]\" if data[\"checked\"] else \"[ ]\", value)",
                        "lineNumber": 676,
                        "lineChange": "none"
                      },
                      {
                        "line": "method_file.description = re.sub(",
                        "lineNumber": 677,
                        "lineChange": "none"
                      },
                      {
                        "line": "    r\"\\[( |x)\\]%s\" % value, todo, method_file.description)",
                        "lineNumber": 678,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    r\"\\[( |x)\\]%s\" % re.escape(value), todo, method_file.description)",
                        "lineNumber": 678,
                        "lineChange": "added"
                      },
                      {
                        "line": "# save description",
                        "lineNumber": 680,
                        "lineChange": "none"
                      },
                      {
                        "line": "method_file.save_description()",
                        "lineNumber": 681,
                        "lineChange": "none"
                      },
                      {
                        "line": "self.set_header(\"Content-Type\", \"application/json\")",
                        "lineNumber": 683,
                        "lineChange": "none"
                      },
                      {
                        "line": "self.write(\"OK\")",
                        "lineNumber": 684,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/django/django/commit/3ed55606c4351913584a79e8b967f99b40316f1d?diff=split#diff-3c42de3e53aba87b32c494f995a728dfL61",
                    "lines": [
                      {
                        "line": "def get_content_type_for_model(obj):",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # Since this module gets imported in the application's root package,",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # it cannot import models from other applications at the module level.",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "    from django.contrib.contenttypes.models import ContentType",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return ContentType.objects.get_for_model(obj, for_concrete_model=False)",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "def __str__(self):",
                        "lineNumber": 584,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return \"%s.%s\" % (self.model._meta.app_label, self.__class__.__name__)",
                        "lineNumber": 585,
                        "lineChange": "none"
                      },
                      {
                        "line": "def get_inline_instances(self, request, obj=None):",
                        "lineNumber": 587,
                        "lineChange": "none"
                      },
                      {
                        "line": "    inline_instances = []",
                        "lineNumber": 588,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for inline_class in self.get_inlines(request, obj):",
                        "lineNumber": 589,
                        "lineChange": "none"
                      },
                      {
                        "line": "        inline = inline_class(self.model, self.admin_site)",
                        "lineNumber": 590,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if request:",
                        "lineNumber": 591,
                        "lineChange": "none"
                      },
                      {
                        "line": "            if not (inline.has_view_or_change_permission(request, obj) or",
                        "lineNumber": 592,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return update_wrapper(wrapper, view)",
                        "lineNumber": 609,
                        "lineChange": "none"
                      },
                      {
                        "line": "info = self.model._meta.app_label, self.model._meta.model_name",
                        "lineNumber": 611,
                        "lineChange": "none"
                      },
                      {
                        "line": "return [",
                        "lineNumber": 613,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return self.get_form(request, obj, fields=None)",
                        "lineNumber": 659,
                        "lineChange": "none"
                      },
                      {
                        "line": "def get_form(self, request, obj=None, change=False, **kwargs):",
                        "lineNumber": 661,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 662,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Return a Form class for use in the admin add view. This is used by",
                        "lineNumber": 663,
                        "lineChange": "none"
                      },
                      {
                        "line": "    fields = kwargs.pop('fields')",
                        "lineNumber": 667,
                        "lineChange": "none"
                      },
                      {
                        "line": "else:",
                        "lineNumber": 668,
                        "lineChange": "none"
                      },
                      {
                        "line": "    fields = flatten_fieldsets(self.get_fieldsets(request, obj))",
                        "lineNumber": 669,
                        "lineChange": "none"
                      },
                      {
                        "line": "excluded = self.get_exclude(request, obj)",
                        "lineNumber": 670,
                        "lineChange": "none"
                      },
                      {
                        "line": "exclude = [] if excluded is None else list(excluded)",
                        "lineNumber": 671,
                        "lineChange": "none"
                      },
                      {
                        "line": "readonly_fields = self.get_readonly_fields(request, obj)",
                        "lineNumber": 672,
                        "lineChange": "none"
                      },
                      {
                        "line": "exclude.extend(readonly_fields)",
                        "lineNumber": 673,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Exclude all fields if it's a change form and the user doesn't have",
                        "lineNumber": 674,
                        "lineChange": "none"
                      },
                      {
                        "line": "# the change permission.",
                        "lineNumber": 675,
                        "lineChange": "none"
                      },
                      {
                        "line": "if change and hasattr(request, 'user') and not self.has_change_permission(request, obj):",
                        "lineNumber": 676,
                        "lineChange": "none"
                      },
                      {
                        "line": "    exclude.extend(fields)",
                        "lineNumber": 677,
                        "lineChange": "none"
                      },
                      {
                        "line": "if excluded is None and hasattr(self.form, '_meta') and self.form._meta.exclude:",
                        "lineNumber": 678,
                        "lineChange": "none"
                      },
                      {
                        "line": "try:",
                        "lineNumber": 701,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return modelform_factory(self.model, **defaults)",
                        "lineNumber": 702,
                        "lineChange": "none"
                      },
                      {
                        "line": "except FieldError as e:",
                        "lineNumber": 703,
                        "lineChange": "none"
                      },
                      {
                        "line": "    raise FieldError(",
                        "lineNumber": 704,
                        "lineChange": "none"
                      },
                      {
                        "line": "return ChangeList(",
                        "lineNumber": 728,
                        "lineChange": "none"
                      },
                      {
                        "line": "    request,",
                        "lineNumber": 729,
                        "lineChange": "none"
                      },
                      {
                        "line": "    self.model,",
                        "lineNumber": 730,
                        "lineChange": "none"
                      },
                      {
                        "line": "    list_display,",
                        "lineNumber": 731,
                        "lineChange": "none"
                      },
                      {
                        "line": "    list_display_links,",
                        "lineNumber": 732,
                        "lineChange": "none"
                      },
                      {
                        "line": "    )",
                        "lineNumber": 742,
                        "lineChange": "none"
                      },
                      {
                        "line": "def get_object(self, request, object_id, from_field=None):",
                        "lineNumber": 744,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 745,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Return an instance matching the field and value provided, the primary",
                        "lineNumber": 746,
                        "lineChange": "none"
                      },
                      {
                        "line": "queryset = self.get_queryset(request)",
                        "lineNumber": 750,
                        "lineChange": "none"
                      },
                      {
                        "line": "model = queryset.model",
                        "lineNumber": 751,
                        "lineChange": "none"
                      },
                      {
                        "line": "field = model._meta.pk if from_field is None else model._meta.get_field(from_field)",
                        "lineNumber": 752,
                        "lineChange": "none"
                      },
                      {
                        "line": "try:",
                        "lineNumber": 753,
                        "lineChange": "none"
                      },
                      {
                        "line": "    object_id = field.to_python(object_id)",
                        "lineNumber": 754,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return queryset.get(**{field.name: object_id})",
                        "lineNumber": 755,
                        "lineChange": "none"
                      },
                      {
                        "line": "except (model.DoesNotExist, ValidationError, ValueError):",
                        "lineNumber": 756,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return None",
                        "lineNumber": 757,
                        "lineChange": "none"
                      },
                      {
                        "line": "        defaults['fields'] = forms.ALL_FIELDS",
                        "lineNumber": 768,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return modelform_factory(self.model, **defaults)",
                        "lineNumber": 770,
                        "lineChange": "none"
                      },
                      {
                        "line": "def get_changelist_formset(self, request, **kwargs):",
                        "lineNumber": 772,
                        "lineChange": "none"
                      },
                      {
                        "line": "    **kwargs,",
                        "lineNumber": 779,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 780,
                        "lineChange": "none"
                      },
                      {
                        "line": "return modelformset_factory(",
                        "lineNumber": 781,
                        "lineChange": "none"
                      },
                      {
                        "line": "    self.model, self.get_changelist_form(request), extra=0,",
                        "lineNumber": 782,
                        "lineChange": "none"
                      },
                      {
                        "line": "    fields=self.list_editable, **defaults",
                        "lineNumber": 783,
                        "lineChange": "none"
                      },
                      {
                        "line": ")",
                        "lineNumber": 784,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return self.paginator(queryset, per_page, orphans, allow_empty_first_page)",
                        "lineNumber": 794,
                        "lineChange": "none"
                      },
                      {
                        "line": "def log_addition(self, request, object, message):",
                        "lineNumber": 796,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 797,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Log that an object has been successfully added.",
                        "lineNumber": 798,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return LogEntry.objects.log_action(",
                        "lineNumber": 803,
                        "lineChange": "none"
                      },
                      {
                        "line": "        user_id=request.user.pk,",
                        "lineNumber": 804,
                        "lineChange": "none"
                      },
                      {
                        "line": "        content_type_id=get_content_type_for_model(object).pk,",
                        "lineNumber": 805,
                        "lineChange": "none"
                      },
                      {
                        "line": "        object_id=object.pk,",
                        "lineNumber": 806,
                        "lineChange": "none"
                      },
                      {
                        "line": "        object_repr=str(object),",
                        "lineNumber": 807,
                        "lineChange": "none"
                      },
                      {
                        "line": "        action_flag=ADDITION,",
                        "lineNumber": 808,
                        "lineChange": "none"
                      },
                      {
                        "line": "        change_message=message,",
                        "lineNumber": 809,
                        "lineChange": "none"
                      },
                      {
                        "line": "    )",
                        "lineNumber": 810,
                        "lineChange": "none"
                      },
                      {
                        "line": "def log_change(self, request, object, message):",
                        "lineNumber": 812,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 813,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Log that an object has been successfully changed.",
                        "lineNumber": 814,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return LogEntry.objects.log_action(",
                        "lineNumber": 819,
                        "lineChange": "none"
                      },
                      {
                        "line": "        user_id=request.user.pk,",
                        "lineNumber": 820,
                        "lineChange": "none"
                      },
                      {
                        "line": "        content_type_id=get_content_type_for_model(object).pk,",
                        "lineNumber": 821,
                        "lineChange": "none"
                      },
                      {
                        "line": "        object_id=object.pk,",
                        "lineNumber": 822,
                        "lineChange": "none"
                      },
                      {
                        "line": "        object_repr=str(object),",
                        "lineNumber": 823,
                        "lineChange": "none"
                      },
                      {
                        "line": "        action_flag=CHANGE,",
                        "lineNumber": 824,
                        "lineChange": "none"
                      },
                      {
                        "line": "        change_message=message,",
                        "lineNumber": 825,
                        "lineChange": "none"
                      },
                      {
                        "line": "    )",
                        "lineNumber": 826,
                        "lineChange": "none"
                      },
                      {
                        "line": "def log_deletion(self, request, object, object_repr):",
                        "lineNumber": 828,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 829,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Log that an object will be deleted. Note that this method must be",
                        "lineNumber": 830,
                        "lineChange": "none"
                      },
                      {
                        "line": "return LogEntry.objects.log_action(",
                        "lineNumber": 836,
                        "lineChange": "none"
                      },
                      {
                        "line": "    user_id=request.user.pk,",
                        "lineNumber": 837,
                        "lineChange": "none"
                      },
                      {
                        "line": "    content_type_id=get_content_type_for_model(object).pk,",
                        "lineNumber": 838,
                        "lineChange": "none"
                      },
                      {
                        "line": "    object_id=object.pk,",
                        "lineNumber": 839,
                        "lineChange": "none"
                      },
                      {
                        "line": "    object_repr=object_repr,",
                        "lineNumber": 840,
                        "lineChange": "none"
                      },
                      {
                        "line": "# If self.actions is set to None that means actions are disabled on",
                        "lineNumber": 885,
                        "lineChange": "none"
                      },
                      {
                        "line": "# this page.",
                        "lineNumber": 886,
                        "lineChange": "none"
                      },
                      {
                        "line": "if self.actions is None or IS_POPUP_VAR in request.GET:",
                        "lineNumber": 887,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return {}",
                        "lineNumber": 888,
                        "lineChange": "none"
                      },
                      {
                        "line": "actions = self._filter_actions_by_permissions(request, self._get_base_actions())",
                        "lineNumber": 889,
                        "lineChange": "none"
                      },
                      {
                        "line": "choices = [] + default_choices",
                        "lineNumber": 897,
                        "lineChange": "none"
                      },
                      {
                        "line": "for func, name, description in self.get_actions(request).values():",
                        "lineNumber": 898,
                        "lineChange": "none"
                      },
                      {
                        "line": "    choice = (name, description % model_format_dict(self.opts))",
                        "lineNumber": 899,
                        "lineChange": "none"
                      },
                      {
                        "line": "    choices.append(choice)",
                        "lineNumber": 900,
                        "lineChange": "none"
                      },
                      {
                        "line": "return choices",
                        "lineNumber": 901,
                        "lineChange": "none"
                      },
                      {
                        "line": "                      for orm_lookup in orm_lookups]",
                        "lineNumber": 1015,
                        "lineChange": "none"
                      },
                      {
                        "line": "        queryset = queryset.filter(reduce(operator.or_, or_queries))",
                        "lineNumber": 1016,
                        "lineChange": "none"
                      },
                      {
                        "line": "    use_distinct |= any(lookup_needs_distinct(self.opts, search_spec) for search_spec in orm_lookups)",
                        "lineNumber": 1017,
                        "lineChange": "none"
                      },
                      {
                        "line": "return queryset, use_distinct",
                        "lineNumber": 1019,
                        "lineChange": "none"
                      },
                      {
                        "line": "Return the preserved filters querystring.",
                        "lineNumber": 1023,
                        "lineChange": "none"
                      },
                      {
                        "line": "\"\"\"",
                        "lineNumber": 1024,
                        "lineChange": "none"
                      },
                      {
                        "line": "match = request.resolver_match",
                        "lineNumber": 1025,
                        "lineChange": "none"
                      },
                      {
                        "line": "if self.preserve_filters and match:",
                        "lineNumber": 1026,
                        "lineChange": "none"
                      },
                      {
                        "line": "    opts = self.model._meta",
                        "lineNumber": 1027,
                        "lineChange": "none"
                      },
                      {
                        "line": "    current_url = '%s:%s' % (match.app_name, match.url_name)",
                        "lineNumber": 1028,
                        "lineChange": "none"
                      },
                      {
                        "line": "    changelist_url = 'admin:%s_%s_changelist' % (opts.app_label, opts.model_name)",
                        "lineNumber": 1029,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if current_url == changelist_url:",
                        "lineNumber": 1030,
                        "lineChange": "none"
                      },
                      {
                        "line": "        preserved_filters = request.GET.urlencode()",
                        "lineNumber": 1031,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:",
                        "lineNumber": 1032,
                        "lineChange": "none"
                      },
                      {
                        "line": "        preserved_filters = request.GET.get('_changelist_filters')",
                        "lineNumber": 1033,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if preserved_filters:",
                        "lineNumber": 1035,
                        "lineChange": "none"
                      },
                      {
                        "line": "    messages.add_message(request, level, message, extra_tags=extra_tags, fail_silently=fail_silently)",
                        "lineNumber": 1068,
                        "lineChange": "none"
                      },
                      {
                        "line": "def save_form(self, request, form, change):",
                        "lineNumber": 1070,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1071,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Given a ModelForm return an unsaved instance. ``change`` is True if",
                        "lineNumber": 1072,
                        "lineChange": "none"
                      },
                      {
                        "line": "    the object is being changed, and False if it's being added.",
                        "lineNumber": 1073,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1074,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return form.save(commit=False)",
                        "lineNumber": 1075,
                        "lineChange": "none"
                      },
                      {
                        "line": "def save_model(self, request, obj, form, change):",
                        "lineNumber": 1077,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1078,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Given a model instance save it to the database.",
                        "lineNumber": 1079,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1080,
                        "lineChange": "none"
                      },
                      {
                        "line": "    obj.save()",
                        "lineNumber": 1081,
                        "lineChange": "none"
                      },
                      {
                        "line": "def delete_model(self, request, obj):",
                        "lineNumber": 1083,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.save_formset(request, form, formset, change=change)",
                        "lineNumber": 1109,
                        "lineChange": "none"
                      },
                      {
                        "line": "def render_change_form(self, request, context, add=False, change=False, form_url='', obj=None):",
                        "lineNumber": 1111,
                        "lineChange": "none"
                      },
                      {
                        "line": "    opts = self.model._meta",
                        "lineNumber": 1112,
                        "lineChange": "none"
                      },
                      {
                        "line": "    app_label = opts.app_label",
                        "lineNumber": 1113,
                        "lineChange": "none"
                      },
                      {
                        "line": "    preserved_filters = self.get_preserved_filters(request)",
                        "lineNumber": 1114,
                        "lineChange": "none"
                      },
                      {
                        "line": "    form_url = add_preserved_filters({'preserved_filters': preserved_filters, 'opts': opts}, form_url)",
                        "lineNumber": 1115,
                        "lineChange": "none"
                      },
                      {
                        "line": "    view_on_site_url = self.get_view_on_site_url(obj)",
                        "lineNumber": 1116,
                        "lineChange": "none"
                      },
                      {
                        "line": "    has_editable_inline_admin_formsets = False",
                        "lineNumber": 1117,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for inline in context['inline_admin_formsets']:",
                        "lineNumber": 1118,
                        "lineChange": "none"
                      },
                      {
                        "line": "'add': add,",
                        "lineNumber": 1123,
                        "lineChange": "none"
                      },
                      {
                        "line": "'change': change,",
                        "lineNumber": 1124,
                        "lineChange": "none"
                      },
                      {
                        "line": "'has_view_permission': self.has_view_permission(request, obj),",
                        "lineNumber": 1125,
                        "lineChange": "none"
                      },
                      {
                        "line": "'has_add_permission': self.has_add_permission(request),",
                        "lineNumber": 1126,
                        "lineChange": "none"
                      },
                      {
                        "line": "'has_change_permission': self.has_change_permission(request, obj),",
                        "lineNumber": 1127,
                        "lineChange": "none"
                      },
                      {
                        "line": "'has_delete_permission': self.has_delete_permission(request, obj),",
                        "lineNumber": 1128,
                        "lineChange": "none"
                      },
                      {
                        "line": "'has_editable_inline_admin_formsets': has_editable_inline_admin_formsets,",
                        "lineNumber": 1129,
                        "lineChange": "none"
                      },
                      {
                        "line": "'has_file_field': context['adminform'].form.is_multipart() or any(",
                        "lineNumber": 1130,
                        "lineChange": "none"
                      },
                      {
                        "line": "'absolute_url': view_on_site_url,",
                        "lineNumber": 1135,
                        "lineChange": "none"
                      },
                      {
                        "line": "'form_url': form_url,",
                        "lineNumber": 1136,
                        "lineChange": "none"
                      },
                      {
                        "line": "'opts': opts,",
                        "lineNumber": 1137,
                        "lineChange": "none"
                      },
                      {
                        "line": "'content_type_id': get_content_type_for_model(self.model).pk,",
                        "lineNumber": 1138,
                        "lineChange": "none"
                      },
                      {
                        "line": "'save_as': self.save_as,",
                        "lineNumber": 1139,
                        "lineChange": "none"
                      },
                      {
                        "line": "'save_on_top': self.save_on_top,",
                        "lineNumber": 1140,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return TemplateResponse(request, form_template or [",
                        "lineNumber": 1152,
                        "lineChange": "none"
                      },
                      {
                        "line": "        \"admin/%s/%s/change_form.html\" % (app_label, opts.model_name),",
                        "lineNumber": 1153,
                        "lineChange": "none"
                      },
                      {
                        "line": "        \"admin/%s/change_form.html\" % app_label,",
                        "lineNumber": 1154,
                        "lineChange": "none"
                      },
                      {
                        "line": "        \"admin/change_form.html\"",
                        "lineNumber": 1155,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ], context)",
                        "lineNumber": 1156,
                        "lineChange": "none"
                      },
                      {
                        "line": "def response_add(self, request, obj, post_url_continue=None):",
                        "lineNumber": 1158,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1159,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Determine the HttpResponse for the add_view stage.",
                        "lineNumber": 1160,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1161,
                        "lineChange": "none"
                      },
                      {
                        "line": "    opts = obj._meta",
                        "lineNumber": 1162,
                        "lineChange": "none"
                      },
                      {
                        "line": "    preserved_filters = self.get_preserved_filters(request)",
                        "lineNumber": 1163,
                        "lineChange": "none"
                      },
                      {
                        "line": "    obj_url = reverse(",
                        "lineNumber": 1164,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'admin:%s_%s_change' % (opts.app_label, opts.model_name),",
                        "lineNumber": 1165,
                        "lineChange": "none"
                      },
                      {
                        "line": "        args=(quote(obj.pk),),",
                        "lineNumber": 1166,
                        "lineChange": "none"
                      },
                      {
                        "line": "        current_app=self.admin_site.name,",
                        "lineNumber": 1167,
                        "lineChange": "none"
                      },
                      {
                        "line": "    )",
                        "lineNumber": 1168,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # Add a link to the object's change form if the user can edit the obj.",
                        "lineNumber": 1169,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if self.has_change_permission(request, obj):",
                        "lineNumber": 1170,
                        "lineChange": "none"
                      },
                      {
                        "line": "        obj_repr = format_html('<a href=\"{}\">{}</a>', urlquote(obj_url), obj)",
                        "lineNumber": 1171,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:",
                        "lineNumber": 1172,
                        "lineChange": "none"
                      },
                      {
                        "line": "        obj_repr = str(obj)",
                        "lineNumber": 1173,
                        "lineChange": "none"
                      },
                      {
                        "line": "    msg_dict = {",
                        "lineNumber": 1174,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'name': opts.verbose_name,",
                        "lineNumber": 1175,
                        "lineChange": "none"
                      },
                      {
                        "line": "# the presence of keys in request.POST.",
                        "lineNumber": 1179,
                        "lineChange": "none"
                      },
                      {
                        "line": "if IS_POPUP_VAR in request.POST:",
                        "lineNumber": 1181,
                        "lineChange": "none"
                      },
                      {
                        "line": "    to_field = request.POST.get(TO_FIELD_VAR)",
                        "lineNumber": 1182,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if to_field:",
                        "lineNumber": 1183,
                        "lineChange": "none"
                      },
                      {
                        "line": "        attr = str(to_field)",
                        "lineNumber": 1184,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:",
                        "lineNumber": 1185,
                        "lineChange": "none"
                      },
                      {
                        "line": "        attr = obj._meta.pk.attname",
                        "lineNumber": 1186,
                        "lineChange": "none"
                      },
                      {
                        "line": "    value = obj.serializable_value(attr)",
                        "lineNumber": 1187,
                        "lineChange": "none"
                      },
                      {
                        "line": "    popup_response_data = json.dumps({",
                        "lineNumber": 1188,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'value': str(value),",
                        "lineNumber": 1189,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'obj': str(obj),",
                        "lineNumber": 1190,
                        "lineChange": "none"
                      },
                      {
                        "line": "    })",
                        "lineNumber": 1191,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return TemplateResponse(request, self.popup_response_template or [",
                        "lineNumber": 1192,
                        "lineChange": "none"
                      },
                      {
                        "line": "    })",
                        "lineNumber": 1198,
                        "lineChange": "none"
                      },
                      {
                        "line": "elif \"_continue\" in request.POST or (",
                        "lineNumber": 1200,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # Redirecting after \"Save as new\".",
                        "lineNumber": 1201,
                        "lineChange": "none"
                      },
                      {
                        "line": "        \"_saveasnew\" in request.POST and self.save_as_continue and",
                        "lineNumber": 1202,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.has_change_permission(request, obj)",
                        "lineNumber": 1203,
                        "lineChange": "none"
                      },
                      {
                        "line": "):",
                        "lineNumber": 1204,
                        "lineChange": "none"
                      },
                      {
                        "line": "    msg = _('The {name} “{obj}” was added successfully.')",
                        "lineNumber": 1205,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if self.has_change_permission(request, obj):",
                        "lineNumber": 1206,
                        "lineChange": "none"
                      },
                      {
                        "line": "        msg += ' ' + _('You may edit it again below.')",
                        "lineNumber": 1207,
                        "lineChange": "none"
                      },
                      {
                        "line": "    self.message_user(request, format_html(msg, **msg_dict), messages.SUCCESS)",
                        "lineNumber": 1208,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return HttpResponseRedirect(post_url_continue)",
                        "lineNumber": 1215,
                        "lineChange": "none"
                      },
                      {
                        "line": "elif \"_addanother\" in request.POST:",
                        "lineNumber": 1217,
                        "lineChange": "none"
                      },
                      {
                        "line": "    msg = format_html(",
                        "lineNumber": 1218,
                        "lineChange": "none"
                      },
                      {
                        "line": "        _('The {name} “{obj}” was added successfully. You may add another {name} below.'),",
                        "lineNumber": 1219,
                        "lineChange": "none"
                      },
                      {
                        "line": ")",
                        "lineNumber": 1221,
                        "lineChange": "none"
                      },
                      {
                        "line": "self.message_user(request, msg, messages.SUCCESS)",
                        "lineNumber": 1222,
                        "lineChange": "none"
                      },
                      {
                        "line": "redirect_url = request.path",
                        "lineNumber": 1223,
                        "lineChange": "none"
                      },
                      {
                        "line": "redirect_url = add_preserved_filters({'preserved_filters': preserved_filters, 'opts': opts}, redirect_url)",
                        "lineNumber": 1224,
                        "lineChange": "none"
                      },
                      {
                        "line": "return HttpResponseRedirect(redirect_url)",
                        "lineNumber": 1225,
                        "lineChange": "none"
                      },
                      {
                        "line": "        )",
                        "lineNumber": 1231,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.message_user(request, msg, messages.SUCCESS)",
                        "lineNumber": 1232,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return self.response_post_save_add(request, obj)",
                        "lineNumber": 1233,
                        "lineChange": "none"
                      },
                      {
                        "line": "def response_change(self, request, obj):",
                        "lineNumber": 1235,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1236,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Determine the HttpResponse for the change_view stage.",
                        "lineNumber": 1237,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1238,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if IS_POPUP_VAR in request.POST:",
                        "lineNumber": 1240,
                        "lineChange": "none"
                      },
                      {
                        "line": "        opts = obj._meta",
                        "lineNumber": 1241,
                        "lineChange": "none"
                      },
                      {
                        "line": "        to_field = request.POST.get(TO_FIELD_VAR)",
                        "lineNumber": 1242,
                        "lineChange": "none"
                      },
                      {
                        "line": "        attr = str(to_field) if to_field else opts.pk.attname",
                        "lineNumber": 1243,
                        "lineChange": "none"
                      },
                      {
                        "line": "        value = request.resolver_match.kwargs['object_id']",
                        "lineNumber": 1244,
                        "lineChange": "none"
                      },
                      {
                        "line": "        new_value = obj.serializable_value(attr)",
                        "lineNumber": 1245,
                        "lineChange": "none"
                      },
                      {
                        "line": "        popup_response_data = json.dumps({",
                        "lineNumber": 1246,
                        "lineChange": "none"
                      },
                      {
                        "line": "            'action': 'change',",
                        "lineNumber": 1247,
                        "lineChange": "none"
                      },
                      {
                        "line": "            'value': str(value),",
                        "lineNumber": 1248,
                        "lineChange": "none"
                      },
                      {
                        "line": "            'obj': str(obj),",
                        "lineNumber": 1249,
                        "lineChange": "none"
                      },
                      {
                        "line": "            'new_value': str(new_value),",
                        "lineNumber": 1250,
                        "lineChange": "none"
                      },
                      {
                        "line": "        })",
                        "lineNumber": 1251,
                        "lineChange": "none"
                      },
                      {
                        "line": "    })",
                        "lineNumber": 1258,
                        "lineChange": "none"
                      },
                      {
                        "line": "opts = self.model._meta",
                        "lineNumber": 1260,
                        "lineChange": "none"
                      },
                      {
                        "line": "preserved_filters = self.get_preserved_filters(request)",
                        "lineNumber": 1261,
                        "lineChange": "none"
                      },
                      {
                        "line": "msg_dict = {",
                        "lineNumber": 1263,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'name': opts.verbose_name,",
                        "lineNumber": 1264,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'obj': format_html('<a href=\"{}\">{}</a>', urlquote(request.path), obj),",
                        "lineNumber": 1265,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1266,
                        "lineChange": "none"
                      },
                      {
                        "line": "if \"_continue\" in request.POST:",
                        "lineNumber": 1267,
                        "lineChange": "none"
                      },
                      {
                        "line": "    msg = format_html(",
                        "lineNumber": 1268,
                        "lineChange": "none"
                      },
                      {
                        "line": "        _('The {name} “{obj}” was changed successfully. You may edit it again below.'),",
                        "lineNumber": 1269,
                        "lineChange": "none"
                      },
                      {
                        "line": "    )",
                        "lineNumber": 1271,
                        "lineChange": "none"
                      },
                      {
                        "line": "    self.message_user(request, msg, messages.SUCCESS)",
                        "lineNumber": 1272,
                        "lineChange": "none"
                      },
                      {
                        "line": "    redirect_url = request.path",
                        "lineNumber": 1273,
                        "lineChange": "none"
                      },
                      {
                        "line": "    redirect_url = add_preserved_filters({'preserved_filters': preserved_filters, 'opts': opts}, redirect_url)",
                        "lineNumber": 1274,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return HttpResponseRedirect(redirect_url)",
                        "lineNumber": 1275,
                        "lineChange": "none"
                      },
                      {
                        "line": "elif \"_saveasnew\" in request.POST:",
                        "lineNumber": 1277,
                        "lineChange": "none"
                      },
                      {
                        "line": "    msg = format_html(",
                        "lineNumber": 1278,
                        "lineChange": "none"
                      },
                      {
                        "line": "        _('The {name} “{obj}” was added successfully. You may edit it again below.'),",
                        "lineNumber": 1279,
                        "lineChange": "none"
                      },
                      {
                        "line": "    self.message_user(request, msg, messages.SUCCESS)",
                        "lineNumber": 1282,
                        "lineChange": "none"
                      },
                      {
                        "line": "    redirect_url = reverse('admin:%s_%s_change' %",
                        "lineNumber": 1283,
                        "lineChange": "none"
                      },
                      {
                        "line": "                           (opts.app_label, opts.model_name),",
                        "lineNumber": 1284,
                        "lineChange": "none"
                      },
                      {
                        "line": "                           args=(obj.pk,),",
                        "lineNumber": 1285,
                        "lineChange": "none"
                      },
                      {
                        "line": "                           current_app=self.admin_site.name)",
                        "lineNumber": 1286,
                        "lineChange": "none"
                      },
                      {
                        "line": "    redirect_url = add_preserved_filters({'preserved_filters': preserved_filters, 'opts': opts}, redirect_url)",
                        "lineNumber": 1287,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return HttpResponseRedirect(redirect_url)",
                        "lineNumber": 1288,
                        "lineChange": "none"
                      },
                      {
                        "line": "elif \"_addanother\" in request.POST:",
                        "lineNumber": 1290,
                        "lineChange": "none"
                      },
                      {
                        "line": "    msg = format_html(",
                        "lineNumber": 1291,
                        "lineChange": "none"
                      },
                      {
                        "line": "        _('The {name} “{obj}” was changed successfully. You may add another {name} below.'),",
                        "lineNumber": 1292,
                        "lineChange": "none"
                      },
                      {
                        "line": "self.message_user(request, msg, messages.SUCCESS)",
                        "lineNumber": 1295,
                        "lineChange": "none"
                      },
                      {
                        "line": "redirect_url = reverse('admin:%s_%s_add' %",
                        "lineNumber": 1296,
                        "lineChange": "none"
                      },
                      {
                        "line": "                       (opts.app_label, opts.model_name),",
                        "lineNumber": 1297,
                        "lineChange": "none"
                      },
                      {
                        "line": "                       current_app=self.admin_site.name)",
                        "lineNumber": 1298,
                        "lineChange": "none"
                      },
                      {
                        "line": "redirect_url = add_preserved_filters({'preserved_filters': preserved_filters, 'opts': opts}, redirect_url)",
                        "lineNumber": 1299,
                        "lineChange": "none"
                      },
                      {
                        "line": "return HttpResponseRedirect(redirect_url)",
                        "lineNumber": 1300,
                        "lineChange": "none"
                      },
                      {
                        "line": "        )",
                        "lineNumber": 1306,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.message_user(request, msg, messages.SUCCESS)",
                        "lineNumber": 1307,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return self.response_post_save_change(request, obj)",
                        "lineNumber": 1308,
                        "lineChange": "none"
                      },
                      {
                        "line": "def _response_post_save(self, request, obj):",
                        "lineNumber": 1310,
                        "lineChange": "none"
                      },
                      {
                        "line": "    opts = self.model._meta",
                        "lineNumber": 1311,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if self.has_view_or_change_permission(request):",
                        "lineNumber": 1312,
                        "lineChange": "none"
                      },
                      {
                        "line": "        post_url = reverse('admin:%s_%s_changelist' %",
                        "lineNumber": 1313,
                        "lineChange": "none"
                      },
                      {
                        "line": "                           (opts.app_label, opts.model_name),",
                        "lineNumber": 1314,
                        "lineChange": "none"
                      },
                      {
                        "line": "                           current_app=self.admin_site.name)",
                        "lineNumber": 1315,
                        "lineChange": "none"
                      },
                      {
                        "line": "        preserved_filters = self.get_preserved_filters(request)",
                        "lineNumber": 1316,
                        "lineChange": "none"
                      },
                      {
                        "line": "        post_url = add_preserved_filters({'preserved_filters': preserved_filters, 'opts': opts}, post_url)",
                        "lineNumber": 1317,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:",
                        "lineNumber": 1318,
                        "lineChange": "none"
                      },
                      {
                        "line": "        post_url = reverse('admin:index',",
                        "lineNumber": 1319,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return HttpResponseRedirect(post_url)",
                        "lineNumber": 1321,
                        "lineChange": "none"
                      },
                      {
                        "line": "def response_post_save_add(self, request, obj):",
                        "lineNumber": 1323,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1324,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Figure out where to redirect after the 'Save' button has been pressed",
                        "lineNumber": 1325,
                        "lineChange": "none"
                      },
                      {
                        "line": "    when adding a new object.",
                        "lineNumber": 1326,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1327,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return self._response_post_save(request, obj)",
                        "lineNumber": 1328,
                        "lineChange": "none"
                      },
                      {
                        "line": "def response_post_save_change(self, request, obj):",
                        "lineNumber": 1330,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1331,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Figure out where to redirect after the 'Save' button has been pressed",
                        "lineNumber": 1332,
                        "lineChange": "none"
                      },
                      {
                        "line": "    when editing an existing object.",
                        "lineNumber": 1333,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1334,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return self._response_post_save(request, obj)",
                        "lineNumber": 1335,
                        "lineChange": "none"
                      },
                      {
                        "line": "def response_action(self, request, queryset):",
                        "lineNumber": 1337,
                        "lineChange": "none"
                      },
                      {
                        "line": "# whose button was pushed.",
                        "lineNumber": 1346,
                        "lineChange": "none"
                      },
                      {
                        "line": "try:",
                        "lineNumber": 1347,
                        "lineChange": "none"
                      },
                      {
                        "line": "    action_index = int(request.POST.get('index', 0))",
                        "lineNumber": 1348,
                        "lineChange": "none"
                      },
                      {
                        "line": "except ValueError:",
                        "lineNumber": 1349,
                        "lineChange": "none"
                      },
                      {
                        "line": "    action_index = 0",
                        "lineNumber": 1350,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Construct the action form.",
                        "lineNumber": 1352,
                        "lineChange": "none"
                      },
                      {
                        "line": "data = request.POST.copy()",
                        "lineNumber": 1353,
                        "lineChange": "none"
                      },
                      {
                        "line": "data.pop(helpers.ACTION_CHECKBOX_NAME, None)",
                        "lineNumber": 1354,
                        "lineChange": "none"
                      },
                      {
                        "line": "data.pop(\"index\", None)",
                        "lineNumber": 1355,
                        "lineChange": "none"
                      },
                      {
                        "line": "# perform an action on it, so bail. Except we want to perform",
                        "lineNumber": 1376,
                        "lineChange": "none"
                      },
                      {
                        "line": "# the action explicitly on all objects.",
                        "lineNumber": 1377,
                        "lineChange": "none"
                      },
                      {
                        "line": "selected = request.POST.getlist(helpers.ACTION_CHECKBOX_NAME)",
                        "lineNumber": 1378,
                        "lineChange": "none"
                      },
                      {
                        "line": "if not selected and not select_across:",
                        "lineNumber": 1379,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # Reminder that something needs to be selected or nothing will happen",
                        "lineNumber": 1380,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return response",
                        "lineNumber": 1396,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:",
                        "lineNumber": 1397,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return HttpResponseRedirect(request.get_full_path())",
                        "lineNumber": 1398,
                        "lineChange": "none"
                      },
                      {
                        "line": "else:",
                        "lineNumber": 1399,
                        "lineChange": "none"
                      },
                      {
                        "line": "    msg = _(\"No action selected.\")",
                        "lineNumber": 1400,
                        "lineChange": "none"
                      },
                      {
                        "line": "Determine the HttpResponse for the delete_view stage.",
                        "lineNumber": 1406,
                        "lineChange": "none"
                      },
                      {
                        "line": "\"\"\"",
                        "lineNumber": 1407,
                        "lineChange": "none"
                      },
                      {
                        "line": "opts = self.model._meta",
                        "lineNumber": 1408,
                        "lineChange": "none"
                      },
                      {
                        "line": "if IS_POPUP_VAR in request.POST:",
                        "lineNumber": 1410,
                        "lineChange": "none"
                      },
                      {
                        "line": "    popup_response_data = json.dumps({",
                        "lineNumber": 1411,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'action': 'delete',",
                        "lineNumber": 1412,
                        "lineChange": "none"
                      },
                      {
                        "line": "})",
                        "lineNumber": 1414,
                        "lineChange": "none"
                      },
                      {
                        "line": "return TemplateResponse(request, self.popup_response_template or [",
                        "lineNumber": 1415,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'admin/%s/%s/popup_response.html' % (opts.app_label, opts.model_name),",
                        "lineNumber": 1416,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'admin/%s/popup_response.html' % opts.app_label,",
                        "lineNumber": 1417,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'admin/popup_response.html',",
                        "lineNumber": 1418,
                        "lineChange": "none"
                      },
                      {
                        "line": "], {",
                        "lineNumber": 1419,
                        "lineChange": "none"
                      },
                      {
                        "line": "request,",
                        "lineNumber": 1424,
                        "lineChange": "none"
                      },
                      {
                        "line": "_('The %(name)s “%(obj)s” was deleted successfully.') % {",
                        "lineNumber": 1425,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'name': opts.verbose_name,",
                        "lineNumber": 1426,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'obj': obj_display,",
                        "lineNumber": 1427,
                        "lineChange": "none"
                      },
                      {
                        "line": "},",
                        "lineNumber": 1428,
                        "lineChange": "none"
                      },
                      {
                        "line": "if self.has_change_permission(request, None):",
                        "lineNumber": 1432,
                        "lineChange": "none"
                      },
                      {
                        "line": "    post_url = reverse(",
                        "lineNumber": 1433,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'admin:%s_%s_changelist' % (opts.app_label, opts.model_name),",
                        "lineNumber": 1434,
                        "lineChange": "none"
                      },
                      {
                        "line": "        current_app=self.admin_site.name,",
                        "lineNumber": 1435,
                        "lineChange": "none"
                      },
                      {
                        "line": "    )",
                        "lineNumber": 1436,
                        "lineChange": "none"
                      },
                      {
                        "line": "    preserved_filters = self.get_preserved_filters(request)",
                        "lineNumber": 1437,
                        "lineChange": "none"
                      },
                      {
                        "line": "    post_url = add_preserved_filters(",
                        "lineNumber": 1438,
                        "lineChange": "none"
                      },
                      {
                        "line": "        {'preserved_filters': preserved_filters, 'opts': opts}, post_url",
                        "lineNumber": 1439,
                        "lineChange": "none"
                      },
                      {
                        "line": "    )",
                        "lineNumber": 1440,
                        "lineChange": "none"
                      },
                      {
                        "line": "else:",
                        "lineNumber": 1441,
                        "lineChange": "none"
                      },
                      {
                        "line": "def render_delete_form(self, request, context):",
                        "lineNumber": 1445,
                        "lineChange": "none"
                      },
                      {
                        "line": "    opts = self.model._meta",
                        "lineNumber": 1446,
                        "lineChange": "none"
                      },
                      {
                        "line": "    app_label = opts.app_label",
                        "lineNumber": 1447,
                        "lineChange": "none"
                      },
                      {
                        "line": "    request.current_app = self.admin_site.name",
                        "lineNumber": 1449,
                        "lineChange": "none"
                      },
                      {
                        "line": "request,",
                        "lineNumber": 1457,
                        "lineChange": "none"
                      },
                      {
                        "line": "self.delete_confirmation_template or [",
                        "lineNumber": 1458,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"admin/{}/{}/delete_confirmation.html\".format(app_label, opts.model_name),",
                        "lineNumber": 1459,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"admin/{}/delete_confirmation.html\".format(app_label),",
                        "lineNumber": 1460,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"admin/delete_confirmation.html\",",
                        "lineNumber": 1461,
                        "lineChange": "none"
                      },
                      {
                        "line": "    )",
                        "lineNumber": 1464,
                        "lineChange": "none"
                      },
                      {
                        "line": "def get_inline_formsets(self, request, formsets, inline_instances, obj=None):",
                        "lineNumber": 1466,
                        "lineChange": "none"
                      },
                      {
                        "line": "    inline_admin_formsets = []",
                        "lineNumber": 1467,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for inline, formset in zip(inline_instances, formsets):",
                        "lineNumber": 1468,
                        "lineChange": "none"
                      },
                      {
                        "line": "        fieldsets = list(inline.get_fieldsets(request, obj))",
                        "lineNumber": 1469,
                        "lineChange": "none"
                      },
                      {
                        "line": "        readonly = list(inline.get_readonly_fields(request, obj))",
                        "lineNumber": 1470,
                        "lineChange": "none"
                      },
                      {
                        "line": "        has_add_permission = inline.has_add_permission(request, obj)",
                        "lineNumber": 1471,
                        "lineChange": "none"
                      },
                      {
                        "line": "        has_change_permission = inline.has_change_permission(request, obj)",
                        "lineNumber": 1472,
                        "lineChange": "none"
                      },
                      {
                        "line": "        has_delete_permission = inline.has_delete_permission(request, obj)",
                        "lineNumber": 1473,
                        "lineChange": "none"
                      },
                      {
                        "line": "        has_view_permission = inline.has_view_permission(request, obj)",
                        "lineNumber": 1474,
                        "lineChange": "none"
                      },
                      {
                        "line": "        prepopulated = dict(inline.get_prepopulated_fields(request, obj))",
                        "lineNumber": 1475,
                        "lineChange": "none"
                      },
                      {
                        "line": "        inline_admin_formset = helpers.InlineAdminFormSet(",
                        "lineNumber": 1476,
                        "lineChange": "none"
                      },
                      {
                        "line": "            inline, formset, fieldsets, prepopulated, readonly, model_admin=self,",
                        "lineNumber": 1477,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return inline_admin_formsets",
                        "lineNumber": 1482,
                        "lineChange": "none"
                      },
                      {
                        "line": "def get_changeform_initial_data(self, request):",
                        "lineNumber": 1484,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1485,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Get the initial form data from the request's GET params.",
                        "lineNumber": 1486,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1487,
                        "lineChange": "none"
                      },
                      {
                        "line": "    initial = dict(request.GET.items())",
                        "lineNumber": 1488,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for k in initial:",
                        "lineNumber": 1489,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try:",
                        "lineNumber": 1490,
                        "lineChange": "none"
                      },
                      {
                        "line": "            f = self.model._meta.get_field(k)",
                        "lineNumber": 1491,
                        "lineChange": "none"
                      },
                      {
                        "line": "        except FieldDoesNotExist:",
                        "lineNumber": 1492,
                        "lineChange": "none"
                      },
                      {
                        "line": "            continue",
                        "lineNumber": 1493,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # We have to special-case M2Ms as a list of comma-separated PKs.",
                        "lineNumber": 1494,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if isinstance(f, models.ManyToManyField):",
                        "lineNumber": 1495,
                        "lineChange": "none"
                      },
                      {
                        "line": "            initial[k] = initial[k].split(\",\")",
                        "lineNumber": 1496,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return initial",
                        "lineNumber": 1497,
                        "lineChange": "none"
                      },
                      {
                        "line": "def _get_obj_does_not_exist_redirect(self, request, opts, object_id):",
                        "lineNumber": 1499,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1500,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Create a message informing the user that the object doesn't exist",
                        "lineNumber": 1501,
                        "lineChange": "none"
                      },
                      {
                        "line": "\"\"\"",
                        "lineNumber": 1503,
                        "lineChange": "none"
                      },
                      {
                        "line": "msg = _('%(name)s with ID “%(key)s” doesn’t exist. Perhaps it was deleted?') % {",
                        "lineNumber": 1504,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'name': opts.verbose_name,",
                        "lineNumber": 1505,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'key': unquote(object_id),",
                        "lineNumber": 1506,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1507,
                        "lineChange": "none"
                      },
                      {
                        "line": "@csrf_protect_m",
                        "lineNumber": 1512,
                        "lineChange": "none"
                      },
                      {
                        "line": "def changeform_view(self, request, object_id=None, form_url='', extra_context=None):",
                        "lineNumber": 1513,
                        "lineChange": "none"
                      },
                      {
                        "line": "    with transaction.atomic(using=router.db_for_write(self.model)):",
                        "lineNumber": 1514,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return self._changeform_view(request, object_id, form_url, extra_context)",
                        "lineNumber": 1515,
                        "lineChange": "none"
                      },
                      {
                        "line": "def _changeform_view(self, request, object_id, form_url, extra_context):",
                        "lineNumber": 1517,
                        "lineChange": "none"
                      },
                      {
                        "line": "    to_field = request.POST.get(TO_FIELD_VAR, request.GET.get(TO_FIELD_VAR))",
                        "lineNumber": 1518,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if to_field and not self.to_field_allowed(request, to_field):",
                        "lineNumber": 1519,
                        "lineChange": "none"
                      },
                      {
                        "line": "        raise DisallowedModelAdminToField(\"The field %s cannot be referenced.\" % to_field)",
                        "lineNumber": 1520,
                        "lineChange": "none"
                      },
                      {
                        "line": "    model = self.model",
                        "lineNumber": 1522,
                        "lineChange": "none"
                      },
                      {
                        "line": "    opts = model._meta",
                        "lineNumber": 1523,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if request.method == 'POST' and '_saveasnew' in request.POST:",
                        "lineNumber": 1525,
                        "lineChange": "none"
                      },
                      {
                        "line": "        object_id = None",
                        "lineNumber": 1526,
                        "lineChange": "none"
                      },
                      {
                        "line": "else:",
                        "lineNumber": 1535,
                        "lineChange": "none"
                      },
                      {
                        "line": "    obj = self.get_object(request, unquote(object_id), to_field)",
                        "lineNumber": 1536,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if not self.has_view_or_change_permission(request, obj):",
                        "lineNumber": 1538,
                        "lineChange": "none"
                      },
                      {
                        "line": "        raise PermissionDenied",
                        "lineNumber": 1539,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if obj is None:",
                        "lineNumber": 1541,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return self._get_obj_does_not_exist_redirect(request, opts, object_id)",
                        "lineNumber": 1542,
                        "lineChange": "none"
                      },
                      {
                        "line": "ModelForm = self.get_form(request, obj, change=not add)",
                        "lineNumber": 1544,
                        "lineChange": "none"
                      },
                      {
                        "line": "if request.method == 'POST':",
                        "lineNumber": 1545,
                        "lineChange": "none"
                      },
                      {
                        "line": "    form = ModelForm(request.POST, request.FILES, instance=obj)",
                        "lineNumber": 1546,
                        "lineChange": "none"
                      },
                      {
                        "line": "    form_validated = form.is_valid()",
                        "lineNumber": 1547,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if form_validated:",
                        "lineNumber": 1548,
                        "lineChange": "none"
                      },
                      {
                        "line": "        new_object = self.save_form(request, form, change=not add)",
                        "lineNumber": 1549,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:",
                        "lineNumber": 1550,
                        "lineChange": "none"
                      },
                      {
                        "line": "        new_object = form.instance",
                        "lineNumber": 1551,
                        "lineChange": "none"
                      },
                      {
                        "line": "    formsets, inline_instances = self._create_formsets(request, new_object, change=not add)",
                        "lineNumber": 1552,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if all_valid(formsets) and form_validated:",
                        "lineNumber": 1553,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.save_model(request, new_object, form, not add)",
                        "lineNumber": 1554,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.save_related(request, form, formsets, not add)",
                        "lineNumber": 1555,
                        "lineChange": "none"
                      },
                      {
                        "line": "        change_message = self.construct_change_message(request, form, formsets, add)",
                        "lineNumber": 1556,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if add:",
                        "lineNumber": 1557,
                        "lineChange": "none"
                      },
                      {
                        "line": "            self.log_addition(request, new_object, change_message)",
                        "lineNumber": 1558,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return self.response_add(request, new_object)",
                        "lineNumber": 1559,
                        "lineChange": "none"
                      },
                      {
                        "line": "        else:",
                        "lineNumber": 1560,
                        "lineChange": "none"
                      },
                      {
                        "line": "            self.log_change(request, new_object, change_message)",
                        "lineNumber": 1561,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return self.response_change(request, new_object)",
                        "lineNumber": 1562,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:",
                        "lineNumber": 1563,
                        "lineChange": "none"
                      },
                      {
                        "line": "        form_validated = False",
                        "lineNumber": 1564,
                        "lineChange": "none"
                      },
                      {
                        "line": "else:",
                        "lineNumber": 1565,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if add:",
                        "lineNumber": 1566,
                        "lineChange": "none"
                      },
                      {
                        "line": "        initial = self.get_changeform_initial_data(request)",
                        "lineNumber": 1567,
                        "lineChange": "none"
                      },
                      {
                        "line": "        form = ModelForm(initial=initial)",
                        "lineNumber": 1568,
                        "lineChange": "none"
                      },
                      {
                        "line": "        formsets, inline_instances = self._create_formsets(request, form.instance, change=False)",
                        "lineNumber": 1569,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:",
                        "lineNumber": 1570,
                        "lineChange": "none"
                      },
                      {
                        "line": "        form = ModelForm(instance=obj)",
                        "lineNumber": 1571,
                        "lineChange": "none"
                      },
                      {
                        "line": "        formsets, inline_instances = self._create_formsets(request, obj, change=True)",
                        "lineNumber": 1572,
                        "lineChange": "none"
                      },
                      {
                        "line": "if not add and not self.has_change_permission(request, obj):",
                        "lineNumber": 1574,
                        "lineChange": "none"
                      },
                      {
                        "line": "    readonly_fields = flatten_fieldsets(self.get_fieldsets(request, obj))",
                        "lineNumber": 1575,
                        "lineChange": "none"
                      },
                      {
                        "line": "else:",
                        "lineNumber": 1576,
                        "lineChange": "none"
                      },
                      {
                        "line": "    readonly_fields = self.get_readonly_fields(request, obj)",
                        "lineNumber": 1577,
                        "lineChange": "none"
                      },
                      {
                        "line": "adminForm = helpers.AdminForm(",
                        "lineNumber": 1578,
                        "lineChange": "none"
                      },
                      {
                        "line": "    form,",
                        "lineNumber": 1579,
                        "lineChange": "none"
                      },
                      {
                        "line": "    list(self.get_fieldsets(request, obj)),",
                        "lineNumber": 1580,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # Clear prepopulated fields on a view-only form to avoid a crash.",
                        "lineNumber": 1581,
                        "lineChange": "none"
                      },
                      {
                        "line": "    self.get_prepopulated_fields(request, obj) if add or self.has_change_permission(request, obj) else {},",
                        "lineNumber": 1582,
                        "lineChange": "none"
                      },
                      {
                        "line": "    readonly_fields,",
                        "lineNumber": 1583,
                        "lineChange": "none"
                      },
                      {
                        "line": "    model_admin=self)",
                        "lineNumber": 1584,
                        "lineChange": "none"
                      },
                      {
                        "line": "media = self.media + adminForm.media",
                        "lineNumber": 1585,
                        "lineChange": "none"
                      },
                      {
                        "line": "inline_formsets = self.get_inline_formsets(request, formsets, inline_instances, obj)",
                        "lineNumber": 1587,
                        "lineChange": "none"
                      },
                      {
                        "line": "for inline_formset in inline_formsets:",
                        "lineNumber": 1588,
                        "lineChange": "none"
                      },
                      {
                        "line": "    media = media + inline_formset.media",
                        "lineNumber": 1589,
                        "lineChange": "none"
                      },
                      {
                        "line": "if add:",
                        "lineNumber": 1591,
                        "lineChange": "none"
                      },
                      {
                        "line": "    title = _('Add %s')",
                        "lineNumber": 1592,
                        "lineChange": "none"
                      },
                      {
                        "line": "elif self.has_change_permission(request, obj):",
                        "lineNumber": 1593,
                        "lineChange": "none"
                      },
                      {
                        "line": "    title = _('Change %s')",
                        "lineNumber": 1594,
                        "lineChange": "none"
                      },
                      {
                        "line": "else:",
                        "lineNumber": 1595,
                        "lineChange": "none"
                      },
                      {
                        "line": "context = {",
                        "lineNumber": 1597,
                        "lineChange": "none"
                      },
                      {
                        "line": "    **self.admin_site.each_context(request),",
                        "lineNumber": 1598,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'title': title % opts.verbose_name,",
                        "lineNumber": 1599,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'adminform': adminForm,",
                        "lineNumber": 1600,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'object_id': object_id,",
                        "lineNumber": 1601,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'original': obj,",
                        "lineNumber": 1602,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'is_popup': IS_POPUP_VAR in request.POST or IS_POPUP_VAR in request.GET,",
                        "lineNumber": 1603,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'to_field': to_field,",
                        "lineNumber": 1604,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'media': media,",
                        "lineNumber": 1605,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Hide the \"Save\" and \"Save and continue\" buttons if \"Save as New\" was",
                        "lineNumber": 1611,
                        "lineChange": "none"
                      },
                      {
                        "line": "# previously chosen to prevent the interface from getting confusing.",
                        "lineNumber": 1612,
                        "lineChange": "none"
                      },
                      {
                        "line": "if request.method == 'POST' and not form_validated and \"_saveasnew\" in request.POST:",
                        "lineNumber": 1613,
                        "lineChange": "none"
                      },
                      {
                        "line": "    context['show_save'] = False",
                        "lineNumber": 1614,
                        "lineChange": "none"
                      },
                      {
                        "line": "    context['show_save_and_continue'] = False",
                        "lineNumber": 1615,
                        "lineChange": "none"
                      },
                      {
                        "line": "    context.update(extra_context or {})",
                        "lineNumber": 1619,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return self.render_change_form(request, context, add=add, change=not add, obj=obj, form_url=form_url)",
                        "lineNumber": 1621,
                        "lineChange": "none"
                      },
                      {
                        "line": "def autocomplete_view(self, request):",
                        "lineNumber": 1623,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return AutocompleteJsonView.as_view(model_admin=self)(request)",
                        "lineNumber": 1624,
                        "lineChange": "none"
                      },
                      {
                        "line": "def add_view(self, request, form_url='', extra_context=None):",
                        "lineNumber": 1626,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return self.changeform_view(request, None, form_url, extra_context)",
                        "lineNumber": 1627,
                        "lineChange": "none"
                      },
                      {
                        "line": "def change_view(self, request, object_id, form_url='', extra_context=None):",
                        "lineNumber": 1629,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return self.changeform_view(request, object_id, form_url, extra_context)",
                        "lineNumber": 1630,
                        "lineChange": "none"
                      },
                      {
                        "line": "def _get_edited_object_pks(self, request, prefix):",
                        "lineNumber": 1632,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"Return POST data values of list_editable primary keys.\"\"\"",
                        "lineNumber": 1633,
                        "lineChange": "none"
                      },
                      {
                        "line": "    pk_pattern = re.compile(r'{}-\\d+-{}$'.format(prefix, self.model._meta.pk.name))",
                        "lineNumber": 1634,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    pk_pattern = re.compile(",
                        "lineNumber": 1634,
                        "lineChange": "added"
                      },
                      {
                        "line": "        r'{}-\\d+-{}$'.format(re.escape(prefix), self.model._meta.pk.name)",
                        "lineNumber": 1635,
                        "lineChange": "added"
                      },
                      {
                        "line": "    )",
                        "lineNumber": 1636,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return [value for key, value in request.POST.items() if pk_pattern.match(key)]",
                        "lineNumber": 1637,
                        "lineChange": "none"
                      },
                      {
                        "line": "def _get_list_editable_queryset(self, request, prefix):",
                        "lineNumber": 1639,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1640,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Based on POST data, return a queryset of the objects that were edited",
                        "lineNumber": 1641,
                        "lineChange": "none"
                      },
                      {
                        "line": "    via list_editable.",
                        "lineNumber": 1642,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1643,
                        "lineChange": "none"
                      },
                      {
                        "line": "    object_pks = self._get_edited_object_pks(request, prefix)",
                        "lineNumber": 1644,
                        "lineChange": "none"
                      },
                      {
                        "line": "    queryset = self.get_queryset(request)",
                        "lineNumber": 1645,
                        "lineChange": "none"
                      },
                      {
                        "line": "    validate = queryset.model._meta.pk.to_python",
                        "lineNumber": 1646,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try:",
                        "lineNumber": 1647,
                        "lineChange": "none"
                      },
                      {
                        "line": "        for pk in object_pks:",
                        "lineNumber": 1648,
                        "lineChange": "none"
                      },
                      {
                        "line": "            validate(pk)",
                        "lineNumber": 1649,
                        "lineChange": "none"
                      },
                      {
                        "line": "    except ValidationError:",
                        "lineNumber": 1650,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # Disable the optimization if the POST data was tampered with.",
                        "lineNumber": 1651,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return queryset",
                        "lineNumber": 1652,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return queryset.filter(pk__in=object_pks)",
                        "lineNumber": 1653,
                        "lineChange": "none"
                      },
                      {
                        "line": "@csrf_protect_m",
                        "lineNumber": 1655,
                        "lineChange": "none"
                      },
                      {
                        "line": "def changelist_view(self, request, extra_context=None):",
                        "lineNumber": 1656,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1657,
                        "lineChange": "none"
                      },
                      {
                        "line": "    The 'change list' admin view for this model.",
                        "lineNumber": 1658,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1659,
                        "lineChange": "none"
                      },
                      {
                        "line": "    from django.contrib.admin.views.main import ERROR_FLAG",
                        "lineNumber": 1660,
                        "lineChange": "none"
                      },
                      {
                        "line": "    opts = self.model._meta",
                        "lineNumber": 1661,
                        "lineChange": "none"
                      },
                      {
                        "line": "    app_label = opts.app_label",
                        "lineNumber": 1662,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if not self.has_view_or_change_permission(request):",
                        "lineNumber": 1663,
                        "lineChange": "none"
                      },
                      {
                        "line": "        raise PermissionDenied",
                        "lineNumber": 1664,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # something is screwed up with the database, so display an error",
                        "lineNumber": 1673,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # page.",
                        "lineNumber": 1674,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if ERROR_FLAG in request.GET:",
                        "lineNumber": 1675,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return SimpleTemplateResponse('admin/invalid_setup.html', {",
                        "lineNumber": 1676,
                        "lineChange": "none"
                      },
                      {
                        "line": "            'title': _('Database error'),",
                        "lineNumber": 1677,
                        "lineChange": "none"
                      },
                      {
                        "line": "        })",
                        "lineNumber": 1678,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return HttpResponseRedirect(request.path + '?' + ERROR_FLAG + '=1')",
                        "lineNumber": 1679,
                        "lineChange": "none"
                      },
                      {
                        "line": "# If the request was POSTed, this might be a bulk action or a bulk",
                        "lineNumber": 1681,
                        "lineChange": "none"
                      },
                      {
                        "line": "# below.",
                        "lineNumber": 1684,
                        "lineChange": "none"
                      },
                      {
                        "line": "action_failed = False",
                        "lineNumber": 1685,
                        "lineChange": "none"
                      },
                      {
                        "line": "selected = request.POST.getlist(helpers.ACTION_CHECKBOX_NAME)",
                        "lineNumber": 1686,
                        "lineChange": "none"
                      },
                      {
                        "line": "actions = self.get_actions(request)",
                        "lineNumber": 1688,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Actions with no confirmation",
                        "lineNumber": 1689,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (actions and request.method == 'POST' and",
                        "lineNumber": 1690,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'index' in request.POST and '_save' not in request.POST):",
                        "lineNumber": 1691,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if selected:",
                        "lineNumber": 1692,
                        "lineChange": "none"
                      },
                      {
                        "line": "        response = self.response_action(request, queryset=cl.get_queryset(request))",
                        "lineNumber": 1693,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Actions with confirmation",
                        "lineNumber": 1704,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (actions and request.method == 'POST' and",
                        "lineNumber": 1705,
                        "lineChange": "none"
                      },
                      {
                        "line": "        helpers.ACTION_CHECKBOX_NAME in request.POST and",
                        "lineNumber": 1706,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'index' not in request.POST and '_save' not in request.POST):",
                        "lineNumber": 1707,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if selected:",
                        "lineNumber": 1708,
                        "lineChange": "none"
                      },
                      {
                        "line": "        response = self.response_action(request, queryset=cl.get_queryset(request))",
                        "lineNumber": 1709,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # form if the user refreshes the browser or uses the \"No, take",
                        "lineNumber": 1717,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # me back\" button on the action confirmation page.",
                        "lineNumber": 1718,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return HttpResponseRedirect(request.get_full_path())",
                        "lineNumber": 1719,
                        "lineChange": "none"
                      },
                      {
                        "line": "# If we're allowing changelist editing, we need to construct a formset",
                        "lineNumber": 1721,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Handle POSTed bulk-edit data.",
                        "lineNumber": 1726,
                        "lineChange": "none"
                      },
                      {
                        "line": "if request.method == 'POST' and cl.list_editable and '_save' in request.POST:",
                        "lineNumber": 1727,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if not self.has_change_permission(request):",
                        "lineNumber": 1728,
                        "lineChange": "none"
                      },
                      {
                        "line": "        raise PermissionDenied",
                        "lineNumber": 1729,
                        "lineChange": "none"
                      },
                      {
                        "line": "    FormSet = self.get_changelist_formset(request)",
                        "lineNumber": 1730,
                        "lineChange": "none"
                      },
                      {
                        "line": "    modified_objects = self._get_list_editable_queryset(request, FormSet.get_default_prefix())",
                        "lineNumber": 1731,
                        "lineChange": "none"
                      },
                      {
                        "line": "    formset = cl.formset = FormSet(request.POST, request.FILES, queryset=modified_objects)",
                        "lineNumber": 1732,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if formset.is_valid():",
                        "lineNumber": 1733,
                        "lineChange": "none"
                      },
                      {
                        "line": "        changecount = 0",
                        "lineNumber": 1734,
                        "lineChange": "none"
                      },
                      {
                        "line": "        for form in formset.forms:",
                        "lineNumber": 1735,
                        "lineChange": "none"
                      },
                      {
                        "line": "            if form.has_changed():",
                        "lineNumber": 1736,
                        "lineChange": "none"
                      },
                      {
                        "line": "                obj = self.save_form(request, form, change=True)",
                        "lineNumber": 1737,
                        "lineChange": "none"
                      },
                      {
                        "line": "                self.save_model(request, obj, form, change=True)",
                        "lineNumber": 1738,
                        "lineChange": "none"
                      },
                      {
                        "line": "                self.save_related(request, form, formsets=[], change=True)",
                        "lineNumber": 1739,
                        "lineChange": "none"
                      },
                      {
                        "line": "                change_msg = self.construct_change_message(request, form, None)",
                        "lineNumber": 1740,
                        "lineChange": "none"
                      },
                      {
                        "line": "                self.log_change(request, obj, change_msg)",
                        "lineNumber": 1741,
                        "lineChange": "none"
                      },
                      {
                        "line": "                changecount += 1",
                        "lineNumber": 1742,
                        "lineChange": "none"
                      },
                      {
                        "line": "            ) % {",
                        "lineNumber": 1749,
                        "lineChange": "none"
                      },
                      {
                        "line": "                'count': changecount,",
                        "lineNumber": 1750,
                        "lineChange": "none"
                      },
                      {
                        "line": "                'name': model_ngettext(opts, changecount),",
                        "lineNumber": 1751,
                        "lineChange": "none"
                      },
                      {
                        "line": "            }",
                        "lineNumber": 1752,
                        "lineChange": "none"
                      },
                      {
                        "line": "            self.message_user(request, msg, messages.SUCCESS)",
                        "lineNumber": 1753,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return HttpResponseRedirect(request.get_full_path())",
                        "lineNumber": 1755,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Handle GET -- construct a formset for display.",
                        "lineNumber": 1757,
                        "lineChange": "none"
                      },
                      {
                        "line": "context = {",
                        "lineNumber": 1782,
                        "lineChange": "none"
                      },
                      {
                        "line": "    **self.admin_site.each_context(request),",
                        "lineNumber": 1783,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'module_name': str(opts.verbose_name_plural),",
                        "lineNumber": 1784,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'selection_note': _('0 of %(cnt)s selected') % {'cnt': len(cl.result_list)},",
                        "lineNumber": 1785,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'selection_note_all': selection_note_all % {'total_count': cl.result_count},",
                        "lineNumber": 1786,
                        "lineChange": "none"
                      },
                      {
                        "line": "return TemplateResponse(request, self.change_list_template or [",
                        "lineNumber": 1804,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'admin/%s/%s/change_list.html' % (app_label, opts.model_name),",
                        "lineNumber": 1805,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'admin/%s/change_list.html' % app_label,",
                        "lineNumber": 1806,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'admin/change_list.html'",
                        "lineNumber": 1807,
                        "lineChange": "none"
                      },
                      {
                        "line": "@csrf_protect_m",
                        "lineNumber": 1817,
                        "lineChange": "none"
                      },
                      {
                        "line": "def delete_view(self, request, object_id, extra_context=None):",
                        "lineNumber": 1818,
                        "lineChange": "none"
                      },
                      {
                        "line": "    with transaction.atomic(using=router.db_for_write(self.model)):",
                        "lineNumber": 1819,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return self._delete_view(request, object_id, extra_context)",
                        "lineNumber": 1820,
                        "lineChange": "none"
                      },
                      {
                        "line": "def _delete_view(self, request, object_id, extra_context):",
                        "lineNumber": 1822,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"The 'delete' admin view for this model.\"",
                        "lineNumber": 1823,
                        "lineChange": "none"
                      },
                      {
                        "line": "    opts = self.model._meta",
                        "lineNumber": 1824,
                        "lineChange": "none"
                      },
                      {
                        "line": "    app_label = opts.app_label",
                        "lineNumber": 1825,
                        "lineChange": "none"
                      },
                      {
                        "line": "    to_field = request.POST.get(TO_FIELD_VAR, request.GET.get(TO_FIELD_VAR))",
                        "lineNumber": 1827,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if to_field and not self.to_field_allowed(request, to_field):",
                        "lineNumber": 1828,
                        "lineChange": "none"
                      },
                      {
                        "line": "        raise DisallowedModelAdminToField(\"The field %s cannot be referenced.\" % to_field)",
                        "lineNumber": 1829,
                        "lineChange": "none"
                      },
                      {
                        "line": "    obj = self.get_object(request, unquote(object_id), to_field)",
                        "lineNumber": 1831,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if not self.has_delete_permission(request, obj):",
                        "lineNumber": 1833,
                        "lineChange": "none"
                      },
                      {
                        "line": "        raise PermissionDenied",
                        "lineNumber": 1834,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if obj is None:",
                        "lineNumber": 1836,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return self._get_obj_does_not_exist_redirect(request, opts, object_id)",
                        "lineNumber": 1837,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # Populate deleted_objects, a data structure of all related objects that",
                        "lineNumber": 1839,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # will also be deleted.",
                        "lineNumber": 1840,
                        "lineChange": "none"
                      },
                      {
                        "line": "    deleted_objects, model_count, perms_needed, protected = self.get_deleted_objects([obj], request)",
                        "lineNumber": 1841,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if request.POST and not protected:  # The user has confirmed the deletion.",
                        "lineNumber": 1843,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if perms_needed:",
                        "lineNumber": 1844,
                        "lineChange": "none"
                      },
                      {
                        "line": "            raise PermissionDenied",
                        "lineNumber": 1845,
                        "lineChange": "none"
                      },
                      {
                        "line": "        obj_display = str(obj)",
                        "lineNumber": 1846,
                        "lineChange": "none"
                      },
                      {
                        "line": "        attr = str(to_field) if to_field else opts.pk.attname",
                        "lineNumber": 1847,
                        "lineChange": "none"
                      },
                      {
                        "line": "        obj_id = obj.serializable_value(attr)",
                        "lineNumber": 1848,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.log_deletion(request, obj, obj_display)",
                        "lineNumber": 1849,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.delete_model(request, obj)",
                        "lineNumber": 1850,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return self.response_delete(request, obj_display, obj_id)",
                        "lineNumber": 1852,
                        "lineChange": "none"
                      },
                      {
                        "line": "    object_name = str(opts.verbose_name)",
                        "lineNumber": 1854,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if perms_needed or protected:",
                        "lineNumber": 1856,
                        "lineChange": "none"
                      },
                      {
                        "line": "'perms_lacking': perms_needed,",
                        "lineNumber": 1868,
                        "lineChange": "none"
                      },
                      {
                        "line": "'protected': protected,",
                        "lineNumber": 1869,
                        "lineChange": "none"
                      },
                      {
                        "line": "'opts': opts,",
                        "lineNumber": 1870,
                        "lineChange": "none"
                      },
                      {
                        "line": "'app_label': app_label,",
                        "lineNumber": 1871,
                        "lineChange": "none"
                      },
                      {
                        "line": "'preserved_filters': self.get_preserved_filters(request),",
                        "lineNumber": 1872,
                        "lineChange": "none"
                      },
                      {
                        "line": "'is_popup': IS_POPUP_VAR in request.POST or IS_POPUP_VAR in request.GET,",
                        "lineNumber": 1873,
                        "lineChange": "none"
                      },
                      {
                        "line": "'to_field': to_field,",
                        "lineNumber": 1874,
                        "lineChange": "none"
                      },
                      {
                        "line": "**(extra_context or {}),",
                        "lineNumber": 1875,
                        "lineChange": "none"
                      },
                      {
                        "line": "from django.contrib.admin.models import LogEntry",
                        "lineNumber": 1882,
                        "lineChange": "none"
                      },
                      {
                        "line": "# First check if the user can see this history.",
                        "lineNumber": 1883,
                        "lineChange": "none"
                      },
                      {
                        "line": "model = self.model",
                        "lineNumber": 1884,
                        "lineChange": "none"
                      },
                      {
                        "line": "obj = self.get_object(request, unquote(object_id))",
                        "lineNumber": 1885,
                        "lineChange": "none"
                      },
                      {
                        "line": "if obj is None:",
                        "lineNumber": 1886,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return self._get_obj_does_not_exist_redirect(request, model._meta, object_id)",
                        "lineNumber": 1887,
                        "lineChange": "none"
                      },
                      {
                        "line": "if not self.has_view_or_change_permission(request, obj):",
                        "lineNumber": 1889,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Then get the history for this object.",
                        "lineNumber": 1892,
                        "lineChange": "none"
                      },
                      {
                        "line": "opts = model._meta",
                        "lineNumber": 1893,
                        "lineChange": "none"
                      },
                      {
                        "line": "app_label = opts.app_label",
                        "lineNumber": 1894,
                        "lineChange": "none"
                      },
                      {
                        "line": "action_list = LogEntry.objects.filter(",
                        "lineNumber": 1895,
                        "lineChange": "none"
                      },
                      {
                        "line": "    object_id=unquote(object_id),",
                        "lineNumber": 1896,
                        "lineChange": "none"
                      },
                      {
                        "line": "    content_type=get_content_type_for_model(model)",
                        "lineNumber": 1897,
                        "lineChange": "none"
                      },
                      {
                        "line": ").select_related().order_by('action_time')",
                        "lineNumber": 1898,
                        "lineChange": "none"
                      },
                      {
                        "line": "'title': _('Change history: %s') % obj,",
                        "lineNumber": 1902,
                        "lineChange": "none"
                      },
                      {
                        "line": "'action_list': action_list,",
                        "lineNumber": 1903,
                        "lineChange": "none"
                      },
                      {
                        "line": "'module_name': str(capfirst(opts.verbose_name_plural)),",
                        "lineNumber": 1904,
                        "lineChange": "none"
                      },
                      {
                        "line": "'object': obj,",
                        "lineNumber": 1905,
                        "lineChange": "none"
                      },
                      {
                        "line": "'opts': opts,",
                        "lineNumber": 1906,
                        "lineChange": "none"
                      },
                      {
                        "line": "'preserved_filters': self.get_preserved_filters(request),",
                        "lineNumber": 1907,
                        "lineChange": "none"
                      },
                      {
                        "line": "**(extra_context or {}),",
                        "lineNumber": 1908,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return TemplateResponse(request, self.object_history_template or [",
                        "lineNumber": 1913,
                        "lineChange": "none"
                      },
                      {
                        "line": "        \"admin/%s/%s/object_history.html\" % (app_label, opts.model_name),",
                        "lineNumber": 1914,
                        "lineChange": "none"
                      },
                      {
                        "line": "        \"admin/%s/object_history.html\" % app_label,",
                        "lineNumber": 1915,
                        "lineChange": "none"
                      },
                      {
                        "line": "        \"admin/object_history.html\"",
                        "lineNumber": 1916,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ], context)",
                        "lineNumber": 1917,
                        "lineChange": "none"
                      },
                      {
                        "line": "def _create_formsets(self, request, obj, change):",
                        "lineNumber": 1919,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"Helper function to generate formsets for add/change_view.\"",
                        "lineNumber": 1920,
                        "lineChange": "none"
                      },
                      {
                        "line": "    formsets = []",
                        "lineNumber": 1921,
                        "lineChange": "none"
                      },
                      {
                        "line": "get_formsets_args = [request]",
                        "lineNumber": 1924,
                        "lineChange": "none"
                      },
                      {
                        "line": "if change:",
                        "lineNumber": 1925,
                        "lineChange": "none"
                      },
                      {
                        "line": "    get_formsets_args.append(obj)",
                        "lineNumber": 1926,
                        "lineChange": "none"
                      },
                      {
                        "line": "for FormSet, inline in self.get_formsets_with_inlines(*get_formsets_args):",
                        "lineNumber": 1927,
                        "lineChange": "none"
                      },
                      {
                        "line": "    prefix = FormSet.get_default_prefix()",
                        "lineNumber": 1928,
                        "lineChange": "none"
                      },
                      {
                        "line": "    prefix = \"%s-%s\" % (prefix, prefixes[prefix])",
                        "lineNumber": 1931,
                        "lineChange": "none"
                      },
                      {
                        "line": "formset_params = {",
                        "lineNumber": 1932,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'instance': obj,",
                        "lineNumber": 1933,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'prefix': prefix,",
                        "lineNumber": 1934,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'queryset': inline.get_queryset(request),",
                        "lineNumber": 1935,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1936,
                        "lineChange": "none"
                      },
                      {
                        "line": "if request.method == 'POST':",
                        "lineNumber": 1937,
                        "lineChange": "none"
                      },
                      {
                        "line": "    formset_params.update({",
                        "lineNumber": 1938,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'data': request.POST.copy(),",
                        "lineNumber": 1939,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'files': request.FILES,",
                        "lineNumber": 1940,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'save_as_new': '_saveasnew' in request.POST",
                        "lineNumber": 1941,
                        "lineChange": "none"
                      },
                      {
                        "line": "    })",
                        "lineNumber": 1942,
                        "lineChange": "none"
                      },
                      {
                        "line": "formset = FormSet(**formset_params)",
                        "lineNumber": 1943,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Bypass validation of each view-only inline form (since the form's",
                        "lineNumber": 1952,
                        "lineChange": "none"
                      },
                      {
                        "line": "# data won't be in request.POST), unless the form was deleted.",
                        "lineNumber": 1953,
                        "lineChange": "none"
                      },
                      {
                        "line": "if not inline.has_change_permission(request, obj if change else None):",
                        "lineNumber": 1954,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for index, form in enumerate(formset.initial_forms):",
                        "lineNumber": 1955,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if user_deleted_form(request, obj, formset, index):",
                        "lineNumber": 1956,
                        "lineChange": "none"
                      },
                      {
                        "line": "            continue",
                        "lineNumber": 1957,
                        "lineChange": "none"
                      },
                      {
                        "line": "        form._errors = {}",
                        "lineNumber": 1958,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 74,
                "cwe": [
                  "CWE-400"
                ]
              }
            },
            {
              "id": "python/PT/test",
              "name": "PT/test",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "PT",
                  "Security",
                  "InTest",
                  "SourceHttpBody",
                  "Taint"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/pynickle/amazing-python/commit/80d2cc8c3e2c8330416b91f17a09b51830915b86?diff=split#diff-f626b00ab4d99fdbd4cb2bd61ae29469L118",
                    "lines": [
                      {
                        "line": "if request.method == \"POST\":",
                        "lineNumber": 161,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try:",
                        "lineNumber": 162,
                        "lineChange": "none"
                      },
                      {
                        "line": "        f = request.files['file']",
                        "lineNumber": 163,
                        "lineChange": "none"
                      },
                      {
                        "line": "        filename = f.filename",
                        "lineNumber": 118,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        filename = secure_filename(f.filename)",
                        "lineNumber": 164,
                        "lineChange": "added"
                      },
                      {
                        "line": "        f.save(filename)",
                        "lineNumber": 165,
                        "lineChange": "none"
                      },
                      {
                        "line": "        with open(filename, \"r\", encoding=\"utf-8\") as f:",
                        "lineNumber": 166,
                        "lineChange": "none"
                      },
                      {
                        "line": "            success, errors = words_validate(f.read())",
                        "lineNumber": 167,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/WhaleShark-Team/cobra/commit/1ac467a2c1cf8427a5bf60031677817140fe181c?diff=split#diff-dc0ad7c98d7072655327746f1bc95b3aL72",
                    "lines": [
                      {
                        "line": "task_type = 1",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "# check if there is a file or gitlab url",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "if len(request.files) == 0:",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # no files, should check username and password",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "    task_type = 1",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "# there is a file, check file format and uncompress it.",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "task_type = 2",
                        "lineNumber": 89,
                        "lineChange": "none"
                      },
                      {
                        "line": "upload_src = request.files['file']",
                        "lineNumber": 90,
                        "lineChange": "none"
                      },
                      {
                        "line": "filename = str(int(time.time())) + '_' + upload_src.filename",
                        "lineNumber": 90,
                        "lineChange": "removed"
                      },
                      {
                        "line": "filename = str(int(time.time())) + '_' + secure_filename(upload_src.filename)",
                        "lineNumber": 91,
                        "lineChange": "added"
                      },
                      {
                        "line": "filepath = 'uploads/' + filename",
                        "lineNumber": 92,
                        "lineChange": "none"
                      },
                      {
                        "line": "upload_src.save(filepath)",
                        "lineNumber": 93,
                        "lineChange": "none"
                      },
                      {
                        "line": "# if you upload a rar file, upload_src.mimetype will returns \"application/octet-stream\"",
                        "lineNumber": 95,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Wordseer/wordseer/commit/ea92ade27f7a7a12d057a2b71daf9ffa1cf4385e?diff=split#diff-e86334029c6a0118169cce848ff474ddR13",
                    "lines": [
                      {
                        "line": " PROJECT_ROUTE = \"/projects/\"",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": " ",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "def allowed_file(filename):",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return os.path.splitext(filename)[1] in app.config[\"ALLOWED_EXTENSIONS\"]",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": " @app.route(PROJECT_ROUTE, methods=[\"GET\", \"POST\"])",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": " def projects():",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "if request.method == \"POST\":",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "    uploaded_file = request.files[\"uploaded_file\"]",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if uploaded_file and allowed_file(uploaded_file.filename):",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "        filename = secure_filename(uploaded_file.filename)",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "        dest_path = os.path.join(app.config[\"UPLOAD_DIR\"],",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "            filename)",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "        uploaded_file.save(dest_path)",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "        #TODO: send the user somewhere useful?",
                        "lineNumber": 49,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 553,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "python/UnsupportedLanguage/test",
              "name": "UnsupportedLanguage/test",
              "shortDescription": {
                "text": "Python 2 source code"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nThe Python 2 interpreter has been unsupported since January 2020 and does not receive security updates.\nThese source files appear to be in the Python 2 syntax, and therefore depend on unsupported 3rd party components for operation.\n\n## Best practices for prevention\n* If this code is still in use, port it to Python 3",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "UnsupportedLanguage",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-1104"
                ]
              }
            },
            {
              "id": "python/CodeInjection",
              "name": "CodeInjection",
              "shortDescription": {
                "text": "Code Injection"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA secure code injection attack occurs when the attacker exploits an existing input processing vulnerability, passing special characters and code directly to a web-based application or site. The code is then executed, potentially granting the user system access to export sensitive data, to install malware, or even to move laterally and to exploit other systems in the trusted internal network environment. While code injection attacks can take place in several ways, the common factor is allowing the user to submit executable code to the application. The most common forms of code injection are SQL injection (server side) and cross-site scripting (XSS) (client side).\n\n## Best practices for prevention\n- Never trust user input. Assume any input may transmit harmful values.\n- Apply least privilege principle (for example, limit users to read only wherever possible).\n- Avoid passing raw user input directly to functions; use parameterized queries to extract data first.\n- Sanitize user input strings of special characters such as ?, &, /, <, >, and quotation marks.\n- Use whitelisting of known good values.\n- Validate user input against expected response types.\n- Escape shell commands with functions such as shlex for Python, or escapeshellarg for PHP.\n- Remember that code injection can take place on multiple fronts: GET and POST requests, but also cookies and HTTP headers.\n- Ensure up-to-date patching across all systems to remediate known vulnerabilities so these cannot be exploited by code injection.\n- Educate all team members on safe data handling procedures to prevent attacks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "CodeInjection",
                  "Security",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/praw-dev/praw/commit/c4c75964c06cfbc613d8b8663fba0f85b99791cb?diff=split#diff-4d74b15d9b9e10adb408c5a530f62c93L319",
                    "lines": [
                      {
                        "line": "                       None, REDDIT_USER_AGENT)",
                        "lineNumber": 316,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # Should only need ~1200 chars to get the modhash",
                        "lineNumber": 317,
                        "lineChange": "none"
                      },
                      {
                        "line": "    data = self.urlopen(req).read(1200)",
                        "lineNumber": 318,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    data = self._urlopen(req).read(1200)",
                        "lineNumber": 318,
                        "lineChange": "added"
                      },
                      {
                        "line": "    match = re.search(r\"modhash[^,]*\", data)",
                        "lineNumber": 319,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # Store the modhash.",
                        "lineNumber": 320,
                        "lineChange": "none"
                      },
                      {
                        "line": "    self.modhash = eval(match.group(0).split(\": \")[1])",
                        "lineNumber": 321,
                        "lineChange": "none"
                      },
                      {
                        "line": "@require_login",
                        "lineNumber": 323,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/nkouevda/albumr/commit/e5c4d797645683169706934e93dbc196cc2ca47e?diff=split#diff-e1ed3b055c50bc1f3f374d63bca49536L16",
                    "lines": [
                      {
                        "line": "try:",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # Read and decode the page",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "    page = urlopen(\"http://imgur.com/a/\" + album).read().decode()",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Extract the list of images and eval it to a Python list",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "images = eval(re.search(r'(?<=\"items\":)\\[\\{.+\\}\\](?=\\})', page).group())",
                        "lineNumber": 21,
                        "lineChange": "removed"
                      },
                      {
                        "line": "images = json.loads(re.search(r'(?<=\"items\":)\\[\\{.+\\}\\](?=\\})',",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "        page).group())",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "# Generate a list of images in the album",
                        "lineNumber": 23,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/apache/airflow/commit/c44e2009ee625ce4a82c50e585a3c8617d9b4ff8?diff=split#diff-948e87b4f8f644b3ad8c7950958df033L301",
                    "lines": [
                      {
                        "line": "import pandas as pd",
                        "lineNumber": 298,
                        "lineChange": "none"
                      },
                      {
                        "line": "session = settings.Session()",
                        "lineNumber": 299,
                        "lineChange": "none"
                      },
                      {
                        "line": "chart_id = request.args.get('chart_id')",
                        "lineNumber": 300,
                        "lineChange": "none"
                      },
                      {
                        "line": "csv = request.args.get('csv') == \"true\"",
                        "lineNumber": 301,
                        "lineChange": "none"
                      },
                      {
                        "line": "chart = session.query(models.Chart).filter_by(id=chart_id).first()",
                        "lineNumber": 302,
                        "lineChange": "none"
                      },
                      {
                        "line": "db = session.query(",
                        "lineNumber": 303,
                        "lineChange": "none"
                      },
                      {
                        "line": "    models.Connection).filter_by(conn_id=chart.conn_id).first()",
                        "lineNumber": 304,
                        "lineChange": "none"
                      },
                      {
                        "line": "session.expunge_all()",
                        "lineNumber": 305,
                        "lineChange": "none"
                      },
                      {
                        "line": "session.commit()",
                        "lineNumber": 306,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Processing templated fields",
                        "lineNumber": 313,
                        "lineChange": "none"
                      },
                      {
                        "line": "try:",
                        "lineNumber": 314,
                        "lineChange": "none"
                      },
                      {
                        "line": "    args = eval(chart.default_params)",
                        "lineNumber": 315,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    args = ast.literal_eval(chart.default_params)",
                        "lineNumber": 315,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if type(args) is not type(dict()):",
                        "lineNumber": 316,
                        "lineChange": "none"
                      },
                      {
                        "line": "        raise AirflowException('Not a dict')",
                        "lineNumber": 317,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 73,
                "cwe": [
                  "CWE-94"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)",
              "[open](12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/codegen/amalgamate.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 22,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6e41d3adc8610b70359a7c199ad0ec934378fd6992809bb566b9c8f57128a0f0",
            "1": "ecbdf469.09b47a5b.187bf175.378fd781.29e43099.ba14daf2.081ac3f4.4201a018.aae8f0ff.590535da.187bf175.378fd781.29e43099.73cfdf26.ec2d1000.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 39,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 39,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 9,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 52,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 39,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 18,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 15,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 627,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[open](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/codegen/amalgamate.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "21380acce017f80f39333c988a37d89e60ed1755aa9e6cae57cbce8f60425d7c",
            "1": "cde8b698.09b47a5b.187bf175.378fd781.29e43099.ba14daf2.081ac3f4.ebed174f.aae8f0ff.856e3039.187bf175.7593680f.29e43099.0a892d8d.df33f4de.cadd00d0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 29,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 16,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 5,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 15,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 627,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)",
              "[open](12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/codegen/amalgamate.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 61,
                  "endLine": 61,
                  "startColumn": 26,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6b391a78085cfe4aa132692bf219a58a9d757b7e498fecf3221e06a15c7fe2ba",
            "1": "977a3282.67df6de4.79e62dc9.13a35de6.145e7f2f.a5d7f69f.ec2d1000.fd5cedbc.aae8f0ff.e3d9b656.5fe980be.9cd2dfe0.145e7f2f.73cfdf26.ec2d1000.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 39,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 39,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 9,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 52,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 39,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 18,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 15,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 627,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[open](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/ci/scripts/cve/validate_manifest_libraries_versions.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 76,
                  "endLine": 76,
                  "startColumn": 6,
                  "endColumn": 10
                }
              }
            }
          ],
          "fingerprints": {
            "0": "59e582012c03806488441405e87398c66c0d76ca6610d1c2cce22a3a40843349",
            "1": "fd923279.f8bbd65e.187bf175.139c59a8.f3eda546.ba14daf2.081ac3f4.742d9b21.fd923279.be004016.187bf175.75158bb6.f3eda546.0a892d8d.22a8b49e.fc86ce1f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/ci/scripts/cve/validate_manifest_libraries_versions.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/ci/scripts/cve/validate_manifest_libraries_versions.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/ci/scripts/cve/validate_manifest_libraries_versions.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 1,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/ci/scripts/cve/validate_manifest_libraries_versions.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/ci/scripts/cve/validate_manifest_libraries_versions.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 17,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/ci/scripts/cve/validate_manifest_libraries_versions.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 17,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/ci/scripts/cve/validate_manifest_libraries_versions.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 1,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/ci/scripts/cve/validate_manifest_libraries_versions.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 11,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/ci/scripts/cve/validate_manifest_libraries_versions.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 577,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[open](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/analysis/profile.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 317,
                  "endLine": 317,
                  "startColumn": 14,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6d399cf6b94fb2cb1f85ab7438e8b21c16e20b2a75657350a54100fbfd9ead65",
            "1": "a6b41d6e.e3d9b656.187bf175.378fd781.29e43099.73cfdf26.a2237efa.f46ed94e.1770683e.856e3039.187bf175.378fd781.29e43099.73cfdf26.f6dc7859.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "endLine": 314,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "endLine": 314,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "endLine": 314,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 316,
                            "endLine": 316,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 316,
                            "endLine": 316,
                            "startColumn": 8,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 317,
                            "endLine": 317,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 317,
                            "endLine": 317,
                            "startColumn": 19,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 317,
                            "endLine": 317,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 627,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[open](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/analysis/profile.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 319,
                  "endLine": 319,
                  "startColumn": 14,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7bb37a5191fdbfce2eb30eb0f2ce7698cbf1912d21380727e01e2780f8e7fa4c",
            "1": "a6b41d6e.e3d9b656.187bf175.378fd781.29e43099.ba14daf2.a2237efa.f46ed94e.a6b41d6e.856e3039.187bf175.378fd781.29e43099.73cfdf26.f6dc7859.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "endLine": 314,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "endLine": 314,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "endLine": 314,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 316,
                            "endLine": 316,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 316,
                            "endLine": 316,
                            "startColumn": 8,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 317,
                            "endLine": 317,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 319,
                            "endLine": 319,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 319,
                            "endLine": 319,
                            "startColumn": 19,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 319,
                            "endLine": 319,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 627,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[open](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/analysis/profile.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 325,
                  "endLine": 325,
                  "startColumn": 14,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "339536b317270c83bc0dbb76e8bcded64f25895854a7082995425b7a7b9fd14a",
            "1": "129db901.ba0733be.187bf175.378fd781.29e43099.73cfdf26.081ac3f4.ebed174f.129db901.0941fc3b.187bf175.378fd781.29e43099.73cfdf26.f6dc7859.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "endLine": 314,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "endLine": 314,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "endLine": 314,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 316,
                            "endLine": 316,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 324,
                            "endLine": 324,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 324,
                            "endLine": 324,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 325,
                            "endLine": 325,
                            "startColumn": 19,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 325,
                            "endLine": 325,
                            "startColumn": 19,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 325,
                            "endLine": 325,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 627,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[open](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/cmake/downloader.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 44,
                  "endLine": 44,
                  "startColumn": 18,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9707b428272b84b2e0cfc95d708c854cfa89d7b0e94e27ac53aa79f1a4a8a07c",
            "1": "29d1c8e0.09b47a5b.79e62dc9.59b6e020.f3eda546.ba14daf2.cb317a58.9c2a7a50.5dca2399.7e63ccc7.187bf175.59b6e020.c8b7d5cc.73cfdf26.cb317a58.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/cmake/downloader.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 35,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/cmake/downloader.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 35,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/cmake/downloader.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 7,
                            "endLine": 7,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/cmake/downloader.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 9,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/cmake/downloader.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 22,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/cmake/downloader.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 22,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/cmake/downloader.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/cmake/downloader.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 15,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/cmake/downloader.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 29,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/cmake/downloader.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/cmake/downloader.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/cmake/downloader.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 627,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[open](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/codegen/gentargets.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 116,
                  "endLine": 116,
                  "startColumn": 18,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "80544391e6e12e91691a3362e645e93f9ce64ffd6fd36444b76701d71f980e1c",
            "1": "2e8ddaeb.e3d9b656.187bf175.139c59a8.f3eda546.73cfdf26.682a1833.6aac30d8.2e8ddaeb.f47efecf.187bf175.3beeacb6.2bdc9318.73cfdf26.f6dc7859.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentargets.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentargets.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentargets.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 5,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentargets.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 32,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentargets.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentargets.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 23,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentargets.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 627,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22)",
              "[open](23)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/codegen/gentable.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 123,
                  "endLine": 123,
                  "startColumn": 18,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dc502b207765540b3d16ef29a56b5e23996c96b26c972e9e7428006547415a13",
            "1": "129db901.09b47a5b.187bf175.378fd781.29e43099.ba14daf2.081ac3f4.281c1006.2431c764.b88e75ef.d8ba7915.f6463326.29e43099.c9d6580b.2701234b.d2a21262"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 450,
                            "endLine": 450,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 450,
                            "endLine": 450,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 450,
                            "endLine": 450,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 452,
                            "endLine": 452,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 457,
                            "endLine": 457,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 457,
                            "endLine": 457,
                            "startColumn": 16,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 457,
                            "endLine": 457,
                            "startColumn": 5,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 459,
                            "endLine": 459,
                            "startColumn": 8,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 463,
                            "endLine": 463,
                            "startColumn": 19,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 466,
                            "endLine": 466,
                            "startColumn": 63,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 31,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 38,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 22,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 9,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 29,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 118,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 118,
                            "startColumn": 26,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 118,
                            "startColumn": 13,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 38,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 9,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 120,
                            "endLine": 120,
                            "startColumn": 31,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 23,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 627,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[open](13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/codegen/gentable.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 156,
                  "endLine": 156,
                  "startColumn": 14,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8a0abe147b0d849bf8d2ad261ae9703cf5dbf229b36e2ebce9b98d6f41728f95",
            "1": "cde8b698.67df6de4.187bf175.378fd781.29e43099.ba14daf2.081ac3f4.a9c71abd.29f70f0d.b88e75ef.f3c9f298.f6463326.29e43099.c9d6580b.f6dc7859.eeb4db1a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 450,
                            "endLine": 450,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 450,
                            "endLine": 450,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 450,
                            "endLine": 450,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 452,
                            "endLine": 452,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 457,
                            "endLine": 457,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 458,
                            "endLine": 458,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 462,
                            "endLine": 462,
                            "startColumn": 25,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 462,
                            "endLine": 462,
                            "startColumn": 25,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 146,
                            "endLine": 146,
                            "startColumn": 21,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 147,
                            "endLine": 147,
                            "startColumn": 27,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 153,
                            "endLine": 153,
                            "startColumn": 40,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 156,
                            "endLine": 156,
                            "startColumn": 32,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 156,
                            "endLine": 156,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 156,
                            "endLine": 156,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 627,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[open](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/codegen/gentable.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 463,
                  "endLine": 463,
                  "startColumn": 14,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fb467e9885619d550a4c15ed2d951653662483383a71230c1cb4a40f239b92d2",
            "1": "da9cf85a.f8545116.187bf175.8a4e3f10.64ffc8ed.ba14daf2.2701234b.d2a21262.da9cf85a.d8435ddf.187bf175.8a4e3f10.6b8112df.c9d6580b.2701234b.61547892"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 450,
                            "endLine": 450,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 450,
                            "endLine": 450,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 450,
                            "endLine": 450,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 452,
                            "endLine": 452,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 457,
                            "endLine": 457,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 457,
                            "endLine": 457,
                            "startColumn": 16,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 457,
                            "endLine": 457,
                            "startColumn": 5,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 459,
                            "endLine": 459,
                            "startColumn": 8,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 463,
                            "endLine": 463,
                            "startColumn": 19,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 463,
                            "endLine": 463,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 627,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[open](13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/codegen/templite.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 64,
                  "startColumn": 18,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c3bbbf02593b0c90985679a23324ee1206c7deedbe5492353f9d532d072190c0",
            "1": "e34e1fea.f8545116.187bf175.378fd781.29e43099.ba14daf2.081ac3f4.ebed174f.5a29be40.577bab1d.172defa9.378fd781.29e43099.a23842bb.18614a65.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 44,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 44,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 44,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 28,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 21,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 37,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 24,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 17,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 124,
                            "endLine": 124,
                            "startColumn": 32,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 35,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 23,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 627,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[open](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/codegen/genapi.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 119,
                  "endLine": 119,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7b622ea4aa0e2b9a93fb44a95646951f58c36c19956e6e267edbcf3c80f08a30",
            "1": "e113b817.09b47a5b.187bf175.378fd781.29e43099.73cfdf26.a2237efa.f46ed94e.e113b817.856e3039.187bf175.378fd781.29e43099.22d25ab9.fd919213.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 243,
                            "endLine": 243,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 248,
                            "endLine": 248,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 249,
                            "endLine": 249,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 249,
                            "endLine": 249,
                            "startColumn": 16,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 18,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 18,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 14,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 15,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 627,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)",
              "[open](12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/codegen/genapi.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 121,
                  "endLine": 121,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "93d349731d10b1fc3d1a77e7982ae49bc2845944d18e219ef6928033b42e60d4",
            "1": "e113b817.09b47a5b.187bf175.378fd781.29e43099.ba14daf2.a2237efa.f46ed94e.e113b817.856e3039.187bf175.378fd781.29e43099.22d25ab9.fd919213.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 243,
                            "endLine": 243,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 248,
                            "endLine": 248,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 249,
                            "endLine": 249,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 249,
                            "endLine": 249,
                            "startColumn": 16,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 18,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 32,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 32,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 28,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 15,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 627,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13)",
              "[open](14)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/codegen/genapi.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 182,
                  "endLine": 182,
                  "startColumn": 14,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0923ac63269bc334b446d7e3d7b89d750ebd53eb4ca0588ec059a4ceead5a243",
            "1": "6b769709.09b47a5b.187bf175.378fd781.29e43099.ba14daf2.081ac3f4.281c1006.b3765255.856e3039.187bf175.378fd781.29e43099.22d25ab9.fd919213.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 243,
                            "endLine": 243,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 248,
                            "endLine": 248,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 255,
                            "endLine": 255,
                            "startColumn": 27,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 255,
                            "endLine": 255,
                            "startColumn": 27,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 273,
                            "endLine": 273,
                            "startColumn": 19,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 180,
                            "startColumn": 34,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 180,
                            "startColumn": 21,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 180,
                            "startColumn": 5,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 181,
                            "endLine": 181,
                            "startColumn": 23,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 182,
                            "endLine": 182,
                            "startColumn": 19,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 182,
                            "endLine": 182,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 627,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15)",
              "[open](16)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/codegen/genapi.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 201,
                  "endLine": 201,
                  "startColumn": 18,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "18d661b33f012848e499c35075d315a3661f848c77c755923ea8917e4e4a2568",
            "1": "977a3282.67df6de4.187bf175.8a4e3f10.29e43099.ba14daf2.081ac3f4.a9c71abd.b3765255.d8435ddf.187bf175.f6463326.29e43099.22d25ab9.fd919213.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 243,
                            "endLine": 243,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 248,
                            "endLine": 248,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 255,
                            "endLine": 255,
                            "startColumn": 27,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 255,
                            "endLine": 255,
                            "startColumn": 27,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 273,
                            "endLine": 273,
                            "startColumn": 19,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 180,
                            "startColumn": 34,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 35,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 27,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 9,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 193,
                            "endLine": 193,
                            "startColumn": 41,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 201,
                            "endLine": 201,
                            "startColumn": 36,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 201,
                            "endLine": 201,
                            "startColumn": 23,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 201,
                            "endLine": 201,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 627,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31)",
              "[open](32)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/codegen/genapi.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 206,
                  "endLine": 206,
                  "startColumn": 44,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "304aace54cbe2b483a08d6189d9b6b9870945bb365a8acf53eeff6ca48127752",
            "1": "cf2a7e82.9f9d3e26.9e30e253.ef463c52.37401b6e.ba14daf2.a2237efa.f46ed94e.b3765255.b88e75ef.9e30e253.f6463326.29e43099.22d25ab9.20f941c3.9d10d713"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 243,
                            "endLine": 243,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 248,
                            "endLine": 248,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 255,
                            "endLine": 255,
                            "startColumn": 27,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 255,
                            "endLine": 255,
                            "startColumn": 27,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 273,
                            "endLine": 273,
                            "startColumn": 19,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 180,
                            "startColumn": 34,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 35,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 27,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 18,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 187,
                            "endLine": 187,
                            "startColumn": 13,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 188,
                            "endLine": 188,
                            "startColumn": 16,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 188,
                            "endLine": 188,
                            "startColumn": 39,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 191,
                            "endLine": 191,
                            "startColumn": 16,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 191,
                            "endLine": 191,
                            "startColumn": 43,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 198,
                            "endLine": 198,
                            "startColumn": 20,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 201,
                            "endLine": 201,
                            "startColumn": 42,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 206,
                            "endLine": 206,
                            "startColumn": 83,
                            "endColumn": 92
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 206,
                            "endLine": 206,
                            "startColumn": 78,
                            "endColumn": 82
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 31,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 38,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 22,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 9,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 29,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 38,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 9,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 120,
                            "endLine": 120,
                            "startColumn": 31,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 23,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 627,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[open](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/codegen/genapi.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 264,
                  "endLine": 264,
                  "startColumn": 14,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fcf8150e76b57ffd6743e2e65c3d9eb1218da50606e1dd7aa9f30fe855996170",
            "1": "b3765255.e3d9b656.187bf175.378fd781.29e43099.ba14daf2.682a1833.f355b44c.b3765255.856e3039.187bf175.378fd781.29e43099.22d25ab9.fd919213.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 243,
                            "endLine": 243,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 248,
                            "endLine": 248,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 255,
                            "endLine": 255,
                            "startColumn": 27,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 260,
                            "endLine": 260,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 260,
                            "endLine": 260,
                            "startColumn": 8,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 261,
                            "endLine": 261,
                            "startColumn": 31,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 264,
                            "endLine": 264,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 264,
                            "endLine": 264,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 627,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[open](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/ci/scripts/cve/third_party_libraries_cves_scanner.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 195,
                  "endLine": 195,
                  "startColumn": 6,
                  "endColumn": 10
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f5fff79d5699f0caf225b79d65b5d9110414f2803f6f0a800c8d0cfdcc056bb6",
            "1": "129db901.f8bbd65e.187bf175.139c59a8.f3eda546.a5d7f69f.081ac3f4.742d9b21.129db901.be004016.187bf175.9cd2dfe0.f3eda546.05a1d16e.f6dc7859.742d9b21"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/ci/scripts/cve/third_party_libraries_cves_scanner.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 170,
                            "endLine": 170,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/ci/scripts/cve/third_party_libraries_cves_scanner.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 170,
                            "endLine": 170,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/ci/scripts/cve/third_party_libraries_cves_scanner.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 170,
                            "endLine": 170,
                            "startColumn": 1,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/ci/scripts/cve/third_party_libraries_cves_scanner.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 172,
                            "endLine": 172,
                            "startColumn": 4,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/ci/scripts/cve/third_party_libraries_cves_scanner.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 172,
                            "endLine": 172,
                            "startColumn": 4,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/ci/scripts/cve/third_party_libraries_cves_scanner.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 176,
                            "endLine": 176,
                            "startColumn": 23,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/ci/scripts/cve/third_party_libraries_cves_scanner.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 195,
                            "endLine": 195,
                            "startColumn": 11,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/ci/scripts/cve/third_party_libraries_cves_scanner.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 195,
                            "endLine": 195,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 577,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[open](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/deployment/getfiles.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 41,
                  "endLine": 41,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "65730763f0b16c7eeb4ac33b0276c55130e278cd4b20112b1e1b20c93207ced5",
            "1": "5ca9d06b.09b47a5b.187bf175.378fd781.29e43099.ba14daf2.682a1833.f355b44c.5ca9d06b.04ad2656.187bf175.378fd781.29e43099.a5d7f69f.f6dc7859.cadd00d0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/deployment/getfiles.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/deployment/getfiles.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/deployment/getfiles.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/deployment/getfiles.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/deployment/getfiles.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 34,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/deployment/getfiles.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 21,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/deployment/getfiles.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 5,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/deployment/getfiles.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 27,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/deployment/getfiles.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 15,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/deployment/getfiles.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 577,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into os.walk, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[os.walk](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/codegen/amalgamate.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 57,
                  "endLine": 57,
                  "startColumn": 31,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2b5a04fc1fd68541bbefce576ed7107aae1b7955eedd30c2dd35d72c4605c453",
            "1": "f39fd327.e3d9b656.79e62dc9.139c59a8.cc857d4e.ba14daf2.081ac3f4.6aac30d8.2d06e3d6.e3d9b656.e6e72a62.9cd2dfe0.c32c9cfa.a5d7f69f.f6dc7859.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 39,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 39,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 627,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into os.walk, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[os.walk](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/codegen/genapi.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 186,
                  "endLine": 186,
                  "startColumn": 27,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "94e249b39d9fc55c007894e6ab4e008cdf51f9924fe021caafe6a915e586432c",
            "1": "6b769709.6a0e600c.6a9795c6.139c59a8.43a4e8c8.ba14daf2.081ac3f4.6aac30d8.b3765255.e3d9b656.e6e72a62.9cd2dfe0.a5fb405f.22d25ab9.fd919213.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 243,
                            "endLine": 243,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 248,
                            "endLine": 248,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 255,
                            "endLine": 255,
                            "startColumn": 27,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 255,
                            "endLine": 255,
                            "startColumn": 27,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 273,
                            "endLine": 273,
                            "startColumn": 19,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 180,
                            "startColumn": 34,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 35,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 27,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 627,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[open](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/codegen/amalgamate.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 72,
                  "endLine": 72,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "449b9c91dee6ea5bf7a951bdcc269b50c1f679ee00913439af91e2a3c72190f3",
            "1": "7fa89cc7.e3d9b656.187bf175.378fd781.29e43099.ba14daf2.081ac3f4.ebed174f.cd5b7e60.e3d9b656.187bf175.378fd781.29e43099.a5d7f69f.18614a65.b6282655"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 39,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 17,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 37,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 37,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 15,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/amalgamate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 627,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26)",
              "[open](27)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/analysis/profile.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 385,
                  "endLine": 385,
                  "startColumn": 14,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b9a25545458c228c5fda2175b3d1fa5f2670b2eb3e10d5282f4996370e843cad",
            "1": "800eb1b9.e3d9b656.187bf175.378fd781.29e43099.ba14daf2.7e8da20f.f355b44c.101172a8.e59455fc.4b9f938c.378fd781.29e43099.37aaae65.f6dc7859.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "endLine": 314,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "endLine": 314,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "endLine": 314,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 316,
                            "endLine": 316,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 317,
                            "endLine": 317,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 319,
                            "endLine": 319,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 324,
                            "endLine": 324,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 46,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 331,
                            "endLine": 331,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 331,
                            "endLine": 331,
                            "startColumn": 51,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 338,
                            "endLine": 338,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 339,
                            "endLine": 339,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 340,
                            "endLine": 340,
                            "startColumn": 31,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 343,
                            "endLine": 343,
                            "startColumn": 45,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 345,
                            "endLine": 345,
                            "startColumn": 26,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 368,
                            "endLine": 368,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 377,
                            "endLine": 377,
                            "startColumn": 21,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 377,
                            "endLine": 377,
                            "startColumn": 41,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 377,
                            "endLine": 377,
                            "startColumn": 60,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 376,
                            "endLine": 376,
                            "startColumn": 13,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 177,
                            "endLine": 177,
                            "startColumn": 28,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 142,
                            "endLine": 142,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 381,
                            "endLine": 381,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 384,
                            "endLine": 384,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 384,
                            "endLine": 384,
                            "startColumn": 8,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 19,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/analysis/profile.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 627,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[open](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/cmake/downloader.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 20,
                  "endLine": 20,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "937083b524ae6d1bd63f14eb5bf746aaa8378cd4a7725a17656688da4bb7b028",
            "1": "2e8ddaeb.5b46cdac.187bf175.e33bce2c.f3eda546.ba14daf2.cb317a58.f46ed94e.2e8ddaeb.2da3d253.187bf175.139c59a8.4608c58f.73cfdf26.cb317a58.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/cmake/downloader.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 35,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/cmake/downloader.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 35,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/cmake/downloader.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 7,
                            "endLine": 7,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/cmake/downloader.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 9,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/cmake/downloader.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 22,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/cmake/downloader.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 22,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/cmake/downloader.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/cmake/downloader.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 15,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/cmake/downloader.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 627,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[open](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/codegen/gentargets.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 115,
                  "endLine": 115,
                  "startColumn": 14,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "30833af92acc49cb28d7f93602e2b8e094662d1b556486e9b5e7adcc9534d788",
            "1": "7fa89cc7.e3d9b656.187bf175.139c59a8.f3eda546.ba14daf2.081ac3f4.55ba49f2.cd5b7e60.2261e308.187bf175.8f4d610b.4608c58f.a5d7f69f.f6dc7859.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentargets.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentargets.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentargets.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 5,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentargets.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 32,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentargets.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 32,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentargets.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentargets.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 627,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[open](13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/codegen/gentable.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 281,
                  "endLine": 281,
                  "startColumn": 14,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "96365237951fbb388cf368a06e224ed53ab790ca0ea4c7e6ddb39fd6d85f21ff",
            "1": "29d1c8e0.5b46cdac.187bf175.139c59a8.d33b58e8.ba14daf2.cb317a58.f355b44c.cd5b7e60.577bab1d.f3c9f298.223701dd.d33b58e8.c9d6580b.f6dc7859.818732c5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 450,
                            "endLine": 450,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 450,
                            "endLine": 450,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 450,
                            "endLine": 450,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 452,
                            "endLine": 452,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 457,
                            "endLine": 457,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 458,
                            "endLine": 458,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 458,
                            "endLine": 458,
                            "startColumn": 14,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 458,
                            "endLine": 458,
                            "startColumn": 5,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 476,
                            "startColumn": 32,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 207,
                            "endLine": 207,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 250,
                            "endLine": 250,
                            "startColumn": 21,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 261,
                            "endLine": 261,
                            "startColumn": 41,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 281,
                            "endLine": 281,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 281,
                            "endLine": 281,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 627,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into shutil.copyfile, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[shutil.copyfile](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/codegen/gentargets.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 135,
                  "endLine": 135,
                  "startColumn": 25,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "adaca9c9a232aa0b16687f9f61d3ff8c739728a609de787437be20baf6453d73",
            "1": "2d06e3d6.1c6650e9.8ffae1ba.139c59a8.cc857d4e.ba14daf2.081ac3f4.6eb46ac5.cd5b7e60.a028dbef.187bf175.8f4d610b.f3eda546.a5d7f69f.18614a65.6eb46ac5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentargets.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentargets.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentargets.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 5,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentargets.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 32,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentargets.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 32,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentargets.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 129,
                            "endLine": 129,
                            "startColumn": 38,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentargets.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 129,
                            "endLine": 129,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentargets.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 129,
                            "endLine": 129,
                            "startColumn": 21,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentargets.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 130,
                            "endLine": 130,
                            "startColumn": 24,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentargets.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 57,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentargets.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 68,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentargets.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 135,
                            "endLine": 135,
                            "startColumn": 25,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 627,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into os.remove, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3)",
              "[os.remove](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/formatting/git-clang-format.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 436,
                  "endLine": 436,
                  "startColumn": 9,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a6c80cbaefc7df4247f5da6f4d7349f1e1a3fdf92ad4720c6256e58d5316d6a4",
            "1": "16691f08.f58ad35b.79e62dc9.42bc625b.3035231a.96468aa5.554856b5.0990edd8.16691f08.240b267a.79e62dc9.42bc625b.989605ea.96468aa5.554856b5.fdcc1a1a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/formatting/git-clang-format.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 428,
                            "endLine": 428,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/formatting/git-clang-format.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 428,
                            "endLine": 428,
                            "startColumn": 5,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/formatting/git-clang-format.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 428,
                            "endLine": 428,
                            "startColumn": 5,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/formatting/git-clang-format.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 436,
                            "endLine": 436,
                            "startColumn": 19,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/formatting/git-clang-format.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 436,
                            "endLine": 436,
                            "startColumn": 9,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 577,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/UnsupportedLanguage",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "This source file appears to be in Python 2. The Python 2 interpreter has been unsupported without security updates since January 2020. Consider porting this code to Python 3.",
            "markdown": "This source file appears to be in Python 2. The Python 2 interpreter has been unsupported without security updates since January 2020. Consider porting this code to Python 3.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/codegen/gentargets.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 9,
                  "endLine": 103,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e3878725330da9e1dd7956cfb6e1c02ada95de2edc4e9e856f12137683a1c74d",
            "1": "b1a8a79f.2261e308.f0a1d373.08fb6340.828d6b14.b13f1de2.698a3c7f.6eb46ac5.b1a8a79f.2261e308.f0a1d373.08fb6340.828d6b14.b13f1de2.698a3c7f.6eb46ac5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentargets.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 9,
                            "endLine": 103,
                            "startColumn": 1,
                            "endColumn": 2
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 203,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/UseTlsInsteadOfSsl/test",
          "ruleIndex": 2,
          "level": "note",
          "message": {
            "text": "Consider using TLS instead of SSL (ssl.PROTOCOL_SSLv23 used in ssl.wrap_socket).",
            "markdown": "Consider using TLS instead of SSL ({0} used in {1}).",
            "arguments": [
              "[ssl.PROTOCOL_SSLv23](0)",
              "[ssl.wrap_socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/tests/test_http_server.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 388,
                  "endLine": 388,
                  "startColumn": 24,
                  "endColumn": 39
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6e5124a2ec8af019de2a8ed3004bc665c469e9b3adb87f0596200c47e17c0d77",
            "1": "db62abb2.78745002.4932d099.139c59a8.9742cabe.57d888ee.a2237efa.bc1b5845.db62abb2.277c621c.b18df781.139c59a8.9742cabe.ba14daf2.a2237efa.bc1b5845"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/tests/test_http_server.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 391,
                            "endLine": 391,
                            "startColumn": 25,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/tests/test_http_server.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 388,
                            "endLine": 388,
                            "startColumn": 24,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/reDOS",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Unsanitized user input from a command line argument flows into re.compile, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "markdown": "Unsanitized user input from {0} {1} into {2}, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[re.compile](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/codegen/substitute.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 20,
                  "endLine": 20,
                  "startColumn": 9,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2e6d5d811fe1e604fc1bcbb7aa7c320e33670dda4f251895c0a240725f825e15",
            "1": "7b0793b4.e3d9b656.3b7b86da.139c59a8.0be7e9b7.ba14daf2.d436e3c0.b06a849f.f29fdd12.81be1fb6.3b7b86da.9cd2dfe0.0be7e9b7.0ae9797a.f6dc7859.b68ca2bb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/substitute.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/substitute.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/substitute.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 5,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/substitute.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/substitute.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/substitute.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/substitute.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 20,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/substitute.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 9,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 503,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23)",
              "[open](24)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/tests/test_http_server.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 327,
                  "endLine": 327,
                  "startColumn": 13,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c0ad6b522358cb0f40bbad4afe3ab931b3ce8f3aaa023c4b70c85d86f5418b46",
            "1": "6a702f95.d3fa0bdc.0a80a023.b874ed31.f3eda546.f5b7064b.682a1833.a4830b9a.6a702f95.74aba621.0f9c5265.61531bf8.005b9179.f5b7064b.a6d7b7dc.3b62f8f2"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/tests/test_http_server.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 179,
                            "endLine": 179,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/tests/test_http_server.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 179,
                            "endLine": 179,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/tests/test_http_server.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 179,
                            "endLine": 179,
                            "startColumn": 16,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/tests/test_http_server.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 179,
                            "endLine": 179,
                            "startColumn": 9,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/tests/test_http_server.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 180,
                            "startColumn": 30,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/tests/test_http_server.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 180,
                            "startColumn": 19,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/tests/test_http_server.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 180,
                            "startColumn": 9,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/tests/test_http_server.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 202,
                            "endLine": 202,
                            "startColumn": 33,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/tests/test_http_server.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 302,
                            "endLine": 302,
                            "startColumn": 30,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/tests/test_http_server.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 304,
                            "endLine": 304,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/tests/test_http_server.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 304,
                            "endLine": 304,
                            "startColumn": 50,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/tests/test_http_server.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 37,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/tests/test_http_server.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 309,
                            "endLine": 309,
                            "startColumn": 24,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/tests/test_http_server.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 13,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/tests/test_http_server.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 313,
                            "endLine": 313,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/tests/test_http_server.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "endLine": 314,
                            "startColumn": 35,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/tests/test_http_server.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 318,
                            "endLine": 318,
                            "startColumn": 57,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/tests/test_http_server.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 318,
                            "endLine": 318,
                            "startColumn": 57,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/tests/test_http_server.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 318,
                            "endLine": 318,
                            "startColumn": 42,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/tests/test_http_server.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 318,
                            "endLine": 318,
                            "startColumn": 42,
                            "endColumn": 93
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/tests/test_http_server.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 318,
                            "endLine": 318,
                            "startColumn": 25,
                            "endColumn": 93
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/tests/test_http_server.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 318,
                            "endLine": 318,
                            "startColumn": 9,
                            "endColumn": 93
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/tests/test_http_server.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 324,
                            "endLine": 324,
                            "startColumn": 13,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/tests/test_http_server.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 327,
                            "endLine": 327,
                            "startColumn": 18,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/tests/test_http_server.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 327,
                            "endLine": 327,
                            "startColumn": 13,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/UnsupportedLanguage/test",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "This source file appears to be in Python 2. The Python 2 interpreter has been unsupported without security updates since January 2020. Consider porting this code to Python 3.",
            "markdown": "This source file appears to be in Python 2. The Python 2 interpreter has been unsupported without security updates since January 2020. Consider porting this code to Python 3.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/tests/test_windows_service.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 10,
                  "endLine": 372,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d2589e4b178f34e149db9339660f91014113e45ba6dea62db160c111cf2d8838",
            "1": "0934e3ad.1a70a3d8.ee13b20c.08fb6340.828d6b14.35fca153.22a8b49e.aaaeb5e6.0934e3ad.1a70a3d8.ee13b20c.08fb6340.828d6b14.35fca153.22a8b49e.aaaeb5e6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/tests/test_windows_service.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 372,
                            "startColumn": 1,
                            "endColumn": 2
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 153,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CodeInjection",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into exec, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16)",
              "[exec](17)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/codegen/gentable.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 465,
                  "endLine": 465,
                  "startColumn": 13,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7f79291419412f5366c8bd3ae77f1b367b02b51291e35f0c1edf5cb9c0ad263b",
            "1": "499002de.d8435ddf.3a02cae9.4b2742e7.60d223e6.ba14daf2.f8c3f5ac.61547892.499002de.d8435ddf.187bf175.4b2742e7.60d223e6.c9d6580b.2701234b.b0dabc41"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 450,
                            "endLine": 450,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 450,
                            "endLine": 450,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 450,
                            "endLine": 450,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 452,
                            "endLine": 452,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 457,
                            "endLine": 457,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 457,
                            "endLine": 457,
                            "startColumn": 16,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 457,
                            "endLine": 457,
                            "startColumn": 5,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 459,
                            "endLine": 459,
                            "startColumn": 8,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 463,
                            "endLine": 463,
                            "startColumn": 19,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 463,
                            "endLine": 463,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 463,
                            "endLine": 463,
                            "startColumn": 37,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 464,
                            "endLine": 464,
                            "startColumn": 30,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 464,
                            "endLine": 464,
                            "startColumn": 30,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 464,
                            "endLine": 464,
                            "startColumn": 20,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 464,
                            "endLine": 464,
                            "startColumn": 13,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 465,
                            "endLine": 465,
                            "startColumn": 26,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 465,
                            "endLine": 465,
                            "startColumn": 18,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/gentable.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 465,
                            "endLine": 465,
                            "startColumn": 13,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 561,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CodeInjection",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into exec, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46)",
              "[exec](47)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/codegen/templite.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 129,
                  "endLine": 129,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cc500eb1215d1845d893805a6ddfe7f550c6041121c771210b0ec8e280ed0930",
            "1": "b2dd68c0.577bab1d.2683ade8.139c59a8.15ef2c60.ba14daf2.0a9fb5de.ebed174f.746b582b.9d7bdf1b.172defa9.6b73b382.29e43099.fe6eee22.2701234b.1c41c250"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 44,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 44,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 44,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 28,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 21,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 37,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 24,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 17,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 124,
                            "endLine": 124,
                            "startColumn": 32,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 35,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 23,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 36,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 65,
                            "endLine": 65,
                            "startColumn": 24,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 65,
                            "endLine": 65,
                            "startColumn": 24,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 65,
                            "endLine": 65,
                            "startColumn": 17,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 36,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 24,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 46,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 34,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 24,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 20,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 13,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 20,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 13,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 24,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 24,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 17,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 60,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 40,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 24,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 17,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 27,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 13,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 34,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 24,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 16,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 45,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 9,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 46,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 129,
                            "endLine": 129,
                            "startColumn": 14,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 47,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/templite.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 129,
                            "endLine": 129,
                            "startColumn": 9,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 561,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CodeInjection",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into exec, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25)",
              "[exec](26)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/codegen/genapi.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 97,
                  "endLine": 97,
                  "startColumn": 5,
                  "endColumn": 9
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c42fd929bc73a5e719b2d54d4bac01bfc945435f4750d014548f4b041a4beaee",
            "1": "499002de.d8435ddf.3a02cae9.4b2742e7.60d223e6.ba14daf2.081ac3f4.4201a018.499002de.d8435ddf.c71a62ae.4b2742e7.29e43099.22d25ab9.fd919213.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 243,
                            "endLine": 243,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 248,
                            "endLine": 248,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 255,
                            "endLine": 255,
                            "startColumn": 27,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 255,
                            "endLine": 255,
                            "startColumn": 27,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 273,
                            "endLine": 273,
                            "startColumn": 19,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 180,
                            "startColumn": 34,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 35,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 27,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 9,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 193,
                            "endLine": 193,
                            "startColumn": 41,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 201,
                            "endLine": 201,
                            "startColumn": 36,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 201,
                            "endLine": 201,
                            "startColumn": 23,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 201,
                            "endLine": 201,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 201,
                            "endLine": 201,
                            "startColumn": 62,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 202,
                            "endLine": 202,
                            "startColumn": 34,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 202,
                            "endLine": 202,
                            "startColumn": 34,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 202,
                            "endLine": 202,
                            "startColumn": 24,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 202,
                            "endLine": 202,
                            "startColumn": 17,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 203,
                            "endLine": 203,
                            "startColumn": 39,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 5,
                            "endColumn": 9
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 561,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CodeInjection",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into exec, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25)",
              "[exec](26)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/codegen/genapi.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 203,
                  "endLine": 203,
                  "startColumn": 30,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "11f5ced72583c4bd8b2fa8f425ad4cbb623f28eddc4f41b3de5c4a3ee0dc44e3",
            "1": "8a30cfc6.d8435ddf.c71a62ae.84ca3327.f672b25b.ba14daf2.f8c3f5ac.61547892.b3765255.7f2831c9.c71a62ae.84ca3327.29e43099.22d25ab9.fd919213.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 243,
                            "endLine": 243,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 248,
                            "endLine": 248,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 255,
                            "endLine": 255,
                            "startColumn": 27,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 255,
                            "endLine": 255,
                            "startColumn": 27,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 273,
                            "endLine": 273,
                            "startColumn": 19,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 180,
                            "startColumn": 34,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 35,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 27,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 9,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 193,
                            "endLine": 193,
                            "startColumn": 41,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 201,
                            "endLine": 201,
                            "startColumn": 36,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 201,
                            "endLine": 201,
                            "startColumn": 23,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 201,
                            "endLine": 201,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 201,
                            "endLine": 201,
                            "startColumn": 62,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 202,
                            "endLine": 202,
                            "startColumn": 34,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 202,
                            "endLine": 202,
                            "startColumn": 34,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 202,
                            "endLine": 202,
                            "startColumn": 24,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 202,
                            "endLine": 202,
                            "startColumn": 17,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 203,
                            "endLine": 203,
                            "startColumn": 39,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/codegen/genapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 5,
                            "endColumn": 9
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 561,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "isSupported": true,
            "lang": "XML",
            "files": 77,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Python",
            "files": 30,
            "type": "SUPPORTED"
          },
          {
            "isSupported": false,
            "lang": ".config",
            "files": 1,
            "type": "FAILED_PARSING"
          }
        ]
      }
    }
  ]
}
