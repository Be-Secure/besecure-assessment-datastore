{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "go/InsecureHash",
              "name": "InsecureHash",
              "shortDescription": {
                "text": "Use of Password Hash With Insufficient Computational Effort"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n## Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "go",
                  "InsecureHash",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-916"
                ]
              }
            },
            {
              "id": "go/HardcodedPassword",
              "name": "HardcodedPassword",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n## Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "go",
                  "HardcodedPassword",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            },
            {
              "id": "go/InsecureHash/test",
              "name": "InsecureHash/test",
              "shortDescription": {
                "text": "Use of Password Hash With Insufficient Computational Effort"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n## Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "go",
                  "InsecureHash",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-916"
                ]
              }
            },
            {
              "id": "go/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "go",
                  "PT",
                  "Security",
                  "SourceRequestUrl",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/pacolang/paco/commit/d05f41cb0aa3167b86bd3b1063d07d7e64bec86f?diff=split#diff-7ddfb3e035b42cd70649cc33393fe32cR26",
                    "lines": [
                      {
                        "line": "// Commands",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "switch os.Args[1] {",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "case \"build\":",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "  err := buildCommand.Parse(os.Args[2:])",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "// Read the given file",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "bytes, err := ioutil.ReadFile(os.Args[1])",
                        "lineNumber": 17,
                        "lineChange": "removed"
                      },
                      {
                        "line": "bytes, err := ioutil.ReadFile(file)",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "if err != nil {",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "  log.Errorf(err)",
                        "lineNumber": 47,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/trinchan/slackbot/commit/c8350a18049c609ef7b6847666d07e69aca9fb46?diff=split#diff-f2f667c6f0bb538d9d35241bd93421fcL18",
                    "lines": [
                      {
                        "line": "func init() {",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "  flag.Parse()",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var configFile = flag.String(\"c\", \"config.json\", \"Config file (default ./config.json)\")",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "  config, err := ioutil.ReadFile(configFile)",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  config, err := ioutil.ReadFile(*configFile)",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "  if err != nil {",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "    log.Println(\"open config: \", err)",
                        "lineNumber": 20,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/ketchuphq/ketchup/commit/31630fa4703d23c6055439536fd661d3c47da038?diff=split#diff-d72b60c856c1aa9b8e14c2c3c4b221abL59",
                    "lines": [
                      {
                        "line": "Run: func(ctx *service.CommandContext) {",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "  ctx.RequireExactlyNArgs(1)",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "  f, err := os.Open(ctx.Args[0])",
                        "lineNumber": 58,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  if err != nil {",
                        "lineNumber": 59,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    panic(err)",
                        "lineNumber": 60,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  err := m.importFromJSON(ctx.Args[0])",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "if err != nil {",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tpanic(err)",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "func (m *Module) importFromJSON(path string) error {",
                        "lineNumber": 78,
                        "lineChange": "added"
                      },
                      {
                        "line": "  f, err := os.Open(path)",
                        "lineNumber": 79,
                        "lineChange": "added"
                      },
                      {
                        "line": "  if err != nil {",
                        "lineNumber": 80,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return err",
                        "lineNumber": 81,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 527,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "go/ClearTextLogging",
              "name": "ClearTextLogging",
              "shortDescription": {
                "text": "Clear Text Logging"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nThe term cleartext refers to text that can be read without decryption, even if it is encoded in some way, such as base64. When this weakness is present, sensitive information such as login credentials or private information such as employee or customer data is stored in cleartext.\n\nIf a system has been compromised by an attacker, they can then access this cleartext data and exploit it to gain access, modify or crash the application, or hold the information for ransom.\n\n## Best practices for prevention\n* Encrypt data at all times, whether in transit or at rest",
                "text": ""
              },
              "properties": {
                "tags": [
                  "go",
                  "ClearTextLogging",
                  "Security",
                  "SourceSensitiveCredentials",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-200",
                  "CWE-312"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "go/InsecureHash",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in crypto.md5.New) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[crypto.md5.New](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/hashicorp/terraform/config/interpolate_funcs.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1366,
                  "endLine": 1366,
                  "startColumn": 9,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6e3e2d3b86363133e844f858f9ac5b731b5ffa131bb739b4f063ef33b290d2c9",
            "1": "685bf8ba.73eb5804.45df3e14.e22980a8.f1d9f854.67ab4541.860c51ff.1d874c72.685bf8ba.73eb5804.45df3e14.e22980a8.f1d9f854.67ab4541.860c51ff.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/config/interpolate_funcs.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1366,
                            "endLine": 1366,
                            "startColumn": 9,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 260,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/InsecureHash",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in crypto.md5.New) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[crypto.md5.New](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/hashicorp/go-getter/checksum.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 145,
                  "endLine": 145,
                  "startColumn": 12,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7d41516cdf1658358d61b6944dca4e24463a8c09bc83747d746db83085974525",
            "1": "d954b53f.73eb5804.734a90e3.772d51ed.db2bb079.67ab4541.860c51ff.ebbb87d0.d954b53f.73eb5804.734a90e3.772d51ed.db2bb079.67ab4541.860c51ff.ebbb87d0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/checksum.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 145,
                            "endLine": 145,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 260,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/InsecureHash",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in crypto.md5.New) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[crypto.md5.New](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/hashicorp/go-getter/checksum.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 168,
                  "endLine": 168,
                  "startColumn": 12,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1750ae17d5bb95a53721ac3f3d38d85ba07f4c7749da85758c466b664e8ae29b",
            "1": "d954b53f.73eb5804.734a90e3.772d51ed.db2bb079.67ab4541.860c51ff.ebbb87d0.d954b53f.73eb5804.734a90e3.772d51ed.db2bb079.67ab4541.860c51ff.ebbb87d0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/checksum.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 168,
                            "endLine": 168,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 260,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/InsecureHash",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in crypto.md5.New) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[crypto.md5.New](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/aws/aws-sdk-go/service/s3/body_hash.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 31,
                  "endLine": 31,
                  "startColumn": 7,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9ee03b1b605cfef5180d996eb4f8a1f1c57d1474fbaa6addd9e4b91243622af3",
            "1": "c608c6ff.73eb5804.45df3e14.e22980a8.f1d9f854.67ab4541.b223b8b2.1d874c72.c608c6ff.73eb5804.45df3e14.e22980a8.f1d9f854.67ab4541.b223b8b2.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/aws/aws-sdk-go/service/s3/body_hash.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 7,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 260,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/InsecureHash",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in crypto.md5.New) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[crypto.md5.New](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/aws/aws-sdk-go/service/s3/body_hash.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 72,
                  "endLine": 72,
                  "startColumn": 13,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f1b95848075d21fa1ec1c2f9b2045e32c131eaa5fabd345779dba610e6bdff86",
            "1": "acb20ff5.73eb5804.45df3e14.e22980a8.f1d9f854.67ab4541.860c51ff.37d4bff0.acb20ff5.73eb5804.45df3e14.e22980a8.f1d9f854.67ab4541.860c51ff.37d4bff0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/aws/aws-sdk-go/service/s3/body_hash.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 13,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 260,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/InsecureHash",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in crypto.md5.New) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[crypto.md5.New](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/aws/aws-sdk-go/service/s3/body_hash.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 207,
                  "endLine": 207,
                  "startColumn": 7,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1d4f80b496421a69d5a964548a9608cc7fe91545cb2858376342eb71b019d193",
            "1": "685bf8ba.73eb5804.45df3e14.e22980a8.f1d9f854.67ab4541.860c51ff.1d874c72.685bf8ba.73eb5804.45df3e14.e22980a8.f1d9f854.67ab4541.860c51ff.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/aws/aws-sdk-go/service/s3/body_hash.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 207,
                            "endLine": 207,
                            "startColumn": 7,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 260,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/InsecureHash",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in crypto.md5.New) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[crypto.md5.New](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/golang.org/x/crypto/openpgp/packet/public_key_v3.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 81,
                  "endLine": 81,
                  "startColumn": 17,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dc2b34ef5e482a55484d9b53c6af1e7717f4e610cf9a9611c53515519ce862fd",
            "1": "ba4e4356.73eb5804.45df3e14.e22980a8.f1d9f854.67ab4541.860c51ff.c1f7986b.ba4e4356.73eb5804.45df3e14.e22980a8.f1d9f854.67ab4541.860c51ff.c1f7986b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/golang.org/x/crypto/openpgp/packet/public_key_v3.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 17,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 210,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/InsecureHash",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in crypto.md5.New) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[crypto.md5.New](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "utils/utils.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 21,
                  "endLine": 21,
                  "startColumn": 7,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4e9cd29684741939a7bbb053bdf8fece65788b9b3438aeffd82e6dc858715e98",
            "1": "685bf8ba.73eb5804.45df3e14.e22980a8.f1d9f854.67ab4541.860c51ff.1d874c72.685bf8ba.73eb5804.45df3e14.e22980a8.f1d9f854.67ab4541.860c51ff.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "utils/utils.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 7,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 210,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/InsecureHash",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in crypto.md5.New) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[crypto.md5.New](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/satori/go.uuid/generator.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 143,
                  "endLine": 143,
                  "startColumn": 19,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0a898c7ada8033a06c45d44b5907eae81e4ca8ac6228a1973ca2f4f2761e37cc",
            "1": "8379f5e8.32e1fb1f.45df3e14.b7c77b99.556f02b4.67ab4541.c2e93e04.678b0e20.8379f5e8.32e1fb1f.45df3e14.b7c77b99.556f02b4.67ab4541.c2e93e04.678b0e20"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/satori/go.uuid/generator.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 19,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 260,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/InsecureHash",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in crypto.md5.New) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[crypto.md5.New](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/google/uuid/hash.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 44,
                  "endLine": 44,
                  "startColumn": 17,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "20e2577c8c8fda32e29a3cc142608ed1ad6a82c4b9ba473a28584912ecc6ea89",
            "1": "20d5557e.48506fc8.45df3e14.772d51ed.556f02b4.67ab4541.860c51ff.678b0e20.20d5557e.48506fc8.45df3e14.772d51ed.556f02b4.67ab4541.860c51ff.678b0e20"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/google/uuid/hash.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 17,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 260,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/InsecureHash",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "The SHA1 hash (used in crypto.sha1.New) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The SHA1 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[crypto.sha1.New](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/hashicorp/terraform/config/interpolate_funcs.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1413,
                  "endLine": 1413,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "17869629b874e00e610d7ee815bb6cc56cbea830c4b37201564d178c0f5464d7",
            "1": "d1695a15.73eb5804.45df3e14.e22980a8.bcaf552e.67ab4541.860c51ff.1d874c72.d1695a15.73eb5804.45df3e14.e22980a8.bcaf552e.67ab4541.860c51ff.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/config/interpolate_funcs.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1413,
                            "endLine": 1413,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 260,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/InsecureHash",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "The SHA1 hash (used in crypto.sha1.New) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The SHA1 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[crypto.sha1.New](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/hashicorp/go-getter/checksum.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 147,
                  "endLine": 147,
                  "startColumn": 12,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "06085cc193e0ad78d68b0df9d0e11ddbee01f773be089f9d42efa9091e8aa7e8",
            "1": "d1695a15.73eb5804.734a90e3.6f6e1432.bcaf552e.67ab4541.860c51ff.ebbb87d0.d1695a15.73eb5804.734a90e3.6f6e1432.bcaf552e.67ab4541.860c51ff.ebbb87d0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/checksum.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 147,
                            "endLine": 147,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 260,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/InsecureHash",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "The SHA1 hash (used in crypto.sha1.New) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The SHA1 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[crypto.sha1.New](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/hashicorp/go-getter/checksum.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 171,
                  "endLine": 171,
                  "startColumn": 12,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4a4be80dbd0b67d357367f040db2ef67a8a3ff630121b98baaf3e0fdee0576f2",
            "1": "d1695a15.73eb5804.734a90e3.6f6e1432.bcaf552e.67ab4541.860c51ff.ebbb87d0.d1695a15.73eb5804.734a90e3.6f6e1432.bcaf552e.67ab4541.860c51ff.ebbb87d0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/checksum.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 171,
                            "endLine": 171,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 260,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/InsecureHash",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "The SHA1 hash (used in crypto.sha1.New) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The SHA1 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[crypto.sha1.New](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/golang.org/x/crypto/openpgp/packet/symmetrically_encrypted.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 81,
                  "endLine": 81,
                  "startColumn": 8,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0c1b22748e7bf2912afb47ca03fbcadd106ebb3fc9749dfa4093a9bb81618bc3",
            "1": "d1695a15.73eb5804.45df3e14.e22980a8.bcaf552e.67ab4541.860c51ff.1d874c72.d1695a15.73eb5804.45df3e14.e22980a8.bcaf552e.67ab4541.860c51ff.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/golang.org/x/crypto/openpgp/packet/symmetrically_encrypted.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 8,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 260,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/InsecureHash",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "The SHA1 hash (used in crypto.sha1.New) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The SHA1 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[crypto.sha1.New](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/golang.org/x/crypto/openpgp/packet/symmetrically_encrypted.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 285,
                  "endLine": 285,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f998b4e14e655ecbdeaa072b52be398b9565f6eb8455c72d7a3fad29a9d952c8",
            "1": "d1695a15.73eb5804.45df3e14.e22980a8.bcaf552e.67ab4541.860c51ff.1d874c72.d1695a15.73eb5804.45df3e14.e22980a8.bcaf552e.67ab4541.860c51ff.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/golang.org/x/crypto/openpgp/packet/symmetrically_encrypted.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 285,
                            "endLine": 285,
                            "startColumn": 7,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 260,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/InsecureHash",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "The SHA1 hash (used in crypto.sha1.New) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The SHA1 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[crypto.sha1.New](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/golang.org/x/crypto/openpgp/packet/public_key.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 307,
                  "endLine": 307,
                  "startColumn": 17,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5e16bc913311506722f46f3b139796b9b6d614b7084832aa6bf72c789770498b",
            "1": "d1695a15.73eb5804.45df3e14.e22980a8.bcaf552e.67ab4541.860c51ff.c1f7986b.d1695a15.73eb5804.45df3e14.e22980a8.bcaf552e.67ab4541.860c51ff.c1f7986b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/golang.org/x/crypto/openpgp/packet/public_key.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 307,
                            "endLine": 307,
                            "startColumn": 17,
                            "endColumn": 25
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 210,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/InsecureHash",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "The SHA1 hash (used in crypto.sha1.New) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The SHA1 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[crypto.sha1.New](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/golang.org/x/crypto/openpgp/packet/private_key.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 257,
                  "endLine": 257,
                  "startColumn": 8,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1378b2f5e8383746b70c9aea01c78cbc802c8cd6983eb130aa19af3097a7ca57",
            "1": "d1695a15.73eb5804.45df3e14.e22980a8.bcaf552e.67ab4541.860c51ff.1d874c72.d1695a15.73eb5804.45df3e14.e22980a8.bcaf552e.67ab4541.860c51ff.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/golang.org/x/crypto/openpgp/packet/private_key.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 257,
                            "endLine": 257,
                            "startColumn": 8,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 210,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/InsecureHash",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "The SHA1 hash (used in crypto.sha1.New) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The SHA1 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[crypto.sha1.New](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/satori/go.uuid/generator.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 162,
                  "endLine": 162,
                  "startColumn": 19,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b6bae1dccf45d48be300d15ff33b22f4688dcfa9930b2045ec6e5bf139c61ebd",
            "1": "d1695a15.32e1fb1f.45df3e14.b7c77b99.556f02b4.67ab4541.c2e93e04.678b0e20.d1695a15.32e1fb1f.45df3e14.b7c77b99.556f02b4.67ab4541.c2e93e04.678b0e20"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/satori/go.uuid/generator.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 162,
                            "endLine": 162,
                            "startColumn": 19,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 260,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/InsecureHash",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "The SHA1 hash (used in crypto.sha1.New) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The SHA1 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[crypto.sha1.New](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/google/uuid/hash.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 52,
                  "endLine": 52,
                  "startColumn": 17,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5b485f1581b9dd60cda3a117d78ab34bccbb4c62047eb40c12c219817b4e3310",
            "1": "20d5557e.48506fc8.45df3e14.89f13fa7.556f02b4.67ab4541.860c51ff.678b0e20.20d5557e.48506fc8.45df3e14.89f13fa7.556f02b4.67ab4541.860c51ff.678b0e20"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/google/uuid/hash.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 17,
                            "endColumn": 25
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 260,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/InsecureHash",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in crypto.md5.Sum) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[crypto.md5.Sum](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/aws/aws-sdk-go/service/s3/sse.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 48,
                  "endLine": 48,
                  "startColumn": 12,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9bd7bb99732b348cdc82f5e35bcbb5e87a49d1aa23580e3322e420814af5ed1b",
            "1": "339a08ba.73eb5804.45df3e14.76b707f0.f1d9f854.67ab4541.0c728423.1d874c72.339a08ba.73eb5804.45df3e14.76b707f0.f1d9f854.67ab4541.0c728423.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/aws/aws-sdk-go/service/s3/sse.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 210,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/InsecureHash",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in crypto.md5.Sum) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[crypto.md5.Sum](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/hashicorp/go-getter/folder_storage.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 63,
                  "endLine": 63,
                  "startColumn": 9,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4497fb393f51e224f7fa05d1f4f69252d149b155689538c84095b125eebd4582",
            "1": "339a08ba.73eb5804.45df3e14.76b707f0.f1d9f854.67ab4541.0c728423.1d874c72.339a08ba.73eb5804.45df3e14.76b707f0.f1d9f854.67ab4541.0c728423.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/folder_storage.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 9,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 210,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/HardcodedPassword",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded saved in opAssumeRole.",
            "markdown": "Do not hardcode passwords in code. Found {0} saved in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[opAssumeRole](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/aws/aws-sdk-go/service/sts/api.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 14,
                  "endLine": 14,
                  "startColumn": 7,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6dae0b0345a84f7eed1de7e017599f7a2225e232455e07d1f8743173764327ee",
            "1": "424eddda.98f0ff0f.953e17ba.79502f34.6ee851a6.648284f7.8ee950b3.1bff12d3.c821cdf9.d0ae1621.953e17ba.79502f34.6ee851a6.648284f7.8ee950b3.1bff12d3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/aws/aws-sdk-go/service/sts/api.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 22,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/aws/aws-sdk-go/service/sts/api.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 7,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 368,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/HardcodedPassword",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded saved in opAssumeRole.",
            "markdown": "Do not hardcode passwords in code. Found {0} saved in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[opAssumeRole](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/aws/aws-sdk-go/service/sts/api.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 42,
                  "startColumn": 15,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fa7f45cfbb786d0dfc53b56d8a086c3b4fca6191ae99100b085e151da61fc7f8",
            "1": "424eddda.98f0ff0f.953e17ba.79502f34.6ee851a6.648284f7.8ee950b3.1bff12d3.424eddda.d0ae1621.953e17ba.79502f34.6ee851a6.648284f7.8ee950b3.1bff12d3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/aws/aws-sdk-go/service/sts/api.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 22,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/aws/aws-sdk-go/service/sts/api.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 15,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 368,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/HardcodedPassword",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded saved in opAssumeRoleWithSAML.",
            "markdown": "Do not hardcode passwords in code. Found {0} saved in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[opAssumeRoleWithSAML](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/aws/aws-sdk-go/service/sts/api.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 208,
                  "endLine": 208,
                  "startColumn": 7,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a636aa28d5e659e5d4705017546054fff29eebd63e1d2c2e39990fbfbdc9bea7",
            "1": "424eddda.98f0ff0f.3d13e656.79502f34.6ee851a6.63a86890.8ee950b3.1bff12d3.424eddda.98f0ff0f.3d13e656.79502f34.6ee851a6.63a86890.8ee950b3.1bff12d3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/aws/aws-sdk-go/service/sts/api.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 208,
                            "endLine": 208,
                            "startColumn": 30,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/aws/aws-sdk-go/service/sts/api.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 208,
                            "endLine": 208,
                            "startColumn": 7,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 368,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/HardcodedPassword",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded saved in opAssumeRoleWithSAML.",
            "markdown": "Do not hardcode passwords in code. Found {0} saved in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[opAssumeRoleWithSAML](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/aws/aws-sdk-go/service/sts/api.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 236,
                  "endLine": 236,
                  "startColumn": 15,
                  "endColumn": 35
                }
              }
            }
          ],
          "fingerprints": {
            "0": "af1aae2055d1362fe8cc0210276b759536dcf4d7ee9b54c22b8e56f456de7e4b",
            "1": "424eddda.98f0ff0f.3d13e656.79502f34.6ee851a6.63a86890.8ee950b3.1bff12d3.424eddda.98f0ff0f.3d13e656.79502f34.6ee851a6.63a86890.8ee950b3.1bff12d3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/aws/aws-sdk-go/service/sts/api.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 208,
                            "endLine": 208,
                            "startColumn": 30,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/aws/aws-sdk-go/service/sts/api.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 236,
                            "endLine": 236,
                            "startColumn": 15,
                            "endColumn": 35
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 368,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/HardcodedPassword",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded saved in opAssumeRoleWithWebIdentity.",
            "markdown": "Do not hardcode passwords in code. Found {0} saved in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[opAssumeRoleWithWebIdentity](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/aws/aws-sdk-go/service/sts/api.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 391,
                  "endLine": 391,
                  "startColumn": 7,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4afa709213040567c16f63a074a974fe459f976ada4fe14232faf1b7fce3d921",
            "1": "424eddda.98f0ff0f.3d13e656.046f622e.6ee851a6.63a86890.8ee950b3.1bff12d3.424eddda.cc707d2f.3d13e656.046f622e.6ee851a6.63a86890.8ee950b3.1bff12d3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/aws/aws-sdk-go/service/sts/api.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 391,
                            "endLine": 391,
                            "startColumn": 37,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/aws/aws-sdk-go/service/sts/api.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 391,
                            "endLine": 391,
                            "startColumn": 7,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 368,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/HardcodedPassword",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded saved in opAssumeRoleWithWebIdentity.",
            "markdown": "Do not hardcode passwords in code. Found {0} saved in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[opAssumeRoleWithWebIdentity](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/aws/aws-sdk-go/service/sts/api.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 419,
                  "endLine": 419,
                  "startColumn": 15,
                  "endColumn": 42
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7117046478b7d8898a769feedd78165b26ca6131fbdba46febfa3e8a7e246a69",
            "1": "424eddda.98f0ff0f.3d13e656.046f622e.6ee851a6.63a86890.8ee950b3.1bff12d3.424eddda.98f0ff0f.3d13e656.046f622e.6ee851a6.63a86890.8ee950b3.1bff12d3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/aws/aws-sdk-go/service/sts/api.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 391,
                            "endLine": 391,
                            "startColumn": 37,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/aws/aws-sdk-go/service/sts/api.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 419,
                            "endLine": 419,
                            "startColumn": 15,
                            "endColumn": 42
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 368,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/InsecureHash/test",
          "ruleIndex": 2,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in crypto.md5.New) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[crypto.md5.New](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/hashicorp/go-getter/decompress_testing.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 163,
                  "endLine": 163,
                  "startColumn": 7,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "21bd1b9a07bea0b6f4a7ef47b61ff2bc22b65de57839528bbe910e33094c1361",
            "1": "685bf8ba.73eb5804.45df3e14.e22980a8.f1d9f854.67ab4541.860c51ff.1d874c72.685bf8ba.73eb5804.45df3e14.e22980a8.f1d9f854.67ab4541.860c51ff.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/decompress_testing.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 163,
                            "endLine": 163,
                            "startColumn": 7,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 153,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/PT",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the request URL flows into os.Symlink, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to create arbitrary symlinks.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to create arbitrary symlinks.",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2),(3),(4)",
              "[os.Symlink](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/hashicorp/go-getter/get_file_windows.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 97,
                  "endLine": 97,
                  "startColumn": 12,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7b22e06678678cdd5798a79563f840fe8d0f202b228fdd86dc164f083c9703a5",
            "1": "3e0ea818.73eb5804.45df3e14.e22980a8.84c49f13.995dab92.b223b8b2.0b3d1648.1f0bd5c5.940077cb.45df3e14.e22980a8.a921efd1.67ab4541.b223b8b2.678b0e20"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_windows.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 10,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_windows.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 10,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_windows.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 3,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_windows.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_windows.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_windows.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 815,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/PT",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the request URL flows into os.Symlink, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to create arbitrary symlinks.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to create arbitrary symlinks.",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2),(3),(4)",
              "[os.Symlink](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/hashicorp/go-getter/get_file_unix.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 48,
                  "endLine": 48,
                  "startColumn": 9,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8d3d36e81caaf4ca8509a2f2d640ead6987c96f25285b8b5e2bd42377cab6d70",
            "1": "3e0ea818.73eb5804.45df3e14.e22980a8.f1d9f854.995dab92.b223b8b2.0b3d1648.1f0bd5c5.940077cb.45df3e14.e22980a8.a921efd1.67ab4541.b223b8b2.678b0e20"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_unix.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 10,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_unix.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 10,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_unix.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 3,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_unix.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_unix.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_unix.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 9,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 815,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/PT",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the request URL flows into os.Symlink, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to create arbitrary symlinks.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to create arbitrary symlinks.",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2),(3),(4)",
              "[os.Symlink](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/hashicorp/go-getter/get_file_unix.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 85,
                  "endLine": 85,
                  "startColumn": 10,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "aa263dea7fbe0aa83c710c9eb3fe137bbb9a66c3cab8140a9236fbe33b9bd050",
            "1": "3e0ea818.73eb5804.45df3e14.e22980a8.f1d9f854.995dab92.b223b8b2.0b3d1648.1f0bd5c5.940077cb.45df3e14.e22980a8.a921efd1.67ab4541.b223b8b2.678b0e20"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_unix.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 10,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_unix.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 10,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_unix.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 3,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_unix.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_unix.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 21,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_unix.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 10,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 815,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/PT",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the request URL flows into os.Open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to open arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to open arbitrary files.",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2),(3),(4)",
              "[os.Open](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/hashicorp/go-getter/get_file_windows.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 115,
                  "endLine": 115,
                  "startColumn": 15,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "079237d36a95f8903f7c7c5fe61c80847571907533995e2eae4deba6de77f598",
            "1": "3e0ea818.73eb5804.45df3e14.e22980a8.f1d9f854.995dab92.b223b8b2.0b3d1648.1f0bd5c5.940077cb.45df3e14.e22980a8.a921efd1.67ab4541.b223b8b2.678b0e20"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_windows.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 10,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_windows.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 10,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_windows.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 3,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_windows.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_windows.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_windows.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 15,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 815,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/PT",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the request URL flows into os.Open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to open arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to open arbitrary files.",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2),(3),(4)",
              "[os.Open](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/hashicorp/go-getter/get_file_unix.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 89,
                  "startColumn": 15,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a3b1b8d4ad5ccf7009eb1eb615a925cab5053dfeac80a4c5d7c2cff96ccc20d3",
            "1": "3e0ea818.73eb5804.45df3e14.e22980a8.f1d9f854.995dab92.df7e59ba.0b3d1648.1f0bd5c5.940077cb.45df3e14.e22980a8.a921efd1.67ab4541.b223b8b2.678b0e20"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_unix.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 10,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_unix.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 10,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_unix.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 3,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_unix.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_unix.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/go-getter/get_file_unix.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 15,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 815,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/ClearTextLogging",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from sensitive credentials flows into log.Printf, where it is logged. This may result in a clear-text logging of sensitive information.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is logged. This may result in a clear-text logging of sensitive information.",
            "arguments": [
              "[sensitive credentials](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[log.Printf](13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/hashicorp/terraform/configs/configload/getter.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 139,
                  "endLine": 139,
                  "startColumn": 3,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a27a7a482c290add3c0ae8d1d6088c2f0e59fc3a081b00f48919fb46c91a1f4e",
            "1": "a08fe063.fdb0e2a6.45df3e14.e22980a8.90b6ceda.57f89f2f.860c51ff.1bff12d3.a08fe063.277c621c.215cfa48.9692a5c1.3320ffdf.57f89f2f.8ee950b3.1bff12d3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/configs/configload/getter.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 122,
                            "startColumn": 13,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/configs/configload/getter.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 122,
                            "startColumn": 13,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/configs/configload/getter.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/configs/configload/getter.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 114,
                            "endLine": 114,
                            "startColumn": 4,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/configs/configload/getter.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/configs/configload/getter.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 4,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/configs/configload/getter.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 129,
                            "endLine": 129,
                            "startColumn": 17,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/configs/configload/getter.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 129,
                            "endLine": 129,
                            "startColumn": 3,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/configs/configload/getter.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 138,
                            "endLine": 138,
                            "startColumn": 37,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/configs/configload/getter.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 138,
                            "endLine": 138,
                            "startColumn": 19,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/configs/configload/getter.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 138,
                            "endLine": 138,
                            "startColumn": 3,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/configs/configload/getter.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 139,
                            "endLine": 139,
                            "startColumn": 51,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/configs/configload/getter.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 139,
                            "endLine": 139,
                            "startColumn": 3,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/configs/configload/getter.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 139,
                            "endLine": 139,
                            "startColumn": 3,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 306,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/ClearTextLogging",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from sensitive credentials flows into log.Printf, where it is logged. This may result in a clear-text logging of sensitive information.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is logged. This may result in a clear-text logging of sensitive information.",
            "arguments": [
              "[sensitive credentials](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[log.Printf](13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vendor/github.com/hashicorp/terraform/internal/initwd/getter.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 145,
                  "endLine": 145,
                  "startColumn": 3,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "67d63330b43b9f4d01d1f3c68eb62571a76c8ee11ce868c27cea9904e8d27f3c",
            "1": "a08fe063.fdb0e2a6.45df3e14.e22980a8.90b6ceda.57f89f2f.860c51ff.1bff12d3.a08fe063.277c621c.215cfa48.9692a5c1.3320ffdf.57f89f2f.8ee950b3.1bff12d3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/internal/initwd/getter.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 128,
                            "startColumn": 13,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/internal/initwd/getter.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 128,
                            "startColumn": 13,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/internal/initwd/getter.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 118,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/internal/initwd/getter.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 120,
                            "endLine": 120,
                            "startColumn": 4,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/internal/initwd/getter.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/internal/initwd/getter.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 4,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/internal/initwd/getter.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 135,
                            "endLine": 135,
                            "startColumn": 17,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/internal/initwd/getter.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 135,
                            "endLine": 135,
                            "startColumn": 3,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/internal/initwd/getter.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 37,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/internal/initwd/getter.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 19,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/internal/initwd/getter.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 3,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/internal/initwd/getter.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 145,
                            "endLine": 145,
                            "startColumn": 51,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/internal/initwd/getter.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 145,
                            "endLine": 145,
                            "startColumn": 3,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "vendor/github.com/hashicorp/terraform/internal/initwd/getter.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 145,
                            "endLine": 145,
                            "startColumn": 3,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 306,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "isSupported": true,
            "lang": "Ruby",
            "files": 2,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Go",
            "files": 2139,
            "type": "SUPPORTED"
          }
        ]
      }
    }
  ]
}
