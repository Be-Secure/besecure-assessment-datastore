{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "python/NoHardcodedPasswords",
              "name": "NoHardcodedPasswords",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n## Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "NoHardcodedPasswords",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/mspreitz/MobileSandbox/commit/da3b1805cb2e01c82d4b378aec004bfced7b1d55?diff=split#diff-09b135b0d5f0b0ad094858769db9b537a805fe47de372187ae2fc4b96f05d30dL-1",
                    "lines": [
                      {
                        "line": "conn = psycopg2.connect(dbname='ms_db', user='ms_user', password=\"2HmUKLvf\")\n",
                        "lineNumber": 50,
                        "lineChange": "removed"
                      },
                      {
                        "line": "conn = psycopg2.connect(dbname=misc_config.SQL_DB, user=misc_config.SQL_USER, password=misc_config.SQL_PASSWORD)\n",
                        "lineNumber": 50,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Mirantis/kqueen/commit/8d3fb4d8130b5abff6212f20b0034e03c4438d69?diff=split#diff-6a14ec1b3250d541ae942ee17c1a7d14dd843407c914649113212972c0a95c07L-1",
                    "lines": [
                      {
                        "line": "\n",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    # DEMO LOGIN\n",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    app.config.update(dict(\n",
                        "lineNumber": 21,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        USERNAME='admin',\n",
                        "lineNumber": 22,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        PASSWORD='default',\n",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        SECRET_KEY='secret'\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    ))\n",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    loaded = app.config.from_pyfile('config.py', silent=True)\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if not loaded:\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "        logging.warning('Config file kqueen.cfg could not be loaded.')\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/video-annotation-project/video-annotation-tool/commit/7e5a129f1c0d09024c218bf22108e2f2c09871a8?diff=split#diff-4ad690c280f2ca6c899cbbf7dd0cb9f619287ebb25fdd2ff5ccfdaa456b819deL-1",
                    "lines": [
                      {
                        "line": "\n",
                        "lineNumber": 21,
                        "lineChange": "removed"
                      },
                      {
                        "line": "# DO NOT PUSH PASSWORD \n",
                        "lineNumber": 22,
                        "lineChange": "removed"
                      },
                      {
                        "line": "#DB_PASSWORD = os.getenv(\"DB_PASSWORD\")\n",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "DB_PASSWORD = '2yG5$A#LkJkvnWh*'\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "DB_PASSWORD = os.getenv(\"DB_PASSWORD\")\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 50,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            },
            {
              "id": "python/NoHardcodedPasswords/test",
              "name": "NoHardcodedPasswords/test",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n## Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "NoHardcodedPasswords",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/mspreitz/MobileSandbox/commit/da3b1805cb2e01c82d4b378aec004bfced7b1d55?diff=split#diff-09b135b0d5f0b0ad094858769db9b537a805fe47de372187ae2fc4b96f05d30dL-1",
                    "lines": [
                      {
                        "line": "conn = psycopg2.connect(dbname='ms_db', user='ms_user', password=\"2HmUKLvf\")\n",
                        "lineNumber": 50,
                        "lineChange": "removed"
                      },
                      {
                        "line": "conn = psycopg2.connect(dbname=misc_config.SQL_DB, user=misc_config.SQL_USER, password=misc_config.SQL_PASSWORD)\n",
                        "lineNumber": 50,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Mirantis/kqueen/commit/8d3fb4d8130b5abff6212f20b0034e03c4438d69?diff=split#diff-6a14ec1b3250d541ae942ee17c1a7d14dd843407c914649113212972c0a95c07L-1",
                    "lines": [
                      {
                        "line": "\n",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    # DEMO LOGIN\n",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    app.config.update(dict(\n",
                        "lineNumber": 21,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        USERNAME='admin',\n",
                        "lineNumber": 22,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        PASSWORD='default',\n",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        SECRET_KEY='secret'\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    ))\n",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    loaded = app.config.from_pyfile('config.py', silent=True)\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if not loaded:\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "        logging.warning('Config file kqueen.cfg could not be loaded.')\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/video-annotation-project/video-annotation-tool/commit/7e5a129f1c0d09024c218bf22108e2f2c09871a8?diff=split#diff-4ad690c280f2ca6c899cbbf7dd0cb9f619287ebb25fdd2ff5ccfdaa456b819deL-1",
                    "lines": [
                      {
                        "line": "\n",
                        "lineNumber": 21,
                        "lineChange": "removed"
                      },
                      {
                        "line": "# DO NOT PUSH PASSWORD \n",
                        "lineNumber": 22,
                        "lineChange": "removed"
                      },
                      {
                        "line": "#DB_PASSWORD = os.getenv(\"DB_PASSWORD\")\n",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "DB_PASSWORD = '2yG5$A#LkJkvnWh*'\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "DB_PASSWORD = os.getenv(\"DB_PASSWORD\")\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 50,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            },
            {
              "id": "python/SSLVerificationBypass",
              "name": "SSLVerificationBypass",
              "shortDescription": {
                "text": "Improper Certificate Validation"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "\n## Details\n\nCommunication through encrypted TLS/SSL protocols can only take place when the server bears a valid certificate associating that server with a valid public-key identity issued by a third-party authority. If certificate validation is cursory or incomplete, this creates a weakness whereby an attacker can spoof one or more certificate details (e.g., expiration date), gaining unauthorized access to confidential data and privileged actions.\n\n## Best practices for prevention\n* Verify all aspects of any certificate provided, particularly chain of trust (issuing authority), host identity, and expiration.\n* Limit the validity period for certificates.\n* Avoid using self-signed certificates, certificate pinning, and wildcard certificates, as these all add levels of convenience but can also lead to loss of control over site/app security.\n* Disable older and insecure protocols (for example, SSL 2.0/3.0, MD5, and 3DES).\n* Ensure that all team members are familiar with current best practices and approaches, such as current TLS protocols.\n* Implement automated and manual testing using current tools and techniques designed to reveal this and related SSL weaknesses (for example, web application scanners).",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "SSLVerificationBypass",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/saltstack/salt/commit/a43daeebd2010e0ea2285b764f688e06983cb30a?diff=split#diff-e33953a605fc0f20737a2e8afa89e062fc39a87e7b5de43d6ba51744ba6592ebL-1",
                    "lines": [
                      {
                        "line": "requests.post(_req_url, auth=auth, verify=False, data=data)\n",
                        "lineNumber": 162,
                        "lineChange": "removed"
                      },
                      {
                        "line": "requests.post(_req_url, auth=auth, verify=True, data=data)\n",
                        "lineNumber": 162,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/NCI-GDC/gdc-client/commit/e032eab7a4be2fe7389b910b34ed0582e996135f?diff=split#diff-98965be157c846c44bd23d5de704f8d7a2b54884f480418b9f8a48e455c85f48L-1",
                    "lines": [
                      {
                        "line": "r_active = requests.post(active_meta_url, json=metadata_query, verify=False)\n",
                        "lineNumber": 75,
                        "lineChange": "removed"
                      },
                      {
                        "line": "r_legacy = requests.post(legacy_meta_url, json=metadata_query, verify=False)\n",
                        "lineNumber": 76,
                        "lineChange": "removed"
                      },
                      {
                        "line": "r_active = requests.post(active_meta_url, json=metadata_query, verify=True)\n",
                        "lineNumber": 75,
                        "lineChange": "added"
                      },
                      {
                        "line": "r_legacy = requests.post(legacy_meta_url, json=metadata_query, verify=True)\n",
                        "lineNumber": 76,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/dannyvai/reddit_crawlers/commit/83db219d1c107e22c2cecb9cf836e94b71430500?diff=split#diff-fd9fb75d9f2b2eb8e0e1d23554f907bd76215571d34021767216a0b10b1df96eL-1",
                    "lines": [
                      {
                        "line": "r = requests.get(url,verify=False,stream=True)\n",
                        "lineNumber": 77,
                        "lineChange": "removed"
                      },
                      {
                        "line": "r = requests.get(url,verify=True,stream=True)\n",
                        "lineNumber": 77,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 40,
                "cwe": [
                  "CWE-295"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "python/NoHardcodedPasswords",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in a dictionary key.",
            "markdown": "Do not hardcode passwords in code. Found {0} password used in a dictionary key.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/user.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "startColumn": 5,
                  "endColumn": 29
                }
              }
            }
          ],
          "fingerprints": {
            "0": "62e8ad302b022dd0048d71174b8b3bf6e10f43c0b10c4e02fe4d0ab3a0f761e1",
            "1": "1c286257.0d6036ce.c91adbf6.1f6c67d0.2f3a77ef.66ffb861.63309ab0.742d9b21.e06468b8.caa3acc1.ff785dea.1c31c891.1c99facf.b03e2824.063506ec.742d9b21"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/user.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 17,
                            "endColumn": 29
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 572,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedPasswords",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in a dictionary key.",
            "markdown": "Do not hardcode passwords in code. Found {0} password used in a dictionary key.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/user.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 72,
                  "endLine": 72,
                  "startColumn": 9,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8831ee92ec1e9e49778710fe5e86f898fe22173494aab46c88f1fa204ebc68c7",
            "1": "e06468b8.0d6036ce.c91adbf6.1f6c67d0.146bf8fd.73cfdf26.63309ab0.0990edd8.e06468b8.caa3acc1.319f66e9.1c31c891.0ce06426.b03e2824.063506ec.0990edd8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/user.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 21,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 572,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedPasswords",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in a dictionary key.",
            "markdown": "Do not hardcode passwords in code. Found {0} password used in a dictionary key.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/user.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 87,
                  "endLine": 87,
                  "startColumn": 9,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6f1cbc7a143fd4bbcbc358f542b446c6a97e8310d95e7a46b4f32ca1e6f03ae2",
            "1": "e06468b8.0d6036ce.c91adbf6.1f6c67d0.cf58336d.66ffb861.63309ab0.0990edd8.e06468b8.caa3acc1.ff785dea.28a47fad.0ce06426.b03e2824.063506ec.0990edd8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/user.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 21,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 572,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in a dictionary key.",
            "markdown": "Do not hardcode passwords in code. Found {0} password used in a dictionary key.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/resources/servers/test_rack_manager.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 61,
                  "endLine": 61,
                  "startColumn": 13,
                  "endColumn": 36
                }
              }
            }
          ],
          "fingerprints": {
            "0": "49be3ff5786f7de29a0eff9033ec575e58289ad43abef8be594388f6d724e9b7",
            "1": "77ebc111.b0ce6563.79e62dc9.b9b2ad28.6f75a740.3df0c333.b69c6615.91057b05.77ebc111.b0ce6563.59bc9ad4.b9b2ad28.6f75a740.ba14daf2.cbfa2b68.91057b05"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/unit/resources/servers/test_rack_manager.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 25,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 408,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in a dictionary key.",
            "markdown": "Do not hardcode passwords in code. Found {0} password used in a dictionary key.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/test_oneview_client.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 343,
                  "endLine": 343,
                  "startColumn": 48,
                  "endColumn": 71
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f5a947dbefdd79838ebb81768181dc9ded44c9157099f85f3e91e48f143c607b",
            "1": "16691f08.5ef509a6.afe012b0.9943093e.f055af09.5894b2d2.8fd07bbd.23c5376a.16691f08.5ef509a6.afe012b0.e9ea42e2.3ead5bd0.1d7c894f.081ac3f4.23c5376a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/unit/test_oneview_client.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 343,
                            "endLine": 343,
                            "startColumn": 60,
                            "endColumn": 71
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 458,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in a dictionary key.",
            "markdown": "Do not hardcode passwords in code. Found {0} password used in a dictionary key.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/test_oneview_client.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 359,
                  "endLine": 359,
                  "startColumn": 48,
                  "endColumn": 71
                }
              }
            }
          ],
          "fingerprints": {
            "0": "898d489bc73c8b9ab364245f85567464d46ed4a5789ffb80135c931c115b8da6",
            "1": "16691f08.5ef509a6.afe012b0.9943093e.f055af09.5894b2d2.8fd07bbd.23c5376a.16691f08.8c71063f.afe012b0.e9ea42e2.f055af09.1d7c894f.081ac3f4.23c5376a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/unit/test_oneview_client.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 359,
                            "endLine": 359,
                            "startColumn": 60,
                            "endColumn": 71
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 458,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in a dictionary key.",
            "markdown": "Do not hardcode passwords in code. Found {0} password used in a dictionary key.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/resources/security/test_users.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 51,
                  "endLine": 51,
                  "startColumn": 13,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e4a7c9bad560d51f35f952aafdce7e302dd8047fcc1ba523f90619668fe88a7d",
            "1": "16691f08.9ebe4252.ff785dea.1f6c67d0.22bfc4d8.66ffb861.2a407843.0990edd8.e06468b8.caa3acc1.ff785dea.1c31c891.c1295168.b03e2824.063506ec.0990edd8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/unit/resources/security/test_users.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 458,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in a dictionary key.",
            "markdown": "Do not hardcode passwords in code. Found {0} password used in a dictionary key.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/resources/security/test_users.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 69,
                  "endLine": 69,
                  "startColumn": 13,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4316db30d6276d0ce1b269e30cf05e2eef2d4b0bd27ad281e24346a10b9c767f",
            "1": "16691f08.2da3d253.ff785dea.1f6c67d0.f4f10911.66ffb861.2a407843.d5c196e5.16691f08.2da3d253.ff785dea.1c31c891.f4f10911.b03e2824.063506ec.d5c196e5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/unit/resources/security/test_users.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 69,
                            "endLine": 69,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 458,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in a dictionary key.",
            "markdown": "Do not hardcode passwords in code. Found {0} password used in a dictionary key.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/resources/security/test_users.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 146,
                  "endLine": 146,
                  "startColumn": 17,
                  "endColumn": 41
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d2575f259aa996020870f21b0d838f978281660fc753ead6e0c9f9637f4a8757",
            "1": "e06468b8.4dde8ad7.0d035a81.6f8ea33f.7624c105.73cfdf26.18435760.e2a52556.e06468b8.caa3acc1.319f66e9.1c31c891.7624c105.b03e2824.063506ec.e2a52556"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/unit/resources/security/test_users.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 146,
                            "endLine": 146,
                            "startColumn": 29,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 458,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in a dictionary key.",
            "markdown": "Do not hardcode passwords in code. Found {0} password used in a dictionary key.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/resources/security/test_users.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 167,
                  "endLine": 167,
                  "startColumn": 17,
                  "endColumn": 41
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fe0e40e6ff4aac9c09c6b5708f24fe7c4f2a7009787b4ec0e6326b81e292c085",
            "1": "e06468b8.5cbccf62.0d035a81.6f8ea33f.7624c105.0efffed5.18435760.0990edd8.e06468b8.caa3acc1.ff785dea.28a47fad.7624c105.b03e2824.063506ec.d5c196e5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/unit/resources/security/test_users.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 167,
                            "endLine": 167,
                            "startColumn": 29,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 458,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in a dictionary key.",
            "markdown": "Do not hardcode passwords in code. Found {0} password used in a dictionary key.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/resources/security/test_users.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 314,
                  "endLine": 314,
                  "startColumn": 13,
                  "endColumn": 41
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7cc6c5650c1e8017b9a7e2073502d5490ee8745df9ef4c130b3f92b12b8e58f5",
            "1": "a70cff18.7cfb228d.79e62dc9.d4adebed.97138cd6.a178099c.6f181311.90b0858e.a70cff18.7cfb228d.1c63f1b2.d4adebed.97138cd6.ba14daf2.6f181311.90b0858e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/unit/resources/security/test_users.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "endLine": 314,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 458,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/SSLVerificationBypass",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Certificate verification is disabled by setting verify to False in post. This may lead to Man-in-the-middle attacks.",
            "markdown": "Certificate verification is disabled by setting {0} to {1} in {2}. This may lead to Man-in-the-middle attacks.",
            "arguments": [
              "[verify](0)",
              "[False](1)",
              "[post](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/migration/migrate.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 91,
                  "endLine": 91,
                  "startColumn": 17,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6896938d8c4dddaa403d7f890d27a6794fbc017d27590ec4069f10c10374e715",
            "1": "101172a8.577bab1d.3b7b86da.3456c081.25ac000c.ba14daf2.cbfa2b68.773acf30.101172a8.577bab1d.3b7b86da.3456c081.25ac000c.ba14daf2.cbfa2b68.773acf30"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/migration/migrate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 53,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/migration/migrate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 60,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/migration/migrate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 17,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 822,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/SSLVerificationBypass",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Certificate verification is disabled by setting verify to False in post. This may lead to Man-in-the-middle attacks.",
            "markdown": "Certificate verification is disabled by setting {0} to {1} in {2}. This may lead to Man-in-the-middle attacks.",
            "arguments": [
              "[verify](0)",
              "[False](1)",
              "[post](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/migration/migrate.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 129,
                  "endLine": 129,
                  "startColumn": 21,
                  "endColumn": 35
                }
              }
            }
          ],
          "fingerprints": {
            "0": "259313491110c2543bbe9238c3e76a57bd953d88068458c8a44e102218a3325c",
            "1": "101172a8.577bab1d.3b7b86da.3456c081.e9d75284.ba14daf2.cbfa2b68.773acf30.101172a8.577bab1d.3b7b86da.3456c081.e9d75284.ba14daf2.cbfa2b68.773acf30"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/migration/migrate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 129,
                            "endLine": 129,
                            "startColumn": 46,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/migration/migrate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 129,
                            "endLine": 129,
                            "startColumn": 53,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/migration/migrate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 129,
                            "endLine": 129,
                            "startColumn": 21,
                            "endColumn": 35
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 822,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/SSLVerificationBypass",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Certificate verification is disabled by setting verify to False in get. This may lead to Man-in-the-middle attacks.",
            "markdown": "Certificate verification is disabled by setting {0} to {1} in {2}. This may lead to Man-in-the-middle attacks.",
            "arguments": [
              "[verify](0)",
              "[False](1)",
              "[get](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/migration/migrate.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 196,
                  "endLine": 196,
                  "startColumn": 30,
                  "endColumn": 43
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7a58aadd64bc49aa2ddfc68a00b90a9e5114aecb069e1a120c92700c8f48ac6e",
            "1": "101172a8.ec88ad7a.40ce46d2.139c59a8.1d07cee4.ba14daf2.cbfa2b68.773acf30.101172a8.ec88ad7a.40ce46d2.139c59a8.1d07cee4.ba14daf2.cbfa2b68.773acf30"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/migration/migrate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 196,
                            "endLine": 196,
                            "startColumn": 74,
                            "endColumn": 80
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/migration/migrate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 196,
                            "endLine": 196,
                            "startColumn": 81,
                            "endColumn": 86
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/migration/migrate.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 196,
                            "endLine": 196,
                            "startColumn": 30,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 822,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "isSupported": true,
            "lang": "Python",
            "files": 284,
            "type": "SUPPORTED"
          },
          {
            "isSupported": false,
            "lang": "Python",
            "files": 1,
            "type": "FAILED_PARSING"
          }
        ]
      }
    }
  ]
}
