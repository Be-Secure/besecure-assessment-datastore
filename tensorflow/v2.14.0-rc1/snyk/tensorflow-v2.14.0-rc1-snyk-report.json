{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "xml/AndroidDebugEnabled",
              "name": "AndroidDebugEnabled",
              "shortDescription": {
                "text": "Android Debug Mode Enabled"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nWhen debugging, it may be necessary to report detailed information to a developer. Within Android applications, this can be done by setting the `android:debuggable` attribute to `true`. However, if the debugging attribute is not disabled or omitted (the default value if `false`) when the application is released, it can allow attackers to attach a debugger to the application, trace the code execution and potentially access sensitive information.\n\n## Best practices for prevention\n* Do not set `android:debuggable` to `true` when building the application for production releases.\n\n\n## References\n\n* [Android Debuggable](https://developer.android.com/guide/topics/manifest/application-element#debug)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "xml",
                  "AndroidDebugEnabled",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-489"
                ]
              }
            },
            {
              "id": "python/PT/test",
              "name": "PT/test",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "PT",
                  "Security",
                  "InTest",
                  "SourceLocalEnv",
                  "SourceEnvironmentVariable",
                  "Taint"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/pynickle/amazing-python/commit/80d2cc8c3e2c8330416b91f17a09b51830915b86?diff=split#diff-f626b00ab4d99fdbd4cb2bd61ae29469L118",
                    "lines": [
                      {
                        "line": "if request.method == \"POST\":",
                        "lineNumber": 161,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try:",
                        "lineNumber": 162,
                        "lineChange": "none"
                      },
                      {
                        "line": "        f = request.files['file']",
                        "lineNumber": 163,
                        "lineChange": "none"
                      },
                      {
                        "line": "        filename = f.filename",
                        "lineNumber": 118,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        filename = secure_filename(f.filename)",
                        "lineNumber": 164,
                        "lineChange": "added"
                      },
                      {
                        "line": "        f.save(filename)",
                        "lineNumber": 165,
                        "lineChange": "none"
                      },
                      {
                        "line": "        with open(filename, \"r\", encoding=\"utf-8\") as f:",
                        "lineNumber": 166,
                        "lineChange": "none"
                      },
                      {
                        "line": "            success, errors = words_validate(f.read())",
                        "lineNumber": 167,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/WhaleShark-Team/cobra/commit/1ac467a2c1cf8427a5bf60031677817140fe181c?diff=split#diff-dc0ad7c98d7072655327746f1bc95b3aL72",
                    "lines": [
                      {
                        "line": "task_type = 1",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "# check if there is a file or gitlab url",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "if len(request.files) == 0:",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # no files, should check username and password",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "    task_type = 1",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "# there is a file, check file format and uncompress it.",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "task_type = 2",
                        "lineNumber": 89,
                        "lineChange": "none"
                      },
                      {
                        "line": "upload_src = request.files['file']",
                        "lineNumber": 90,
                        "lineChange": "none"
                      },
                      {
                        "line": "filename = str(int(time.time())) + '_' + upload_src.filename",
                        "lineNumber": 90,
                        "lineChange": "removed"
                      },
                      {
                        "line": "filename = str(int(time.time())) + '_' + secure_filename(upload_src.filename)",
                        "lineNumber": 91,
                        "lineChange": "added"
                      },
                      {
                        "line": "filepath = 'uploads/' + filename",
                        "lineNumber": 92,
                        "lineChange": "none"
                      },
                      {
                        "line": "upload_src.save(filepath)",
                        "lineNumber": 93,
                        "lineChange": "none"
                      },
                      {
                        "line": "# if you upload a rar file, upload_src.mimetype will returns \"application/octet-stream\"",
                        "lineNumber": 95,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Wordseer/wordseer/commit/ea92ade27f7a7a12d057a2b71daf9ffa1cf4385e?diff=split#diff-e86334029c6a0118169cce848ff474ddR13",
                    "lines": [
                      {
                        "line": " PROJECT_ROUTE = \"/projects/\"",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": " ",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "def allowed_file(filename):",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return os.path.splitext(filename)[1] in app.config[\"ALLOWED_EXTENSIONS\"]",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": " @app.route(PROJECT_ROUTE, methods=[\"GET\", \"POST\"])",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": " def projects():",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "if request.method == \"POST\":",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "    uploaded_file = request.files[\"uploaded_file\"]",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if uploaded_file and allowed_file(uploaded_file.filename):",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "        filename = secure_filename(uploaded_file.filename)",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "        dest_path = os.path.join(app.config[\"UPLOAD_DIR\"],",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "            filename)",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "        uploaded_file.save(dest_path)",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "        #TODO: send the user somewhere useful?",
                        "lineNumber": 49,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 553,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "java/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "PT",
                  "Security",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/google/j2objc/commit/1b271d8b25c99a91547a19f16f71c048c3164156?diff=split#diff-33b6b27033cb88022415e8cd32b1807cL244",
                    "lines": [
                      {
                        "line": " * Extract a ZipEntry to the specified directory.",
                        "lineNumber": 241,
                        "lineChange": "none"
                      },
                      {
                        "line": " */",
                        "lineNumber": 242,
                        "lineChange": "none"
                      },
                      {
                        "line": "public File extractZipEntry(File dir, ZipFile zipFile, ZipEntry entry) throws IOException {",
                        "lineNumber": 243,
                        "lineChange": "none"
                      },
                      {
                        "line": "  File outputFile = new File(dir, entry.getName());",
                        "lineNumber": 244,
                        "lineChange": "none"
                      },
                      {
                        "line": "  File parentFile = outputFile.getParentFile();",
                        "lineNumber": 245,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (!parentFile.isDirectory() && !parentFile.mkdirs()) {",
                        "lineNumber": 246,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    throw new IOException(\"Could not extract file to \" + dir.getPath());",
                        "lineNumber": 247,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  if (!outputFile.getCanonicalPath().startsWith(dir.getCanonicalPath() + File.separator)",
                        "lineNumber": 246,
                        "lineChange": "added"
                      },
                      {
                        "line": "      || (!parentFile.isDirectory() && !parentFile.mkdirs())) {",
                        "lineNumber": 247,
                        "lineChange": "added"
                      },
                      {
                        "line": "    throw new IOException(\"Could not extract \" + entry.getName() + \" to \" + dir.getPath());",
                        "lineNumber": 248,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 249,
                        "lineChange": "none"
                      },
                      {
                        "line": "  try (InputStream inputStream = zipFile.getInputStream(entry);",
                        "lineNumber": 250,
                        "lineChange": "none"
                      },
                      {
                        "line": "      FileOutputStream outputStream = new FileOutputStream(outputFile)) {",
                        "lineNumber": 251,
                        "lineChange": "none"
                      },
                      {
                        "line": "    byte[] buf = new byte[1024];",
                        "lineNumber": 252,
                        "lineChange": "none"
                      },
                      {
                        "line": "    int n;",
                        "lineNumber": 253,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/blackducksoftware/synopsys-detect/commit/36555b9322986e9560f241d05f2262c29a17663b?diff=split#diff-bc0b5be9b9918488d8fe1dc64584df62L48",
                    "lines": [
                      {
                        "line": "Enumeration<? extends ZipEntry> entries = zipFile.entries();",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "while (entries.hasMoreElements()) {",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ZipEntry entry = entries.nextElement();",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Path entryPath = destPath.resolve(entry.getName());",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (!entryPath.normalize().startsWith(dest.toPath()))",
                        "lineNumber": 49,
                        "lineChange": "added"
                      },
                      {
                        "line": "        throw new IOException(\"Zip entry contained path traversal\");",
                        "lineNumber": 50,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (entry.isDirectory()) {",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Files.createDirectories(entryPath);",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "    } else {",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Files.createDirectories(entryPath.getParent());",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try (InputStream in = zipFile.getInputStream(entry)) {",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "            try (OutputStream out = new FileOutputStream(entryPath.toFile())) {",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "                IOUtils.copy(in, out);",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "            }",
                        "lineNumber": 58,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/azkaban/azkaban/commit/3b74a4127c9086cd525252edabc3621febab0428?diff=split#diff-c892cca6401b1e0be4cbca3261b47098L201",
                    "lines": [
                      {
                        "line": "final Enumeration<?> entries = source.entries();",
                        "lineNumber": 198,
                        "lineChange": "none"
                      },
                      {
                        "line": "while (entries.hasMoreElements()) {",
                        "lineNumber": 199,
                        "lineChange": "none"
                      },
                      {
                        "line": "  final ZipEntry entry = (ZipEntry) entries.nextElement();",
                        "lineNumber": 200,
                        "lineChange": "none"
                      },
                      {
                        "line": "  final File newFile = new File(dest, entry.getName());",
                        "lineNumber": 201,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (!newFile.getCanonicalPath().startsWith(dest.getCanonicalPath())) {",
                        "lineNumber": 202,
                        "lineChange": "added"
                      },
                      {
                        "line": "    throw new IOException(",
                        "lineNumber": 203,
                        "lineChange": "added"
                      },
                      {
                        "line": "        \"Extracting zip entry would have resulted in a file outside the specified destination\"",
                        "lineNumber": 204,
                        "lineChange": "added"
                      },
                      {
                        "line": "if (entry.isDirectory()) {",
                        "lineNumber": 208,
                        "lineChange": "none"
                      },
                      {
                        "line": "  newFile.mkdirs();",
                        "lineNumber": 209,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 210,
                        "lineChange": "none"
                      },
                      {
                        "line": "  newFile.getParentFile().mkdirs();",
                        "lineNumber": 211,
                        "lineChange": "none"
                      },
                      {
                        "line": "  final InputStream src = source.getInputStream(entry);",
                        "lineNumber": 212,
                        "lineChange": "none"
                      },
                      {
                        "line": "  try {",
                        "lineNumber": 213,
                        "lineChange": "none"
                      },
                      {
                        "line": "    final OutputStream output =",
                        "lineNumber": 214,
                        "lineChange": "none"
                      },
                      {
                        "line": "        new BufferedOutputStream(new FileOutputStream(newFile));",
                        "lineNumber": 215,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try {",
                        "lineNumber": 216,
                        "lineChange": "none"
                      },
                      {
                        "line": "      IOUtils.copy(src, output);",
                        "lineNumber": 217,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 948,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "python/Ssrf",
              "name": "Ssrf",
              "shortDescription": {
                "text": "Server-Side Request Forgery (SSRF)"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\nIn a server-side request forgery attack, a malicious user supplies a URL (an external URL or a network IP address such as 127.0.0.1) to the application's back end. The server then accesses the URL and shares its results, which may include sensitive information such as AWS metadata, internal configuration information, or database contents with the attacker. Because the request comes from the back end, it bypasses access controls, potentially exposing information the user does not have sufficient privileges to receive. The attacker can then exploit this information to gain access, modify the web application, or demand a ransom payment.\n\n## Best practices for prevention\n* Blacklists are problematic and attackers have numerous ways to bypass them; ideally, use a whitelist of all permitted domains and IP addresses.\n* Use authentication even within your own network to prevent exploitation of server-side requests.\n* Implement zero trust and sanitize and validate all URL and header data returning to the server from the user. Strip invalid or suspect characters, then inspect to be certain it contains a valid and expected value.\n* Ideally, avoid sending server requests based on user-provided data altogether.\n* Ensure that you are not sending raw response bodies from the server directly to the client. Only deliver expected responses.\n* Disable suspect and exploitable URL schemas. Common culprits include obscure and little-used schemas such as `file://`, `dict://`, `ftp://`, and `gopher://`.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "Ssrf",
                  "Security",
                  "SourceNonServer",
                  "SourceLocalEnv",
                  "SourceEnvironmentVariable",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-918"
                ]
              }
            },
            {
              "id": "go/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "go",
                  "PT",
                  "Security",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/pacolang/paco/commit/d05f41cb0aa3167b86bd3b1063d07d7e64bec86f?diff=split#diff-7ddfb3e035b42cd70649cc33393fe32cR26",
                    "lines": [
                      {
                        "line": "// Commands",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "switch os.Args[1] {",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "case \"build\":",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "  err := buildCommand.Parse(os.Args[2:])",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "// Read the given file",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "bytes, err := ioutil.ReadFile(os.Args[1])",
                        "lineNumber": 17,
                        "lineChange": "removed"
                      },
                      {
                        "line": "bytes, err := ioutil.ReadFile(file)",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "if err != nil {",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "  log.Errorf(err)",
                        "lineNumber": 47,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/trinchan/slackbot/commit/c8350a18049c609ef7b6847666d07e69aca9fb46?diff=split#diff-f2f667c6f0bb538d9d35241bd93421fcL18",
                    "lines": [
                      {
                        "line": "func init() {",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "  flag.Parse()",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var configFile = flag.String(\"c\", \"config.json\", \"Config file (default ./config.json)\")",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "  config, err := ioutil.ReadFile(configFile)",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  config, err := ioutil.ReadFile(*configFile)",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "  if err != nil {",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "    log.Println(\"open config: \", err)",
                        "lineNumber": 20,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/ketchuphq/ketchup/commit/31630fa4703d23c6055439536fd661d3c47da038?diff=split#diff-d72b60c856c1aa9b8e14c2c3c4b221abL59",
                    "lines": [
                      {
                        "line": "Run: func(ctx *service.CommandContext) {",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "  ctx.RequireExactlyNArgs(1)",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "  f, err := os.Open(ctx.Args[0])",
                        "lineNumber": 58,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  if err != nil {",
                        "lineNumber": 59,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    panic(err)",
                        "lineNumber": 60,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  err := m.importFromJSON(ctx.Args[0])",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "if err != nil {",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tpanic(err)",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "func (m *Module) importFromJSON(path string) error {",
                        "lineNumber": 78,
                        "lineChange": "added"
                      },
                      {
                        "line": "  f, err := os.Open(path)",
                        "lineNumber": 79,
                        "lineChange": "added"
                      },
                      {
                        "line": "  if err != nil {",
                        "lineNumber": 80,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return err",
                        "lineNumber": 81,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 527,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "python/InsecureHash/test",
              "name": "InsecureHash/test",
              "shortDescription": {
                "text": "Use of Password Hash With Insufficient Computational Effort"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n## Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "InsecureHash",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-916"
                ]
              }
            },
            {
              "id": "python/TarSlip",
              "name": "TarSlip",
              "shortDescription": {
                "text": "Arbitrary File Write via Archive Extraction (Tar Slip)"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nZip Slip is a form of directory traversal that can be exploited by extracting files from an archive. The premise of the directory traversal vulnerability is that an attacker can gain access to parts of the file system outside of the target folder in which they should reside. The attacker can then overwrite executable files and either invoke them remotely or wait for the system or user to call them, thus achieving remote command execution on the victim’s machine. The vulnerability can also cause damage by overwriting configuration files or other sensitive resources, and can be exploited on both client (user) machines and servers.\n\n## Example\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "TarSlip",
                  "Security",
                  "SourceArchive"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/scikit-learn/scikit-learn/commit/3183895285002113ac0d627a43d4e0f2d08d72d3?diff=split#diff-65fa115f412d44f21c5a3243e94fd59cL28",
                    "lines": [
                      {
                        "line": "print(\"Decompressing %s\" % ARCHIVE_NAME)",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "tarfile.open(ARCHIVE_NAME, \"r:gz\").extractall(path='.')",
                        "lineNumber": 27,
                        "lineChange": "removed"
                      },
                      {
                        "line": "with closing(tarfile.open(ARCHIVE_NAME, \"r:gz\")) as archive:",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "    archive.extractall(path='.')",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "os.remove(ARCHIVE_NAME)",
                        "lineNumber": 31,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/vmware/pyvcloud/commit/bea8c392d7af7ae6098ff73656a84ba1cd5fabd7?diff=split#diff-e4f051bffd896df853d0a8b75bcbb5c1L578",
                    "lines": [
                      {
                        "line": "try:",
                        "lineNumber": 576,
                        "lineChange": "none"
                      },
                      {
                        "line": "    tempdir = tempfile.mkdtemp(dir='.')",
                        "lineNumber": 577,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ova = tarfile.open(file_name)",
                        "lineNumber": 578,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ova.extractall(path=tempdir)",
                        "lineNumber": 578,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    ova.extractall(path=tempdir,",
                        "lineNumber": 579,
                        "lineChange": "added"
                      },
                      {
                        "line": "                   members=get_safe_members_in_tar_file(ova))",
                        "lineNumber": 580,
                        "lineChange": "added"
                      },
                      {
                        "line": "    ova.close()",
                        "lineNumber": 581,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ovf_file = None",
                        "lineNumber": 582,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/oppia/oppia/commit/b5d1739646eba4c52543bce9823a5220f1f41d94?diff=split#diff-e339ec800b0bc19a36876f3ded686b2dL134",
                    "lines": [
                      {
                        "line": "urllib.urlretrieve(source_url, TMP_UNZIP_PATH)",
                        "lineNumber": 137,
                        "lineChange": "none"
                      },
                      {
                        "line": "with tarfile.open(TMP_UNZIP_PATH, 'r:gz') as t:",
                        "lineNumber": 133,
                        "lineChange": "removed"
                      },
                      {
                        "line": "with contextlib.closing(tarfile.open(TMP_UNZIP_PATH, 'r:gz')) as t:",
                        "lineNumber": 138,
                        "lineChange": "added"
                      },
                      {
                        "line": "    t.extractall(target_parent_dir)",
                        "lineNumber": 139,
                        "lineChange": "none"
                      },
                      {
                        "line": "os.remove(TMP_UNZIP_PATH)",
                        "lineNumber": 140,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 119,
                "cwe": [
                  "CWE-22"
                ]
              }
            },
            {
              "id": "python/reDOS/test",
              "name": "reDOS/test",
              "shortDescription": {
                "text": "Regular Expression Denial of Service (ReDoS)"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet's take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn't match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "reDOS",
                  "Security",
                  "InTest",
                  "SourceLocalEnv",
                  "SourceEnvironmentVariable",
                  "Taint"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/apache/allura/commit/ce23a31516818ba803fd801504fe6f9566e3cbab?diff=split#diff-a01e9f95ec248a880acfe90cbc6c0117L326",
                    "lines": [
                      {
                        "line": "        redirect(g.forge_static('images/user.png'))",
                        "lineNumber": 323,
                        "lineChange": "none"
                      },
                      {
                        "line": "@expose('json:')",
                        "lineNumber": 325,
                        "lineChange": "none"
                      },
                      {
                        "line": "def user_search(self,term=''):",
                        "lineNumber": 326,
                        "lineChange": "none"
                      },
                      {
                        "line": "    name_regex = re.compile('(?i)%s' % term)",
                        "lineNumber": 327,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    name_regex = re.compile('(?i)%s' % re.escape(term))",
                        "lineNumber": 327,
                        "lineChange": "added"
                      },
                      {
                        "line": "    users = M.User.query.find({",
                        "lineNumber": 328,
                        "lineChange": "none"
                      },
                      {
                        "line": "                '_id':{'$in':[role.user_id for role in c.project.roles]},",
                        "lineNumber": 329,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/tomashanacek/mock-server/commit/6d9d908f23940b69dfe8a375b57db98182a4e2d3?diff=split#diff-137164440312cbcacfcd58d690995780L655",
                    "lines": [
                      {
                        "line": "class TodoHandler(BaseHandler):",
                        "lineNumber": 654,
                        "lineChange": "none"
                      },
                      {
                        "line": "    @tornado.web.authenticated",
                        "lineNumber": 656,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def post(self):",
                        "lineNumber": 657,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # check xsrf cookie",
                        "lineNumber": 658,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.check_xsrf_cookie()",
                        "lineNumber": 659,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # get data from request body",
                        "lineNumber": 661,
                        "lineChange": "none"
                      },
                      {
                        "line": "        data = tornado.escape.json_decode(self.request.body)",
                        "lineNumber": 662,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if data[\"protocol\"] == \"rest\":",
                        "lineNumber": 664,
                        "lineChange": "none"
                      },
                      {
                        "line": "            method, url_path = data[\"id\"].split(\"-\")",
                        "lineNumber": 665,
                        "lineChange": "none"
                      },
                      {
                        "line": "            method_file = ResourceMethod(self.api_dir, url_path, method)",
                        "lineNumber": 666,
                        "lineChange": "none"
                      },
                      {
                        "line": "        elif data[\"protocol\"] == \"rpc\":",
                        "lineNumber": 667,
                        "lineChange": "none"
                      },
                      {
                        "line": "            method_file = RPCMethod(",
                        "lineNumber": 668,
                        "lineChange": "none"
                      },
                      {
                        "line": "                os.path.join(self.api_dir, RPCHandler.PATH), data[\"id\"])",
                        "lineNumber": 669,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # load description",
                        "lineNumber": 671,
                        "lineChange": "none"
                      },
                      {
                        "line": "# set todo",
                        "lineNumber": 674,
                        "lineChange": "none"
                      },
                      {
                        "line": "value = \" %s\" % data[\"value\"].strip()",
                        "lineNumber": 675,
                        "lineChange": "none"
                      },
                      {
                        "line": "todo = \"%s%s\" % (\"[x]\" if data[\"checked\"] else \"[ ]\", value)",
                        "lineNumber": 676,
                        "lineChange": "none"
                      },
                      {
                        "line": "method_file.description = re.sub(",
                        "lineNumber": 677,
                        "lineChange": "none"
                      },
                      {
                        "line": "    r\"\\[( |x)\\]%s\" % value, todo, method_file.description)",
                        "lineNumber": 678,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    r\"\\[( |x)\\]%s\" % re.escape(value), todo, method_file.description)",
                        "lineNumber": 678,
                        "lineChange": "added"
                      },
                      {
                        "line": "# save description",
                        "lineNumber": 680,
                        "lineChange": "none"
                      },
                      {
                        "line": "method_file.save_description()",
                        "lineNumber": 681,
                        "lineChange": "none"
                      },
                      {
                        "line": "self.set_header(\"Content-Type\", \"application/json\")",
                        "lineNumber": 683,
                        "lineChange": "none"
                      },
                      {
                        "line": "self.write(\"OK\")",
                        "lineNumber": 684,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/django/django/commit/3ed55606c4351913584a79e8b967f99b40316f1d?diff=split#diff-3c42de3e53aba87b32c494f995a728dfL61",
                    "lines": [
                      {
                        "line": "def get_content_type_for_model(obj):",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # Since this module gets imported in the application's root package,",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # it cannot import models from other applications at the module level.",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "    from django.contrib.contenttypes.models import ContentType",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return ContentType.objects.get_for_model(obj, for_concrete_model=False)",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "def __str__(self):",
                        "lineNumber": 584,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return \"%s.%s\" % (self.model._meta.app_label, self.__class__.__name__)",
                        "lineNumber": 585,
                        "lineChange": "none"
                      },
                      {
                        "line": "def get_inline_instances(self, request, obj=None):",
                        "lineNumber": 587,
                        "lineChange": "none"
                      },
                      {
                        "line": "    inline_instances = []",
                        "lineNumber": 588,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for inline_class in self.get_inlines(request, obj):",
                        "lineNumber": 589,
                        "lineChange": "none"
                      },
                      {
                        "line": "        inline = inline_class(self.model, self.admin_site)",
                        "lineNumber": 590,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if request:",
                        "lineNumber": 591,
                        "lineChange": "none"
                      },
                      {
                        "line": "            if not (inline.has_view_or_change_permission(request, obj) or",
                        "lineNumber": 592,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return update_wrapper(wrapper, view)",
                        "lineNumber": 609,
                        "lineChange": "none"
                      },
                      {
                        "line": "info = self.model._meta.app_label, self.model._meta.model_name",
                        "lineNumber": 611,
                        "lineChange": "none"
                      },
                      {
                        "line": "return [",
                        "lineNumber": 613,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return self.get_form(request, obj, fields=None)",
                        "lineNumber": 659,
                        "lineChange": "none"
                      },
                      {
                        "line": "def get_form(self, request, obj=None, change=False, **kwargs):",
                        "lineNumber": 661,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 662,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Return a Form class for use in the admin add view. This is used by",
                        "lineNumber": 663,
                        "lineChange": "none"
                      },
                      {
                        "line": "    fields = kwargs.pop('fields')",
                        "lineNumber": 667,
                        "lineChange": "none"
                      },
                      {
                        "line": "else:",
                        "lineNumber": 668,
                        "lineChange": "none"
                      },
                      {
                        "line": "    fields = flatten_fieldsets(self.get_fieldsets(request, obj))",
                        "lineNumber": 669,
                        "lineChange": "none"
                      },
                      {
                        "line": "excluded = self.get_exclude(request, obj)",
                        "lineNumber": 670,
                        "lineChange": "none"
                      },
                      {
                        "line": "exclude = [] if excluded is None else list(excluded)",
                        "lineNumber": 671,
                        "lineChange": "none"
                      },
                      {
                        "line": "readonly_fields = self.get_readonly_fields(request, obj)",
                        "lineNumber": 672,
                        "lineChange": "none"
                      },
                      {
                        "line": "exclude.extend(readonly_fields)",
                        "lineNumber": 673,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Exclude all fields if it's a change form and the user doesn't have",
                        "lineNumber": 674,
                        "lineChange": "none"
                      },
                      {
                        "line": "# the change permission.",
                        "lineNumber": 675,
                        "lineChange": "none"
                      },
                      {
                        "line": "if change and hasattr(request, 'user') and not self.has_change_permission(request, obj):",
                        "lineNumber": 676,
                        "lineChange": "none"
                      },
                      {
                        "line": "    exclude.extend(fields)",
                        "lineNumber": 677,
                        "lineChange": "none"
                      },
                      {
                        "line": "if excluded is None and hasattr(self.form, '_meta') and self.form._meta.exclude:",
                        "lineNumber": 678,
                        "lineChange": "none"
                      },
                      {
                        "line": "try:",
                        "lineNumber": 701,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return modelform_factory(self.model, **defaults)",
                        "lineNumber": 702,
                        "lineChange": "none"
                      },
                      {
                        "line": "except FieldError as e:",
                        "lineNumber": 703,
                        "lineChange": "none"
                      },
                      {
                        "line": "    raise FieldError(",
                        "lineNumber": 704,
                        "lineChange": "none"
                      },
                      {
                        "line": "return ChangeList(",
                        "lineNumber": 728,
                        "lineChange": "none"
                      },
                      {
                        "line": "    request,",
                        "lineNumber": 729,
                        "lineChange": "none"
                      },
                      {
                        "line": "    self.model,",
                        "lineNumber": 730,
                        "lineChange": "none"
                      },
                      {
                        "line": "    list_display,",
                        "lineNumber": 731,
                        "lineChange": "none"
                      },
                      {
                        "line": "    list_display_links,",
                        "lineNumber": 732,
                        "lineChange": "none"
                      },
                      {
                        "line": "    )",
                        "lineNumber": 742,
                        "lineChange": "none"
                      },
                      {
                        "line": "def get_object(self, request, object_id, from_field=None):",
                        "lineNumber": 744,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 745,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Return an instance matching the field and value provided, the primary",
                        "lineNumber": 746,
                        "lineChange": "none"
                      },
                      {
                        "line": "queryset = self.get_queryset(request)",
                        "lineNumber": 750,
                        "lineChange": "none"
                      },
                      {
                        "line": "model = queryset.model",
                        "lineNumber": 751,
                        "lineChange": "none"
                      },
                      {
                        "line": "field = model._meta.pk if from_field is None else model._meta.get_field(from_field)",
                        "lineNumber": 752,
                        "lineChange": "none"
                      },
                      {
                        "line": "try:",
                        "lineNumber": 753,
                        "lineChange": "none"
                      },
                      {
                        "line": "    object_id = field.to_python(object_id)",
                        "lineNumber": 754,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return queryset.get(**{field.name: object_id})",
                        "lineNumber": 755,
                        "lineChange": "none"
                      },
                      {
                        "line": "except (model.DoesNotExist, ValidationError, ValueError):",
                        "lineNumber": 756,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return None",
                        "lineNumber": 757,
                        "lineChange": "none"
                      },
                      {
                        "line": "        defaults['fields'] = forms.ALL_FIELDS",
                        "lineNumber": 768,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return modelform_factory(self.model, **defaults)",
                        "lineNumber": 770,
                        "lineChange": "none"
                      },
                      {
                        "line": "def get_changelist_formset(self, request, **kwargs):",
                        "lineNumber": 772,
                        "lineChange": "none"
                      },
                      {
                        "line": "    **kwargs,",
                        "lineNumber": 779,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 780,
                        "lineChange": "none"
                      },
                      {
                        "line": "return modelformset_factory(",
                        "lineNumber": 781,
                        "lineChange": "none"
                      },
                      {
                        "line": "    self.model, self.get_changelist_form(request), extra=0,",
                        "lineNumber": 782,
                        "lineChange": "none"
                      },
                      {
                        "line": "    fields=self.list_editable, **defaults",
                        "lineNumber": 783,
                        "lineChange": "none"
                      },
                      {
                        "line": ")",
                        "lineNumber": 784,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return self.paginator(queryset, per_page, orphans, allow_empty_first_page)",
                        "lineNumber": 794,
                        "lineChange": "none"
                      },
                      {
                        "line": "def log_addition(self, request, object, message):",
                        "lineNumber": 796,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 797,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Log that an object has been successfully added.",
                        "lineNumber": 798,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return LogEntry.objects.log_action(",
                        "lineNumber": 803,
                        "lineChange": "none"
                      },
                      {
                        "line": "        user_id=request.user.pk,",
                        "lineNumber": 804,
                        "lineChange": "none"
                      },
                      {
                        "line": "        content_type_id=get_content_type_for_model(object).pk,",
                        "lineNumber": 805,
                        "lineChange": "none"
                      },
                      {
                        "line": "        object_id=object.pk,",
                        "lineNumber": 806,
                        "lineChange": "none"
                      },
                      {
                        "line": "        object_repr=str(object),",
                        "lineNumber": 807,
                        "lineChange": "none"
                      },
                      {
                        "line": "        action_flag=ADDITION,",
                        "lineNumber": 808,
                        "lineChange": "none"
                      },
                      {
                        "line": "        change_message=message,",
                        "lineNumber": 809,
                        "lineChange": "none"
                      },
                      {
                        "line": "    )",
                        "lineNumber": 810,
                        "lineChange": "none"
                      },
                      {
                        "line": "def log_change(self, request, object, message):",
                        "lineNumber": 812,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 813,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Log that an object has been successfully changed.",
                        "lineNumber": 814,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return LogEntry.objects.log_action(",
                        "lineNumber": 819,
                        "lineChange": "none"
                      },
                      {
                        "line": "        user_id=request.user.pk,",
                        "lineNumber": 820,
                        "lineChange": "none"
                      },
                      {
                        "line": "        content_type_id=get_content_type_for_model(object).pk,",
                        "lineNumber": 821,
                        "lineChange": "none"
                      },
                      {
                        "line": "        object_id=object.pk,",
                        "lineNumber": 822,
                        "lineChange": "none"
                      },
                      {
                        "line": "        object_repr=str(object),",
                        "lineNumber": 823,
                        "lineChange": "none"
                      },
                      {
                        "line": "        action_flag=CHANGE,",
                        "lineNumber": 824,
                        "lineChange": "none"
                      },
                      {
                        "line": "        change_message=message,",
                        "lineNumber": 825,
                        "lineChange": "none"
                      },
                      {
                        "line": "    )",
                        "lineNumber": 826,
                        "lineChange": "none"
                      },
                      {
                        "line": "def log_deletion(self, request, object, object_repr):",
                        "lineNumber": 828,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 829,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Log that an object will be deleted. Note that this method must be",
                        "lineNumber": 830,
                        "lineChange": "none"
                      },
                      {
                        "line": "return LogEntry.objects.log_action(",
                        "lineNumber": 836,
                        "lineChange": "none"
                      },
                      {
                        "line": "    user_id=request.user.pk,",
                        "lineNumber": 837,
                        "lineChange": "none"
                      },
                      {
                        "line": "    content_type_id=get_content_type_for_model(object).pk,",
                        "lineNumber": 838,
                        "lineChange": "none"
                      },
                      {
                        "line": "    object_id=object.pk,",
                        "lineNumber": 839,
                        "lineChange": "none"
                      },
                      {
                        "line": "    object_repr=object_repr,",
                        "lineNumber": 840,
                        "lineChange": "none"
                      },
                      {
                        "line": "# If self.actions is set to None that means actions are disabled on",
                        "lineNumber": 885,
                        "lineChange": "none"
                      },
                      {
                        "line": "# this page.",
                        "lineNumber": 886,
                        "lineChange": "none"
                      },
                      {
                        "line": "if self.actions is None or IS_POPUP_VAR in request.GET:",
                        "lineNumber": 887,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return {}",
                        "lineNumber": 888,
                        "lineChange": "none"
                      },
                      {
                        "line": "actions = self._filter_actions_by_permissions(request, self._get_base_actions())",
                        "lineNumber": 889,
                        "lineChange": "none"
                      },
                      {
                        "line": "choices = [] + default_choices",
                        "lineNumber": 897,
                        "lineChange": "none"
                      },
                      {
                        "line": "for func, name, description in self.get_actions(request).values():",
                        "lineNumber": 898,
                        "lineChange": "none"
                      },
                      {
                        "line": "    choice = (name, description % model_format_dict(self.opts))",
                        "lineNumber": 899,
                        "lineChange": "none"
                      },
                      {
                        "line": "    choices.append(choice)",
                        "lineNumber": 900,
                        "lineChange": "none"
                      },
                      {
                        "line": "return choices",
                        "lineNumber": 901,
                        "lineChange": "none"
                      },
                      {
                        "line": "                      for orm_lookup in orm_lookups]",
                        "lineNumber": 1015,
                        "lineChange": "none"
                      },
                      {
                        "line": "        queryset = queryset.filter(reduce(operator.or_, or_queries))",
                        "lineNumber": 1016,
                        "lineChange": "none"
                      },
                      {
                        "line": "    use_distinct |= any(lookup_needs_distinct(self.opts, search_spec) for search_spec in orm_lookups)",
                        "lineNumber": 1017,
                        "lineChange": "none"
                      },
                      {
                        "line": "return queryset, use_distinct",
                        "lineNumber": 1019,
                        "lineChange": "none"
                      },
                      {
                        "line": "Return the preserved filters querystring.",
                        "lineNumber": 1023,
                        "lineChange": "none"
                      },
                      {
                        "line": "\"\"\"",
                        "lineNumber": 1024,
                        "lineChange": "none"
                      },
                      {
                        "line": "match = request.resolver_match",
                        "lineNumber": 1025,
                        "lineChange": "none"
                      },
                      {
                        "line": "if self.preserve_filters and match:",
                        "lineNumber": 1026,
                        "lineChange": "none"
                      },
                      {
                        "line": "    opts = self.model._meta",
                        "lineNumber": 1027,
                        "lineChange": "none"
                      },
                      {
                        "line": "    current_url = '%s:%s' % (match.app_name, match.url_name)",
                        "lineNumber": 1028,
                        "lineChange": "none"
                      },
                      {
                        "line": "    changelist_url = 'admin:%s_%s_changelist' % (opts.app_label, opts.model_name)",
                        "lineNumber": 1029,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if current_url == changelist_url:",
                        "lineNumber": 1030,
                        "lineChange": "none"
                      },
                      {
                        "line": "        preserved_filters = request.GET.urlencode()",
                        "lineNumber": 1031,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:",
                        "lineNumber": 1032,
                        "lineChange": "none"
                      },
                      {
                        "line": "        preserved_filters = request.GET.get('_changelist_filters')",
                        "lineNumber": 1033,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if preserved_filters:",
                        "lineNumber": 1035,
                        "lineChange": "none"
                      },
                      {
                        "line": "    messages.add_message(request, level, message, extra_tags=extra_tags, fail_silently=fail_silently)",
                        "lineNumber": 1068,
                        "lineChange": "none"
                      },
                      {
                        "line": "def save_form(self, request, form, change):",
                        "lineNumber": 1070,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1071,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Given a ModelForm return an unsaved instance. ``change`` is True if",
                        "lineNumber": 1072,
                        "lineChange": "none"
                      },
                      {
                        "line": "    the object is being changed, and False if it's being added.",
                        "lineNumber": 1073,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1074,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return form.save(commit=False)",
                        "lineNumber": 1075,
                        "lineChange": "none"
                      },
                      {
                        "line": "def save_model(self, request, obj, form, change):",
                        "lineNumber": 1077,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1078,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Given a model instance save it to the database.",
                        "lineNumber": 1079,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1080,
                        "lineChange": "none"
                      },
                      {
                        "line": "    obj.save()",
                        "lineNumber": 1081,
                        "lineChange": "none"
                      },
                      {
                        "line": "def delete_model(self, request, obj):",
                        "lineNumber": 1083,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.save_formset(request, form, formset, change=change)",
                        "lineNumber": 1109,
                        "lineChange": "none"
                      },
                      {
                        "line": "def render_change_form(self, request, context, add=False, change=False, form_url='', obj=None):",
                        "lineNumber": 1111,
                        "lineChange": "none"
                      },
                      {
                        "line": "    opts = self.model._meta",
                        "lineNumber": 1112,
                        "lineChange": "none"
                      },
                      {
                        "line": "    app_label = opts.app_label",
                        "lineNumber": 1113,
                        "lineChange": "none"
                      },
                      {
                        "line": "    preserved_filters = self.get_preserved_filters(request)",
                        "lineNumber": 1114,
                        "lineChange": "none"
                      },
                      {
                        "line": "    form_url = add_preserved_filters({'preserved_filters': preserved_filters, 'opts': opts}, form_url)",
                        "lineNumber": 1115,
                        "lineChange": "none"
                      },
                      {
                        "line": "    view_on_site_url = self.get_view_on_site_url(obj)",
                        "lineNumber": 1116,
                        "lineChange": "none"
                      },
                      {
                        "line": "    has_editable_inline_admin_formsets = False",
                        "lineNumber": 1117,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for inline in context['inline_admin_formsets']:",
                        "lineNumber": 1118,
                        "lineChange": "none"
                      },
                      {
                        "line": "'add': add,",
                        "lineNumber": 1123,
                        "lineChange": "none"
                      },
                      {
                        "line": "'change': change,",
                        "lineNumber": 1124,
                        "lineChange": "none"
                      },
                      {
                        "line": "'has_view_permission': self.has_view_permission(request, obj),",
                        "lineNumber": 1125,
                        "lineChange": "none"
                      },
                      {
                        "line": "'has_add_permission': self.has_add_permission(request),",
                        "lineNumber": 1126,
                        "lineChange": "none"
                      },
                      {
                        "line": "'has_change_permission': self.has_change_permission(request, obj),",
                        "lineNumber": 1127,
                        "lineChange": "none"
                      },
                      {
                        "line": "'has_delete_permission': self.has_delete_permission(request, obj),",
                        "lineNumber": 1128,
                        "lineChange": "none"
                      },
                      {
                        "line": "'has_editable_inline_admin_formsets': has_editable_inline_admin_formsets,",
                        "lineNumber": 1129,
                        "lineChange": "none"
                      },
                      {
                        "line": "'has_file_field': context['adminform'].form.is_multipart() or any(",
                        "lineNumber": 1130,
                        "lineChange": "none"
                      },
                      {
                        "line": "'absolute_url': view_on_site_url,",
                        "lineNumber": 1135,
                        "lineChange": "none"
                      },
                      {
                        "line": "'form_url': form_url,",
                        "lineNumber": 1136,
                        "lineChange": "none"
                      },
                      {
                        "line": "'opts': opts,",
                        "lineNumber": 1137,
                        "lineChange": "none"
                      },
                      {
                        "line": "'content_type_id': get_content_type_for_model(self.model).pk,",
                        "lineNumber": 1138,
                        "lineChange": "none"
                      },
                      {
                        "line": "'save_as': self.save_as,",
                        "lineNumber": 1139,
                        "lineChange": "none"
                      },
                      {
                        "line": "'save_on_top': self.save_on_top,",
                        "lineNumber": 1140,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return TemplateResponse(request, form_template or [",
                        "lineNumber": 1152,
                        "lineChange": "none"
                      },
                      {
                        "line": "        \"admin/%s/%s/change_form.html\" % (app_label, opts.model_name),",
                        "lineNumber": 1153,
                        "lineChange": "none"
                      },
                      {
                        "line": "        \"admin/%s/change_form.html\" % app_label,",
                        "lineNumber": 1154,
                        "lineChange": "none"
                      },
                      {
                        "line": "        \"admin/change_form.html\"",
                        "lineNumber": 1155,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ], context)",
                        "lineNumber": 1156,
                        "lineChange": "none"
                      },
                      {
                        "line": "def response_add(self, request, obj, post_url_continue=None):",
                        "lineNumber": 1158,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1159,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Determine the HttpResponse for the add_view stage.",
                        "lineNumber": 1160,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1161,
                        "lineChange": "none"
                      },
                      {
                        "line": "    opts = obj._meta",
                        "lineNumber": 1162,
                        "lineChange": "none"
                      },
                      {
                        "line": "    preserved_filters = self.get_preserved_filters(request)",
                        "lineNumber": 1163,
                        "lineChange": "none"
                      },
                      {
                        "line": "    obj_url = reverse(",
                        "lineNumber": 1164,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'admin:%s_%s_change' % (opts.app_label, opts.model_name),",
                        "lineNumber": 1165,
                        "lineChange": "none"
                      },
                      {
                        "line": "        args=(quote(obj.pk),),",
                        "lineNumber": 1166,
                        "lineChange": "none"
                      },
                      {
                        "line": "        current_app=self.admin_site.name,",
                        "lineNumber": 1167,
                        "lineChange": "none"
                      },
                      {
                        "line": "    )",
                        "lineNumber": 1168,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # Add a link to the object's change form if the user can edit the obj.",
                        "lineNumber": 1169,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if self.has_change_permission(request, obj):",
                        "lineNumber": 1170,
                        "lineChange": "none"
                      },
                      {
                        "line": "        obj_repr = format_html('<a href=\"{}\">{}</a>', urlquote(obj_url), obj)",
                        "lineNumber": 1171,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:",
                        "lineNumber": 1172,
                        "lineChange": "none"
                      },
                      {
                        "line": "        obj_repr = str(obj)",
                        "lineNumber": 1173,
                        "lineChange": "none"
                      },
                      {
                        "line": "    msg_dict = {",
                        "lineNumber": 1174,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'name': opts.verbose_name,",
                        "lineNumber": 1175,
                        "lineChange": "none"
                      },
                      {
                        "line": "# the presence of keys in request.POST.",
                        "lineNumber": 1179,
                        "lineChange": "none"
                      },
                      {
                        "line": "if IS_POPUP_VAR in request.POST:",
                        "lineNumber": 1181,
                        "lineChange": "none"
                      },
                      {
                        "line": "    to_field = request.POST.get(TO_FIELD_VAR)",
                        "lineNumber": 1182,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if to_field:",
                        "lineNumber": 1183,
                        "lineChange": "none"
                      },
                      {
                        "line": "        attr = str(to_field)",
                        "lineNumber": 1184,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:",
                        "lineNumber": 1185,
                        "lineChange": "none"
                      },
                      {
                        "line": "        attr = obj._meta.pk.attname",
                        "lineNumber": 1186,
                        "lineChange": "none"
                      },
                      {
                        "line": "    value = obj.serializable_value(attr)",
                        "lineNumber": 1187,
                        "lineChange": "none"
                      },
                      {
                        "line": "    popup_response_data = json.dumps({",
                        "lineNumber": 1188,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'value': str(value),",
                        "lineNumber": 1189,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'obj': str(obj),",
                        "lineNumber": 1190,
                        "lineChange": "none"
                      },
                      {
                        "line": "    })",
                        "lineNumber": 1191,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return TemplateResponse(request, self.popup_response_template or [",
                        "lineNumber": 1192,
                        "lineChange": "none"
                      },
                      {
                        "line": "    })",
                        "lineNumber": 1198,
                        "lineChange": "none"
                      },
                      {
                        "line": "elif \"_continue\" in request.POST or (",
                        "lineNumber": 1200,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # Redirecting after \"Save as new\".",
                        "lineNumber": 1201,
                        "lineChange": "none"
                      },
                      {
                        "line": "        \"_saveasnew\" in request.POST and self.save_as_continue and",
                        "lineNumber": 1202,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.has_change_permission(request, obj)",
                        "lineNumber": 1203,
                        "lineChange": "none"
                      },
                      {
                        "line": "):",
                        "lineNumber": 1204,
                        "lineChange": "none"
                      },
                      {
                        "line": "    msg = _('The {name} “{obj}” was added successfully.')",
                        "lineNumber": 1205,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if self.has_change_permission(request, obj):",
                        "lineNumber": 1206,
                        "lineChange": "none"
                      },
                      {
                        "line": "        msg += ' ' + _('You may edit it again below.')",
                        "lineNumber": 1207,
                        "lineChange": "none"
                      },
                      {
                        "line": "    self.message_user(request, format_html(msg, **msg_dict), messages.SUCCESS)",
                        "lineNumber": 1208,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return HttpResponseRedirect(post_url_continue)",
                        "lineNumber": 1215,
                        "lineChange": "none"
                      },
                      {
                        "line": "elif \"_addanother\" in request.POST:",
                        "lineNumber": 1217,
                        "lineChange": "none"
                      },
                      {
                        "line": "    msg = format_html(",
                        "lineNumber": 1218,
                        "lineChange": "none"
                      },
                      {
                        "line": "        _('The {name} “{obj}” was added successfully. You may add another {name} below.'),",
                        "lineNumber": 1219,
                        "lineChange": "none"
                      },
                      {
                        "line": ")",
                        "lineNumber": 1221,
                        "lineChange": "none"
                      },
                      {
                        "line": "self.message_user(request, msg, messages.SUCCESS)",
                        "lineNumber": 1222,
                        "lineChange": "none"
                      },
                      {
                        "line": "redirect_url = request.path",
                        "lineNumber": 1223,
                        "lineChange": "none"
                      },
                      {
                        "line": "redirect_url = add_preserved_filters({'preserved_filters': preserved_filters, 'opts': opts}, redirect_url)",
                        "lineNumber": 1224,
                        "lineChange": "none"
                      },
                      {
                        "line": "return HttpResponseRedirect(redirect_url)",
                        "lineNumber": 1225,
                        "lineChange": "none"
                      },
                      {
                        "line": "        )",
                        "lineNumber": 1231,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.message_user(request, msg, messages.SUCCESS)",
                        "lineNumber": 1232,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return self.response_post_save_add(request, obj)",
                        "lineNumber": 1233,
                        "lineChange": "none"
                      },
                      {
                        "line": "def response_change(self, request, obj):",
                        "lineNumber": 1235,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1236,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Determine the HttpResponse for the change_view stage.",
                        "lineNumber": 1237,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1238,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if IS_POPUP_VAR in request.POST:",
                        "lineNumber": 1240,
                        "lineChange": "none"
                      },
                      {
                        "line": "        opts = obj._meta",
                        "lineNumber": 1241,
                        "lineChange": "none"
                      },
                      {
                        "line": "        to_field = request.POST.get(TO_FIELD_VAR)",
                        "lineNumber": 1242,
                        "lineChange": "none"
                      },
                      {
                        "line": "        attr = str(to_field) if to_field else opts.pk.attname",
                        "lineNumber": 1243,
                        "lineChange": "none"
                      },
                      {
                        "line": "        value = request.resolver_match.kwargs['object_id']",
                        "lineNumber": 1244,
                        "lineChange": "none"
                      },
                      {
                        "line": "        new_value = obj.serializable_value(attr)",
                        "lineNumber": 1245,
                        "lineChange": "none"
                      },
                      {
                        "line": "        popup_response_data = json.dumps({",
                        "lineNumber": 1246,
                        "lineChange": "none"
                      },
                      {
                        "line": "            'action': 'change',",
                        "lineNumber": 1247,
                        "lineChange": "none"
                      },
                      {
                        "line": "            'value': str(value),",
                        "lineNumber": 1248,
                        "lineChange": "none"
                      },
                      {
                        "line": "            'obj': str(obj),",
                        "lineNumber": 1249,
                        "lineChange": "none"
                      },
                      {
                        "line": "            'new_value': str(new_value),",
                        "lineNumber": 1250,
                        "lineChange": "none"
                      },
                      {
                        "line": "        })",
                        "lineNumber": 1251,
                        "lineChange": "none"
                      },
                      {
                        "line": "    })",
                        "lineNumber": 1258,
                        "lineChange": "none"
                      },
                      {
                        "line": "opts = self.model._meta",
                        "lineNumber": 1260,
                        "lineChange": "none"
                      },
                      {
                        "line": "preserved_filters = self.get_preserved_filters(request)",
                        "lineNumber": 1261,
                        "lineChange": "none"
                      },
                      {
                        "line": "msg_dict = {",
                        "lineNumber": 1263,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'name': opts.verbose_name,",
                        "lineNumber": 1264,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'obj': format_html('<a href=\"{}\">{}</a>', urlquote(request.path), obj),",
                        "lineNumber": 1265,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1266,
                        "lineChange": "none"
                      },
                      {
                        "line": "if \"_continue\" in request.POST:",
                        "lineNumber": 1267,
                        "lineChange": "none"
                      },
                      {
                        "line": "    msg = format_html(",
                        "lineNumber": 1268,
                        "lineChange": "none"
                      },
                      {
                        "line": "        _('The {name} “{obj}” was changed successfully. You may edit it again below.'),",
                        "lineNumber": 1269,
                        "lineChange": "none"
                      },
                      {
                        "line": "    )",
                        "lineNumber": 1271,
                        "lineChange": "none"
                      },
                      {
                        "line": "    self.message_user(request, msg, messages.SUCCESS)",
                        "lineNumber": 1272,
                        "lineChange": "none"
                      },
                      {
                        "line": "    redirect_url = request.path",
                        "lineNumber": 1273,
                        "lineChange": "none"
                      },
                      {
                        "line": "    redirect_url = add_preserved_filters({'preserved_filters': preserved_filters, 'opts': opts}, redirect_url)",
                        "lineNumber": 1274,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return HttpResponseRedirect(redirect_url)",
                        "lineNumber": 1275,
                        "lineChange": "none"
                      },
                      {
                        "line": "elif \"_saveasnew\" in request.POST:",
                        "lineNumber": 1277,
                        "lineChange": "none"
                      },
                      {
                        "line": "    msg = format_html(",
                        "lineNumber": 1278,
                        "lineChange": "none"
                      },
                      {
                        "line": "        _('The {name} “{obj}” was added successfully. You may edit it again below.'),",
                        "lineNumber": 1279,
                        "lineChange": "none"
                      },
                      {
                        "line": "    self.message_user(request, msg, messages.SUCCESS)",
                        "lineNumber": 1282,
                        "lineChange": "none"
                      },
                      {
                        "line": "    redirect_url = reverse('admin:%s_%s_change' %",
                        "lineNumber": 1283,
                        "lineChange": "none"
                      },
                      {
                        "line": "                           (opts.app_label, opts.model_name),",
                        "lineNumber": 1284,
                        "lineChange": "none"
                      },
                      {
                        "line": "                           args=(obj.pk,),",
                        "lineNumber": 1285,
                        "lineChange": "none"
                      },
                      {
                        "line": "                           current_app=self.admin_site.name)",
                        "lineNumber": 1286,
                        "lineChange": "none"
                      },
                      {
                        "line": "    redirect_url = add_preserved_filters({'preserved_filters': preserved_filters, 'opts': opts}, redirect_url)",
                        "lineNumber": 1287,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return HttpResponseRedirect(redirect_url)",
                        "lineNumber": 1288,
                        "lineChange": "none"
                      },
                      {
                        "line": "elif \"_addanother\" in request.POST:",
                        "lineNumber": 1290,
                        "lineChange": "none"
                      },
                      {
                        "line": "    msg = format_html(",
                        "lineNumber": 1291,
                        "lineChange": "none"
                      },
                      {
                        "line": "        _('The {name} “{obj}” was changed successfully. You may add another {name} below.'),",
                        "lineNumber": 1292,
                        "lineChange": "none"
                      },
                      {
                        "line": "self.message_user(request, msg, messages.SUCCESS)",
                        "lineNumber": 1295,
                        "lineChange": "none"
                      },
                      {
                        "line": "redirect_url = reverse('admin:%s_%s_add' %",
                        "lineNumber": 1296,
                        "lineChange": "none"
                      },
                      {
                        "line": "                       (opts.app_label, opts.model_name),",
                        "lineNumber": 1297,
                        "lineChange": "none"
                      },
                      {
                        "line": "                       current_app=self.admin_site.name)",
                        "lineNumber": 1298,
                        "lineChange": "none"
                      },
                      {
                        "line": "redirect_url = add_preserved_filters({'preserved_filters': preserved_filters, 'opts': opts}, redirect_url)",
                        "lineNumber": 1299,
                        "lineChange": "none"
                      },
                      {
                        "line": "return HttpResponseRedirect(redirect_url)",
                        "lineNumber": 1300,
                        "lineChange": "none"
                      },
                      {
                        "line": "        )",
                        "lineNumber": 1306,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.message_user(request, msg, messages.SUCCESS)",
                        "lineNumber": 1307,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return self.response_post_save_change(request, obj)",
                        "lineNumber": 1308,
                        "lineChange": "none"
                      },
                      {
                        "line": "def _response_post_save(self, request, obj):",
                        "lineNumber": 1310,
                        "lineChange": "none"
                      },
                      {
                        "line": "    opts = self.model._meta",
                        "lineNumber": 1311,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if self.has_view_or_change_permission(request):",
                        "lineNumber": 1312,
                        "lineChange": "none"
                      },
                      {
                        "line": "        post_url = reverse('admin:%s_%s_changelist' %",
                        "lineNumber": 1313,
                        "lineChange": "none"
                      },
                      {
                        "line": "                           (opts.app_label, opts.model_name),",
                        "lineNumber": 1314,
                        "lineChange": "none"
                      },
                      {
                        "line": "                           current_app=self.admin_site.name)",
                        "lineNumber": 1315,
                        "lineChange": "none"
                      },
                      {
                        "line": "        preserved_filters = self.get_preserved_filters(request)",
                        "lineNumber": 1316,
                        "lineChange": "none"
                      },
                      {
                        "line": "        post_url = add_preserved_filters({'preserved_filters': preserved_filters, 'opts': opts}, post_url)",
                        "lineNumber": 1317,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:",
                        "lineNumber": 1318,
                        "lineChange": "none"
                      },
                      {
                        "line": "        post_url = reverse('admin:index',",
                        "lineNumber": 1319,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return HttpResponseRedirect(post_url)",
                        "lineNumber": 1321,
                        "lineChange": "none"
                      },
                      {
                        "line": "def response_post_save_add(self, request, obj):",
                        "lineNumber": 1323,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1324,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Figure out where to redirect after the 'Save' button has been pressed",
                        "lineNumber": 1325,
                        "lineChange": "none"
                      },
                      {
                        "line": "    when adding a new object.",
                        "lineNumber": 1326,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1327,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return self._response_post_save(request, obj)",
                        "lineNumber": 1328,
                        "lineChange": "none"
                      },
                      {
                        "line": "def response_post_save_change(self, request, obj):",
                        "lineNumber": 1330,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1331,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Figure out where to redirect after the 'Save' button has been pressed",
                        "lineNumber": 1332,
                        "lineChange": "none"
                      },
                      {
                        "line": "    when editing an existing object.",
                        "lineNumber": 1333,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1334,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return self._response_post_save(request, obj)",
                        "lineNumber": 1335,
                        "lineChange": "none"
                      },
                      {
                        "line": "def response_action(self, request, queryset):",
                        "lineNumber": 1337,
                        "lineChange": "none"
                      },
                      {
                        "line": "# whose button was pushed.",
                        "lineNumber": 1346,
                        "lineChange": "none"
                      },
                      {
                        "line": "try:",
                        "lineNumber": 1347,
                        "lineChange": "none"
                      },
                      {
                        "line": "    action_index = int(request.POST.get('index', 0))",
                        "lineNumber": 1348,
                        "lineChange": "none"
                      },
                      {
                        "line": "except ValueError:",
                        "lineNumber": 1349,
                        "lineChange": "none"
                      },
                      {
                        "line": "    action_index = 0",
                        "lineNumber": 1350,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Construct the action form.",
                        "lineNumber": 1352,
                        "lineChange": "none"
                      },
                      {
                        "line": "data = request.POST.copy()",
                        "lineNumber": 1353,
                        "lineChange": "none"
                      },
                      {
                        "line": "data.pop(helpers.ACTION_CHECKBOX_NAME, None)",
                        "lineNumber": 1354,
                        "lineChange": "none"
                      },
                      {
                        "line": "data.pop(\"index\", None)",
                        "lineNumber": 1355,
                        "lineChange": "none"
                      },
                      {
                        "line": "# perform an action on it, so bail. Except we want to perform",
                        "lineNumber": 1376,
                        "lineChange": "none"
                      },
                      {
                        "line": "# the action explicitly on all objects.",
                        "lineNumber": 1377,
                        "lineChange": "none"
                      },
                      {
                        "line": "selected = request.POST.getlist(helpers.ACTION_CHECKBOX_NAME)",
                        "lineNumber": 1378,
                        "lineChange": "none"
                      },
                      {
                        "line": "if not selected and not select_across:",
                        "lineNumber": 1379,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # Reminder that something needs to be selected or nothing will happen",
                        "lineNumber": 1380,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return response",
                        "lineNumber": 1396,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:",
                        "lineNumber": 1397,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return HttpResponseRedirect(request.get_full_path())",
                        "lineNumber": 1398,
                        "lineChange": "none"
                      },
                      {
                        "line": "else:",
                        "lineNumber": 1399,
                        "lineChange": "none"
                      },
                      {
                        "line": "    msg = _(\"No action selected.\")",
                        "lineNumber": 1400,
                        "lineChange": "none"
                      },
                      {
                        "line": "Determine the HttpResponse for the delete_view stage.",
                        "lineNumber": 1406,
                        "lineChange": "none"
                      },
                      {
                        "line": "\"\"\"",
                        "lineNumber": 1407,
                        "lineChange": "none"
                      },
                      {
                        "line": "opts = self.model._meta",
                        "lineNumber": 1408,
                        "lineChange": "none"
                      },
                      {
                        "line": "if IS_POPUP_VAR in request.POST:",
                        "lineNumber": 1410,
                        "lineChange": "none"
                      },
                      {
                        "line": "    popup_response_data = json.dumps({",
                        "lineNumber": 1411,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'action': 'delete',",
                        "lineNumber": 1412,
                        "lineChange": "none"
                      },
                      {
                        "line": "})",
                        "lineNumber": 1414,
                        "lineChange": "none"
                      },
                      {
                        "line": "return TemplateResponse(request, self.popup_response_template or [",
                        "lineNumber": 1415,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'admin/%s/%s/popup_response.html' % (opts.app_label, opts.model_name),",
                        "lineNumber": 1416,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'admin/%s/popup_response.html' % opts.app_label,",
                        "lineNumber": 1417,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'admin/popup_response.html',",
                        "lineNumber": 1418,
                        "lineChange": "none"
                      },
                      {
                        "line": "], {",
                        "lineNumber": 1419,
                        "lineChange": "none"
                      },
                      {
                        "line": "request,",
                        "lineNumber": 1424,
                        "lineChange": "none"
                      },
                      {
                        "line": "_('The %(name)s “%(obj)s” was deleted successfully.') % {",
                        "lineNumber": 1425,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'name': opts.verbose_name,",
                        "lineNumber": 1426,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'obj': obj_display,",
                        "lineNumber": 1427,
                        "lineChange": "none"
                      },
                      {
                        "line": "},",
                        "lineNumber": 1428,
                        "lineChange": "none"
                      },
                      {
                        "line": "if self.has_change_permission(request, None):",
                        "lineNumber": 1432,
                        "lineChange": "none"
                      },
                      {
                        "line": "    post_url = reverse(",
                        "lineNumber": 1433,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'admin:%s_%s_changelist' % (opts.app_label, opts.model_name),",
                        "lineNumber": 1434,
                        "lineChange": "none"
                      },
                      {
                        "line": "        current_app=self.admin_site.name,",
                        "lineNumber": 1435,
                        "lineChange": "none"
                      },
                      {
                        "line": "    )",
                        "lineNumber": 1436,
                        "lineChange": "none"
                      },
                      {
                        "line": "    preserved_filters = self.get_preserved_filters(request)",
                        "lineNumber": 1437,
                        "lineChange": "none"
                      },
                      {
                        "line": "    post_url = add_preserved_filters(",
                        "lineNumber": 1438,
                        "lineChange": "none"
                      },
                      {
                        "line": "        {'preserved_filters': preserved_filters, 'opts': opts}, post_url",
                        "lineNumber": 1439,
                        "lineChange": "none"
                      },
                      {
                        "line": "    )",
                        "lineNumber": 1440,
                        "lineChange": "none"
                      },
                      {
                        "line": "else:",
                        "lineNumber": 1441,
                        "lineChange": "none"
                      },
                      {
                        "line": "def render_delete_form(self, request, context):",
                        "lineNumber": 1445,
                        "lineChange": "none"
                      },
                      {
                        "line": "    opts = self.model._meta",
                        "lineNumber": 1446,
                        "lineChange": "none"
                      },
                      {
                        "line": "    app_label = opts.app_label",
                        "lineNumber": 1447,
                        "lineChange": "none"
                      },
                      {
                        "line": "    request.current_app = self.admin_site.name",
                        "lineNumber": 1449,
                        "lineChange": "none"
                      },
                      {
                        "line": "request,",
                        "lineNumber": 1457,
                        "lineChange": "none"
                      },
                      {
                        "line": "self.delete_confirmation_template or [",
                        "lineNumber": 1458,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"admin/{}/{}/delete_confirmation.html\".format(app_label, opts.model_name),",
                        "lineNumber": 1459,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"admin/{}/delete_confirmation.html\".format(app_label),",
                        "lineNumber": 1460,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"admin/delete_confirmation.html\",",
                        "lineNumber": 1461,
                        "lineChange": "none"
                      },
                      {
                        "line": "    )",
                        "lineNumber": 1464,
                        "lineChange": "none"
                      },
                      {
                        "line": "def get_inline_formsets(self, request, formsets, inline_instances, obj=None):",
                        "lineNumber": 1466,
                        "lineChange": "none"
                      },
                      {
                        "line": "    inline_admin_formsets = []",
                        "lineNumber": 1467,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for inline, formset in zip(inline_instances, formsets):",
                        "lineNumber": 1468,
                        "lineChange": "none"
                      },
                      {
                        "line": "        fieldsets = list(inline.get_fieldsets(request, obj))",
                        "lineNumber": 1469,
                        "lineChange": "none"
                      },
                      {
                        "line": "        readonly = list(inline.get_readonly_fields(request, obj))",
                        "lineNumber": 1470,
                        "lineChange": "none"
                      },
                      {
                        "line": "        has_add_permission = inline.has_add_permission(request, obj)",
                        "lineNumber": 1471,
                        "lineChange": "none"
                      },
                      {
                        "line": "        has_change_permission = inline.has_change_permission(request, obj)",
                        "lineNumber": 1472,
                        "lineChange": "none"
                      },
                      {
                        "line": "        has_delete_permission = inline.has_delete_permission(request, obj)",
                        "lineNumber": 1473,
                        "lineChange": "none"
                      },
                      {
                        "line": "        has_view_permission = inline.has_view_permission(request, obj)",
                        "lineNumber": 1474,
                        "lineChange": "none"
                      },
                      {
                        "line": "        prepopulated = dict(inline.get_prepopulated_fields(request, obj))",
                        "lineNumber": 1475,
                        "lineChange": "none"
                      },
                      {
                        "line": "        inline_admin_formset = helpers.InlineAdminFormSet(",
                        "lineNumber": 1476,
                        "lineChange": "none"
                      },
                      {
                        "line": "            inline, formset, fieldsets, prepopulated, readonly, model_admin=self,",
                        "lineNumber": 1477,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return inline_admin_formsets",
                        "lineNumber": 1482,
                        "lineChange": "none"
                      },
                      {
                        "line": "def get_changeform_initial_data(self, request):",
                        "lineNumber": 1484,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1485,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Get the initial form data from the request's GET params.",
                        "lineNumber": 1486,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1487,
                        "lineChange": "none"
                      },
                      {
                        "line": "    initial = dict(request.GET.items())",
                        "lineNumber": 1488,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for k in initial:",
                        "lineNumber": 1489,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try:",
                        "lineNumber": 1490,
                        "lineChange": "none"
                      },
                      {
                        "line": "            f = self.model._meta.get_field(k)",
                        "lineNumber": 1491,
                        "lineChange": "none"
                      },
                      {
                        "line": "        except FieldDoesNotExist:",
                        "lineNumber": 1492,
                        "lineChange": "none"
                      },
                      {
                        "line": "            continue",
                        "lineNumber": 1493,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # We have to special-case M2Ms as a list of comma-separated PKs.",
                        "lineNumber": 1494,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if isinstance(f, models.ManyToManyField):",
                        "lineNumber": 1495,
                        "lineChange": "none"
                      },
                      {
                        "line": "            initial[k] = initial[k].split(\",\")",
                        "lineNumber": 1496,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return initial",
                        "lineNumber": 1497,
                        "lineChange": "none"
                      },
                      {
                        "line": "def _get_obj_does_not_exist_redirect(self, request, opts, object_id):",
                        "lineNumber": 1499,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1500,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Create a message informing the user that the object doesn't exist",
                        "lineNumber": 1501,
                        "lineChange": "none"
                      },
                      {
                        "line": "\"\"\"",
                        "lineNumber": 1503,
                        "lineChange": "none"
                      },
                      {
                        "line": "msg = _('%(name)s with ID “%(key)s” doesn’t exist. Perhaps it was deleted?') % {",
                        "lineNumber": 1504,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'name': opts.verbose_name,",
                        "lineNumber": 1505,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'key': unquote(object_id),",
                        "lineNumber": 1506,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1507,
                        "lineChange": "none"
                      },
                      {
                        "line": "@csrf_protect_m",
                        "lineNumber": 1512,
                        "lineChange": "none"
                      },
                      {
                        "line": "def changeform_view(self, request, object_id=None, form_url='', extra_context=None):",
                        "lineNumber": 1513,
                        "lineChange": "none"
                      },
                      {
                        "line": "    with transaction.atomic(using=router.db_for_write(self.model)):",
                        "lineNumber": 1514,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return self._changeform_view(request, object_id, form_url, extra_context)",
                        "lineNumber": 1515,
                        "lineChange": "none"
                      },
                      {
                        "line": "def _changeform_view(self, request, object_id, form_url, extra_context):",
                        "lineNumber": 1517,
                        "lineChange": "none"
                      },
                      {
                        "line": "    to_field = request.POST.get(TO_FIELD_VAR, request.GET.get(TO_FIELD_VAR))",
                        "lineNumber": 1518,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if to_field and not self.to_field_allowed(request, to_field):",
                        "lineNumber": 1519,
                        "lineChange": "none"
                      },
                      {
                        "line": "        raise DisallowedModelAdminToField(\"The field %s cannot be referenced.\" % to_field)",
                        "lineNumber": 1520,
                        "lineChange": "none"
                      },
                      {
                        "line": "    model = self.model",
                        "lineNumber": 1522,
                        "lineChange": "none"
                      },
                      {
                        "line": "    opts = model._meta",
                        "lineNumber": 1523,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if request.method == 'POST' and '_saveasnew' in request.POST:",
                        "lineNumber": 1525,
                        "lineChange": "none"
                      },
                      {
                        "line": "        object_id = None",
                        "lineNumber": 1526,
                        "lineChange": "none"
                      },
                      {
                        "line": "else:",
                        "lineNumber": 1535,
                        "lineChange": "none"
                      },
                      {
                        "line": "    obj = self.get_object(request, unquote(object_id), to_field)",
                        "lineNumber": 1536,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if not self.has_view_or_change_permission(request, obj):",
                        "lineNumber": 1538,
                        "lineChange": "none"
                      },
                      {
                        "line": "        raise PermissionDenied",
                        "lineNumber": 1539,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if obj is None:",
                        "lineNumber": 1541,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return self._get_obj_does_not_exist_redirect(request, opts, object_id)",
                        "lineNumber": 1542,
                        "lineChange": "none"
                      },
                      {
                        "line": "ModelForm = self.get_form(request, obj, change=not add)",
                        "lineNumber": 1544,
                        "lineChange": "none"
                      },
                      {
                        "line": "if request.method == 'POST':",
                        "lineNumber": 1545,
                        "lineChange": "none"
                      },
                      {
                        "line": "    form = ModelForm(request.POST, request.FILES, instance=obj)",
                        "lineNumber": 1546,
                        "lineChange": "none"
                      },
                      {
                        "line": "    form_validated = form.is_valid()",
                        "lineNumber": 1547,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if form_validated:",
                        "lineNumber": 1548,
                        "lineChange": "none"
                      },
                      {
                        "line": "        new_object = self.save_form(request, form, change=not add)",
                        "lineNumber": 1549,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:",
                        "lineNumber": 1550,
                        "lineChange": "none"
                      },
                      {
                        "line": "        new_object = form.instance",
                        "lineNumber": 1551,
                        "lineChange": "none"
                      },
                      {
                        "line": "    formsets, inline_instances = self._create_formsets(request, new_object, change=not add)",
                        "lineNumber": 1552,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if all_valid(formsets) and form_validated:",
                        "lineNumber": 1553,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.save_model(request, new_object, form, not add)",
                        "lineNumber": 1554,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.save_related(request, form, formsets, not add)",
                        "lineNumber": 1555,
                        "lineChange": "none"
                      },
                      {
                        "line": "        change_message = self.construct_change_message(request, form, formsets, add)",
                        "lineNumber": 1556,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if add:",
                        "lineNumber": 1557,
                        "lineChange": "none"
                      },
                      {
                        "line": "            self.log_addition(request, new_object, change_message)",
                        "lineNumber": 1558,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return self.response_add(request, new_object)",
                        "lineNumber": 1559,
                        "lineChange": "none"
                      },
                      {
                        "line": "        else:",
                        "lineNumber": 1560,
                        "lineChange": "none"
                      },
                      {
                        "line": "            self.log_change(request, new_object, change_message)",
                        "lineNumber": 1561,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return self.response_change(request, new_object)",
                        "lineNumber": 1562,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:",
                        "lineNumber": 1563,
                        "lineChange": "none"
                      },
                      {
                        "line": "        form_validated = False",
                        "lineNumber": 1564,
                        "lineChange": "none"
                      },
                      {
                        "line": "else:",
                        "lineNumber": 1565,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if add:",
                        "lineNumber": 1566,
                        "lineChange": "none"
                      },
                      {
                        "line": "        initial = self.get_changeform_initial_data(request)",
                        "lineNumber": 1567,
                        "lineChange": "none"
                      },
                      {
                        "line": "        form = ModelForm(initial=initial)",
                        "lineNumber": 1568,
                        "lineChange": "none"
                      },
                      {
                        "line": "        formsets, inline_instances = self._create_formsets(request, form.instance, change=False)",
                        "lineNumber": 1569,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:",
                        "lineNumber": 1570,
                        "lineChange": "none"
                      },
                      {
                        "line": "        form = ModelForm(instance=obj)",
                        "lineNumber": 1571,
                        "lineChange": "none"
                      },
                      {
                        "line": "        formsets, inline_instances = self._create_formsets(request, obj, change=True)",
                        "lineNumber": 1572,
                        "lineChange": "none"
                      },
                      {
                        "line": "if not add and not self.has_change_permission(request, obj):",
                        "lineNumber": 1574,
                        "lineChange": "none"
                      },
                      {
                        "line": "    readonly_fields = flatten_fieldsets(self.get_fieldsets(request, obj))",
                        "lineNumber": 1575,
                        "lineChange": "none"
                      },
                      {
                        "line": "else:",
                        "lineNumber": 1576,
                        "lineChange": "none"
                      },
                      {
                        "line": "    readonly_fields = self.get_readonly_fields(request, obj)",
                        "lineNumber": 1577,
                        "lineChange": "none"
                      },
                      {
                        "line": "adminForm = helpers.AdminForm(",
                        "lineNumber": 1578,
                        "lineChange": "none"
                      },
                      {
                        "line": "    form,",
                        "lineNumber": 1579,
                        "lineChange": "none"
                      },
                      {
                        "line": "    list(self.get_fieldsets(request, obj)),",
                        "lineNumber": 1580,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # Clear prepopulated fields on a view-only form to avoid a crash.",
                        "lineNumber": 1581,
                        "lineChange": "none"
                      },
                      {
                        "line": "    self.get_prepopulated_fields(request, obj) if add or self.has_change_permission(request, obj) else {},",
                        "lineNumber": 1582,
                        "lineChange": "none"
                      },
                      {
                        "line": "    readonly_fields,",
                        "lineNumber": 1583,
                        "lineChange": "none"
                      },
                      {
                        "line": "    model_admin=self)",
                        "lineNumber": 1584,
                        "lineChange": "none"
                      },
                      {
                        "line": "media = self.media + adminForm.media",
                        "lineNumber": 1585,
                        "lineChange": "none"
                      },
                      {
                        "line": "inline_formsets = self.get_inline_formsets(request, formsets, inline_instances, obj)",
                        "lineNumber": 1587,
                        "lineChange": "none"
                      },
                      {
                        "line": "for inline_formset in inline_formsets:",
                        "lineNumber": 1588,
                        "lineChange": "none"
                      },
                      {
                        "line": "    media = media + inline_formset.media",
                        "lineNumber": 1589,
                        "lineChange": "none"
                      },
                      {
                        "line": "if add:",
                        "lineNumber": 1591,
                        "lineChange": "none"
                      },
                      {
                        "line": "    title = _('Add %s')",
                        "lineNumber": 1592,
                        "lineChange": "none"
                      },
                      {
                        "line": "elif self.has_change_permission(request, obj):",
                        "lineNumber": 1593,
                        "lineChange": "none"
                      },
                      {
                        "line": "    title = _('Change %s')",
                        "lineNumber": 1594,
                        "lineChange": "none"
                      },
                      {
                        "line": "else:",
                        "lineNumber": 1595,
                        "lineChange": "none"
                      },
                      {
                        "line": "context = {",
                        "lineNumber": 1597,
                        "lineChange": "none"
                      },
                      {
                        "line": "    **self.admin_site.each_context(request),",
                        "lineNumber": 1598,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'title': title % opts.verbose_name,",
                        "lineNumber": 1599,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'adminform': adminForm,",
                        "lineNumber": 1600,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'object_id': object_id,",
                        "lineNumber": 1601,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'original': obj,",
                        "lineNumber": 1602,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'is_popup': IS_POPUP_VAR in request.POST or IS_POPUP_VAR in request.GET,",
                        "lineNumber": 1603,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'to_field': to_field,",
                        "lineNumber": 1604,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'media': media,",
                        "lineNumber": 1605,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Hide the \"Save\" and \"Save and continue\" buttons if \"Save as New\" was",
                        "lineNumber": 1611,
                        "lineChange": "none"
                      },
                      {
                        "line": "# previously chosen to prevent the interface from getting confusing.",
                        "lineNumber": 1612,
                        "lineChange": "none"
                      },
                      {
                        "line": "if request.method == 'POST' and not form_validated and \"_saveasnew\" in request.POST:",
                        "lineNumber": 1613,
                        "lineChange": "none"
                      },
                      {
                        "line": "    context['show_save'] = False",
                        "lineNumber": 1614,
                        "lineChange": "none"
                      },
                      {
                        "line": "    context['show_save_and_continue'] = False",
                        "lineNumber": 1615,
                        "lineChange": "none"
                      },
                      {
                        "line": "    context.update(extra_context or {})",
                        "lineNumber": 1619,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return self.render_change_form(request, context, add=add, change=not add, obj=obj, form_url=form_url)",
                        "lineNumber": 1621,
                        "lineChange": "none"
                      },
                      {
                        "line": "def autocomplete_view(self, request):",
                        "lineNumber": 1623,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return AutocompleteJsonView.as_view(model_admin=self)(request)",
                        "lineNumber": 1624,
                        "lineChange": "none"
                      },
                      {
                        "line": "def add_view(self, request, form_url='', extra_context=None):",
                        "lineNumber": 1626,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return self.changeform_view(request, None, form_url, extra_context)",
                        "lineNumber": 1627,
                        "lineChange": "none"
                      },
                      {
                        "line": "def change_view(self, request, object_id, form_url='', extra_context=None):",
                        "lineNumber": 1629,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return self.changeform_view(request, object_id, form_url, extra_context)",
                        "lineNumber": 1630,
                        "lineChange": "none"
                      },
                      {
                        "line": "def _get_edited_object_pks(self, request, prefix):",
                        "lineNumber": 1632,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"Return POST data values of list_editable primary keys.\"\"\"",
                        "lineNumber": 1633,
                        "lineChange": "none"
                      },
                      {
                        "line": "    pk_pattern = re.compile(r'{}-\\d+-{}$'.format(prefix, self.model._meta.pk.name))",
                        "lineNumber": 1634,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    pk_pattern = re.compile(",
                        "lineNumber": 1634,
                        "lineChange": "added"
                      },
                      {
                        "line": "        r'{}-\\d+-{}$'.format(re.escape(prefix), self.model._meta.pk.name)",
                        "lineNumber": 1635,
                        "lineChange": "added"
                      },
                      {
                        "line": "    )",
                        "lineNumber": 1636,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return [value for key, value in request.POST.items() if pk_pattern.match(key)]",
                        "lineNumber": 1637,
                        "lineChange": "none"
                      },
                      {
                        "line": "def _get_list_editable_queryset(self, request, prefix):",
                        "lineNumber": 1639,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1640,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Based on POST data, return a queryset of the objects that were edited",
                        "lineNumber": 1641,
                        "lineChange": "none"
                      },
                      {
                        "line": "    via list_editable.",
                        "lineNumber": 1642,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1643,
                        "lineChange": "none"
                      },
                      {
                        "line": "    object_pks = self._get_edited_object_pks(request, prefix)",
                        "lineNumber": 1644,
                        "lineChange": "none"
                      },
                      {
                        "line": "    queryset = self.get_queryset(request)",
                        "lineNumber": 1645,
                        "lineChange": "none"
                      },
                      {
                        "line": "    validate = queryset.model._meta.pk.to_python",
                        "lineNumber": 1646,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try:",
                        "lineNumber": 1647,
                        "lineChange": "none"
                      },
                      {
                        "line": "        for pk in object_pks:",
                        "lineNumber": 1648,
                        "lineChange": "none"
                      },
                      {
                        "line": "            validate(pk)",
                        "lineNumber": 1649,
                        "lineChange": "none"
                      },
                      {
                        "line": "    except ValidationError:",
                        "lineNumber": 1650,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # Disable the optimization if the POST data was tampered with.",
                        "lineNumber": 1651,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return queryset",
                        "lineNumber": 1652,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return queryset.filter(pk__in=object_pks)",
                        "lineNumber": 1653,
                        "lineChange": "none"
                      },
                      {
                        "line": "@csrf_protect_m",
                        "lineNumber": 1655,
                        "lineChange": "none"
                      },
                      {
                        "line": "def changelist_view(self, request, extra_context=None):",
                        "lineNumber": 1656,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1657,
                        "lineChange": "none"
                      },
                      {
                        "line": "    The 'change list' admin view for this model.",
                        "lineNumber": 1658,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1659,
                        "lineChange": "none"
                      },
                      {
                        "line": "    from django.contrib.admin.views.main import ERROR_FLAG",
                        "lineNumber": 1660,
                        "lineChange": "none"
                      },
                      {
                        "line": "    opts = self.model._meta",
                        "lineNumber": 1661,
                        "lineChange": "none"
                      },
                      {
                        "line": "    app_label = opts.app_label",
                        "lineNumber": 1662,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if not self.has_view_or_change_permission(request):",
                        "lineNumber": 1663,
                        "lineChange": "none"
                      },
                      {
                        "line": "        raise PermissionDenied",
                        "lineNumber": 1664,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # something is screwed up with the database, so display an error",
                        "lineNumber": 1673,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # page.",
                        "lineNumber": 1674,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if ERROR_FLAG in request.GET:",
                        "lineNumber": 1675,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return SimpleTemplateResponse('admin/invalid_setup.html', {",
                        "lineNumber": 1676,
                        "lineChange": "none"
                      },
                      {
                        "line": "            'title': _('Database error'),",
                        "lineNumber": 1677,
                        "lineChange": "none"
                      },
                      {
                        "line": "        })",
                        "lineNumber": 1678,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return HttpResponseRedirect(request.path + '?' + ERROR_FLAG + '=1')",
                        "lineNumber": 1679,
                        "lineChange": "none"
                      },
                      {
                        "line": "# If the request was POSTed, this might be a bulk action or a bulk",
                        "lineNumber": 1681,
                        "lineChange": "none"
                      },
                      {
                        "line": "# below.",
                        "lineNumber": 1684,
                        "lineChange": "none"
                      },
                      {
                        "line": "action_failed = False",
                        "lineNumber": 1685,
                        "lineChange": "none"
                      },
                      {
                        "line": "selected = request.POST.getlist(helpers.ACTION_CHECKBOX_NAME)",
                        "lineNumber": 1686,
                        "lineChange": "none"
                      },
                      {
                        "line": "actions = self.get_actions(request)",
                        "lineNumber": 1688,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Actions with no confirmation",
                        "lineNumber": 1689,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (actions and request.method == 'POST' and",
                        "lineNumber": 1690,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'index' in request.POST and '_save' not in request.POST):",
                        "lineNumber": 1691,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if selected:",
                        "lineNumber": 1692,
                        "lineChange": "none"
                      },
                      {
                        "line": "        response = self.response_action(request, queryset=cl.get_queryset(request))",
                        "lineNumber": 1693,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Actions with confirmation",
                        "lineNumber": 1704,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (actions and request.method == 'POST' and",
                        "lineNumber": 1705,
                        "lineChange": "none"
                      },
                      {
                        "line": "        helpers.ACTION_CHECKBOX_NAME in request.POST and",
                        "lineNumber": 1706,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'index' not in request.POST and '_save' not in request.POST):",
                        "lineNumber": 1707,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if selected:",
                        "lineNumber": 1708,
                        "lineChange": "none"
                      },
                      {
                        "line": "        response = self.response_action(request, queryset=cl.get_queryset(request))",
                        "lineNumber": 1709,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # form if the user refreshes the browser or uses the \"No, take",
                        "lineNumber": 1717,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # me back\" button on the action confirmation page.",
                        "lineNumber": 1718,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return HttpResponseRedirect(request.get_full_path())",
                        "lineNumber": 1719,
                        "lineChange": "none"
                      },
                      {
                        "line": "# If we're allowing changelist editing, we need to construct a formset",
                        "lineNumber": 1721,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Handle POSTed bulk-edit data.",
                        "lineNumber": 1726,
                        "lineChange": "none"
                      },
                      {
                        "line": "if request.method == 'POST' and cl.list_editable and '_save' in request.POST:",
                        "lineNumber": 1727,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if not self.has_change_permission(request):",
                        "lineNumber": 1728,
                        "lineChange": "none"
                      },
                      {
                        "line": "        raise PermissionDenied",
                        "lineNumber": 1729,
                        "lineChange": "none"
                      },
                      {
                        "line": "    FormSet = self.get_changelist_formset(request)",
                        "lineNumber": 1730,
                        "lineChange": "none"
                      },
                      {
                        "line": "    modified_objects = self._get_list_editable_queryset(request, FormSet.get_default_prefix())",
                        "lineNumber": 1731,
                        "lineChange": "none"
                      },
                      {
                        "line": "    formset = cl.formset = FormSet(request.POST, request.FILES, queryset=modified_objects)",
                        "lineNumber": 1732,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if formset.is_valid():",
                        "lineNumber": 1733,
                        "lineChange": "none"
                      },
                      {
                        "line": "        changecount = 0",
                        "lineNumber": 1734,
                        "lineChange": "none"
                      },
                      {
                        "line": "        for form in formset.forms:",
                        "lineNumber": 1735,
                        "lineChange": "none"
                      },
                      {
                        "line": "            if form.has_changed():",
                        "lineNumber": 1736,
                        "lineChange": "none"
                      },
                      {
                        "line": "                obj = self.save_form(request, form, change=True)",
                        "lineNumber": 1737,
                        "lineChange": "none"
                      },
                      {
                        "line": "                self.save_model(request, obj, form, change=True)",
                        "lineNumber": 1738,
                        "lineChange": "none"
                      },
                      {
                        "line": "                self.save_related(request, form, formsets=[], change=True)",
                        "lineNumber": 1739,
                        "lineChange": "none"
                      },
                      {
                        "line": "                change_msg = self.construct_change_message(request, form, None)",
                        "lineNumber": 1740,
                        "lineChange": "none"
                      },
                      {
                        "line": "                self.log_change(request, obj, change_msg)",
                        "lineNumber": 1741,
                        "lineChange": "none"
                      },
                      {
                        "line": "                changecount += 1",
                        "lineNumber": 1742,
                        "lineChange": "none"
                      },
                      {
                        "line": "            ) % {",
                        "lineNumber": 1749,
                        "lineChange": "none"
                      },
                      {
                        "line": "                'count': changecount,",
                        "lineNumber": 1750,
                        "lineChange": "none"
                      },
                      {
                        "line": "                'name': model_ngettext(opts, changecount),",
                        "lineNumber": 1751,
                        "lineChange": "none"
                      },
                      {
                        "line": "            }",
                        "lineNumber": 1752,
                        "lineChange": "none"
                      },
                      {
                        "line": "            self.message_user(request, msg, messages.SUCCESS)",
                        "lineNumber": 1753,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return HttpResponseRedirect(request.get_full_path())",
                        "lineNumber": 1755,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Handle GET -- construct a formset for display.",
                        "lineNumber": 1757,
                        "lineChange": "none"
                      },
                      {
                        "line": "context = {",
                        "lineNumber": 1782,
                        "lineChange": "none"
                      },
                      {
                        "line": "    **self.admin_site.each_context(request),",
                        "lineNumber": 1783,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'module_name': str(opts.verbose_name_plural),",
                        "lineNumber": 1784,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'selection_note': _('0 of %(cnt)s selected') % {'cnt': len(cl.result_list)},",
                        "lineNumber": 1785,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'selection_note_all': selection_note_all % {'total_count': cl.result_count},",
                        "lineNumber": 1786,
                        "lineChange": "none"
                      },
                      {
                        "line": "return TemplateResponse(request, self.change_list_template or [",
                        "lineNumber": 1804,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'admin/%s/%s/change_list.html' % (app_label, opts.model_name),",
                        "lineNumber": 1805,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'admin/%s/change_list.html' % app_label,",
                        "lineNumber": 1806,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'admin/change_list.html'",
                        "lineNumber": 1807,
                        "lineChange": "none"
                      },
                      {
                        "line": "@csrf_protect_m",
                        "lineNumber": 1817,
                        "lineChange": "none"
                      },
                      {
                        "line": "def delete_view(self, request, object_id, extra_context=None):",
                        "lineNumber": 1818,
                        "lineChange": "none"
                      },
                      {
                        "line": "    with transaction.atomic(using=router.db_for_write(self.model)):",
                        "lineNumber": 1819,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return self._delete_view(request, object_id, extra_context)",
                        "lineNumber": 1820,
                        "lineChange": "none"
                      },
                      {
                        "line": "def _delete_view(self, request, object_id, extra_context):",
                        "lineNumber": 1822,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"The 'delete' admin view for this model.\"",
                        "lineNumber": 1823,
                        "lineChange": "none"
                      },
                      {
                        "line": "    opts = self.model._meta",
                        "lineNumber": 1824,
                        "lineChange": "none"
                      },
                      {
                        "line": "    app_label = opts.app_label",
                        "lineNumber": 1825,
                        "lineChange": "none"
                      },
                      {
                        "line": "    to_field = request.POST.get(TO_FIELD_VAR, request.GET.get(TO_FIELD_VAR))",
                        "lineNumber": 1827,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if to_field and not self.to_field_allowed(request, to_field):",
                        "lineNumber": 1828,
                        "lineChange": "none"
                      },
                      {
                        "line": "        raise DisallowedModelAdminToField(\"The field %s cannot be referenced.\" % to_field)",
                        "lineNumber": 1829,
                        "lineChange": "none"
                      },
                      {
                        "line": "    obj = self.get_object(request, unquote(object_id), to_field)",
                        "lineNumber": 1831,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if not self.has_delete_permission(request, obj):",
                        "lineNumber": 1833,
                        "lineChange": "none"
                      },
                      {
                        "line": "        raise PermissionDenied",
                        "lineNumber": 1834,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if obj is None:",
                        "lineNumber": 1836,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return self._get_obj_does_not_exist_redirect(request, opts, object_id)",
                        "lineNumber": 1837,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # Populate deleted_objects, a data structure of all related objects that",
                        "lineNumber": 1839,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # will also be deleted.",
                        "lineNumber": 1840,
                        "lineChange": "none"
                      },
                      {
                        "line": "    deleted_objects, model_count, perms_needed, protected = self.get_deleted_objects([obj], request)",
                        "lineNumber": 1841,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if request.POST and not protected:  # The user has confirmed the deletion.",
                        "lineNumber": 1843,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if perms_needed:",
                        "lineNumber": 1844,
                        "lineChange": "none"
                      },
                      {
                        "line": "            raise PermissionDenied",
                        "lineNumber": 1845,
                        "lineChange": "none"
                      },
                      {
                        "line": "        obj_display = str(obj)",
                        "lineNumber": 1846,
                        "lineChange": "none"
                      },
                      {
                        "line": "        attr = str(to_field) if to_field else opts.pk.attname",
                        "lineNumber": 1847,
                        "lineChange": "none"
                      },
                      {
                        "line": "        obj_id = obj.serializable_value(attr)",
                        "lineNumber": 1848,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.log_deletion(request, obj, obj_display)",
                        "lineNumber": 1849,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.delete_model(request, obj)",
                        "lineNumber": 1850,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return self.response_delete(request, obj_display, obj_id)",
                        "lineNumber": 1852,
                        "lineChange": "none"
                      },
                      {
                        "line": "    object_name = str(opts.verbose_name)",
                        "lineNumber": 1854,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if perms_needed or protected:",
                        "lineNumber": 1856,
                        "lineChange": "none"
                      },
                      {
                        "line": "'perms_lacking': perms_needed,",
                        "lineNumber": 1868,
                        "lineChange": "none"
                      },
                      {
                        "line": "'protected': protected,",
                        "lineNumber": 1869,
                        "lineChange": "none"
                      },
                      {
                        "line": "'opts': opts,",
                        "lineNumber": 1870,
                        "lineChange": "none"
                      },
                      {
                        "line": "'app_label': app_label,",
                        "lineNumber": 1871,
                        "lineChange": "none"
                      },
                      {
                        "line": "'preserved_filters': self.get_preserved_filters(request),",
                        "lineNumber": 1872,
                        "lineChange": "none"
                      },
                      {
                        "line": "'is_popup': IS_POPUP_VAR in request.POST or IS_POPUP_VAR in request.GET,",
                        "lineNumber": 1873,
                        "lineChange": "none"
                      },
                      {
                        "line": "'to_field': to_field,",
                        "lineNumber": 1874,
                        "lineChange": "none"
                      },
                      {
                        "line": "**(extra_context or {}),",
                        "lineNumber": 1875,
                        "lineChange": "none"
                      },
                      {
                        "line": "from django.contrib.admin.models import LogEntry",
                        "lineNumber": 1882,
                        "lineChange": "none"
                      },
                      {
                        "line": "# First check if the user can see this history.",
                        "lineNumber": 1883,
                        "lineChange": "none"
                      },
                      {
                        "line": "model = self.model",
                        "lineNumber": 1884,
                        "lineChange": "none"
                      },
                      {
                        "line": "obj = self.get_object(request, unquote(object_id))",
                        "lineNumber": 1885,
                        "lineChange": "none"
                      },
                      {
                        "line": "if obj is None:",
                        "lineNumber": 1886,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return self._get_obj_does_not_exist_redirect(request, model._meta, object_id)",
                        "lineNumber": 1887,
                        "lineChange": "none"
                      },
                      {
                        "line": "if not self.has_view_or_change_permission(request, obj):",
                        "lineNumber": 1889,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Then get the history for this object.",
                        "lineNumber": 1892,
                        "lineChange": "none"
                      },
                      {
                        "line": "opts = model._meta",
                        "lineNumber": 1893,
                        "lineChange": "none"
                      },
                      {
                        "line": "app_label = opts.app_label",
                        "lineNumber": 1894,
                        "lineChange": "none"
                      },
                      {
                        "line": "action_list = LogEntry.objects.filter(",
                        "lineNumber": 1895,
                        "lineChange": "none"
                      },
                      {
                        "line": "    object_id=unquote(object_id),",
                        "lineNumber": 1896,
                        "lineChange": "none"
                      },
                      {
                        "line": "    content_type=get_content_type_for_model(model)",
                        "lineNumber": 1897,
                        "lineChange": "none"
                      },
                      {
                        "line": ").select_related().order_by('action_time')",
                        "lineNumber": 1898,
                        "lineChange": "none"
                      },
                      {
                        "line": "'title': _('Change history: %s') % obj,",
                        "lineNumber": 1902,
                        "lineChange": "none"
                      },
                      {
                        "line": "'action_list': action_list,",
                        "lineNumber": 1903,
                        "lineChange": "none"
                      },
                      {
                        "line": "'module_name': str(capfirst(opts.verbose_name_plural)),",
                        "lineNumber": 1904,
                        "lineChange": "none"
                      },
                      {
                        "line": "'object': obj,",
                        "lineNumber": 1905,
                        "lineChange": "none"
                      },
                      {
                        "line": "'opts': opts,",
                        "lineNumber": 1906,
                        "lineChange": "none"
                      },
                      {
                        "line": "'preserved_filters': self.get_preserved_filters(request),",
                        "lineNumber": 1907,
                        "lineChange": "none"
                      },
                      {
                        "line": "**(extra_context or {}),",
                        "lineNumber": 1908,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return TemplateResponse(request, self.object_history_template or [",
                        "lineNumber": 1913,
                        "lineChange": "none"
                      },
                      {
                        "line": "        \"admin/%s/%s/object_history.html\" % (app_label, opts.model_name),",
                        "lineNumber": 1914,
                        "lineChange": "none"
                      },
                      {
                        "line": "        \"admin/%s/object_history.html\" % app_label,",
                        "lineNumber": 1915,
                        "lineChange": "none"
                      },
                      {
                        "line": "        \"admin/object_history.html\"",
                        "lineNumber": 1916,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ], context)",
                        "lineNumber": 1917,
                        "lineChange": "none"
                      },
                      {
                        "line": "def _create_formsets(self, request, obj, change):",
                        "lineNumber": 1919,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"Helper function to generate formsets for add/change_view.\"",
                        "lineNumber": 1920,
                        "lineChange": "none"
                      },
                      {
                        "line": "    formsets = []",
                        "lineNumber": 1921,
                        "lineChange": "none"
                      },
                      {
                        "line": "get_formsets_args = [request]",
                        "lineNumber": 1924,
                        "lineChange": "none"
                      },
                      {
                        "line": "if change:",
                        "lineNumber": 1925,
                        "lineChange": "none"
                      },
                      {
                        "line": "    get_formsets_args.append(obj)",
                        "lineNumber": 1926,
                        "lineChange": "none"
                      },
                      {
                        "line": "for FormSet, inline in self.get_formsets_with_inlines(*get_formsets_args):",
                        "lineNumber": 1927,
                        "lineChange": "none"
                      },
                      {
                        "line": "    prefix = FormSet.get_default_prefix()",
                        "lineNumber": 1928,
                        "lineChange": "none"
                      },
                      {
                        "line": "    prefix = \"%s-%s\" % (prefix, prefixes[prefix])",
                        "lineNumber": 1931,
                        "lineChange": "none"
                      },
                      {
                        "line": "formset_params = {",
                        "lineNumber": 1932,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'instance': obj,",
                        "lineNumber": 1933,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'prefix': prefix,",
                        "lineNumber": 1934,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'queryset': inline.get_queryset(request),",
                        "lineNumber": 1935,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1936,
                        "lineChange": "none"
                      },
                      {
                        "line": "if request.method == 'POST':",
                        "lineNumber": 1937,
                        "lineChange": "none"
                      },
                      {
                        "line": "    formset_params.update({",
                        "lineNumber": 1938,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'data': request.POST.copy(),",
                        "lineNumber": 1939,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'files': request.FILES,",
                        "lineNumber": 1940,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'save_as_new': '_saveasnew' in request.POST",
                        "lineNumber": 1941,
                        "lineChange": "none"
                      },
                      {
                        "line": "    })",
                        "lineNumber": 1942,
                        "lineChange": "none"
                      },
                      {
                        "line": "formset = FormSet(**formset_params)",
                        "lineNumber": 1943,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Bypass validation of each view-only inline form (since the form's",
                        "lineNumber": 1952,
                        "lineChange": "none"
                      },
                      {
                        "line": "# data won't be in request.POST), unless the form was deleted.",
                        "lineNumber": 1953,
                        "lineChange": "none"
                      },
                      {
                        "line": "if not inline.has_change_permission(request, obj if change else None):",
                        "lineNumber": 1954,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for index, form in enumerate(formset.initial_forms):",
                        "lineNumber": 1955,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if user_deleted_form(request, obj, formset, index):",
                        "lineNumber": 1956,
                        "lineChange": "none"
                      },
                      {
                        "line": "            continue",
                        "lineNumber": 1957,
                        "lineChange": "none"
                      },
                      {
                        "line": "        form._errors = {}",
                        "lineNumber": 1958,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 74,
                "cwe": [
                  "CWE-400"
                ]
              }
            },
            {
              "id": "python/Deserialization/test",
              "name": "Deserialization/test",
              "shortDescription": {
                "text": "Deserialization of Untrusted Data"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n\nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n\n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "Deserialization",
                  "Security",
                  "InTest",
                  "SourceLocalEnv",
                  "SourceEnvironmentVariable",
                  "Taint"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/Maximus5/ConEmu/commit/7c972aa5f5213a4747d42e90e4910bbfb2dab39a?diff=split#diff-30b7b45f353ab9a3e5d142c3c82210e7L291",
                    "lines": [
                      {
                        "line": "def pull(self, lang_id):",
                        "lineNumber": 300,
                        "lineChange": "none"
                      },
                      {
                        "line": "    print('Pulling language {} from Transifex'.format(lang_id))",
                        "lineNumber": 301,
                        "lineChange": "none"
                      },
                      {
                        "line": "    result = requests.get(",
                        "lineNumber": 302,
                        "lineChange": "none"
                      },
                      {
                        "line": "        '{}/translation/{}/?{}'.format(",
                        "lineNumber": 303,
                        "lineChange": "none"
                      },
                      {
                        "line": "            self.base_url, lang_id, self.file_format),",
                        "lineNumber": 304,
                        "lineChange": "none"
                      },
                      {
                        "line": "# print(result.encoding)",
                        "lineNumber": 308,
                        "lineChange": "none"
                      },
                      {
                        "line": "result.encoding = 'utf-8'",
                        "lineNumber": 309,
                        "lineChange": "none"
                      },
                      {
                        "line": "data = yaml.load(result.text)",
                        "lineNumber": 298,
                        "lineChange": "removed"
                      },
                      {
                        "line": "data = yaml.load(result.text, Loader=yaml.SafeLoader)",
                        "lineNumber": 310,
                        "lineChange": "added"
                      },
                      {
                        "line": "# pp = pprint.PrettyPrinter(indent=2)",
                        "lineNumber": 311,
                        "lineChange": "none"
                      },
                      {
                        "line": "# pp.pprint(data)",
                        "lineNumber": 312,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/instrumenta/openapi2jsonschema/commit/ed24ff4e3fc5c838490525d56048db3cee90329f?diff=split#diff-453148a7ebe7bb6a47c6d09567ec9befL151",
                    "lines": [
                      {
                        "line": "if sys.version_info < (3, 0):",
                        "lineNumber": 148,
                        "lineChange": "none"
                      },
                      {
                        "line": "    response = urllib.urlopen(schema)",
                        "lineNumber": 150,
                        "lineChange": "none"
                      },
                      {
                        "line": "else:",
                        "lineNumber": 151,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if os.path.isfile(schema):",
                        "lineNumber": 152,
                        "lineChange": "none"
                      },
                      {
                        "line": "        schema = 'file://' + os.path.realpath(schema)",
                        "lineNumber": 153,
                        "lineChange": "none"
                      },
                      {
                        "line": "    req = urllib.request.Request(schema)",
                        "lineNumber": 154,
                        "lineChange": "none"
                      },
                      {
                        "line": "    response = urllib.request.urlopen(req)",
                        "lineNumber": 155,
                        "lineChange": "none"
                      },
                      {
                        "line": "info(\"Parsing schema\")",
                        "lineNumber": 157,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Note that JSON is valid YAML, so we can use the YAML parser whether",
                        "lineNumber": 158,
                        "lineChange": "none"
                      },
                      {
                        "line": "# the schema is stored in JSON or YAML",
                        "lineNumber": 159,
                        "lineChange": "none"
                      },
                      {
                        "line": "data = yaml.load(response.read())",
                        "lineNumber": 160,
                        "lineChange": "removed"
                      },
                      {
                        "line": "data = yaml.load(response.read(), Loader=yaml.SafeLoader)",
                        "lineNumber": 160,
                        "lineChange": "added"
                      },
                      {
                        "line": "if 'swagger' in data:",
                        "lineNumber": 162,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/joerussbowman/gaeutilities/commit/94df313e6c3000310336d2e8b4f9ebcc50a651d9?diff=split#diff-2d85cdba0684f699b2d7b1306a9d8419R179",
                    "lines": [
                      {
                        "line": "query = _AppEngineUtilities_SessionData.all()",
                        "lineNumber": 176,
                        "lineChange": "added"
                      },
                      {
                        "line": "query.filter('session_key', self.session_key)",
                        "lineNumber": 177,
                        "lineChange": "added"
                      },
                      {
                        "line": "results = query.fetch(1000)",
                        "lineNumber": 178,
                        "lineChange": "added"
                      },
                      {
                        "line": "return results",
                        "lineNumber": 179,
                        "lineChange": "added"
                      },
                      {
                        "line": "if keyname != None:",
                        "lineNumber": 563,
                        "lineChange": "none"
                      },
                      {
                        "line": "    query.filter('keyname =', keyname)",
                        "lineNumber": 564,
                        "lineChange": "none"
                      },
                      {
                        "line": "results = query.fetch(1000)",
                        "lineNumber": 565,
                        "lineChange": "none"
                      },
                      {
                        "line": "if len(results) is 0:",
                        "lineNumber": 567,
                        "lineChange": "none"
                      },
                      {
                        "line": "if data:",
                        "lineNumber": 705,
                        "lineChange": "none"
                      },
                      {
                        "line": "    #UNPICKLING CACHE self.cache[keyname] = data.content",
                        "lineNumber": 706,
                        "lineChange": "none"
                      },
                      {
                        "line": "    self.cache[keyname] = pickle.loads(data.content)",
                        "lineNumber": 707,
                        "lineChange": "none"
                      },
                      {
                        "line": "    self._set_memcache()",
                        "lineNumber": 497,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return pickle.loads(data.content)",
                        "lineNumber": 708,
                        "lineChange": "none"
                      },
                      {
                        "line": "else:",
                        "lineNumber": 709,
                        "lineChange": "none"
                      },
                      {
                        "line": "    raise KeyError(str(keyname))",
                        "lineNumber": 710,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 89,
                "cwe": [
                  "CWE-502"
                ]
              }
            },
            {
              "id": "go/PT/test",
              "name": "PT/test",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "go",
                  "PT",
                  "Security",
                  "InTest",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/pacolang/paco/commit/d05f41cb0aa3167b86bd3b1063d07d7e64bec86f?diff=split#diff-7ddfb3e035b42cd70649cc33393fe32cR26",
                    "lines": [
                      {
                        "line": "// Commands",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "switch os.Args[1] {",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "case \"build\":",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "  err := buildCommand.Parse(os.Args[2:])",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "// Read the given file",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "bytes, err := ioutil.ReadFile(os.Args[1])",
                        "lineNumber": 17,
                        "lineChange": "removed"
                      },
                      {
                        "line": "bytes, err := ioutil.ReadFile(file)",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "if err != nil {",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "  log.Errorf(err)",
                        "lineNumber": 47,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/trinchan/slackbot/commit/c8350a18049c609ef7b6847666d07e69aca9fb46?diff=split#diff-f2f667c6f0bb538d9d35241bd93421fcL18",
                    "lines": [
                      {
                        "line": "func init() {",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "  flag.Parse()",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var configFile = flag.String(\"c\", \"config.json\", \"Config file (default ./config.json)\")",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "  config, err := ioutil.ReadFile(configFile)",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  config, err := ioutil.ReadFile(*configFile)",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "  if err != nil {",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "    log.Println(\"open config: \", err)",
                        "lineNumber": 20,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/ketchuphq/ketchup/commit/31630fa4703d23c6055439536fd661d3c47da038?diff=split#diff-d72b60c856c1aa9b8e14c2c3c4b221abL59",
                    "lines": [
                      {
                        "line": "Run: func(ctx *service.CommandContext) {",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "  ctx.RequireExactlyNArgs(1)",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "  f, err := os.Open(ctx.Args[0])",
                        "lineNumber": 58,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  if err != nil {",
                        "lineNumber": 59,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    panic(err)",
                        "lineNumber": 60,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  err := m.importFromJSON(ctx.Args[0])",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "if err != nil {",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tpanic(err)",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "func (m *Module) importFromJSON(path string) error {",
                        "lineNumber": 78,
                        "lineChange": "added"
                      },
                      {
                        "line": "  f, err := os.Open(path)",
                        "lineNumber": 79,
                        "lineChange": "added"
                      },
                      {
                        "line": "  if err != nil {",
                        "lineNumber": 80,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return err",
                        "lineNumber": 81,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 527,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "python/CommandInjection/test",
              "name": "CommandInjection/test",
              "shortDescription": {
                "text": "Command Injection"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nWith an OS command injection attack a web application user can pass commands directly to the system shell, attached to a legitimate request. These commands can then be executed on the application server, potentially leading to harmful consequences, including data exposure or deletion. Like code injection attacks, command injection attacks are essentially a failure of data validation. Unlike code injection attacks, which introduce new code, command injection attacks use existing system functions, often taking advantage of the application's unnecessarily high privilege level, increasing the risk of serious harm and reputational damage.\n\n## Best practices for prevention\n- Never trust user input. Assume any input may transmit harmful values.\n- Adopt the principle of least privilege: No application should have a greater access level than needed to run its required tasks.\n- Control user access policies on a task-by-task basis.\n- Don't pass user input directly to the system; use libraries or APIs that lack system access.\n- Where shell commands must be passed, escape values using functions like shlex for Python, or escapeshellarg() for PHP.\n- Sanitize user input with regular expressions to define permitted characters along with maximum string length.\n- Convert special characters such as `& |  ; $ > < \\ !` before passing to the server.\n- Whitelist permitted commands and validate user responses against these expectations.\n- Remember that code injection can take place on multiple fronts: GET and POST requests, but also cookies and HTTP headers.\n- Ensure up-to-date patching across all systems to remediate known vulnerabilities.\n- Educate all team members on safer data handling procedures to prevent attacks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "CommandInjection",
                  "Security",
                  "InTest",
                  "SourceLocalEnv",
                  "SourceEnvironmentVariable",
                  "Taint"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/DustinBorn/avain/commit/4776439387645bced0e86e3766817de2562bf2eb?diff=split#diff-40f53a8850b6eb3209bd2d436d3ec5acL41",
                    "lines": [
                      {
                        "line": "# first download the data feed overview to retrieve URLs to all data feeds",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "try:",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "    nvd_response = requests.get(\"https://nvd.nist.gov/vuln/data-feeds\", timeout=20)",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "except:",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "communicate_warning(\"An error occured when trying to download webpage: https://nvd.nist.gov/vuln/data-feeds\")",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "# match the data feed URLs",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "nvd_nist_datafeed_html = nvd_response.text",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "jfeed_expr = re.compile(r\"https://nvd\\.nist\\.gov/feeds/json/cve/1\\.1/nvdcve-1\\.1-\\d\\d\\d\\d.json\\.zip\")",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "nvd_feed_urls = re.findall(jfeed_expr, nvd_nist_datafeed_html)",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "if not nvd_feed_urls:",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "with open(WGET_OUTFILE, \"w\") as file:",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "    zipfiles = []",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for nvd_feed_url in nvd_feed_urls:",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "        outname = os.path.join(NVD_DATAFEED_DIR, nvd_feed_url.split(\"/\")[-1])",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return_code = subprocess.call(\"wget %s -O %s\" % (nvd_feed_url, outname), stdout=file, stderr=subprocess.STDOUT, shell=True)",
                        "lineNumber": 65,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        return_code = subprocess.call(\"wget %s -O %s\" % (shlex.quote(nvd_feed_url), shlex.quote(outname)),",
                        "lineNumber": 86,
                        "lineChange": "added"
                      },
                      {
                        "line": "                                      stdout=file, stderr=subprocess.STDOUT, shell=True)",
                        "lineNumber": 87,
                        "lineChange": "added"
                      },
                      {
                        "line": "        if return_code != 0:",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "            NVD_UPDATE_SUCCESS = False",
                        "lineNumber": 89,
                        "lineChange": "added"
                      },
                      {
                        "line": "            communicate_warning(\"Getting NVD data feed %s failed\" %  nvd_feed_url)",
                        "lineNumber": 90,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/phase/o/commit/0f4bf9160b046e42f4cfad49585cc727b5213dc0?diff=split#diff-d689391370727e13cf640b0a56f5c1f0L32",
                    "lines": [
                      {
                        "line": "    compileO()",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "#Run code",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "code = request.form['code']",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "input = request.form['input'].replace('\\r\\n', '\\n')",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "print('Got code:', code, 'input:', input)",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "print('Running O code...')",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "p = Popen('./oide -e ' + code, stdout=PIPE, stderr=PIPE, stdin=PIPE, universal_newlines=True, shell=True)",
                        "lineNumber": 35,
                        "lineChange": "removed"
                      },
                      {
                        "line": "p = Popen(['./oide', '-e', code], stdout=PIPE, stderr=PIPE, stdin=PIPE, universal_newlines=True)",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "output, error = p.communicate(input)",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "#Output to IDE",
                        "lineNumber": 37,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/fossasia/susi_linux/commit/cb0d01d811fcb53863847ce57f57e8cb6c83df6c?diff=split#diff-d1b551c102df7ccabbf2e58275781476L15",
                    "lines": [
                      {
                        "line": "    return 'starting the installation script'",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "@app.route('/config/<stt>/<tts>/<hotword>/<wake>')",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "def config(stt, tts, hotword, wake):",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "    os.system('sudo bash /home/pi/SUSI.AI/susi_linux/access_point/server/config.sh {} {} {} {}'.format(stt,tts,hotword,wake))  #nosec #pylint-disable type: ignore",
                        "lineNumber": 16,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    subprocess.call(['sudo', 'bash' , 'server/config.sh', stt, tts, hotword, wake])  #nosec #pylint-disable type: ignore",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return 'Done' # pylint-enable",
                        "lineNumber": 17,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 128,
                "cwe": [
                  "CWE-78"
                ]
              }
            },
            {
              "id": "python/InsecureHash",
              "name": "InsecureHash",
              "shortDescription": {
                "text": "Use of Password Hash With Insufficient Computational Effort"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n## Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "InsecureHash",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-916"
                ]
              }
            },
            {
              "id": "python/InsecureTmpFile/test",
              "name": "InsecureTmpFile/test",
              "shortDescription": {
                "text": "Insecure Temporary File"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nCreating temporary files can allow an attacker to guess the filename, and potentially create a file with the same filename with less restrictive access rights and gain access to the contents written by the application.\n\n## Best practices for prevention\n* Use more robust solutions to create file names like UUIDs or strong random values\n\n\n## References\n* [Insecure Temporary File](https://owasp.org/www-community/vulnerabilities/Insecure_Temporary_File)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "InsecureTmpFile",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-377"
                ]
              }
            },
            {
              "id": "python/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "PT",
                  "Security",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/pynickle/amazing-python/commit/80d2cc8c3e2c8330416b91f17a09b51830915b86?diff=split#diff-f626b00ab4d99fdbd4cb2bd61ae29469L118",
                    "lines": [
                      {
                        "line": "if request.method == \"POST\":",
                        "lineNumber": 161,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try:",
                        "lineNumber": 162,
                        "lineChange": "none"
                      },
                      {
                        "line": "        f = request.files['file']",
                        "lineNumber": 163,
                        "lineChange": "none"
                      },
                      {
                        "line": "        filename = f.filename",
                        "lineNumber": 118,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        filename = secure_filename(f.filename)",
                        "lineNumber": 164,
                        "lineChange": "added"
                      },
                      {
                        "line": "        f.save(filename)",
                        "lineNumber": 165,
                        "lineChange": "none"
                      },
                      {
                        "line": "        with open(filename, \"r\", encoding=\"utf-8\") as f:",
                        "lineNumber": 166,
                        "lineChange": "none"
                      },
                      {
                        "line": "            success, errors = words_validate(f.read())",
                        "lineNumber": 167,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/WhaleShark-Team/cobra/commit/1ac467a2c1cf8427a5bf60031677817140fe181c?diff=split#diff-dc0ad7c98d7072655327746f1bc95b3aL72",
                    "lines": [
                      {
                        "line": "task_type = 1",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "# check if there is a file or gitlab url",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "if len(request.files) == 0:",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # no files, should check username and password",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "    task_type = 1",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "# there is a file, check file format and uncompress it.",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "task_type = 2",
                        "lineNumber": 89,
                        "lineChange": "none"
                      },
                      {
                        "line": "upload_src = request.files['file']",
                        "lineNumber": 90,
                        "lineChange": "none"
                      },
                      {
                        "line": "filename = str(int(time.time())) + '_' + upload_src.filename",
                        "lineNumber": 90,
                        "lineChange": "removed"
                      },
                      {
                        "line": "filename = str(int(time.time())) + '_' + secure_filename(upload_src.filename)",
                        "lineNumber": 91,
                        "lineChange": "added"
                      },
                      {
                        "line": "filepath = 'uploads/' + filename",
                        "lineNumber": 92,
                        "lineChange": "none"
                      },
                      {
                        "line": "upload_src.save(filepath)",
                        "lineNumber": 93,
                        "lineChange": "none"
                      },
                      {
                        "line": "# if you upload a rar file, upload_src.mimetype will returns \"application/octet-stream\"",
                        "lineNumber": 95,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Wordseer/wordseer/commit/ea92ade27f7a7a12d057a2b71daf9ffa1cf4385e?diff=split#diff-e86334029c6a0118169cce848ff474ddR13",
                    "lines": [
                      {
                        "line": " PROJECT_ROUTE = \"/projects/\"",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": " ",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "def allowed_file(filename):",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return os.path.splitext(filename)[1] in app.config[\"ALLOWED_EXTENSIONS\"]",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": " @app.route(PROJECT_ROUTE, methods=[\"GET\", \"POST\"])",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": " def projects():",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "if request.method == \"POST\":",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "    uploaded_file = request.files[\"uploaded_file\"]",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if uploaded_file and allowed_file(uploaded_file.filename):",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "        filename = secure_filename(uploaded_file.filename)",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "        dest_path = os.path.join(app.config[\"UPLOAD_DIR\"],",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "            filename)",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "        uploaded_file.save(dest_path)",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "        #TODO: send the user somewhere useful?",
                        "lineNumber": 49,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 553,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "python/CodeInjection",
              "name": "CodeInjection",
              "shortDescription": {
                "text": "Code Injection"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA secure code injection attack occurs when the attacker exploits an existing input processing vulnerability, passing special characters and code directly to a web-based application or site. The code is then executed, potentially granting the user system access to export sensitive data, to install malware, or even to move laterally and to exploit other systems in the trusted internal network environment. While code injection attacks can take place in several ways, the common factor is allowing the user to submit executable code to the application. The most common forms of code injection are SQL injection (server side) and cross-site scripting (XSS) (client side).\n\n## Best practices for prevention\n- Never trust user input. Assume any input may transmit harmful values.\n- Apply least privilege principle (for example, limit users to read only wherever possible).\n- Avoid passing raw user input directly to functions; use parameterized queries to extract data first.\n- Sanitize user input strings of special characters such as ?, &, /, <, >, and quotation marks.\n- Use whitelisting of known good values.\n- Validate user input against expected response types.\n- Escape shell commands with functions such as shlex for Python, or escapeshellarg for PHP.\n- Remember that code injection can take place on multiple fronts: GET and POST requests, but also cookies and HTTP headers.\n- Ensure up-to-date patching across all systems to remediate known vulnerabilities so these cannot be exploited by code injection.\n- Educate all team members on safe data handling procedures to prevent attacks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "CodeInjection",
                  "Security",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/praw-dev/praw/commit/c4c75964c06cfbc613d8b8663fba0f85b99791cb?diff=split#diff-4d74b15d9b9e10adb408c5a530f62c93L319",
                    "lines": [
                      {
                        "line": "                       None, REDDIT_USER_AGENT)",
                        "lineNumber": 316,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # Should only need ~1200 chars to get the modhash",
                        "lineNumber": 317,
                        "lineChange": "none"
                      },
                      {
                        "line": "    data = self.urlopen(req).read(1200)",
                        "lineNumber": 318,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    data = self._urlopen(req).read(1200)",
                        "lineNumber": 318,
                        "lineChange": "added"
                      },
                      {
                        "line": "    match = re.search(r\"modhash[^,]*\", data)",
                        "lineNumber": 319,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # Store the modhash.",
                        "lineNumber": 320,
                        "lineChange": "none"
                      },
                      {
                        "line": "    self.modhash = eval(match.group(0).split(\": \")[1])",
                        "lineNumber": 321,
                        "lineChange": "none"
                      },
                      {
                        "line": "@require_login",
                        "lineNumber": 323,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/nkouevda/albumr/commit/e5c4d797645683169706934e93dbc196cc2ca47e?diff=split#diff-e1ed3b055c50bc1f3f374d63bca49536L16",
                    "lines": [
                      {
                        "line": "try:",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # Read and decode the page",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "    page = urlopen(\"http://imgur.com/a/\" + album).read().decode()",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Extract the list of images and eval it to a Python list",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "images = eval(re.search(r'(?<=\"items\":)\\[\\{.+\\}\\](?=\\})', page).group())",
                        "lineNumber": 21,
                        "lineChange": "removed"
                      },
                      {
                        "line": "images = json.loads(re.search(r'(?<=\"items\":)\\[\\{.+\\}\\](?=\\})',",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "        page).group())",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "# Generate a list of images in the album",
                        "lineNumber": 23,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/apache/airflow/commit/c44e2009ee625ce4a82c50e585a3c8617d9b4ff8?diff=split#diff-948e87b4f8f644b3ad8c7950958df033L301",
                    "lines": [
                      {
                        "line": "import pandas as pd",
                        "lineNumber": 298,
                        "lineChange": "none"
                      },
                      {
                        "line": "session = settings.Session()",
                        "lineNumber": 299,
                        "lineChange": "none"
                      },
                      {
                        "line": "chart_id = request.args.get('chart_id')",
                        "lineNumber": 300,
                        "lineChange": "none"
                      },
                      {
                        "line": "csv = request.args.get('csv') == \"true\"",
                        "lineNumber": 301,
                        "lineChange": "none"
                      },
                      {
                        "line": "chart = session.query(models.Chart).filter_by(id=chart_id).first()",
                        "lineNumber": 302,
                        "lineChange": "none"
                      },
                      {
                        "line": "db = session.query(",
                        "lineNumber": 303,
                        "lineChange": "none"
                      },
                      {
                        "line": "    models.Connection).filter_by(conn_id=chart.conn_id).first()",
                        "lineNumber": 304,
                        "lineChange": "none"
                      },
                      {
                        "line": "session.expunge_all()",
                        "lineNumber": 305,
                        "lineChange": "none"
                      },
                      {
                        "line": "session.commit()",
                        "lineNumber": 306,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Processing templated fields",
                        "lineNumber": 313,
                        "lineChange": "none"
                      },
                      {
                        "line": "try:",
                        "lineNumber": 314,
                        "lineChange": "none"
                      },
                      {
                        "line": "    args = eval(chart.default_params)",
                        "lineNumber": 315,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    args = ast.literal_eval(chart.default_params)",
                        "lineNumber": 315,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if type(args) is not type(dict()):",
                        "lineNumber": 316,
                        "lineChange": "none"
                      },
                      {
                        "line": "        raise AirflowException('Not a dict')",
                        "lineNumber": 317,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 73,
                "cwe": [
                  "CWE-94"
                ]
              }
            },
            {
              "id": "python/reDOS",
              "name": "reDOS",
              "shortDescription": {
                "text": "Regular Expression Denial of Service (ReDoS)"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet's take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn't match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "reDOS",
                  "Security",
                  "SourceLocalEnv",
                  "SourceEnvironmentVariable",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/apache/allura/commit/ce23a31516818ba803fd801504fe6f9566e3cbab?diff=split#diff-a01e9f95ec248a880acfe90cbc6c0117L326",
                    "lines": [
                      {
                        "line": "        redirect(g.forge_static('images/user.png'))",
                        "lineNumber": 323,
                        "lineChange": "none"
                      },
                      {
                        "line": "@expose('json:')",
                        "lineNumber": 325,
                        "lineChange": "none"
                      },
                      {
                        "line": "def user_search(self,term=''):",
                        "lineNumber": 326,
                        "lineChange": "none"
                      },
                      {
                        "line": "    name_regex = re.compile('(?i)%s' % term)",
                        "lineNumber": 327,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    name_regex = re.compile('(?i)%s' % re.escape(term))",
                        "lineNumber": 327,
                        "lineChange": "added"
                      },
                      {
                        "line": "    users = M.User.query.find({",
                        "lineNumber": 328,
                        "lineChange": "none"
                      },
                      {
                        "line": "                '_id':{'$in':[role.user_id for role in c.project.roles]},",
                        "lineNumber": 329,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/tomashanacek/mock-server/commit/6d9d908f23940b69dfe8a375b57db98182a4e2d3?diff=split#diff-137164440312cbcacfcd58d690995780L655",
                    "lines": [
                      {
                        "line": "class TodoHandler(BaseHandler):",
                        "lineNumber": 654,
                        "lineChange": "none"
                      },
                      {
                        "line": "    @tornado.web.authenticated",
                        "lineNumber": 656,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def post(self):",
                        "lineNumber": 657,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # check xsrf cookie",
                        "lineNumber": 658,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.check_xsrf_cookie()",
                        "lineNumber": 659,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # get data from request body",
                        "lineNumber": 661,
                        "lineChange": "none"
                      },
                      {
                        "line": "        data = tornado.escape.json_decode(self.request.body)",
                        "lineNumber": 662,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if data[\"protocol\"] == \"rest\":",
                        "lineNumber": 664,
                        "lineChange": "none"
                      },
                      {
                        "line": "            method, url_path = data[\"id\"].split(\"-\")",
                        "lineNumber": 665,
                        "lineChange": "none"
                      },
                      {
                        "line": "            method_file = ResourceMethod(self.api_dir, url_path, method)",
                        "lineNumber": 666,
                        "lineChange": "none"
                      },
                      {
                        "line": "        elif data[\"protocol\"] == \"rpc\":",
                        "lineNumber": 667,
                        "lineChange": "none"
                      },
                      {
                        "line": "            method_file = RPCMethod(",
                        "lineNumber": 668,
                        "lineChange": "none"
                      },
                      {
                        "line": "                os.path.join(self.api_dir, RPCHandler.PATH), data[\"id\"])",
                        "lineNumber": 669,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # load description",
                        "lineNumber": 671,
                        "lineChange": "none"
                      },
                      {
                        "line": "# set todo",
                        "lineNumber": 674,
                        "lineChange": "none"
                      },
                      {
                        "line": "value = \" %s\" % data[\"value\"].strip()",
                        "lineNumber": 675,
                        "lineChange": "none"
                      },
                      {
                        "line": "todo = \"%s%s\" % (\"[x]\" if data[\"checked\"] else \"[ ]\", value)",
                        "lineNumber": 676,
                        "lineChange": "none"
                      },
                      {
                        "line": "method_file.description = re.sub(",
                        "lineNumber": 677,
                        "lineChange": "none"
                      },
                      {
                        "line": "    r\"\\[( |x)\\]%s\" % value, todo, method_file.description)",
                        "lineNumber": 678,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    r\"\\[( |x)\\]%s\" % re.escape(value), todo, method_file.description)",
                        "lineNumber": 678,
                        "lineChange": "added"
                      },
                      {
                        "line": "# save description",
                        "lineNumber": 680,
                        "lineChange": "none"
                      },
                      {
                        "line": "method_file.save_description()",
                        "lineNumber": 681,
                        "lineChange": "none"
                      },
                      {
                        "line": "self.set_header(\"Content-Type\", \"application/json\")",
                        "lineNumber": 683,
                        "lineChange": "none"
                      },
                      {
                        "line": "self.write(\"OK\")",
                        "lineNumber": 684,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/django/django/commit/3ed55606c4351913584a79e8b967f99b40316f1d?diff=split#diff-3c42de3e53aba87b32c494f995a728dfL61",
                    "lines": [
                      {
                        "line": "def get_content_type_for_model(obj):",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # Since this module gets imported in the application's root package,",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # it cannot import models from other applications at the module level.",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "    from django.contrib.contenttypes.models import ContentType",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return ContentType.objects.get_for_model(obj, for_concrete_model=False)",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "def __str__(self):",
                        "lineNumber": 584,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return \"%s.%s\" % (self.model._meta.app_label, self.__class__.__name__)",
                        "lineNumber": 585,
                        "lineChange": "none"
                      },
                      {
                        "line": "def get_inline_instances(self, request, obj=None):",
                        "lineNumber": 587,
                        "lineChange": "none"
                      },
                      {
                        "line": "    inline_instances = []",
                        "lineNumber": 588,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for inline_class in self.get_inlines(request, obj):",
                        "lineNumber": 589,
                        "lineChange": "none"
                      },
                      {
                        "line": "        inline = inline_class(self.model, self.admin_site)",
                        "lineNumber": 590,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if request:",
                        "lineNumber": 591,
                        "lineChange": "none"
                      },
                      {
                        "line": "            if not (inline.has_view_or_change_permission(request, obj) or",
                        "lineNumber": 592,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return update_wrapper(wrapper, view)",
                        "lineNumber": 609,
                        "lineChange": "none"
                      },
                      {
                        "line": "info = self.model._meta.app_label, self.model._meta.model_name",
                        "lineNumber": 611,
                        "lineChange": "none"
                      },
                      {
                        "line": "return [",
                        "lineNumber": 613,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return self.get_form(request, obj, fields=None)",
                        "lineNumber": 659,
                        "lineChange": "none"
                      },
                      {
                        "line": "def get_form(self, request, obj=None, change=False, **kwargs):",
                        "lineNumber": 661,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 662,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Return a Form class for use in the admin add view. This is used by",
                        "lineNumber": 663,
                        "lineChange": "none"
                      },
                      {
                        "line": "    fields = kwargs.pop('fields')",
                        "lineNumber": 667,
                        "lineChange": "none"
                      },
                      {
                        "line": "else:",
                        "lineNumber": 668,
                        "lineChange": "none"
                      },
                      {
                        "line": "    fields = flatten_fieldsets(self.get_fieldsets(request, obj))",
                        "lineNumber": 669,
                        "lineChange": "none"
                      },
                      {
                        "line": "excluded = self.get_exclude(request, obj)",
                        "lineNumber": 670,
                        "lineChange": "none"
                      },
                      {
                        "line": "exclude = [] if excluded is None else list(excluded)",
                        "lineNumber": 671,
                        "lineChange": "none"
                      },
                      {
                        "line": "readonly_fields = self.get_readonly_fields(request, obj)",
                        "lineNumber": 672,
                        "lineChange": "none"
                      },
                      {
                        "line": "exclude.extend(readonly_fields)",
                        "lineNumber": 673,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Exclude all fields if it's a change form and the user doesn't have",
                        "lineNumber": 674,
                        "lineChange": "none"
                      },
                      {
                        "line": "# the change permission.",
                        "lineNumber": 675,
                        "lineChange": "none"
                      },
                      {
                        "line": "if change and hasattr(request, 'user') and not self.has_change_permission(request, obj):",
                        "lineNumber": 676,
                        "lineChange": "none"
                      },
                      {
                        "line": "    exclude.extend(fields)",
                        "lineNumber": 677,
                        "lineChange": "none"
                      },
                      {
                        "line": "if excluded is None and hasattr(self.form, '_meta') and self.form._meta.exclude:",
                        "lineNumber": 678,
                        "lineChange": "none"
                      },
                      {
                        "line": "try:",
                        "lineNumber": 701,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return modelform_factory(self.model, **defaults)",
                        "lineNumber": 702,
                        "lineChange": "none"
                      },
                      {
                        "line": "except FieldError as e:",
                        "lineNumber": 703,
                        "lineChange": "none"
                      },
                      {
                        "line": "    raise FieldError(",
                        "lineNumber": 704,
                        "lineChange": "none"
                      },
                      {
                        "line": "return ChangeList(",
                        "lineNumber": 728,
                        "lineChange": "none"
                      },
                      {
                        "line": "    request,",
                        "lineNumber": 729,
                        "lineChange": "none"
                      },
                      {
                        "line": "    self.model,",
                        "lineNumber": 730,
                        "lineChange": "none"
                      },
                      {
                        "line": "    list_display,",
                        "lineNumber": 731,
                        "lineChange": "none"
                      },
                      {
                        "line": "    list_display_links,",
                        "lineNumber": 732,
                        "lineChange": "none"
                      },
                      {
                        "line": "    )",
                        "lineNumber": 742,
                        "lineChange": "none"
                      },
                      {
                        "line": "def get_object(self, request, object_id, from_field=None):",
                        "lineNumber": 744,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 745,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Return an instance matching the field and value provided, the primary",
                        "lineNumber": 746,
                        "lineChange": "none"
                      },
                      {
                        "line": "queryset = self.get_queryset(request)",
                        "lineNumber": 750,
                        "lineChange": "none"
                      },
                      {
                        "line": "model = queryset.model",
                        "lineNumber": 751,
                        "lineChange": "none"
                      },
                      {
                        "line": "field = model._meta.pk if from_field is None else model._meta.get_field(from_field)",
                        "lineNumber": 752,
                        "lineChange": "none"
                      },
                      {
                        "line": "try:",
                        "lineNumber": 753,
                        "lineChange": "none"
                      },
                      {
                        "line": "    object_id = field.to_python(object_id)",
                        "lineNumber": 754,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return queryset.get(**{field.name: object_id})",
                        "lineNumber": 755,
                        "lineChange": "none"
                      },
                      {
                        "line": "except (model.DoesNotExist, ValidationError, ValueError):",
                        "lineNumber": 756,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return None",
                        "lineNumber": 757,
                        "lineChange": "none"
                      },
                      {
                        "line": "        defaults['fields'] = forms.ALL_FIELDS",
                        "lineNumber": 768,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return modelform_factory(self.model, **defaults)",
                        "lineNumber": 770,
                        "lineChange": "none"
                      },
                      {
                        "line": "def get_changelist_formset(self, request, **kwargs):",
                        "lineNumber": 772,
                        "lineChange": "none"
                      },
                      {
                        "line": "    **kwargs,",
                        "lineNumber": 779,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 780,
                        "lineChange": "none"
                      },
                      {
                        "line": "return modelformset_factory(",
                        "lineNumber": 781,
                        "lineChange": "none"
                      },
                      {
                        "line": "    self.model, self.get_changelist_form(request), extra=0,",
                        "lineNumber": 782,
                        "lineChange": "none"
                      },
                      {
                        "line": "    fields=self.list_editable, **defaults",
                        "lineNumber": 783,
                        "lineChange": "none"
                      },
                      {
                        "line": ")",
                        "lineNumber": 784,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return self.paginator(queryset, per_page, orphans, allow_empty_first_page)",
                        "lineNumber": 794,
                        "lineChange": "none"
                      },
                      {
                        "line": "def log_addition(self, request, object, message):",
                        "lineNumber": 796,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 797,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Log that an object has been successfully added.",
                        "lineNumber": 798,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return LogEntry.objects.log_action(",
                        "lineNumber": 803,
                        "lineChange": "none"
                      },
                      {
                        "line": "        user_id=request.user.pk,",
                        "lineNumber": 804,
                        "lineChange": "none"
                      },
                      {
                        "line": "        content_type_id=get_content_type_for_model(object).pk,",
                        "lineNumber": 805,
                        "lineChange": "none"
                      },
                      {
                        "line": "        object_id=object.pk,",
                        "lineNumber": 806,
                        "lineChange": "none"
                      },
                      {
                        "line": "        object_repr=str(object),",
                        "lineNumber": 807,
                        "lineChange": "none"
                      },
                      {
                        "line": "        action_flag=ADDITION,",
                        "lineNumber": 808,
                        "lineChange": "none"
                      },
                      {
                        "line": "        change_message=message,",
                        "lineNumber": 809,
                        "lineChange": "none"
                      },
                      {
                        "line": "    )",
                        "lineNumber": 810,
                        "lineChange": "none"
                      },
                      {
                        "line": "def log_change(self, request, object, message):",
                        "lineNumber": 812,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 813,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Log that an object has been successfully changed.",
                        "lineNumber": 814,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return LogEntry.objects.log_action(",
                        "lineNumber": 819,
                        "lineChange": "none"
                      },
                      {
                        "line": "        user_id=request.user.pk,",
                        "lineNumber": 820,
                        "lineChange": "none"
                      },
                      {
                        "line": "        content_type_id=get_content_type_for_model(object).pk,",
                        "lineNumber": 821,
                        "lineChange": "none"
                      },
                      {
                        "line": "        object_id=object.pk,",
                        "lineNumber": 822,
                        "lineChange": "none"
                      },
                      {
                        "line": "        object_repr=str(object),",
                        "lineNumber": 823,
                        "lineChange": "none"
                      },
                      {
                        "line": "        action_flag=CHANGE,",
                        "lineNumber": 824,
                        "lineChange": "none"
                      },
                      {
                        "line": "        change_message=message,",
                        "lineNumber": 825,
                        "lineChange": "none"
                      },
                      {
                        "line": "    )",
                        "lineNumber": 826,
                        "lineChange": "none"
                      },
                      {
                        "line": "def log_deletion(self, request, object, object_repr):",
                        "lineNumber": 828,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 829,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Log that an object will be deleted. Note that this method must be",
                        "lineNumber": 830,
                        "lineChange": "none"
                      },
                      {
                        "line": "return LogEntry.objects.log_action(",
                        "lineNumber": 836,
                        "lineChange": "none"
                      },
                      {
                        "line": "    user_id=request.user.pk,",
                        "lineNumber": 837,
                        "lineChange": "none"
                      },
                      {
                        "line": "    content_type_id=get_content_type_for_model(object).pk,",
                        "lineNumber": 838,
                        "lineChange": "none"
                      },
                      {
                        "line": "    object_id=object.pk,",
                        "lineNumber": 839,
                        "lineChange": "none"
                      },
                      {
                        "line": "    object_repr=object_repr,",
                        "lineNumber": 840,
                        "lineChange": "none"
                      },
                      {
                        "line": "# If self.actions is set to None that means actions are disabled on",
                        "lineNumber": 885,
                        "lineChange": "none"
                      },
                      {
                        "line": "# this page.",
                        "lineNumber": 886,
                        "lineChange": "none"
                      },
                      {
                        "line": "if self.actions is None or IS_POPUP_VAR in request.GET:",
                        "lineNumber": 887,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return {}",
                        "lineNumber": 888,
                        "lineChange": "none"
                      },
                      {
                        "line": "actions = self._filter_actions_by_permissions(request, self._get_base_actions())",
                        "lineNumber": 889,
                        "lineChange": "none"
                      },
                      {
                        "line": "choices = [] + default_choices",
                        "lineNumber": 897,
                        "lineChange": "none"
                      },
                      {
                        "line": "for func, name, description in self.get_actions(request).values():",
                        "lineNumber": 898,
                        "lineChange": "none"
                      },
                      {
                        "line": "    choice = (name, description % model_format_dict(self.opts))",
                        "lineNumber": 899,
                        "lineChange": "none"
                      },
                      {
                        "line": "    choices.append(choice)",
                        "lineNumber": 900,
                        "lineChange": "none"
                      },
                      {
                        "line": "return choices",
                        "lineNumber": 901,
                        "lineChange": "none"
                      },
                      {
                        "line": "                      for orm_lookup in orm_lookups]",
                        "lineNumber": 1015,
                        "lineChange": "none"
                      },
                      {
                        "line": "        queryset = queryset.filter(reduce(operator.or_, or_queries))",
                        "lineNumber": 1016,
                        "lineChange": "none"
                      },
                      {
                        "line": "    use_distinct |= any(lookup_needs_distinct(self.opts, search_spec) for search_spec in orm_lookups)",
                        "lineNumber": 1017,
                        "lineChange": "none"
                      },
                      {
                        "line": "return queryset, use_distinct",
                        "lineNumber": 1019,
                        "lineChange": "none"
                      },
                      {
                        "line": "Return the preserved filters querystring.",
                        "lineNumber": 1023,
                        "lineChange": "none"
                      },
                      {
                        "line": "\"\"\"",
                        "lineNumber": 1024,
                        "lineChange": "none"
                      },
                      {
                        "line": "match = request.resolver_match",
                        "lineNumber": 1025,
                        "lineChange": "none"
                      },
                      {
                        "line": "if self.preserve_filters and match:",
                        "lineNumber": 1026,
                        "lineChange": "none"
                      },
                      {
                        "line": "    opts = self.model._meta",
                        "lineNumber": 1027,
                        "lineChange": "none"
                      },
                      {
                        "line": "    current_url = '%s:%s' % (match.app_name, match.url_name)",
                        "lineNumber": 1028,
                        "lineChange": "none"
                      },
                      {
                        "line": "    changelist_url = 'admin:%s_%s_changelist' % (opts.app_label, opts.model_name)",
                        "lineNumber": 1029,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if current_url == changelist_url:",
                        "lineNumber": 1030,
                        "lineChange": "none"
                      },
                      {
                        "line": "        preserved_filters = request.GET.urlencode()",
                        "lineNumber": 1031,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:",
                        "lineNumber": 1032,
                        "lineChange": "none"
                      },
                      {
                        "line": "        preserved_filters = request.GET.get('_changelist_filters')",
                        "lineNumber": 1033,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if preserved_filters:",
                        "lineNumber": 1035,
                        "lineChange": "none"
                      },
                      {
                        "line": "    messages.add_message(request, level, message, extra_tags=extra_tags, fail_silently=fail_silently)",
                        "lineNumber": 1068,
                        "lineChange": "none"
                      },
                      {
                        "line": "def save_form(self, request, form, change):",
                        "lineNumber": 1070,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1071,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Given a ModelForm return an unsaved instance. ``change`` is True if",
                        "lineNumber": 1072,
                        "lineChange": "none"
                      },
                      {
                        "line": "    the object is being changed, and False if it's being added.",
                        "lineNumber": 1073,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1074,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return form.save(commit=False)",
                        "lineNumber": 1075,
                        "lineChange": "none"
                      },
                      {
                        "line": "def save_model(self, request, obj, form, change):",
                        "lineNumber": 1077,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1078,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Given a model instance save it to the database.",
                        "lineNumber": 1079,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1080,
                        "lineChange": "none"
                      },
                      {
                        "line": "    obj.save()",
                        "lineNumber": 1081,
                        "lineChange": "none"
                      },
                      {
                        "line": "def delete_model(self, request, obj):",
                        "lineNumber": 1083,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.save_formset(request, form, formset, change=change)",
                        "lineNumber": 1109,
                        "lineChange": "none"
                      },
                      {
                        "line": "def render_change_form(self, request, context, add=False, change=False, form_url='', obj=None):",
                        "lineNumber": 1111,
                        "lineChange": "none"
                      },
                      {
                        "line": "    opts = self.model._meta",
                        "lineNumber": 1112,
                        "lineChange": "none"
                      },
                      {
                        "line": "    app_label = opts.app_label",
                        "lineNumber": 1113,
                        "lineChange": "none"
                      },
                      {
                        "line": "    preserved_filters = self.get_preserved_filters(request)",
                        "lineNumber": 1114,
                        "lineChange": "none"
                      },
                      {
                        "line": "    form_url = add_preserved_filters({'preserved_filters': preserved_filters, 'opts': opts}, form_url)",
                        "lineNumber": 1115,
                        "lineChange": "none"
                      },
                      {
                        "line": "    view_on_site_url = self.get_view_on_site_url(obj)",
                        "lineNumber": 1116,
                        "lineChange": "none"
                      },
                      {
                        "line": "    has_editable_inline_admin_formsets = False",
                        "lineNumber": 1117,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for inline in context['inline_admin_formsets']:",
                        "lineNumber": 1118,
                        "lineChange": "none"
                      },
                      {
                        "line": "'add': add,",
                        "lineNumber": 1123,
                        "lineChange": "none"
                      },
                      {
                        "line": "'change': change,",
                        "lineNumber": 1124,
                        "lineChange": "none"
                      },
                      {
                        "line": "'has_view_permission': self.has_view_permission(request, obj),",
                        "lineNumber": 1125,
                        "lineChange": "none"
                      },
                      {
                        "line": "'has_add_permission': self.has_add_permission(request),",
                        "lineNumber": 1126,
                        "lineChange": "none"
                      },
                      {
                        "line": "'has_change_permission': self.has_change_permission(request, obj),",
                        "lineNumber": 1127,
                        "lineChange": "none"
                      },
                      {
                        "line": "'has_delete_permission': self.has_delete_permission(request, obj),",
                        "lineNumber": 1128,
                        "lineChange": "none"
                      },
                      {
                        "line": "'has_editable_inline_admin_formsets': has_editable_inline_admin_formsets,",
                        "lineNumber": 1129,
                        "lineChange": "none"
                      },
                      {
                        "line": "'has_file_field': context['adminform'].form.is_multipart() or any(",
                        "lineNumber": 1130,
                        "lineChange": "none"
                      },
                      {
                        "line": "'absolute_url': view_on_site_url,",
                        "lineNumber": 1135,
                        "lineChange": "none"
                      },
                      {
                        "line": "'form_url': form_url,",
                        "lineNumber": 1136,
                        "lineChange": "none"
                      },
                      {
                        "line": "'opts': opts,",
                        "lineNumber": 1137,
                        "lineChange": "none"
                      },
                      {
                        "line": "'content_type_id': get_content_type_for_model(self.model).pk,",
                        "lineNumber": 1138,
                        "lineChange": "none"
                      },
                      {
                        "line": "'save_as': self.save_as,",
                        "lineNumber": 1139,
                        "lineChange": "none"
                      },
                      {
                        "line": "'save_on_top': self.save_on_top,",
                        "lineNumber": 1140,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return TemplateResponse(request, form_template or [",
                        "lineNumber": 1152,
                        "lineChange": "none"
                      },
                      {
                        "line": "        \"admin/%s/%s/change_form.html\" % (app_label, opts.model_name),",
                        "lineNumber": 1153,
                        "lineChange": "none"
                      },
                      {
                        "line": "        \"admin/%s/change_form.html\" % app_label,",
                        "lineNumber": 1154,
                        "lineChange": "none"
                      },
                      {
                        "line": "        \"admin/change_form.html\"",
                        "lineNumber": 1155,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ], context)",
                        "lineNumber": 1156,
                        "lineChange": "none"
                      },
                      {
                        "line": "def response_add(self, request, obj, post_url_continue=None):",
                        "lineNumber": 1158,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1159,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Determine the HttpResponse for the add_view stage.",
                        "lineNumber": 1160,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1161,
                        "lineChange": "none"
                      },
                      {
                        "line": "    opts = obj._meta",
                        "lineNumber": 1162,
                        "lineChange": "none"
                      },
                      {
                        "line": "    preserved_filters = self.get_preserved_filters(request)",
                        "lineNumber": 1163,
                        "lineChange": "none"
                      },
                      {
                        "line": "    obj_url = reverse(",
                        "lineNumber": 1164,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'admin:%s_%s_change' % (opts.app_label, opts.model_name),",
                        "lineNumber": 1165,
                        "lineChange": "none"
                      },
                      {
                        "line": "        args=(quote(obj.pk),),",
                        "lineNumber": 1166,
                        "lineChange": "none"
                      },
                      {
                        "line": "        current_app=self.admin_site.name,",
                        "lineNumber": 1167,
                        "lineChange": "none"
                      },
                      {
                        "line": "    )",
                        "lineNumber": 1168,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # Add a link to the object's change form if the user can edit the obj.",
                        "lineNumber": 1169,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if self.has_change_permission(request, obj):",
                        "lineNumber": 1170,
                        "lineChange": "none"
                      },
                      {
                        "line": "        obj_repr = format_html('<a href=\"{}\">{}</a>', urlquote(obj_url), obj)",
                        "lineNumber": 1171,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:",
                        "lineNumber": 1172,
                        "lineChange": "none"
                      },
                      {
                        "line": "        obj_repr = str(obj)",
                        "lineNumber": 1173,
                        "lineChange": "none"
                      },
                      {
                        "line": "    msg_dict = {",
                        "lineNumber": 1174,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'name': opts.verbose_name,",
                        "lineNumber": 1175,
                        "lineChange": "none"
                      },
                      {
                        "line": "# the presence of keys in request.POST.",
                        "lineNumber": 1179,
                        "lineChange": "none"
                      },
                      {
                        "line": "if IS_POPUP_VAR in request.POST:",
                        "lineNumber": 1181,
                        "lineChange": "none"
                      },
                      {
                        "line": "    to_field = request.POST.get(TO_FIELD_VAR)",
                        "lineNumber": 1182,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if to_field:",
                        "lineNumber": 1183,
                        "lineChange": "none"
                      },
                      {
                        "line": "        attr = str(to_field)",
                        "lineNumber": 1184,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:",
                        "lineNumber": 1185,
                        "lineChange": "none"
                      },
                      {
                        "line": "        attr = obj._meta.pk.attname",
                        "lineNumber": 1186,
                        "lineChange": "none"
                      },
                      {
                        "line": "    value = obj.serializable_value(attr)",
                        "lineNumber": 1187,
                        "lineChange": "none"
                      },
                      {
                        "line": "    popup_response_data = json.dumps({",
                        "lineNumber": 1188,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'value': str(value),",
                        "lineNumber": 1189,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'obj': str(obj),",
                        "lineNumber": 1190,
                        "lineChange": "none"
                      },
                      {
                        "line": "    })",
                        "lineNumber": 1191,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return TemplateResponse(request, self.popup_response_template or [",
                        "lineNumber": 1192,
                        "lineChange": "none"
                      },
                      {
                        "line": "    })",
                        "lineNumber": 1198,
                        "lineChange": "none"
                      },
                      {
                        "line": "elif \"_continue\" in request.POST or (",
                        "lineNumber": 1200,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # Redirecting after \"Save as new\".",
                        "lineNumber": 1201,
                        "lineChange": "none"
                      },
                      {
                        "line": "        \"_saveasnew\" in request.POST and self.save_as_continue and",
                        "lineNumber": 1202,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.has_change_permission(request, obj)",
                        "lineNumber": 1203,
                        "lineChange": "none"
                      },
                      {
                        "line": "):",
                        "lineNumber": 1204,
                        "lineChange": "none"
                      },
                      {
                        "line": "    msg = _('The {name} “{obj}” was added successfully.')",
                        "lineNumber": 1205,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if self.has_change_permission(request, obj):",
                        "lineNumber": 1206,
                        "lineChange": "none"
                      },
                      {
                        "line": "        msg += ' ' + _('You may edit it again below.')",
                        "lineNumber": 1207,
                        "lineChange": "none"
                      },
                      {
                        "line": "    self.message_user(request, format_html(msg, **msg_dict), messages.SUCCESS)",
                        "lineNumber": 1208,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return HttpResponseRedirect(post_url_continue)",
                        "lineNumber": 1215,
                        "lineChange": "none"
                      },
                      {
                        "line": "elif \"_addanother\" in request.POST:",
                        "lineNumber": 1217,
                        "lineChange": "none"
                      },
                      {
                        "line": "    msg = format_html(",
                        "lineNumber": 1218,
                        "lineChange": "none"
                      },
                      {
                        "line": "        _('The {name} “{obj}” was added successfully. You may add another {name} below.'),",
                        "lineNumber": 1219,
                        "lineChange": "none"
                      },
                      {
                        "line": ")",
                        "lineNumber": 1221,
                        "lineChange": "none"
                      },
                      {
                        "line": "self.message_user(request, msg, messages.SUCCESS)",
                        "lineNumber": 1222,
                        "lineChange": "none"
                      },
                      {
                        "line": "redirect_url = request.path",
                        "lineNumber": 1223,
                        "lineChange": "none"
                      },
                      {
                        "line": "redirect_url = add_preserved_filters({'preserved_filters': preserved_filters, 'opts': opts}, redirect_url)",
                        "lineNumber": 1224,
                        "lineChange": "none"
                      },
                      {
                        "line": "return HttpResponseRedirect(redirect_url)",
                        "lineNumber": 1225,
                        "lineChange": "none"
                      },
                      {
                        "line": "        )",
                        "lineNumber": 1231,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.message_user(request, msg, messages.SUCCESS)",
                        "lineNumber": 1232,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return self.response_post_save_add(request, obj)",
                        "lineNumber": 1233,
                        "lineChange": "none"
                      },
                      {
                        "line": "def response_change(self, request, obj):",
                        "lineNumber": 1235,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1236,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Determine the HttpResponse for the change_view stage.",
                        "lineNumber": 1237,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1238,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if IS_POPUP_VAR in request.POST:",
                        "lineNumber": 1240,
                        "lineChange": "none"
                      },
                      {
                        "line": "        opts = obj._meta",
                        "lineNumber": 1241,
                        "lineChange": "none"
                      },
                      {
                        "line": "        to_field = request.POST.get(TO_FIELD_VAR)",
                        "lineNumber": 1242,
                        "lineChange": "none"
                      },
                      {
                        "line": "        attr = str(to_field) if to_field else opts.pk.attname",
                        "lineNumber": 1243,
                        "lineChange": "none"
                      },
                      {
                        "line": "        value = request.resolver_match.kwargs['object_id']",
                        "lineNumber": 1244,
                        "lineChange": "none"
                      },
                      {
                        "line": "        new_value = obj.serializable_value(attr)",
                        "lineNumber": 1245,
                        "lineChange": "none"
                      },
                      {
                        "line": "        popup_response_data = json.dumps({",
                        "lineNumber": 1246,
                        "lineChange": "none"
                      },
                      {
                        "line": "            'action': 'change',",
                        "lineNumber": 1247,
                        "lineChange": "none"
                      },
                      {
                        "line": "            'value': str(value),",
                        "lineNumber": 1248,
                        "lineChange": "none"
                      },
                      {
                        "line": "            'obj': str(obj),",
                        "lineNumber": 1249,
                        "lineChange": "none"
                      },
                      {
                        "line": "            'new_value': str(new_value),",
                        "lineNumber": 1250,
                        "lineChange": "none"
                      },
                      {
                        "line": "        })",
                        "lineNumber": 1251,
                        "lineChange": "none"
                      },
                      {
                        "line": "    })",
                        "lineNumber": 1258,
                        "lineChange": "none"
                      },
                      {
                        "line": "opts = self.model._meta",
                        "lineNumber": 1260,
                        "lineChange": "none"
                      },
                      {
                        "line": "preserved_filters = self.get_preserved_filters(request)",
                        "lineNumber": 1261,
                        "lineChange": "none"
                      },
                      {
                        "line": "msg_dict = {",
                        "lineNumber": 1263,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'name': opts.verbose_name,",
                        "lineNumber": 1264,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'obj': format_html('<a href=\"{}\">{}</a>', urlquote(request.path), obj),",
                        "lineNumber": 1265,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1266,
                        "lineChange": "none"
                      },
                      {
                        "line": "if \"_continue\" in request.POST:",
                        "lineNumber": 1267,
                        "lineChange": "none"
                      },
                      {
                        "line": "    msg = format_html(",
                        "lineNumber": 1268,
                        "lineChange": "none"
                      },
                      {
                        "line": "        _('The {name} “{obj}” was changed successfully. You may edit it again below.'),",
                        "lineNumber": 1269,
                        "lineChange": "none"
                      },
                      {
                        "line": "    )",
                        "lineNumber": 1271,
                        "lineChange": "none"
                      },
                      {
                        "line": "    self.message_user(request, msg, messages.SUCCESS)",
                        "lineNumber": 1272,
                        "lineChange": "none"
                      },
                      {
                        "line": "    redirect_url = request.path",
                        "lineNumber": 1273,
                        "lineChange": "none"
                      },
                      {
                        "line": "    redirect_url = add_preserved_filters({'preserved_filters': preserved_filters, 'opts': opts}, redirect_url)",
                        "lineNumber": 1274,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return HttpResponseRedirect(redirect_url)",
                        "lineNumber": 1275,
                        "lineChange": "none"
                      },
                      {
                        "line": "elif \"_saveasnew\" in request.POST:",
                        "lineNumber": 1277,
                        "lineChange": "none"
                      },
                      {
                        "line": "    msg = format_html(",
                        "lineNumber": 1278,
                        "lineChange": "none"
                      },
                      {
                        "line": "        _('The {name} “{obj}” was added successfully. You may edit it again below.'),",
                        "lineNumber": 1279,
                        "lineChange": "none"
                      },
                      {
                        "line": "    self.message_user(request, msg, messages.SUCCESS)",
                        "lineNumber": 1282,
                        "lineChange": "none"
                      },
                      {
                        "line": "    redirect_url = reverse('admin:%s_%s_change' %",
                        "lineNumber": 1283,
                        "lineChange": "none"
                      },
                      {
                        "line": "                           (opts.app_label, opts.model_name),",
                        "lineNumber": 1284,
                        "lineChange": "none"
                      },
                      {
                        "line": "                           args=(obj.pk,),",
                        "lineNumber": 1285,
                        "lineChange": "none"
                      },
                      {
                        "line": "                           current_app=self.admin_site.name)",
                        "lineNumber": 1286,
                        "lineChange": "none"
                      },
                      {
                        "line": "    redirect_url = add_preserved_filters({'preserved_filters': preserved_filters, 'opts': opts}, redirect_url)",
                        "lineNumber": 1287,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return HttpResponseRedirect(redirect_url)",
                        "lineNumber": 1288,
                        "lineChange": "none"
                      },
                      {
                        "line": "elif \"_addanother\" in request.POST:",
                        "lineNumber": 1290,
                        "lineChange": "none"
                      },
                      {
                        "line": "    msg = format_html(",
                        "lineNumber": 1291,
                        "lineChange": "none"
                      },
                      {
                        "line": "        _('The {name} “{obj}” was changed successfully. You may add another {name} below.'),",
                        "lineNumber": 1292,
                        "lineChange": "none"
                      },
                      {
                        "line": "self.message_user(request, msg, messages.SUCCESS)",
                        "lineNumber": 1295,
                        "lineChange": "none"
                      },
                      {
                        "line": "redirect_url = reverse('admin:%s_%s_add' %",
                        "lineNumber": 1296,
                        "lineChange": "none"
                      },
                      {
                        "line": "                       (opts.app_label, opts.model_name),",
                        "lineNumber": 1297,
                        "lineChange": "none"
                      },
                      {
                        "line": "                       current_app=self.admin_site.name)",
                        "lineNumber": 1298,
                        "lineChange": "none"
                      },
                      {
                        "line": "redirect_url = add_preserved_filters({'preserved_filters': preserved_filters, 'opts': opts}, redirect_url)",
                        "lineNumber": 1299,
                        "lineChange": "none"
                      },
                      {
                        "line": "return HttpResponseRedirect(redirect_url)",
                        "lineNumber": 1300,
                        "lineChange": "none"
                      },
                      {
                        "line": "        )",
                        "lineNumber": 1306,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.message_user(request, msg, messages.SUCCESS)",
                        "lineNumber": 1307,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return self.response_post_save_change(request, obj)",
                        "lineNumber": 1308,
                        "lineChange": "none"
                      },
                      {
                        "line": "def _response_post_save(self, request, obj):",
                        "lineNumber": 1310,
                        "lineChange": "none"
                      },
                      {
                        "line": "    opts = self.model._meta",
                        "lineNumber": 1311,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if self.has_view_or_change_permission(request):",
                        "lineNumber": 1312,
                        "lineChange": "none"
                      },
                      {
                        "line": "        post_url = reverse('admin:%s_%s_changelist' %",
                        "lineNumber": 1313,
                        "lineChange": "none"
                      },
                      {
                        "line": "                           (opts.app_label, opts.model_name),",
                        "lineNumber": 1314,
                        "lineChange": "none"
                      },
                      {
                        "line": "                           current_app=self.admin_site.name)",
                        "lineNumber": 1315,
                        "lineChange": "none"
                      },
                      {
                        "line": "        preserved_filters = self.get_preserved_filters(request)",
                        "lineNumber": 1316,
                        "lineChange": "none"
                      },
                      {
                        "line": "        post_url = add_preserved_filters({'preserved_filters': preserved_filters, 'opts': opts}, post_url)",
                        "lineNumber": 1317,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:",
                        "lineNumber": 1318,
                        "lineChange": "none"
                      },
                      {
                        "line": "        post_url = reverse('admin:index',",
                        "lineNumber": 1319,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return HttpResponseRedirect(post_url)",
                        "lineNumber": 1321,
                        "lineChange": "none"
                      },
                      {
                        "line": "def response_post_save_add(self, request, obj):",
                        "lineNumber": 1323,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1324,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Figure out where to redirect after the 'Save' button has been pressed",
                        "lineNumber": 1325,
                        "lineChange": "none"
                      },
                      {
                        "line": "    when adding a new object.",
                        "lineNumber": 1326,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1327,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return self._response_post_save(request, obj)",
                        "lineNumber": 1328,
                        "lineChange": "none"
                      },
                      {
                        "line": "def response_post_save_change(self, request, obj):",
                        "lineNumber": 1330,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1331,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Figure out where to redirect after the 'Save' button has been pressed",
                        "lineNumber": 1332,
                        "lineChange": "none"
                      },
                      {
                        "line": "    when editing an existing object.",
                        "lineNumber": 1333,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1334,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return self._response_post_save(request, obj)",
                        "lineNumber": 1335,
                        "lineChange": "none"
                      },
                      {
                        "line": "def response_action(self, request, queryset):",
                        "lineNumber": 1337,
                        "lineChange": "none"
                      },
                      {
                        "line": "# whose button was pushed.",
                        "lineNumber": 1346,
                        "lineChange": "none"
                      },
                      {
                        "line": "try:",
                        "lineNumber": 1347,
                        "lineChange": "none"
                      },
                      {
                        "line": "    action_index = int(request.POST.get('index', 0))",
                        "lineNumber": 1348,
                        "lineChange": "none"
                      },
                      {
                        "line": "except ValueError:",
                        "lineNumber": 1349,
                        "lineChange": "none"
                      },
                      {
                        "line": "    action_index = 0",
                        "lineNumber": 1350,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Construct the action form.",
                        "lineNumber": 1352,
                        "lineChange": "none"
                      },
                      {
                        "line": "data = request.POST.copy()",
                        "lineNumber": 1353,
                        "lineChange": "none"
                      },
                      {
                        "line": "data.pop(helpers.ACTION_CHECKBOX_NAME, None)",
                        "lineNumber": 1354,
                        "lineChange": "none"
                      },
                      {
                        "line": "data.pop(\"index\", None)",
                        "lineNumber": 1355,
                        "lineChange": "none"
                      },
                      {
                        "line": "# perform an action on it, so bail. Except we want to perform",
                        "lineNumber": 1376,
                        "lineChange": "none"
                      },
                      {
                        "line": "# the action explicitly on all objects.",
                        "lineNumber": 1377,
                        "lineChange": "none"
                      },
                      {
                        "line": "selected = request.POST.getlist(helpers.ACTION_CHECKBOX_NAME)",
                        "lineNumber": 1378,
                        "lineChange": "none"
                      },
                      {
                        "line": "if not selected and not select_across:",
                        "lineNumber": 1379,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # Reminder that something needs to be selected or nothing will happen",
                        "lineNumber": 1380,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return response",
                        "lineNumber": 1396,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:",
                        "lineNumber": 1397,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return HttpResponseRedirect(request.get_full_path())",
                        "lineNumber": 1398,
                        "lineChange": "none"
                      },
                      {
                        "line": "else:",
                        "lineNumber": 1399,
                        "lineChange": "none"
                      },
                      {
                        "line": "    msg = _(\"No action selected.\")",
                        "lineNumber": 1400,
                        "lineChange": "none"
                      },
                      {
                        "line": "Determine the HttpResponse for the delete_view stage.",
                        "lineNumber": 1406,
                        "lineChange": "none"
                      },
                      {
                        "line": "\"\"\"",
                        "lineNumber": 1407,
                        "lineChange": "none"
                      },
                      {
                        "line": "opts = self.model._meta",
                        "lineNumber": 1408,
                        "lineChange": "none"
                      },
                      {
                        "line": "if IS_POPUP_VAR in request.POST:",
                        "lineNumber": 1410,
                        "lineChange": "none"
                      },
                      {
                        "line": "    popup_response_data = json.dumps({",
                        "lineNumber": 1411,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'action': 'delete',",
                        "lineNumber": 1412,
                        "lineChange": "none"
                      },
                      {
                        "line": "})",
                        "lineNumber": 1414,
                        "lineChange": "none"
                      },
                      {
                        "line": "return TemplateResponse(request, self.popup_response_template or [",
                        "lineNumber": 1415,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'admin/%s/%s/popup_response.html' % (opts.app_label, opts.model_name),",
                        "lineNumber": 1416,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'admin/%s/popup_response.html' % opts.app_label,",
                        "lineNumber": 1417,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'admin/popup_response.html',",
                        "lineNumber": 1418,
                        "lineChange": "none"
                      },
                      {
                        "line": "], {",
                        "lineNumber": 1419,
                        "lineChange": "none"
                      },
                      {
                        "line": "request,",
                        "lineNumber": 1424,
                        "lineChange": "none"
                      },
                      {
                        "line": "_('The %(name)s “%(obj)s” was deleted successfully.') % {",
                        "lineNumber": 1425,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'name': opts.verbose_name,",
                        "lineNumber": 1426,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'obj': obj_display,",
                        "lineNumber": 1427,
                        "lineChange": "none"
                      },
                      {
                        "line": "},",
                        "lineNumber": 1428,
                        "lineChange": "none"
                      },
                      {
                        "line": "if self.has_change_permission(request, None):",
                        "lineNumber": 1432,
                        "lineChange": "none"
                      },
                      {
                        "line": "    post_url = reverse(",
                        "lineNumber": 1433,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'admin:%s_%s_changelist' % (opts.app_label, opts.model_name),",
                        "lineNumber": 1434,
                        "lineChange": "none"
                      },
                      {
                        "line": "        current_app=self.admin_site.name,",
                        "lineNumber": 1435,
                        "lineChange": "none"
                      },
                      {
                        "line": "    )",
                        "lineNumber": 1436,
                        "lineChange": "none"
                      },
                      {
                        "line": "    preserved_filters = self.get_preserved_filters(request)",
                        "lineNumber": 1437,
                        "lineChange": "none"
                      },
                      {
                        "line": "    post_url = add_preserved_filters(",
                        "lineNumber": 1438,
                        "lineChange": "none"
                      },
                      {
                        "line": "        {'preserved_filters': preserved_filters, 'opts': opts}, post_url",
                        "lineNumber": 1439,
                        "lineChange": "none"
                      },
                      {
                        "line": "    )",
                        "lineNumber": 1440,
                        "lineChange": "none"
                      },
                      {
                        "line": "else:",
                        "lineNumber": 1441,
                        "lineChange": "none"
                      },
                      {
                        "line": "def render_delete_form(self, request, context):",
                        "lineNumber": 1445,
                        "lineChange": "none"
                      },
                      {
                        "line": "    opts = self.model._meta",
                        "lineNumber": 1446,
                        "lineChange": "none"
                      },
                      {
                        "line": "    app_label = opts.app_label",
                        "lineNumber": 1447,
                        "lineChange": "none"
                      },
                      {
                        "line": "    request.current_app = self.admin_site.name",
                        "lineNumber": 1449,
                        "lineChange": "none"
                      },
                      {
                        "line": "request,",
                        "lineNumber": 1457,
                        "lineChange": "none"
                      },
                      {
                        "line": "self.delete_confirmation_template or [",
                        "lineNumber": 1458,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"admin/{}/{}/delete_confirmation.html\".format(app_label, opts.model_name),",
                        "lineNumber": 1459,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"admin/{}/delete_confirmation.html\".format(app_label),",
                        "lineNumber": 1460,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"admin/delete_confirmation.html\",",
                        "lineNumber": 1461,
                        "lineChange": "none"
                      },
                      {
                        "line": "    )",
                        "lineNumber": 1464,
                        "lineChange": "none"
                      },
                      {
                        "line": "def get_inline_formsets(self, request, formsets, inline_instances, obj=None):",
                        "lineNumber": 1466,
                        "lineChange": "none"
                      },
                      {
                        "line": "    inline_admin_formsets = []",
                        "lineNumber": 1467,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for inline, formset in zip(inline_instances, formsets):",
                        "lineNumber": 1468,
                        "lineChange": "none"
                      },
                      {
                        "line": "        fieldsets = list(inline.get_fieldsets(request, obj))",
                        "lineNumber": 1469,
                        "lineChange": "none"
                      },
                      {
                        "line": "        readonly = list(inline.get_readonly_fields(request, obj))",
                        "lineNumber": 1470,
                        "lineChange": "none"
                      },
                      {
                        "line": "        has_add_permission = inline.has_add_permission(request, obj)",
                        "lineNumber": 1471,
                        "lineChange": "none"
                      },
                      {
                        "line": "        has_change_permission = inline.has_change_permission(request, obj)",
                        "lineNumber": 1472,
                        "lineChange": "none"
                      },
                      {
                        "line": "        has_delete_permission = inline.has_delete_permission(request, obj)",
                        "lineNumber": 1473,
                        "lineChange": "none"
                      },
                      {
                        "line": "        has_view_permission = inline.has_view_permission(request, obj)",
                        "lineNumber": 1474,
                        "lineChange": "none"
                      },
                      {
                        "line": "        prepopulated = dict(inline.get_prepopulated_fields(request, obj))",
                        "lineNumber": 1475,
                        "lineChange": "none"
                      },
                      {
                        "line": "        inline_admin_formset = helpers.InlineAdminFormSet(",
                        "lineNumber": 1476,
                        "lineChange": "none"
                      },
                      {
                        "line": "            inline, formset, fieldsets, prepopulated, readonly, model_admin=self,",
                        "lineNumber": 1477,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return inline_admin_formsets",
                        "lineNumber": 1482,
                        "lineChange": "none"
                      },
                      {
                        "line": "def get_changeform_initial_data(self, request):",
                        "lineNumber": 1484,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1485,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Get the initial form data from the request's GET params.",
                        "lineNumber": 1486,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1487,
                        "lineChange": "none"
                      },
                      {
                        "line": "    initial = dict(request.GET.items())",
                        "lineNumber": 1488,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for k in initial:",
                        "lineNumber": 1489,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try:",
                        "lineNumber": 1490,
                        "lineChange": "none"
                      },
                      {
                        "line": "            f = self.model._meta.get_field(k)",
                        "lineNumber": 1491,
                        "lineChange": "none"
                      },
                      {
                        "line": "        except FieldDoesNotExist:",
                        "lineNumber": 1492,
                        "lineChange": "none"
                      },
                      {
                        "line": "            continue",
                        "lineNumber": 1493,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # We have to special-case M2Ms as a list of comma-separated PKs.",
                        "lineNumber": 1494,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if isinstance(f, models.ManyToManyField):",
                        "lineNumber": 1495,
                        "lineChange": "none"
                      },
                      {
                        "line": "            initial[k] = initial[k].split(\",\")",
                        "lineNumber": 1496,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return initial",
                        "lineNumber": 1497,
                        "lineChange": "none"
                      },
                      {
                        "line": "def _get_obj_does_not_exist_redirect(self, request, opts, object_id):",
                        "lineNumber": 1499,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1500,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Create a message informing the user that the object doesn't exist",
                        "lineNumber": 1501,
                        "lineChange": "none"
                      },
                      {
                        "line": "\"\"\"",
                        "lineNumber": 1503,
                        "lineChange": "none"
                      },
                      {
                        "line": "msg = _('%(name)s with ID “%(key)s” doesn’t exist. Perhaps it was deleted?') % {",
                        "lineNumber": 1504,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'name': opts.verbose_name,",
                        "lineNumber": 1505,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'key': unquote(object_id),",
                        "lineNumber": 1506,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1507,
                        "lineChange": "none"
                      },
                      {
                        "line": "@csrf_protect_m",
                        "lineNumber": 1512,
                        "lineChange": "none"
                      },
                      {
                        "line": "def changeform_view(self, request, object_id=None, form_url='', extra_context=None):",
                        "lineNumber": 1513,
                        "lineChange": "none"
                      },
                      {
                        "line": "    with transaction.atomic(using=router.db_for_write(self.model)):",
                        "lineNumber": 1514,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return self._changeform_view(request, object_id, form_url, extra_context)",
                        "lineNumber": 1515,
                        "lineChange": "none"
                      },
                      {
                        "line": "def _changeform_view(self, request, object_id, form_url, extra_context):",
                        "lineNumber": 1517,
                        "lineChange": "none"
                      },
                      {
                        "line": "    to_field = request.POST.get(TO_FIELD_VAR, request.GET.get(TO_FIELD_VAR))",
                        "lineNumber": 1518,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if to_field and not self.to_field_allowed(request, to_field):",
                        "lineNumber": 1519,
                        "lineChange": "none"
                      },
                      {
                        "line": "        raise DisallowedModelAdminToField(\"The field %s cannot be referenced.\" % to_field)",
                        "lineNumber": 1520,
                        "lineChange": "none"
                      },
                      {
                        "line": "    model = self.model",
                        "lineNumber": 1522,
                        "lineChange": "none"
                      },
                      {
                        "line": "    opts = model._meta",
                        "lineNumber": 1523,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if request.method == 'POST' and '_saveasnew' in request.POST:",
                        "lineNumber": 1525,
                        "lineChange": "none"
                      },
                      {
                        "line": "        object_id = None",
                        "lineNumber": 1526,
                        "lineChange": "none"
                      },
                      {
                        "line": "else:",
                        "lineNumber": 1535,
                        "lineChange": "none"
                      },
                      {
                        "line": "    obj = self.get_object(request, unquote(object_id), to_field)",
                        "lineNumber": 1536,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if not self.has_view_or_change_permission(request, obj):",
                        "lineNumber": 1538,
                        "lineChange": "none"
                      },
                      {
                        "line": "        raise PermissionDenied",
                        "lineNumber": 1539,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if obj is None:",
                        "lineNumber": 1541,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return self._get_obj_does_not_exist_redirect(request, opts, object_id)",
                        "lineNumber": 1542,
                        "lineChange": "none"
                      },
                      {
                        "line": "ModelForm = self.get_form(request, obj, change=not add)",
                        "lineNumber": 1544,
                        "lineChange": "none"
                      },
                      {
                        "line": "if request.method == 'POST':",
                        "lineNumber": 1545,
                        "lineChange": "none"
                      },
                      {
                        "line": "    form = ModelForm(request.POST, request.FILES, instance=obj)",
                        "lineNumber": 1546,
                        "lineChange": "none"
                      },
                      {
                        "line": "    form_validated = form.is_valid()",
                        "lineNumber": 1547,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if form_validated:",
                        "lineNumber": 1548,
                        "lineChange": "none"
                      },
                      {
                        "line": "        new_object = self.save_form(request, form, change=not add)",
                        "lineNumber": 1549,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:",
                        "lineNumber": 1550,
                        "lineChange": "none"
                      },
                      {
                        "line": "        new_object = form.instance",
                        "lineNumber": 1551,
                        "lineChange": "none"
                      },
                      {
                        "line": "    formsets, inline_instances = self._create_formsets(request, new_object, change=not add)",
                        "lineNumber": 1552,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if all_valid(formsets) and form_validated:",
                        "lineNumber": 1553,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.save_model(request, new_object, form, not add)",
                        "lineNumber": 1554,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.save_related(request, form, formsets, not add)",
                        "lineNumber": 1555,
                        "lineChange": "none"
                      },
                      {
                        "line": "        change_message = self.construct_change_message(request, form, formsets, add)",
                        "lineNumber": 1556,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if add:",
                        "lineNumber": 1557,
                        "lineChange": "none"
                      },
                      {
                        "line": "            self.log_addition(request, new_object, change_message)",
                        "lineNumber": 1558,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return self.response_add(request, new_object)",
                        "lineNumber": 1559,
                        "lineChange": "none"
                      },
                      {
                        "line": "        else:",
                        "lineNumber": 1560,
                        "lineChange": "none"
                      },
                      {
                        "line": "            self.log_change(request, new_object, change_message)",
                        "lineNumber": 1561,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return self.response_change(request, new_object)",
                        "lineNumber": 1562,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:",
                        "lineNumber": 1563,
                        "lineChange": "none"
                      },
                      {
                        "line": "        form_validated = False",
                        "lineNumber": 1564,
                        "lineChange": "none"
                      },
                      {
                        "line": "else:",
                        "lineNumber": 1565,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if add:",
                        "lineNumber": 1566,
                        "lineChange": "none"
                      },
                      {
                        "line": "        initial = self.get_changeform_initial_data(request)",
                        "lineNumber": 1567,
                        "lineChange": "none"
                      },
                      {
                        "line": "        form = ModelForm(initial=initial)",
                        "lineNumber": 1568,
                        "lineChange": "none"
                      },
                      {
                        "line": "        formsets, inline_instances = self._create_formsets(request, form.instance, change=False)",
                        "lineNumber": 1569,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:",
                        "lineNumber": 1570,
                        "lineChange": "none"
                      },
                      {
                        "line": "        form = ModelForm(instance=obj)",
                        "lineNumber": 1571,
                        "lineChange": "none"
                      },
                      {
                        "line": "        formsets, inline_instances = self._create_formsets(request, obj, change=True)",
                        "lineNumber": 1572,
                        "lineChange": "none"
                      },
                      {
                        "line": "if not add and not self.has_change_permission(request, obj):",
                        "lineNumber": 1574,
                        "lineChange": "none"
                      },
                      {
                        "line": "    readonly_fields = flatten_fieldsets(self.get_fieldsets(request, obj))",
                        "lineNumber": 1575,
                        "lineChange": "none"
                      },
                      {
                        "line": "else:",
                        "lineNumber": 1576,
                        "lineChange": "none"
                      },
                      {
                        "line": "    readonly_fields = self.get_readonly_fields(request, obj)",
                        "lineNumber": 1577,
                        "lineChange": "none"
                      },
                      {
                        "line": "adminForm = helpers.AdminForm(",
                        "lineNumber": 1578,
                        "lineChange": "none"
                      },
                      {
                        "line": "    form,",
                        "lineNumber": 1579,
                        "lineChange": "none"
                      },
                      {
                        "line": "    list(self.get_fieldsets(request, obj)),",
                        "lineNumber": 1580,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # Clear prepopulated fields on a view-only form to avoid a crash.",
                        "lineNumber": 1581,
                        "lineChange": "none"
                      },
                      {
                        "line": "    self.get_prepopulated_fields(request, obj) if add or self.has_change_permission(request, obj) else {},",
                        "lineNumber": 1582,
                        "lineChange": "none"
                      },
                      {
                        "line": "    readonly_fields,",
                        "lineNumber": 1583,
                        "lineChange": "none"
                      },
                      {
                        "line": "    model_admin=self)",
                        "lineNumber": 1584,
                        "lineChange": "none"
                      },
                      {
                        "line": "media = self.media + adminForm.media",
                        "lineNumber": 1585,
                        "lineChange": "none"
                      },
                      {
                        "line": "inline_formsets = self.get_inline_formsets(request, formsets, inline_instances, obj)",
                        "lineNumber": 1587,
                        "lineChange": "none"
                      },
                      {
                        "line": "for inline_formset in inline_formsets:",
                        "lineNumber": 1588,
                        "lineChange": "none"
                      },
                      {
                        "line": "    media = media + inline_formset.media",
                        "lineNumber": 1589,
                        "lineChange": "none"
                      },
                      {
                        "line": "if add:",
                        "lineNumber": 1591,
                        "lineChange": "none"
                      },
                      {
                        "line": "    title = _('Add %s')",
                        "lineNumber": 1592,
                        "lineChange": "none"
                      },
                      {
                        "line": "elif self.has_change_permission(request, obj):",
                        "lineNumber": 1593,
                        "lineChange": "none"
                      },
                      {
                        "line": "    title = _('Change %s')",
                        "lineNumber": 1594,
                        "lineChange": "none"
                      },
                      {
                        "line": "else:",
                        "lineNumber": 1595,
                        "lineChange": "none"
                      },
                      {
                        "line": "context = {",
                        "lineNumber": 1597,
                        "lineChange": "none"
                      },
                      {
                        "line": "    **self.admin_site.each_context(request),",
                        "lineNumber": 1598,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'title': title % opts.verbose_name,",
                        "lineNumber": 1599,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'adminform': adminForm,",
                        "lineNumber": 1600,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'object_id': object_id,",
                        "lineNumber": 1601,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'original': obj,",
                        "lineNumber": 1602,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'is_popup': IS_POPUP_VAR in request.POST or IS_POPUP_VAR in request.GET,",
                        "lineNumber": 1603,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'to_field': to_field,",
                        "lineNumber": 1604,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'media': media,",
                        "lineNumber": 1605,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Hide the \"Save\" and \"Save and continue\" buttons if \"Save as New\" was",
                        "lineNumber": 1611,
                        "lineChange": "none"
                      },
                      {
                        "line": "# previously chosen to prevent the interface from getting confusing.",
                        "lineNumber": 1612,
                        "lineChange": "none"
                      },
                      {
                        "line": "if request.method == 'POST' and not form_validated and \"_saveasnew\" in request.POST:",
                        "lineNumber": 1613,
                        "lineChange": "none"
                      },
                      {
                        "line": "    context['show_save'] = False",
                        "lineNumber": 1614,
                        "lineChange": "none"
                      },
                      {
                        "line": "    context['show_save_and_continue'] = False",
                        "lineNumber": 1615,
                        "lineChange": "none"
                      },
                      {
                        "line": "    context.update(extra_context or {})",
                        "lineNumber": 1619,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return self.render_change_form(request, context, add=add, change=not add, obj=obj, form_url=form_url)",
                        "lineNumber": 1621,
                        "lineChange": "none"
                      },
                      {
                        "line": "def autocomplete_view(self, request):",
                        "lineNumber": 1623,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return AutocompleteJsonView.as_view(model_admin=self)(request)",
                        "lineNumber": 1624,
                        "lineChange": "none"
                      },
                      {
                        "line": "def add_view(self, request, form_url='', extra_context=None):",
                        "lineNumber": 1626,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return self.changeform_view(request, None, form_url, extra_context)",
                        "lineNumber": 1627,
                        "lineChange": "none"
                      },
                      {
                        "line": "def change_view(self, request, object_id, form_url='', extra_context=None):",
                        "lineNumber": 1629,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return self.changeform_view(request, object_id, form_url, extra_context)",
                        "lineNumber": 1630,
                        "lineChange": "none"
                      },
                      {
                        "line": "def _get_edited_object_pks(self, request, prefix):",
                        "lineNumber": 1632,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"Return POST data values of list_editable primary keys.\"\"\"",
                        "lineNumber": 1633,
                        "lineChange": "none"
                      },
                      {
                        "line": "    pk_pattern = re.compile(r'{}-\\d+-{}$'.format(prefix, self.model._meta.pk.name))",
                        "lineNumber": 1634,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    pk_pattern = re.compile(",
                        "lineNumber": 1634,
                        "lineChange": "added"
                      },
                      {
                        "line": "        r'{}-\\d+-{}$'.format(re.escape(prefix), self.model._meta.pk.name)",
                        "lineNumber": 1635,
                        "lineChange": "added"
                      },
                      {
                        "line": "    )",
                        "lineNumber": 1636,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return [value for key, value in request.POST.items() if pk_pattern.match(key)]",
                        "lineNumber": 1637,
                        "lineChange": "none"
                      },
                      {
                        "line": "def _get_list_editable_queryset(self, request, prefix):",
                        "lineNumber": 1639,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1640,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Based on POST data, return a queryset of the objects that were edited",
                        "lineNumber": 1641,
                        "lineChange": "none"
                      },
                      {
                        "line": "    via list_editable.",
                        "lineNumber": 1642,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1643,
                        "lineChange": "none"
                      },
                      {
                        "line": "    object_pks = self._get_edited_object_pks(request, prefix)",
                        "lineNumber": 1644,
                        "lineChange": "none"
                      },
                      {
                        "line": "    queryset = self.get_queryset(request)",
                        "lineNumber": 1645,
                        "lineChange": "none"
                      },
                      {
                        "line": "    validate = queryset.model._meta.pk.to_python",
                        "lineNumber": 1646,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try:",
                        "lineNumber": 1647,
                        "lineChange": "none"
                      },
                      {
                        "line": "        for pk in object_pks:",
                        "lineNumber": 1648,
                        "lineChange": "none"
                      },
                      {
                        "line": "            validate(pk)",
                        "lineNumber": 1649,
                        "lineChange": "none"
                      },
                      {
                        "line": "    except ValidationError:",
                        "lineNumber": 1650,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # Disable the optimization if the POST data was tampered with.",
                        "lineNumber": 1651,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return queryset",
                        "lineNumber": 1652,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return queryset.filter(pk__in=object_pks)",
                        "lineNumber": 1653,
                        "lineChange": "none"
                      },
                      {
                        "line": "@csrf_protect_m",
                        "lineNumber": 1655,
                        "lineChange": "none"
                      },
                      {
                        "line": "def changelist_view(self, request, extra_context=None):",
                        "lineNumber": 1656,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1657,
                        "lineChange": "none"
                      },
                      {
                        "line": "    The 'change list' admin view for this model.",
                        "lineNumber": 1658,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"",
                        "lineNumber": 1659,
                        "lineChange": "none"
                      },
                      {
                        "line": "    from django.contrib.admin.views.main import ERROR_FLAG",
                        "lineNumber": 1660,
                        "lineChange": "none"
                      },
                      {
                        "line": "    opts = self.model._meta",
                        "lineNumber": 1661,
                        "lineChange": "none"
                      },
                      {
                        "line": "    app_label = opts.app_label",
                        "lineNumber": 1662,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if not self.has_view_or_change_permission(request):",
                        "lineNumber": 1663,
                        "lineChange": "none"
                      },
                      {
                        "line": "        raise PermissionDenied",
                        "lineNumber": 1664,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # something is screwed up with the database, so display an error",
                        "lineNumber": 1673,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # page.",
                        "lineNumber": 1674,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if ERROR_FLAG in request.GET:",
                        "lineNumber": 1675,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return SimpleTemplateResponse('admin/invalid_setup.html', {",
                        "lineNumber": 1676,
                        "lineChange": "none"
                      },
                      {
                        "line": "            'title': _('Database error'),",
                        "lineNumber": 1677,
                        "lineChange": "none"
                      },
                      {
                        "line": "        })",
                        "lineNumber": 1678,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return HttpResponseRedirect(request.path + '?' + ERROR_FLAG + '=1')",
                        "lineNumber": 1679,
                        "lineChange": "none"
                      },
                      {
                        "line": "# If the request was POSTed, this might be a bulk action or a bulk",
                        "lineNumber": 1681,
                        "lineChange": "none"
                      },
                      {
                        "line": "# below.",
                        "lineNumber": 1684,
                        "lineChange": "none"
                      },
                      {
                        "line": "action_failed = False",
                        "lineNumber": 1685,
                        "lineChange": "none"
                      },
                      {
                        "line": "selected = request.POST.getlist(helpers.ACTION_CHECKBOX_NAME)",
                        "lineNumber": 1686,
                        "lineChange": "none"
                      },
                      {
                        "line": "actions = self.get_actions(request)",
                        "lineNumber": 1688,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Actions with no confirmation",
                        "lineNumber": 1689,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (actions and request.method == 'POST' and",
                        "lineNumber": 1690,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'index' in request.POST and '_save' not in request.POST):",
                        "lineNumber": 1691,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if selected:",
                        "lineNumber": 1692,
                        "lineChange": "none"
                      },
                      {
                        "line": "        response = self.response_action(request, queryset=cl.get_queryset(request))",
                        "lineNumber": 1693,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Actions with confirmation",
                        "lineNumber": 1704,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (actions and request.method == 'POST' and",
                        "lineNumber": 1705,
                        "lineChange": "none"
                      },
                      {
                        "line": "        helpers.ACTION_CHECKBOX_NAME in request.POST and",
                        "lineNumber": 1706,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'index' not in request.POST and '_save' not in request.POST):",
                        "lineNumber": 1707,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if selected:",
                        "lineNumber": 1708,
                        "lineChange": "none"
                      },
                      {
                        "line": "        response = self.response_action(request, queryset=cl.get_queryset(request))",
                        "lineNumber": 1709,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # form if the user refreshes the browser or uses the \"No, take",
                        "lineNumber": 1717,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # me back\" button on the action confirmation page.",
                        "lineNumber": 1718,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return HttpResponseRedirect(request.get_full_path())",
                        "lineNumber": 1719,
                        "lineChange": "none"
                      },
                      {
                        "line": "# If we're allowing changelist editing, we need to construct a formset",
                        "lineNumber": 1721,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Handle POSTed bulk-edit data.",
                        "lineNumber": 1726,
                        "lineChange": "none"
                      },
                      {
                        "line": "if request.method == 'POST' and cl.list_editable and '_save' in request.POST:",
                        "lineNumber": 1727,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if not self.has_change_permission(request):",
                        "lineNumber": 1728,
                        "lineChange": "none"
                      },
                      {
                        "line": "        raise PermissionDenied",
                        "lineNumber": 1729,
                        "lineChange": "none"
                      },
                      {
                        "line": "    FormSet = self.get_changelist_formset(request)",
                        "lineNumber": 1730,
                        "lineChange": "none"
                      },
                      {
                        "line": "    modified_objects = self._get_list_editable_queryset(request, FormSet.get_default_prefix())",
                        "lineNumber": 1731,
                        "lineChange": "none"
                      },
                      {
                        "line": "    formset = cl.formset = FormSet(request.POST, request.FILES, queryset=modified_objects)",
                        "lineNumber": 1732,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if formset.is_valid():",
                        "lineNumber": 1733,
                        "lineChange": "none"
                      },
                      {
                        "line": "        changecount = 0",
                        "lineNumber": 1734,
                        "lineChange": "none"
                      },
                      {
                        "line": "        for form in formset.forms:",
                        "lineNumber": 1735,
                        "lineChange": "none"
                      },
                      {
                        "line": "            if form.has_changed():",
                        "lineNumber": 1736,
                        "lineChange": "none"
                      },
                      {
                        "line": "                obj = self.save_form(request, form, change=True)",
                        "lineNumber": 1737,
                        "lineChange": "none"
                      },
                      {
                        "line": "                self.save_model(request, obj, form, change=True)",
                        "lineNumber": 1738,
                        "lineChange": "none"
                      },
                      {
                        "line": "                self.save_related(request, form, formsets=[], change=True)",
                        "lineNumber": 1739,
                        "lineChange": "none"
                      },
                      {
                        "line": "                change_msg = self.construct_change_message(request, form, None)",
                        "lineNumber": 1740,
                        "lineChange": "none"
                      },
                      {
                        "line": "                self.log_change(request, obj, change_msg)",
                        "lineNumber": 1741,
                        "lineChange": "none"
                      },
                      {
                        "line": "                changecount += 1",
                        "lineNumber": 1742,
                        "lineChange": "none"
                      },
                      {
                        "line": "            ) % {",
                        "lineNumber": 1749,
                        "lineChange": "none"
                      },
                      {
                        "line": "                'count': changecount,",
                        "lineNumber": 1750,
                        "lineChange": "none"
                      },
                      {
                        "line": "                'name': model_ngettext(opts, changecount),",
                        "lineNumber": 1751,
                        "lineChange": "none"
                      },
                      {
                        "line": "            }",
                        "lineNumber": 1752,
                        "lineChange": "none"
                      },
                      {
                        "line": "            self.message_user(request, msg, messages.SUCCESS)",
                        "lineNumber": 1753,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return HttpResponseRedirect(request.get_full_path())",
                        "lineNumber": 1755,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Handle GET -- construct a formset for display.",
                        "lineNumber": 1757,
                        "lineChange": "none"
                      },
                      {
                        "line": "context = {",
                        "lineNumber": 1782,
                        "lineChange": "none"
                      },
                      {
                        "line": "    **self.admin_site.each_context(request),",
                        "lineNumber": 1783,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'module_name': str(opts.verbose_name_plural),",
                        "lineNumber": 1784,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'selection_note': _('0 of %(cnt)s selected') % {'cnt': len(cl.result_list)},",
                        "lineNumber": 1785,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'selection_note_all': selection_note_all % {'total_count': cl.result_count},",
                        "lineNumber": 1786,
                        "lineChange": "none"
                      },
                      {
                        "line": "return TemplateResponse(request, self.change_list_template or [",
                        "lineNumber": 1804,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'admin/%s/%s/change_list.html' % (app_label, opts.model_name),",
                        "lineNumber": 1805,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'admin/%s/change_list.html' % app_label,",
                        "lineNumber": 1806,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'admin/change_list.html'",
                        "lineNumber": 1807,
                        "lineChange": "none"
                      },
                      {
                        "line": "@csrf_protect_m",
                        "lineNumber": 1817,
                        "lineChange": "none"
                      },
                      {
                        "line": "def delete_view(self, request, object_id, extra_context=None):",
                        "lineNumber": 1818,
                        "lineChange": "none"
                      },
                      {
                        "line": "    with transaction.atomic(using=router.db_for_write(self.model)):",
                        "lineNumber": 1819,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return self._delete_view(request, object_id, extra_context)",
                        "lineNumber": 1820,
                        "lineChange": "none"
                      },
                      {
                        "line": "def _delete_view(self, request, object_id, extra_context):",
                        "lineNumber": 1822,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"The 'delete' admin view for this model.\"",
                        "lineNumber": 1823,
                        "lineChange": "none"
                      },
                      {
                        "line": "    opts = self.model._meta",
                        "lineNumber": 1824,
                        "lineChange": "none"
                      },
                      {
                        "line": "    app_label = opts.app_label",
                        "lineNumber": 1825,
                        "lineChange": "none"
                      },
                      {
                        "line": "    to_field = request.POST.get(TO_FIELD_VAR, request.GET.get(TO_FIELD_VAR))",
                        "lineNumber": 1827,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if to_field and not self.to_field_allowed(request, to_field):",
                        "lineNumber": 1828,
                        "lineChange": "none"
                      },
                      {
                        "line": "        raise DisallowedModelAdminToField(\"The field %s cannot be referenced.\" % to_field)",
                        "lineNumber": 1829,
                        "lineChange": "none"
                      },
                      {
                        "line": "    obj = self.get_object(request, unquote(object_id), to_field)",
                        "lineNumber": 1831,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if not self.has_delete_permission(request, obj):",
                        "lineNumber": 1833,
                        "lineChange": "none"
                      },
                      {
                        "line": "        raise PermissionDenied",
                        "lineNumber": 1834,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if obj is None:",
                        "lineNumber": 1836,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return self._get_obj_does_not_exist_redirect(request, opts, object_id)",
                        "lineNumber": 1837,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # Populate deleted_objects, a data structure of all related objects that",
                        "lineNumber": 1839,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # will also be deleted.",
                        "lineNumber": 1840,
                        "lineChange": "none"
                      },
                      {
                        "line": "    deleted_objects, model_count, perms_needed, protected = self.get_deleted_objects([obj], request)",
                        "lineNumber": 1841,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if request.POST and not protected:  # The user has confirmed the deletion.",
                        "lineNumber": 1843,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if perms_needed:",
                        "lineNumber": 1844,
                        "lineChange": "none"
                      },
                      {
                        "line": "            raise PermissionDenied",
                        "lineNumber": 1845,
                        "lineChange": "none"
                      },
                      {
                        "line": "        obj_display = str(obj)",
                        "lineNumber": 1846,
                        "lineChange": "none"
                      },
                      {
                        "line": "        attr = str(to_field) if to_field else opts.pk.attname",
                        "lineNumber": 1847,
                        "lineChange": "none"
                      },
                      {
                        "line": "        obj_id = obj.serializable_value(attr)",
                        "lineNumber": 1848,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.log_deletion(request, obj, obj_display)",
                        "lineNumber": 1849,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.delete_model(request, obj)",
                        "lineNumber": 1850,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return self.response_delete(request, obj_display, obj_id)",
                        "lineNumber": 1852,
                        "lineChange": "none"
                      },
                      {
                        "line": "    object_name = str(opts.verbose_name)",
                        "lineNumber": 1854,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if perms_needed or protected:",
                        "lineNumber": 1856,
                        "lineChange": "none"
                      },
                      {
                        "line": "'perms_lacking': perms_needed,",
                        "lineNumber": 1868,
                        "lineChange": "none"
                      },
                      {
                        "line": "'protected': protected,",
                        "lineNumber": 1869,
                        "lineChange": "none"
                      },
                      {
                        "line": "'opts': opts,",
                        "lineNumber": 1870,
                        "lineChange": "none"
                      },
                      {
                        "line": "'app_label': app_label,",
                        "lineNumber": 1871,
                        "lineChange": "none"
                      },
                      {
                        "line": "'preserved_filters': self.get_preserved_filters(request),",
                        "lineNumber": 1872,
                        "lineChange": "none"
                      },
                      {
                        "line": "'is_popup': IS_POPUP_VAR in request.POST or IS_POPUP_VAR in request.GET,",
                        "lineNumber": 1873,
                        "lineChange": "none"
                      },
                      {
                        "line": "'to_field': to_field,",
                        "lineNumber": 1874,
                        "lineChange": "none"
                      },
                      {
                        "line": "**(extra_context or {}),",
                        "lineNumber": 1875,
                        "lineChange": "none"
                      },
                      {
                        "line": "from django.contrib.admin.models import LogEntry",
                        "lineNumber": 1882,
                        "lineChange": "none"
                      },
                      {
                        "line": "# First check if the user can see this history.",
                        "lineNumber": 1883,
                        "lineChange": "none"
                      },
                      {
                        "line": "model = self.model",
                        "lineNumber": 1884,
                        "lineChange": "none"
                      },
                      {
                        "line": "obj = self.get_object(request, unquote(object_id))",
                        "lineNumber": 1885,
                        "lineChange": "none"
                      },
                      {
                        "line": "if obj is None:",
                        "lineNumber": 1886,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return self._get_obj_does_not_exist_redirect(request, model._meta, object_id)",
                        "lineNumber": 1887,
                        "lineChange": "none"
                      },
                      {
                        "line": "if not self.has_view_or_change_permission(request, obj):",
                        "lineNumber": 1889,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Then get the history for this object.",
                        "lineNumber": 1892,
                        "lineChange": "none"
                      },
                      {
                        "line": "opts = model._meta",
                        "lineNumber": 1893,
                        "lineChange": "none"
                      },
                      {
                        "line": "app_label = opts.app_label",
                        "lineNumber": 1894,
                        "lineChange": "none"
                      },
                      {
                        "line": "action_list = LogEntry.objects.filter(",
                        "lineNumber": 1895,
                        "lineChange": "none"
                      },
                      {
                        "line": "    object_id=unquote(object_id),",
                        "lineNumber": 1896,
                        "lineChange": "none"
                      },
                      {
                        "line": "    content_type=get_content_type_for_model(model)",
                        "lineNumber": 1897,
                        "lineChange": "none"
                      },
                      {
                        "line": ").select_related().order_by('action_time')",
                        "lineNumber": 1898,
                        "lineChange": "none"
                      },
                      {
                        "line": "'title': _('Change history: %s') % obj,",
                        "lineNumber": 1902,
                        "lineChange": "none"
                      },
                      {
                        "line": "'action_list': action_list,",
                        "lineNumber": 1903,
                        "lineChange": "none"
                      },
                      {
                        "line": "'module_name': str(capfirst(opts.verbose_name_plural)),",
                        "lineNumber": 1904,
                        "lineChange": "none"
                      },
                      {
                        "line": "'object': obj,",
                        "lineNumber": 1905,
                        "lineChange": "none"
                      },
                      {
                        "line": "'opts': opts,",
                        "lineNumber": 1906,
                        "lineChange": "none"
                      },
                      {
                        "line": "'preserved_filters': self.get_preserved_filters(request),",
                        "lineNumber": 1907,
                        "lineChange": "none"
                      },
                      {
                        "line": "**(extra_context or {}),",
                        "lineNumber": 1908,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return TemplateResponse(request, self.object_history_template or [",
                        "lineNumber": 1913,
                        "lineChange": "none"
                      },
                      {
                        "line": "        \"admin/%s/%s/object_history.html\" % (app_label, opts.model_name),",
                        "lineNumber": 1914,
                        "lineChange": "none"
                      },
                      {
                        "line": "        \"admin/%s/object_history.html\" % app_label,",
                        "lineNumber": 1915,
                        "lineChange": "none"
                      },
                      {
                        "line": "        \"admin/object_history.html\"",
                        "lineNumber": 1916,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ], context)",
                        "lineNumber": 1917,
                        "lineChange": "none"
                      },
                      {
                        "line": "def _create_formsets(self, request, obj, change):",
                        "lineNumber": 1919,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"Helper function to generate formsets for add/change_view.\"",
                        "lineNumber": 1920,
                        "lineChange": "none"
                      },
                      {
                        "line": "    formsets = []",
                        "lineNumber": 1921,
                        "lineChange": "none"
                      },
                      {
                        "line": "get_formsets_args = [request]",
                        "lineNumber": 1924,
                        "lineChange": "none"
                      },
                      {
                        "line": "if change:",
                        "lineNumber": 1925,
                        "lineChange": "none"
                      },
                      {
                        "line": "    get_formsets_args.append(obj)",
                        "lineNumber": 1926,
                        "lineChange": "none"
                      },
                      {
                        "line": "for FormSet, inline in self.get_formsets_with_inlines(*get_formsets_args):",
                        "lineNumber": 1927,
                        "lineChange": "none"
                      },
                      {
                        "line": "    prefix = FormSet.get_default_prefix()",
                        "lineNumber": 1928,
                        "lineChange": "none"
                      },
                      {
                        "line": "    prefix = \"%s-%s\" % (prefix, prefixes[prefix])",
                        "lineNumber": 1931,
                        "lineChange": "none"
                      },
                      {
                        "line": "formset_params = {",
                        "lineNumber": 1932,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'instance': obj,",
                        "lineNumber": 1933,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'prefix': prefix,",
                        "lineNumber": 1934,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'queryset': inline.get_queryset(request),",
                        "lineNumber": 1935,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1936,
                        "lineChange": "none"
                      },
                      {
                        "line": "if request.method == 'POST':",
                        "lineNumber": 1937,
                        "lineChange": "none"
                      },
                      {
                        "line": "    formset_params.update({",
                        "lineNumber": 1938,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'data': request.POST.copy(),",
                        "lineNumber": 1939,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'files': request.FILES,",
                        "lineNumber": 1940,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'save_as_new': '_saveasnew' in request.POST",
                        "lineNumber": 1941,
                        "lineChange": "none"
                      },
                      {
                        "line": "    })",
                        "lineNumber": 1942,
                        "lineChange": "none"
                      },
                      {
                        "line": "formset = FormSet(**formset_params)",
                        "lineNumber": 1943,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Bypass validation of each view-only inline form (since the form's",
                        "lineNumber": 1952,
                        "lineChange": "none"
                      },
                      {
                        "line": "# data won't be in request.POST), unless the form was deleted.",
                        "lineNumber": 1953,
                        "lineChange": "none"
                      },
                      {
                        "line": "if not inline.has_change_permission(request, obj if change else None):",
                        "lineNumber": 1954,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for index, form in enumerate(formset.initial_forms):",
                        "lineNumber": 1955,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if user_deleted_form(request, obj, formset, index):",
                        "lineNumber": 1956,
                        "lineChange": "none"
                      },
                      {
                        "line": "            continue",
                        "lineNumber": 1957,
                        "lineChange": "none"
                      },
                      {
                        "line": "        form._errors = {}",
                        "lineNumber": 1958,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 74,
                "cwe": [
                  "CWE-400"
                ]
              }
            },
            {
              "id": "python/CommandInjection",
              "name": "CommandInjection",
              "shortDescription": {
                "text": "Command Injection"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nWith an OS command injection attack a web application user can pass commands directly to the system shell, attached to a legitimate request. These commands can then be executed on the application server, potentially leading to harmful consequences, including data exposure or deletion. Like code injection attacks, command injection attacks are essentially a failure of data validation. Unlike code injection attacks, which introduce new code, command injection attacks use existing system functions, often taking advantage of the application's unnecessarily high privilege level, increasing the risk of serious harm and reputational damage.\n\n## Best practices for prevention\n- Never trust user input. Assume any input may transmit harmful values.\n- Adopt the principle of least privilege: No application should have a greater access level than needed to run its required tasks.\n- Control user access policies on a task-by-task basis.\n- Don't pass user input directly to the system; use libraries or APIs that lack system access.\n- Where shell commands must be passed, escape values using functions like shlex for Python, or escapeshellarg() for PHP.\n- Sanitize user input with regular expressions to define permitted characters along with maximum string length.\n- Convert special characters such as `& |  ; $ > < \\ !` before passing to the server.\n- Whitelist permitted commands and validate user responses against these expectations.\n- Remember that code injection can take place on multiple fronts: GET and POST requests, but also cookies and HTTP headers.\n- Ensure up-to-date patching across all systems to remediate known vulnerabilities.\n- Educate all team members on safer data handling procedures to prevent attacks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "CommandInjection",
                  "Security",
                  "SourceLocalEnv",
                  "SourceEnvironmentVariable",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/DustinBorn/avain/commit/4776439387645bced0e86e3766817de2562bf2eb?diff=split#diff-40f53a8850b6eb3209bd2d436d3ec5acL41",
                    "lines": [
                      {
                        "line": "# first download the data feed overview to retrieve URLs to all data feeds",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "try:",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "    nvd_response = requests.get(\"https://nvd.nist.gov/vuln/data-feeds\", timeout=20)",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "except:",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "communicate_warning(\"An error occured when trying to download webpage: https://nvd.nist.gov/vuln/data-feeds\")",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "# match the data feed URLs",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "nvd_nist_datafeed_html = nvd_response.text",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "jfeed_expr = re.compile(r\"https://nvd\\.nist\\.gov/feeds/json/cve/1\\.1/nvdcve-1\\.1-\\d\\d\\d\\d.json\\.zip\")",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "nvd_feed_urls = re.findall(jfeed_expr, nvd_nist_datafeed_html)",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "if not nvd_feed_urls:",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "with open(WGET_OUTFILE, \"w\") as file:",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "    zipfiles = []",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for nvd_feed_url in nvd_feed_urls:",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "        outname = os.path.join(NVD_DATAFEED_DIR, nvd_feed_url.split(\"/\")[-1])",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return_code = subprocess.call(\"wget %s -O %s\" % (nvd_feed_url, outname), stdout=file, stderr=subprocess.STDOUT, shell=True)",
                        "lineNumber": 65,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        return_code = subprocess.call(\"wget %s -O %s\" % (shlex.quote(nvd_feed_url), shlex.quote(outname)),",
                        "lineNumber": 86,
                        "lineChange": "added"
                      },
                      {
                        "line": "                                      stdout=file, stderr=subprocess.STDOUT, shell=True)",
                        "lineNumber": 87,
                        "lineChange": "added"
                      },
                      {
                        "line": "        if return_code != 0:",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "            NVD_UPDATE_SUCCESS = False",
                        "lineNumber": 89,
                        "lineChange": "added"
                      },
                      {
                        "line": "            communicate_warning(\"Getting NVD data feed %s failed\" %  nvd_feed_url)",
                        "lineNumber": 90,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/phase/o/commit/0f4bf9160b046e42f4cfad49585cc727b5213dc0?diff=split#diff-d689391370727e13cf640b0a56f5c1f0L32",
                    "lines": [
                      {
                        "line": "    compileO()",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "#Run code",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "code = request.form['code']",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "input = request.form['input'].replace('\\r\\n', '\\n')",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "print('Got code:', code, 'input:', input)",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "print('Running O code...')",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "p = Popen('./oide -e ' + code, stdout=PIPE, stderr=PIPE, stdin=PIPE, universal_newlines=True, shell=True)",
                        "lineNumber": 35,
                        "lineChange": "removed"
                      },
                      {
                        "line": "p = Popen(['./oide', '-e', code], stdout=PIPE, stderr=PIPE, stdin=PIPE, universal_newlines=True)",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "output, error = p.communicate(input)",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "#Output to IDE",
                        "lineNumber": 37,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/fossasia/susi_linux/commit/cb0d01d811fcb53863847ce57f57e8cb6c83df6c?diff=split#diff-d1b551c102df7ccabbf2e58275781476L15",
                    "lines": [
                      {
                        "line": "    return 'starting the installation script'",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "@app.route('/config/<stt>/<tts>/<hotword>/<wake>')",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "def config(stt, tts, hotword, wake):",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "    os.system('sudo bash /home/pi/SUSI.AI/susi_linux/access_point/server/config.sh {} {} {} {}'.format(stt,tts,hotword,wake))  #nosec #pylint-disable type: ignore",
                        "lineNumber": 16,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    subprocess.call(['sudo', 'bash' , 'server/config.sh', stt, tts, hotword, wake])  #nosec #pylint-disable type: ignore",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return 'Done' # pylint-enable",
                        "lineNumber": 17,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 128,
                "cwe": [
                  "CWE-78"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "xml/AndroidDebugEnabled",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "(Beta Suggestion) Android app is being run in debug mode: android:debuggable is set to true. Debug features often gives access to detailed information to attackers.",
            "markdown": "(Beta Suggestion) Android app is being run in debug mode: {0} is set to {1}. Debug features often gives access to detailed information to attackers.",
            "arguments": [
              "[android:debuggable](0)",
              "[true](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/tools/benchmark/android/AndroidManifest.xml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 28,
                  "endLine": 29,
                  "startColumn": 5,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "555ee1c0d35707a33b56f57ef7e800f035565c2de13daf6233ac7e767b6e4659",
            "1": "989aa1d1.fb8e690a.c7a74b75.1f57d573.e7d91c03.d653960d.6ce2516c.d93b5cec.989aa1d1.fb8e690a.c7a74b75.1f57d573.e7d91c03.d653960d.6ce2516c.d93b5cec"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/benchmark/android/AndroidManifest.xml",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 29,
                            "startColumn": 5,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/benchmark/android/AndroidManifest.xml",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 29,
                            "startColumn": 5,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 301,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "xml/AndroidDebugEnabled",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "(Beta Suggestion) Android app is being run in debug mode: android:debuggable is set to true. Debug features often gives access to detailed information to attackers.",
            "markdown": "(Beta Suggestion) Android app is being run in debug mode: {0} is set to {1}. Debug features often gives access to detailed information to attackers.",
            "arguments": [
              "[android:debuggable](0)",
              "[true](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/tools/benchmark/experimental/delegate_performance/android/AndroidManifest.xml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 33,
                  "endLine": 33,
                  "startColumn": 5,
                  "endColumn": 43
                }
              }
            }
          ],
          "fingerprints": {
            "0": "913bae591fb8aebae0dddc6526a9e2e6b1599cc6f099f0535684b84e0f1acabf",
            "1": "989aa1d1.5811d442.9a351ffc.1f57d573.e7d91c03.ba6f8e21.6ce2516c.d93b5cec.989aa1d1.5811d442.9a351ffc.1f57d573.d185f18b.ba6f8e21.6ce2516c.d93b5cec"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/benchmark/experimental/delegate_performance/android/AndroidManifest.xml",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "endLine": 33,
                            "startColumn": 5,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/benchmark/experimental/delegate_performance/android/AndroidManifest.xml",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "endLine": 33,
                            "startColumn": 5,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 301,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21)",
              "[open](22)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/tools/strip_unused_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 81,
                  "endLine": 81,
                  "startColumn": 12,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "94072e9d4f07fcb265f341c79536c7a5df5263d107333e550e882b5b285a6f8e",
            "1": "51f7af01.e543d1c5.187bf175.139c59a8.3dd14fd5.ba14daf2.081ac3f4.a4830b9a.51f7af01.277c621c.187bf175.139c59a8.3dd14fd5.ba14daf2.8f6bdb8b.e417629d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/strip_unused_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 38,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/strip_unused_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/strip_unused_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 5,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/strip_unused_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 48,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/strip_unused_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 17,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/strip_unused_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21)",
              "[open](22)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/tools/strip_unused_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 138,
                  "endLine": 138,
                  "startColumn": 12,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "be137d5dc2673b36463779e3ab77764a254b611ee3e2c0833c021b4554a968f7",
            "1": "51f7af01.e543d1c5.187bf175.139c59a8.3dd14fd5.ba14daf2.081ac3f4.a4830b9a.51f7af01.277c621c.187bf175.139c59a8.3dd14fd5.ba14daf2.8f6bdb8b.b2390fc7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/strip_unused_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 126,
                            "endLine": 126,
                            "startColumn": 38,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/strip_unused_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 126,
                            "endLine": 126,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/strip_unused_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 126,
                            "endLine": 126,
                            "startColumn": 5,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/strip_unused_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 129,
                            "endLine": 129,
                            "startColumn": 46,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/strip_unused_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 138,
                            "endLine": 138,
                            "startColumn": 17,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/strip_unused_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 138,
                            "endLine": 138,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27)",
              "[open](28)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 622,
                  "endLine": 622,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9eb7fb8fa341d0bf818f263ffc40727092fe7dfbdd4c01e416ab1501e9d90eae",
            "1": "2e8ddaeb.439ae3a8.187bf175.139c59a8.f3eda546.ba14daf2.081ac3f4.a4830b9a.2e8ddaeb.577bab1d.187bf175.c0417cb8.427e3c32.a5d7f69f.ae7042a8.a4830b9a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 608,
                            "endLine": 608,
                            "startColumn": 32,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 608,
                            "endLine": 608,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 608,
                            "endLine": 608,
                            "startColumn": 5,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 609,
                            "endLine": 609,
                            "startColumn": 14,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 610,
                            "endLine": 610,
                            "startColumn": 27,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 610,
                            "endLine": 610,
                            "startColumn": 14,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 610,
                            "endLine": 610,
                            "startColumn": 5,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 613,
                            "endLine": 613,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 615,
                            "endLine": 615,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 621,
                            "endLine": 621,
                            "startColumn": 22,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 622,
                            "endLine": 622,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 622,
                            "endLine": 622,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27)",
              "[open](28)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 647,
                  "endLine": 647,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b28fd279a2f4b18b2d995fc7e4fa9991110cf9f23c2c5de44453027e19b4371e",
            "1": "2e8ddaeb.09b47a5b.187bf175.139c59a8.f3eda546.ba14daf2.932b34dd.a4830b9a.2e8ddaeb.577bab1d.187bf175.8792a31a.f3eda546.a5d7f69f.ae7042a8.a4830b9a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 630,
                            "endLine": 630,
                            "startColumn": 30,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 630,
                            "endLine": 630,
                            "startColumn": 17,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 630,
                            "endLine": 630,
                            "startColumn": 5,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 632,
                            "endLine": 632,
                            "startColumn": 14,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 633,
                            "endLine": 633,
                            "startColumn": 27,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 633,
                            "endLine": 633,
                            "startColumn": 14,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 633,
                            "endLine": 633,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 636,
                            "endLine": 636,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 638,
                            "endLine": 638,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 644,
                            "endLine": 644,
                            "startColumn": 22,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 647,
                            "endLine": 647,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 647,
                            "endLine": 647,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25)",
              "[open](26)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 671,
                  "endLine": 671,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "00fe732369d0350cf2e88c5b2de811ea76534a09d0e442b55b5c25c3678feba0",
            "1": "2e8ddaeb.09b47a5b.187bf175.139c59a8.f3eda546.ba14daf2.081ac3f4.a4830b9a.2e8ddaeb.577bab1d.187bf175.c0417cb8.f3eda546.a5d7f69f.6cb27fbf.a4830b9a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 655,
                            "endLine": 655,
                            "startColumn": 31,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 655,
                            "endLine": 655,
                            "startColumn": 18,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 655,
                            "endLine": 655,
                            "startColumn": 5,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 665,
                            "endLine": 665,
                            "startColumn": 40,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 667,
                            "endLine": 667,
                            "startColumn": 31,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 667,
                            "endLine": 667,
                            "startColumn": 18,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 667,
                            "endLine": 667,
                            "startColumn": 5,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 670,
                            "endLine": 670,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 671,
                            "endLine": 671,
                            "startColumn": 15,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 671,
                            "endLine": 671,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27)",
              "[open](28)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 696,
                  "endLine": 696,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "541620af1e88073b0b6dfb55ad442c3e0dc3788eb0785c88f8167a08c0b0c44f",
            "1": "2e8ddaeb.439ae3a8.187bf175.139c59a8.f3eda546.ba14daf2.081ac3f4.a4830b9a.2e8ddaeb.577bab1d.187bf175.8792a31a.f3eda546.a5d7f69f.ae7042a8.a4830b9a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 679,
                            "endLine": 679,
                            "startColumn": 30,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 679,
                            "endLine": 679,
                            "startColumn": 17,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 679,
                            "endLine": 679,
                            "startColumn": 5,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 682,
                            "endLine": 682,
                            "startColumn": 14,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 683,
                            "endLine": 683,
                            "startColumn": 27,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 683,
                            "endLine": 683,
                            "startColumn": 14,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 683,
                            "endLine": 683,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 686,
                            "endLine": 686,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 688,
                            "endLine": 688,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 695,
                            "endLine": 695,
                            "startColumn": 22,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 696,
                            "endLine": 696,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 696,
                            "endLine": 696,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28)",
              "[open](29)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/tools/visualize_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 50,
                  "endLine": 50,
                  "startColumn": 17,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "de1867d63e4e3ee3e1aaece67b6e8ca6faa9bddb5946c31b038fe0f8f16f1a45",
            "1": "800eb1b9.ceedf329.187bf175.b505c434.f3eda546.ba14daf2.682a1833.f355b44c.983befcc.577bab1d.187bf175.b505c434.8aa98a1d.ba14daf2.682a1833.cadd00d0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 15,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 5,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 35,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 22,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 5,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 15,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 39,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 429,
                            "endLine": 429,
                            "startColumn": 17,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 446,
                            "endLine": 446,
                            "startColumn": 27,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 448,
                            "endLine": 448,
                            "startColumn": 8,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 448,
                            "endLine": 448,
                            "startColumn": 44,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 449,
                            "endLine": 449,
                            "startColumn": 17,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 449,
                            "endLine": 449,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23)",
              "[open](24)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 549,
                  "endLine": 549,
                  "startColumn": 12,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d83d5edd8223aff4eeb57e0facf4d8b8f72c66e85dd16e359c3c9409ade8886e",
            "1": "2e8ddaeb.09b47a5b.187bf175.4a95692a.f3eda546.ba14daf2.081ac3f4.a4830b9a.2e8ddaeb.577bab1d.a832003e.5bc6639a.e067a2f7.ba14daf2.bc740e82.a4830b9a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 540,
                            "endLine": 540,
                            "startColumn": 17,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 540,
                            "endLine": 540,
                            "startColumn": 7,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 541,
                            "endLine": 541,
                            "startColumn": 28,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 541,
                            "endLine": 541,
                            "startColumn": 15,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 541,
                            "endLine": 541,
                            "startColumn": 7,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 542,
                            "endLine": 542,
                            "startColumn": 17,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 549,
                            "endLine": 549,
                            "startColumn": 17,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 549,
                            "endLine": 549,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21)",
              "[open](22)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/tools/freeze_graph_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 105,
                  "endLine": 105,
                  "startColumn": 12,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "99aa2addfee500d1cf6f4a1c8831795c3e3a476a69c91e4fc7fcd318a772d213",
            "1": "51f7af01.e543d1c5.187bf175.139c59a8.3dd14fd5.ba14daf2.081ac3f4.a4830b9a.51f7af01.e543d1c5.187bf175.c9b98ad1.3dd14fd5.ba14daf2.7a2613c0.a4830b9a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/freeze_graph_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 38,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/freeze_graph_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/freeze_graph_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 5,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/freeze_graph_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 9,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/freeze_graph_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 105,
                            "endLine": 105,
                            "startColumn": 17,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/freeze_graph_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 105,
                            "endLine": 105,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24)",
              "[open](25)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/tools/freeze_graph_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 207,
                  "endLine": 207,
                  "startColumn": 12,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "34bb2cd6e3b22e96545c0c122619cb8915abd32b804f097cb4f27148267d56b1",
            "1": "2e8ddaeb.f99366ba.187bf175.139c59a8.f3eda546.05a1d16e.081ac3f4.a4830b9a.16fe57f6.f99366ba.187bf175.c9b98ad1.f3eda546.05a1d16e.7a2613c0.a4830b9a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/freeze_graph_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 170,
                            "endLine": 170,
                            "startColumn": 15,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/freeze_graph_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 170,
                            "endLine": 170,
                            "startColumn": 5,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/freeze_graph_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 171,
                            "endLine": 171,
                            "startColumn": 38,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/freeze_graph_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 42,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/freeze_graph_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 29,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/freeze_graph_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 5,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/freeze_graph_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 201,
                            "endLine": 201,
                            "startColumn": 9,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/freeze_graph_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 207,
                            "endLine": 207,
                            "startColumn": 17,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/freeze_graph_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 207,
                            "endLine": 207,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24)",
              "[open](25)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/tools/freeze_graph_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 254,
                  "endLine": 254,
                  "startColumn": 12,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c8ff36c9966f843985bcc0af20c00e3865a01b28c1623841a17f49dea264f565",
            "1": "2e8ddaeb.f99366ba.187bf175.139c59a8.f3eda546.ba14daf2.081ac3f4.a4830b9a.16fe57f6.f99366ba.187bf175.c9b98ad1.f3eda546.ba14daf2.7a2613c0.6de74183"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/freeze_graph_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 225,
                            "endLine": 225,
                            "startColumn": 15,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/freeze_graph_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 225,
                            "endLine": 225,
                            "startColumn": 5,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/freeze_graph_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 226,
                            "endLine": 226,
                            "startColumn": 36,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/freeze_graph_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 229,
                            "endLine": 229,
                            "startColumn": 42,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/freeze_graph_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 229,
                            "endLine": 229,
                            "startColumn": 29,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/freeze_graph_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 229,
                            "endLine": 229,
                            "startColumn": 5,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/freeze_graph_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 246,
                            "endLine": 246,
                            "startColumn": 31,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/freeze_graph_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 254,
                            "endLine": 254,
                            "startColumn": 17,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/freeze_graph_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 254,
                            "endLine": 254,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7)",
              "[open](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/platform/benchmark_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 41,
                  "endLine": 41,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "685a2688372d601cd8941afc0efe60a6dacd6ff0a719d506519ee8c5fca94057",
            "1": "2e8ddaeb.09b47a5b.187bf175.139c59a8.f3eda546.ba14daf2.081ac3f4.cabd153b.16fe57f6.9c58cb7a.187bf175.139c59a8.f3eda546.46218c8a.25bc8e31.cabd153b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 5,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 5,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 23,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 29,
                            "startColumn": 5,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 23,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 15,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23)",
              "[open](24)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 288,
                  "endLine": 288,
                  "startColumn": 7,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2e4856590140524e57be08e04fc1ace3334e190afca683cc7ac0980d402758da",
            "1": "8393cb05.2a7b82ac.187bf175.a7d035ee.8adb47ee.ba14daf2.90e1d116.ebed174f.aae8f0ff.2a7b82ac.187bf175.a7d035ee.8c24caba.e91cf83e.90e1d116.136df85f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 285,
                            "endLine": 285,
                            "startColumn": 29,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 285,
                            "endLine": 285,
                            "startColumn": 16,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 285,
                            "endLine": 285,
                            "startColumn": 5,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 288,
                            "endLine": 288,
                            "startColumn": 32,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 17,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 21,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 104,
                            "startColumn": 15,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 104,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27)",
              "[open](28)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 300,
                  "endLine": 300,
                  "startColumn": 23,
                  "endColumn": 47
                }
              }
            }
          ],
          "fingerprints": {
            "0": "711025f11d1945fa6400f51c1502d99210a9dbe5dd9ff3bb8f6f1c404200791d",
            "1": "0baafc83.f261d51f.187bf175.a7d035ee.f28c4f04.ba14daf2.081ac3f4.6aac30d8.2e8ddaeb.99ae851e.187bf175.a7d035ee.f158b6e4.4596333c.0b879a26.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 295,
                            "endLine": 295,
                            "startColumn": 29,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 295,
                            "endLine": 295,
                            "startColumn": 16,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 295,
                            "endLine": 295,
                            "startColumn": 5,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 296,
                            "endLine": 296,
                            "startColumn": 26,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 299,
                            "endLine": 299,
                            "startColumn": 32,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 299,
                            "endLine": 299,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 299,
                            "endLine": 299,
                            "startColumn": 5,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 300,
                            "endLine": 300,
                            "startColumn": 48,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 17,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 21,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 104,
                            "startColumn": 15,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 104,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27)",
              "[open](28)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 316,
                  "endLine": 316,
                  "startColumn": 7,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e5492fa2b924034ca64dc11e60cf734d517075e94b43400a7a2742b524c242ce",
            "1": "da91ecbf.f261d51f.187bf175.a7d035ee.f28c4f04.ba14daf2.4e20e0df.ebed174f.2e8ddaeb.99ae851e.187bf175.a7d035ee.f158b6e4.4596333c.0b879a26.cadd00d0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 309,
                            "endLine": 309,
                            "startColumn": 29,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 309,
                            "endLine": 309,
                            "startColumn": 16,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 309,
                            "endLine": 309,
                            "startColumn": 5,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 26,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 313,
                            "endLine": 313,
                            "startColumn": 32,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 313,
                            "endLine": 313,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 313,
                            "endLine": 313,
                            "startColumn": 5,
                            "endColumn": 80
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 316,
                            "endLine": 316,
                            "startColumn": 32,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 17,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 21,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 104,
                            "startColumn": 15,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 104,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23)",
              "[open](24)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/eager/core_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 480,
                  "endLine": 480,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bc41b3b76b95c8f4bf1ce595347cb8e70f48826fe0b0e83afaabd8a116556fda",
            "1": "2e8ddaeb.09b47a5b.187bf175.4a95692a.f3eda546.ba14daf2.081ac3f4.a4830b9a.2e8ddaeb.577bab1d.a832003e.5bc6639a.e067a2f7.ba14daf2.7cc96b57.a4830b9a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 474,
                            "endLine": 474,
                            "startColumn": 15,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 474,
                            "endLine": 474,
                            "startColumn": 5,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 475,
                            "endLine": 475,
                            "startColumn": 26,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 475,
                            "endLine": 475,
                            "startColumn": 13,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 475,
                            "endLine": 475,
                            "startColumn": 5,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 476,
                            "startColumn": 15,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 480,
                            "endLine": 480,
                            "startColumn": 15,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 480,
                            "endLine": 480,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30)",
              "[open](31)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 86,
                  "endLine": 86,
                  "startColumn": 5,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6ee788242a734089c4a1a7e810b3c7501e035e7d78f0f1efeb83c6c7dab54daf",
            "1": "9cce75a0.d27be68f.fadac385.139c59a8.cc65b686.f65eedc0.58cc0f57.cffa3410.e3054d7a.d27be68f.fadac385.44691350.93a5bd7c.6067d8bd.58cc0f57.6eb46ac5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 19,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 5,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 39,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 38,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 29,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 28,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 38,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 204,
                            "endLine": 204,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 227,
                            "endLine": 227,
                            "startColumn": 39,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 228,
                            "endLine": 228,
                            "startColumn": 38,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 228,
                            "endLine": 228,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 228,
                            "endLine": 228,
                            "startColumn": 3,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 234,
                            "endLine": 234,
                            "startColumn": 25,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 253,
                            "endLine": 253,
                            "startColumn": 13,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 253,
                            "endLine": 253,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24)",
              "[open](25)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 613,
                  "endLine": 613,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "73082f0e3e2da0173dbe460d51e42f32974992b59384d6400a45f285e160e61c",
            "1": "2e8ddaeb.439ae3a8.187bf175.4cf0ec28.427e3c32.358db85d.81a1ab6d.a4830b9a.2e8ddaeb.577bab1d.187bf175.8792a31a.4608c58f.a5d7f69f.81a1ab6d.a4830b9a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 608,
                            "endLine": 608,
                            "startColumn": 32,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 608,
                            "endLine": 608,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 608,
                            "endLine": 608,
                            "startColumn": 5,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 609,
                            "endLine": 609,
                            "startColumn": 14,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 610,
                            "endLine": 610,
                            "startColumn": 27,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 610,
                            "endLine": 610,
                            "startColumn": 14,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 610,
                            "endLine": 610,
                            "startColumn": 5,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 613,
                            "endLine": 613,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 613,
                            "endLine": 613,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24)",
              "[open](25)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 636,
                  "endLine": 636,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8cf1e5ab2e6fe092cf073be9ba41bfea8206a79c41aa8adb61510f0cf0b263fc",
            "1": "2e8ddaeb.4ba47fe9.187bf175.9d76ab28.f3eda546.ba14daf2.932b34dd.a4830b9a.2e8ddaeb.577bab1d.187bf175.8792a31a.4608c58f.a5d7f69f.932b34dd.a4830b9a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 630,
                            "endLine": 630,
                            "startColumn": 30,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 630,
                            "endLine": 630,
                            "startColumn": 17,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 630,
                            "endLine": 630,
                            "startColumn": 5,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 632,
                            "endLine": 632,
                            "startColumn": 14,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 633,
                            "endLine": 633,
                            "startColumn": 27,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 633,
                            "endLine": 633,
                            "startColumn": 14,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 633,
                            "endLine": 633,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 636,
                            "endLine": 636,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 636,
                            "endLine": 636,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24)",
              "[open](25)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 660,
                  "endLine": 660,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "27e3beffe0852ce5ac8432a9633e4e20d7d0c0fa404c0f3f48eef5f7d0f092f6",
            "1": "2e8ddaeb.439ae3a8.187bf175.bca5dc94.f3eda546.ba14daf2.e4415089.a4830b9a.2e8ddaeb.577bab1d.187bf175.8792a31a.4608c58f.a5d7f69f.e4415089.a4830b9a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 654,
                            "endLine": 654,
                            "startColumn": 32,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 654,
                            "endLine": 654,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 654,
                            "endLine": 654,
                            "startColumn": 5,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 656,
                            "endLine": 656,
                            "startColumn": 14,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 657,
                            "endLine": 657,
                            "startColumn": 27,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 657,
                            "endLine": 657,
                            "startColumn": 14,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 657,
                            "endLine": 657,
                            "startColumn": 5,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 660,
                            "endLine": 660,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 660,
                            "endLine": 660,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24)",
              "[open](25)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 686,
                  "endLine": 686,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c3552dc5c55bf27126fe493dcbe09270efce3083ddb5e4b9b9d29bbb047b8b3b",
            "1": "2e8ddaeb.439ae3a8.187bf175.9d76ab28.f3eda546.ba14daf2.e4415089.a4830b9a.2e8ddaeb.577bab1d.187bf175.8792a31a.4608c58f.a5d7f69f.e4415089.a4830b9a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 679,
                            "endLine": 679,
                            "startColumn": 30,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 679,
                            "endLine": 679,
                            "startColumn": 17,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 679,
                            "endLine": 679,
                            "startColumn": 5,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 682,
                            "endLine": 682,
                            "startColumn": 14,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 683,
                            "endLine": 683,
                            "startColumn": 27,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 683,
                            "endLine": 683,
                            "startColumn": 14,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 683,
                            "endLine": 683,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 686,
                            "endLine": 686,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 686,
                            "endLine": 686,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22)",
              "[open](23)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/tools/optimize/python/modify_model_interface_lib_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 61,
                  "endLine": 61,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c7bafb0405400ae4a091246dfc979cb632ed1a351a16fca9204642016822374d",
            "1": "d8be19a2.f83fcb93.187bf175.139c59a8.f3eda546.bb27e7e9.6c6b8b22.ebed174f.ab7efe7a.0ce8d1b4.187bf175.d83d8dee.4608c58f.bb27e7e9.6c6b8b22.a7dea587"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/optimize/python/modify_model_interface_lib_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 16,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/optimize/python/modify_model_interface_lib_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 5,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/optimize/python/modify_model_interface_lib_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/optimize/python/modify_model_interface_lib_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 20,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/optimize/python/modify_model_interface_lib_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 5,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/optimize/python/modify_model_interface_lib_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 15,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/optimize/python/modify_model_interface_lib_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22)",
              "[open](23)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/tools/optimize/python/modify_model_interface_lib_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 98,
                  "endLine": 98,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fd49e7875644c728325530603cf6fc33f10d51b33d865a135bac881f87d0af7a",
            "1": "d8be19a2.f83fcb93.187bf175.139c59a8.f3eda546.bb27e7e9.6c6b8b22.ebed174f.ab7efe7a.0ce8d1b4.187bf175.d83d8dee.4608c58f.bb27e7e9.6c6b8b22.a7dea587"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/optimize/python/modify_model_interface_lib_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 16,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/optimize/python/modify_model_interface_lib_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 5,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/optimize/python/modify_model_interface_lib_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 92,
                            "endLine": 92,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/optimize/python/modify_model_interface_lib_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 92,
                            "endLine": 92,
                            "startColumn": 20,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/optimize/python/modify_model_interface_lib_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 92,
                            "endLine": 92,
                            "startColumn": 5,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/optimize/python/modify_model_interface_lib_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 98,
                            "endLine": 98,
                            "startColumn": 15,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/optimize/python/modify_model_interface_lib_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 98,
                            "endLine": 98,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22)",
              "[open](23)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/tools/optimize/python/modify_model_interface_lib_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 133,
                  "endLine": 133,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e86468a54b8920189e8334422f76fc0b19851b8df289e1d3d87fc9bdc48010d8",
            "1": "404f3df2.f83fcb93.187bf175.139c59a8.f3eda546.bb27e7e9.6c6b8b22.ebed174f.ab7efe7a.0ce8d1b4.187bf175.d83d8dee.4608c58f.bb27e7e9.6c6b8b22.a7dea587"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/optimize/python/modify_model_interface_lib_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 16,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/optimize/python/modify_model_interface_lib_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 5,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/optimize/python/modify_model_interface_lib_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 129,
                            "endLine": 129,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/optimize/python/modify_model_interface_lib_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 129,
                            "endLine": 129,
                            "startColumn": 20,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/optimize/python/modify_model_interface_lib_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 129,
                            "endLine": 129,
                            "startColumn": 5,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/optimize/python/modify_model_interface_lib_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 133,
                            "endLine": 133,
                            "startColumn": 15,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/optimize/python/modify_model_interface_lib_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 133,
                            "endLine": 133,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22)",
              "[open](23)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/tools/visualize_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 47,
                  "endLine": 47,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1c6ebf5fad2928dc7e488ecbdc9817b9224e5992939c1cf1858fa122a28354c7",
            "1": "983befcc.ceedf329.187bf175.49b19ce7.f3eda546.ba14daf2.682a1833.3c135d6a.983befcc.577bab1d.187bf175.49b19ce7.4608c58f.e87c51e7.682a1833.cadd00d0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 15,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 5,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 35,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 22,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 5,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 15,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20)",
              "[open](21)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 293,
                  "endLine": 293,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8cd73fff69de668e103a89ef834be575224869e5acf8448930b236053cfa36fc",
            "1": "2e8ddaeb.004db09d.187bf175.6a998a3b.f3eda546.ba14daf2.081ac3f4.a4830b9a.2e8ddaeb.577bab1d.187bf175.85880201.4608c58f.e87c51e7.081ac3f4.a4830b9a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 292,
                            "endLine": 292,
                            "startColumn": 35,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 292,
                            "endLine": 292,
                            "startColumn": 22,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 292,
                            "endLine": 292,
                            "startColumn": 5,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 293,
                            "endLine": 293,
                            "startColumn": 15,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 293,
                            "endLine": 293,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20)",
              "[open](21)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 307,
                  "endLine": 307,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9f40e6265dd456fce3400dd2c745ace3abe33d91cc70e95c682d32da7ac8353c",
            "1": "2e8ddaeb.004db09d.187bf175.6a998a3b.f3eda546.ba14daf2.4e20e0df.a4830b9a.2e8ddaeb.577bab1d.187bf175.85880201.4608c58f.e87c51e7.4e20e0df.a4830b9a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 306,
                            "endLine": 306,
                            "startColumn": 35,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 306,
                            "endLine": 306,
                            "startColumn": 22,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 306,
                            "endLine": 306,
                            "startColumn": 5,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 307,
                            "endLine": 307,
                            "startColumn": 15,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 307,
                            "endLine": 307,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into os.walk, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25)",
              "[os.walk](26)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 618,
                  "endLine": 618,
                  "startColumn": 5,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "15ea30600b77da20f9005b2bad4c5fcdb9e3440211ddd23e2134dec3a7c04b2f",
            "1": "028eee88.59b2cfae.79e62dc9.139c59a8.cc857d4e.ba14daf2.081ac3f4.ebed174f.028eee88.577bab1d.83706d3c.1efe772f.427e3c32.a5d7f69f.81a1ab6d.cadd00d0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 608,
                            "endLine": 608,
                            "startColumn": 32,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 608,
                            "endLine": 608,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 608,
                            "endLine": 608,
                            "startColumn": 5,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 609,
                            "endLine": 609,
                            "startColumn": 14,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 610,
                            "endLine": 610,
                            "startColumn": 27,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 611,
                            "endLine": 611,
                            "startColumn": 27,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 618,
                            "endLine": 618,
                            "startColumn": 35,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1076,
                            "endLine": 1076,
                            "startColumn": 34,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1079,
                            "endLine": 1079,
                            "startColumn": 43,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1079,
                            "endLine": 1079,
                            "startColumn": 35,
                            "endColumn": 42
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into os.walk, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24)",
              "[os.walk](25)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 641,
                  "endLine": 641,
                  "startColumn": 5,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "129a15d1dde25cecd0351e6f0fa3879d964c6b6df0e9ebf8301bea801ad3125c",
            "1": "028eee88.59b2cfae.79e62dc9.139c59a8.cc857d4e.ba14daf2.081ac3f4.ebed174f.028eee88.577bab1d.79e62dc9.1efe772f.eae7448b.a5d7f69f.081ac3f4.cadd00d0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 629,
                            "endLine": 629,
                            "startColumn": 32,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 629,
                            "endLine": 629,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 629,
                            "endLine": 629,
                            "startColumn": 5,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 631,
                            "endLine": 631,
                            "startColumn": 14,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 634,
                            "endLine": 634,
                            "startColumn": 27,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 641,
                            "endLine": 641,
                            "startColumn": 35,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1076,
                            "endLine": 1076,
                            "startColumn": 34,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1079,
                            "endLine": 1079,
                            "startColumn": 43,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1079,
                            "endLine": 1079,
                            "startColumn": 35,
                            "endColumn": 42
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into os.walk, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27)",
              "[os.walk](28)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 665,
                  "endLine": 665,
                  "startColumn": 5,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3e15ae9fe2de5ac5722803cc98567dc0312889ef6ec63e1022f612efdcd5c487",
            "1": "028eee88.1c6650e9.79e62dc9.139c59a8.65d6a727.ba14daf2.081ac3f4.ebed174f.028eee88.577bab1d.79e62dc9.1efe772f.eae7448b.a5d7f69f.6cb27fbf.cadd00d0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 654,
                            "endLine": 654,
                            "startColumn": 32,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 654,
                            "endLine": 654,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 654,
                            "endLine": 654,
                            "startColumn": 5,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 656,
                            "endLine": 656,
                            "startColumn": 14,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 657,
                            "endLine": 657,
                            "startColumn": 27,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 658,
                            "endLine": 658,
                            "startColumn": 27,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 665,
                            "endLine": 665,
                            "startColumn": 27,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 984,
                            "endLine": 984,
                            "startColumn": 26,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1001,
                            "endLine": 1001,
                            "startColumn": 33,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1011,
                            "endLine": 1011,
                            "startColumn": 48,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1022,
                            "endLine": 1022,
                            "startColumn": 43,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1022,
                            "endLine": 1022,
                            "startColumn": 35,
                            "endColumn": 42
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into os.walk, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26)",
              "[os.walk](27)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 691,
                  "endLine": 691,
                  "startColumn": 5,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ba1d4a5b198f101fec8d315013d1c3dc16890d017010be5df73d162d2412c754",
            "1": "028eee88.1c6650e9.79e62dc9.139c59a8.65d6a727.ba14daf2.081ac3f4.ebed174f.028eee88.577bab1d.79e62dc9.1efe772f.eae7448b.a5d7f69f.6cb27fbf.cadd00d0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 678,
                            "endLine": 678,
                            "startColumn": 32,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 678,
                            "endLine": 678,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 678,
                            "endLine": 678,
                            "startColumn": 5,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 681,
                            "endLine": 681,
                            "startColumn": 14,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 684,
                            "endLine": 684,
                            "startColumn": 27,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 691,
                            "endLine": 691,
                            "startColumn": 27,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 984,
                            "endLine": 984,
                            "startColumn": 26,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1001,
                            "endLine": 1001,
                            "startColumn": 33,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1011,
                            "endLine": 1011,
                            "startColumn": 48,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1022,
                            "endLine": 1022,
                            "startColumn": 43,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1022,
                            "endLine": 1022,
                            "startColumn": 35,
                            "endColumn": 42
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into path concatenation, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13)",
              "[path concatenation](14)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/docs/generate2_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 66,
                  "endLine": 66,
                  "startColumn": 18,
                  "endColumn": 64
                }
              }
            }
          ],
          "fingerprints": {
            "0": "39a5a3a833338a01be0dc1e3a26b6d8bd92b4cca038b65767ad06c048c235dc1",
            "1": "4df04b24.8b79da6c.8b110b16.139c59a8.47fd2633.ba14daf2.ede5a2b3.f1012613.4df04b24.3ef7203d.7670177d.7dfbd28d.47fd2633.f76aa0c6.fbc47f9a.f1012613"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/docs/generate2_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 31,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/docs/generate2_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 18,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/docs/generate2_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 18,
                            "endColumn": 64
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into path concatenation, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25)",
              "[path concatenation](26)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/docs/generate2_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 70,
                  "endLine": 70,
                  "startColumn": 5,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9b219f14736f3b7280ad8436670b38cf5d098ebfe970f98c44d351bb6787084e",
            "1": "4df04b24.3b5d1a06.2683ade8.139c59a8.62ad382c.ba14daf2.6cb27fbf.d14165fe.d5c0229d.34158a22.a07e0ee1.7dfbd28d.e57c3047.f76aa0c6.fbc47f9a.6eb46ac5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/docs/generate2_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 31,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/docs/generate2_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 18,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/docs/generate2_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 18,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/docs/generate2_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 5,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/docs/generate2_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 23,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/docs/generate2_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 69,
                            "endLine": 69,
                            "startColumn": 17,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/docs/generate2_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 20,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/docs/generate2_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 9,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/docs/generate2.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 238,
                            "endLine": 238,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/docs/generate2.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 246,
                            "endLine": 246,
                            "startColumn": 29,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/docs/generate2.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 246,
                            "endLine": 246,
                            "startColumn": 16,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/docs/generate2.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 246,
                            "endLine": 246,
                            "startColumn": 3,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/docs/generate2.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 301,
                            "endLine": 301,
                            "startColumn": 23,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/docs/generate2.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 311,
                            "endLine": 311,
                            "startColumn": 14,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/docs/generate2.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 311,
                            "endLine": 311,
                            "startColumn": 14,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.rmtree, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17)",
              "[shutil.rmtree](18)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/docs/generate2_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 68,
                  "endLine": 68,
                  "startColumn": 7,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2b811733e910bd2a2d9215ea4f5155494e74ca8ee6efb0b42c7d210a7ec5fba6",
            "1": "d5c0229d.3b5d1a06.79e62dc9.139c59a8.1d07cee4.ba14daf2.6cb27fbf.6eb46ac5.d5c0229d.8b79da6c.7670177d.7dfbd28d.47fd2633.f76aa0c6.96b9fa58.395368c9"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/docs/generate2_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 31,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/docs/generate2_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 18,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/docs/generate2_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 18,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/docs/generate2_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 5,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/docs/generate2_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 23,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/docs/generate2_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 21,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/docs/generate2_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into pickle.dump, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25)",
              "[pickle.dump](26)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 547,
                  "endLine": 547,
                  "startColumn": 9,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ee030534bb201236281c3cb112a85b19b6ab53a9213ff3644bb73b4811dc3a8c",
            "1": "2e8ddaeb.09b47a5b.a832003e.139c59a8.175c247b.111d979a.081ac3f4.545e9171.2e8ddaeb.577bab1d.a832003e.49b19ce7.175c247b.111d979a.bc740e82.a4830b9a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 540,
                            "endLine": 540,
                            "startColumn": 17,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 540,
                            "endLine": 540,
                            "startColumn": 7,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 541,
                            "endLine": 541,
                            "startColumn": 28,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 541,
                            "endLine": 541,
                            "startColumn": 15,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 541,
                            "endLine": 541,
                            "startColumn": 7,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 542,
                            "endLine": 542,
                            "startColumn": 17,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 542,
                            "endLine": 542,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 542,
                            "endLine": 542,
                            "startColumn": 33,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 547,
                            "endLine": 547,
                            "startColumn": 24,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 547,
                            "endLine": 547,
                            "startColumn": 9,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into pickle.dump, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25)",
              "[pickle.dump](26)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/eager/core_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 478,
                  "endLine": 478,
                  "startColumn": 7,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "80d4648e3681625cf3a917b4d62eef111435e0b7a5b16545b5bbe7633c0252db",
            "1": "2e8ddaeb.df73b9fc.a832003e.139c59a8.175c247b.111d979a.081ac3f4.545e9171.2e8ddaeb.577bab1d.a832003e.49b19ce7.175c247b.111d979a.7cc96b57.a4830b9a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 474,
                            "endLine": 474,
                            "startColumn": 15,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 474,
                            "endLine": 474,
                            "startColumn": 5,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 475,
                            "endLine": 475,
                            "startColumn": 26,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 475,
                            "endLine": 475,
                            "startColumn": 13,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 475,
                            "endLine": 475,
                            "startColumn": 5,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 476,
                            "startColumn": 15,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 476,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 476,
                            "startColumn": 31,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 478,
                            "endLine": 478,
                            "startColumn": 22,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 478,
                            "endLine": 478,
                            "startColumn": 7,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into os.remove, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22)",
              "[os.remove](23)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/python/tflite_convert_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 73,
                  "endLine": 73,
                  "startColumn": 7,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cf99dc858630e2f738e84ecf7da2f5b53d9b0450cc698befaf666bdfe5ae1060",
            "1": "f39fd327.163466e8.187bf175.139c59a8.cf0d71c7.ba14daf2.081ac3f4.ebed174f.fdca2659.577bab1d.e626d819.139c59a8.cf0d71c7.ba14daf2.0c3bd39f.69dd7c61"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 32,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 5,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 62,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 23,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 17,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 7,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into os.remove, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22)",
              "[os.remove](23)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/python/tflite_convert_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 131,
                  "endLine": 131,
                  "startColumn": 5,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0f3be58183c2b1043106f1126585a79236d5bf3de04923e277e99b02baad2a11",
            "1": "f39fd327.1fc78aee.79e62dc9.139c59a8.03e61c4c.ba14daf2.081ac3f4.ac4af20b.aae8f0ff.277c621c.187bf175.9b2fa0cb.145e7f2f.09fc5997.19456453.6de74183"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 25,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 5,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 124,
                            "endLine": 124,
                            "startColumn": 37,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 47,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 131,
                            "endLine": 131,
                            "startColumn": 15,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 131,
                            "endLine": 131,
                            "startColumn": 5,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into os.remove, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22)",
              "[os.remove](23)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/python/tflite_convert_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 153,
                  "endLine": 153,
                  "startColumn": 5,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b2a35ccddc72672f6d63a24326ebae6657a311360c33ac697447ddc226f19841",
            "1": "f39fd327.1fc78aee.79e62dc9.139c59a8.03e61c4c.ba14daf2.081ac3f4.ac4af20b.aae8f0ff.277c621c.187bf175.9b2fa0cb.145e7f2f.09fc5997.19456453.6de74183"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 25,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 5,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 145,
                            "endLine": 145,
                            "startColumn": 37,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 151,
                            "endLine": 151,
                            "startColumn": 13,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 153,
                            "endLine": 153,
                            "startColumn": 15,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 153,
                            "endLine": 153,
                            "startColumn": 5,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into os.remove, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22)",
              "[os.remove](23)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/python/tflite_convert_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 169,
                  "endLine": 169,
                  "startColumn": 5,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e64866fc7d5712034fd177a575a4afb538fb6c8faea2d4504e55485393b3b8d8",
            "1": "f39fd327.1fc78aee.79e62dc9.139c59a8.03e61c4c.ba14daf2.081ac3f4.ac4af20b.aae8f0ff.277c621c.187bf175.9b2fa0cb.145e7f2f.09fc5997.19456453.6de74183"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 25,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 162,
                            "endLine": 162,
                            "startColumn": 5,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 163,
                            "endLine": 163,
                            "startColumn": 37,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 167,
                            "endLine": 167,
                            "startColumn": 47,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 169,
                            "endLine": 169,
                            "startColumn": 15,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 169,
                            "endLine": 169,
                            "startColumn": 5,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into os.remove, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22)",
              "[os.remove](23)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/python/tflite_convert_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 193,
                  "endLine": 193,
                  "startColumn": 5,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d6c15f3d77e338cbb747c3383f15bdf45def82ca14f77767f1fa81cc7fff7c40",
            "1": "f39fd327.1fc78aee.79e62dc9.139c59a8.03e61c4c.ba14daf2.081ac3f4.ac4af20b.aae8f0ff.277c621c.187bf175.9b2fa0cb.145e7f2f.09fc5997.19456453.6de74183"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 25,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 183,
                            "endLine": 183,
                            "startColumn": 5,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 184,
                            "endLine": 184,
                            "startColumn": 37,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 190,
                            "endLine": 190,
                            "startColumn": 47,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 193,
                            "endLine": 193,
                            "startColumn": 15,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 193,
                            "endLine": 193,
                            "startColumn": 5,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into os.remove, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22)",
              "[os.remove](23)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/python/tflite_convert_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 224,
                  "endLine": 224,
                  "startColumn": 5,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "02e969b275463fad27e926bed5cf1667d7b0170a59dedadd6e0cf34b9b3e3566",
            "1": "f39fd327.1fc78aee.79e62dc9.139c59a8.03e61c4c.ba14daf2.081ac3f4.ac4af20b.aae8f0ff.277c621c.187bf175.9b2fa0cb.145e7f2f.09fc5997.36a3b6c8.6de74183"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 25,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 206,
                            "endLine": 206,
                            "startColumn": 5,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 207,
                            "endLine": 207,
                            "startColumn": 37,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 213,
                            "endLine": 213,
                            "startColumn": 47,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 224,
                            "endLine": 224,
                            "startColumn": 15,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 224,
                            "endLine": 224,
                            "startColumn": 5,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into os.remove, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24)",
              "[os.remove](25)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/python/tflite_convert_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 331,
                  "endLine": 331,
                  "startColumn": 5,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "335c1b1b0866b1ef10e319f57b92ebcce053364576cbe5450b106431dec8bd3a",
            "1": "266b827f.1fc78aee.79e62dc9.139c59a8.cc857d4e.ba14daf2.19456453.ebed174f.aae8f0ff.577bab1d.e6d6af38.dc14df24.145e7f2f.09fc5997.95600950.6de74183"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 25,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 327,
                            "endLine": 327,
                            "startColumn": 5,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 329,
                            "endLine": 329,
                            "startColumn": 48,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 331,
                            "endLine": 331,
                            "startColumn": 15,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 331,
                            "endLine": 331,
                            "startColumn": 5,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into os.remove, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24)",
              "[os.remove](25)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/python/tflite_convert_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 339,
                  "endLine": 339,
                  "startColumn": 5,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "86fcf307fd8d8a73ec14ad3f4a57c927b2eace730e5a9b93283b60342226c7db",
            "1": "266b827f.1fc78aee.79e62dc9.139c59a8.cc857d4e.ba14daf2.19456453.ebed174f.aae8f0ff.577bab1d.c35359b7.dc14df24.145e7f2f.09fc5997.95600950.6de74183"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 25,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 334,
                            "endLine": 334,
                            "startColumn": 5,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 337,
                            "endLine": 337,
                            "startColumn": 69,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 339,
                            "endLine": 339,
                            "startColumn": 15,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 339,
                            "endLine": 339,
                            "startColumn": 5,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into os.remove, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24)",
              "[os.remove](25)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/python/tflite_convert_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 348,
                  "endLine": 348,
                  "startColumn": 5,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "20680fbe3952e4a4a1f97bf1ad6ccdbded4dcae3e017bae51b5c1176efd7702c",
            "1": "266b827f.1fc78aee.79e62dc9.139c59a8.cc857d4e.ba14daf2.19456453.ebed174f.df133c72.577bab1d.e6d6af38.dc14df24.145e7f2f.09fc5997.a3fa955b.6de74183"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 25,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 342,
                            "endLine": 342,
                            "startColumn": 5,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 346,
                            "endLine": 346,
                            "startColumn": 55,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 348,
                            "endLine": 348,
                            "startColumn": 15,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 348,
                            "endLine": 348,
                            "startColumn": 5,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into os.remove, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24)",
              "[os.remove](25)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/python/tflite_convert_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 360,
                  "endLine": 360,
                  "startColumn": 5,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a2792170a203e9c8113f851ec786472bf0cfc590b61dfa99a299e3bfdf68bb88",
            "1": "266b827f.1fc78aee.79e62dc9.139c59a8.cc857d4e.ba14daf2.19456453.ebed174f.df133c72.577bab1d.e6d6af38.dc14df24.145e7f2f.09fc5997.a3fa955b.6de74183"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 25,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 354,
                            "endLine": 354,
                            "startColumn": 5,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 358,
                            "endLine": 358,
                            "startColumn": 55,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 360,
                            "endLine": 360,
                            "startColumn": 15,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 360,
                            "endLine": 360,
                            "startColumn": 5,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into os.remove, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24)",
              "[os.remove](25)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/python/tflite_convert_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 478,
                  "endLine": 478,
                  "startColumn": 5,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8ab9dc4a0b8250a309a8b1cef72dff846bb23e9ae206715415358983be67fb10",
            "1": "266b827f.1fc78aee.79e62dc9.139c59a8.cc857d4e.ba14daf2.19456453.ebed174f.aae8f0ff.577bab1d.e6d6af38.dc14df24.145e7f2f.09fc5997.95600950.6de74183"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 25,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 474,
                            "endLine": 474,
                            "startColumn": 5,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 476,
                            "startColumn": 48,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 478,
                            "endLine": 478,
                            "startColumn": 15,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 478,
                            "endLine": 478,
                            "startColumn": 5,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into os.remove, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24)",
              "[os.remove](25)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/python/tflite_convert_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 487,
                  "endLine": 487,
                  "startColumn": 5,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ee9e9d21e0a34bb0934aa4414ce650cb03b6989115979fc89731ab92553e94fa",
            "1": "266b827f.1fc78aee.79e62dc9.139c59a8.cc857d4e.ba14daf2.19456453.ebed174f.aae8f0ff.577bab1d.c35359b7.dc14df24.145e7f2f.09fc5997.95600950.6de74183"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 25,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 482,
                            "endLine": 482,
                            "startColumn": 5,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 485,
                            "endLine": 485,
                            "startColumn": 69,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 487,
                            "endLine": 487,
                            "startColumn": 15,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 487,
                            "endLine": 487,
                            "startColumn": 5,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into os.remove, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24)",
              "[os.remove](25)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/python/tflite_convert_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 496,
                  "endLine": 496,
                  "startColumn": 5,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "be2a2df485c15f3b2e941f482e4884b7b7bd04e9ef6fbc73527c79cda51c3b02",
            "1": "266b827f.1fc78aee.79e62dc9.139c59a8.cc857d4e.ba14daf2.19456453.ebed174f.aae8f0ff.3dbcd117.187bf175.139c59a8.145e7f2f.09fc5997.19456453.6de74183"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 25,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 99,
                            "endLine": 99,
                            "startColumn": 5,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 491,
                            "endLine": 491,
                            "startColumn": 5,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 493,
                            "endLine": 493,
                            "startColumn": 48,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 496,
                            "endLine": 496,
                            "startColumn": 15,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 496,
                            "endLine": 496,
                            "startColumn": 5,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into os.remove, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24)",
              "[os.remove](25)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/python/tflite_convert_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 506,
                  "endLine": 506,
                  "startColumn": 5,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2c7964922d1032d4059418d0551aa338e26115ba9089ac7de5b15aceb550e154",
            "1": "266b827f.1fc78aee.79e62dc9.139c59a8.cc857d4e.ba14daf2.19456453.ebed174f.aae8f0ff.3dbcd117.c35359b7.8103ab73.145e7f2f.09fc5997.19456453.6de74183"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 25,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 99,
                            "endLine": 99,
                            "startColumn": 5,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 500,
                            "endLine": 500,
                            "startColumn": 5,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 503,
                            "endLine": 503,
                            "startColumn": 69,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 506,
                            "endLine": 506,
                            "startColumn": 15,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 506,
                            "endLine": 506,
                            "startColumn": 5,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into os.remove, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7)",
              "[os.remove](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/platform/benchmark_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 31,
                  "endLine": 31,
                  "startColumn": 7,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4f14c616c682c3003f49bf04ffca299f2674abe4d075a53734be59c2dd23038e",
            "1": "2e8ddaeb.09b47a5b.187bf175.139c59a8.f3eda546.ba14daf2.081ac3f4.cabd153b.2e8ddaeb.67df6de4.187bf175.139c59a8.f3eda546.48e1de78.41af95f2.cabd153b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 5,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 5,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 23,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 29,
                            "startColumn": 5,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 23,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 17,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 7,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into os.remove, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8)",
              "[os.remove](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/platform/benchmark_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 48,
                  "endLine": 48,
                  "startColumn": 5,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cbb04913405274ff1771a2e5105818f5ba276b66074711bc05d4022b7da85feb",
            "1": "2e8ddaeb.09b47a5b.187bf175.139c59a8.f3eda546.ba14daf2.081ac3f4.9bdd70f3.2e8ddaeb.67df6de4.187bf175.139c59a8.f3eda546.48e1de78.41af95f2.cabd153b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 5,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 5,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 23,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 29,
                            "startColumn": 5,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 23,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 15,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 15,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 5,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into shutil.move, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[shutil.move](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "third_party/xla/xla/service/generate_test_hlo_checks.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 114,
                  "endLine": 114,
                  "startColumn": 3,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0ba5574fa754e79fedd2500bdf5063cc674468d1df99671287c845f5fda2fd98",
            "1": "2e8ddaeb.1139c8fd.187bf175.139c59a8.f3eda546.a5d7f69f.56d0fa7e.6eb46ac5.2e8ddaeb.1139c8fd.187bf175.42eea8ad.c8b7d5cc.a5d7f69f.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/xla/service/generate_test_hlo_checks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 10,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/xla/service/generate_test_hlo_checks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 10,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/xla/service/generate_test_hlo_checks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 3,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/xla/service/generate_test_hlo_checks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/xla/service/generate_test_hlo_checks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/xla/service/generate_test_hlo_checks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 20,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/xla/service/generate_test_hlo_checks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 3,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/xla/service/generate_test_hlo_checks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 6,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/xla/service/generate_test_hlo_checks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 107,
                            "endLine": 107,
                            "startColumn": 13,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/xla/service/generate_test_hlo_checks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 114,
                            "endLine": 114,
                            "startColumn": 22,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/xla/service/generate_test_hlo_checks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 114,
                            "endLine": 114,
                            "startColumn": 3,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 352,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[open](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/test/upload_test_benchmarks.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 203,
                  "endLine": 203,
                  "startColumn": 12,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4b32b9cc851a971ba8a587fc067477bd3a89af3e1f86611e9bf672dd7e4b3146",
            "1": "e9f5e045.9b2f4543.187bf175.139c59a8.f3eda546.a186cddf.b36de8a3.6aac30d8.016f1e72.be183a31.187bf175.9cd2dfe0.f3eda546.e444fde2.f6dc7859.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/test/upload_test_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 230,
                            "endLine": 230,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/test/upload_test_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 230,
                            "endLine": 230,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/test/upload_test_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 234,
                            "endLine": 234,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/test/upload_test_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 240,
                            "endLine": 240,
                            "startColumn": 26,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/test/upload_test_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 181,
                            "endLine": 181,
                            "startColumn": 28,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/test/upload_test_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 200,
                            "endLine": 200,
                            "startColumn": 36,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/test/upload_test_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 200,
                            "endLine": 200,
                            "startColumn": 36,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/test/upload_test_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 201,
                            "endLine": 201,
                            "startColumn": 26,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/test/upload_test_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 201,
                            "endLine": 201,
                            "startColumn": 13,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/test/upload_test_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 201,
                            "endLine": 201,
                            "startColumn": 5,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/test/upload_test_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 203,
                            "endLine": 203,
                            "startColumn": 17,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/test/upload_test_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 203,
                            "endLine": 203,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into shutil.move, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)",
              "[shutil.move](12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/test/upload_test_benchmarks.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 206,
                  "endLine": 206,
                  "startColumn": 11,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "baf2467e049a48479e34b9252620dbaa074ea58c159d1786af3b34ad8f2bcc2c",
            "1": "e9f5e045.9b2f4543.187bf175.139c59a8.f3eda546.a186cddf.081ac3f4.6aac30d8.016f1e72.be183a31.187bf175.9cd2dfe0.f3eda546.e444fde2.f6dc7859.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/test/upload_test_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 230,
                            "endLine": 230,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/test/upload_test_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 230,
                            "endLine": 230,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/test/upload_test_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 234,
                            "endLine": 234,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/test/upload_test_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 240,
                            "endLine": 240,
                            "startColumn": 26,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/test/upload_test_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 181,
                            "endLine": 181,
                            "startColumn": 28,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/test/upload_test_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 200,
                            "endLine": 200,
                            "startColumn": 36,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/test/upload_test_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 200,
                            "endLine": 200,
                            "startColumn": 36,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/test/upload_test_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 201,
                            "endLine": 201,
                            "startColumn": 26,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/test/upload_test_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 201,
                            "endLine": 201,
                            "startColumn": 13,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/test/upload_test_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 201,
                            "endLine": 201,
                            "startColumn": 5,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/test/upload_test_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 203,
                            "endLine": 203,
                            "startColumn": 17,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/test/upload_test_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 206,
                            "endLine": 206,
                            "startColumn": 23,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/test/upload_test_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 206,
                            "endLine": 206,
                            "startColumn": 11,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into zipfile.ZipFile, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20)",
              "[zipfile.ZipFile](21)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 296,
                  "endLine": 296,
                  "startColumn": 10,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ff9e659e22e1bb523fcb913372de9ba9a30431dba00e91eb492159a656a1e905",
            "1": "a05a9d4a.f261d51f.187bf175.ed6cedd4.f158b6e4.ba14daf2.0b879a26.ebed174f.2e8ddaeb.99ae851e.187bf175.ed6cedd4.4608c58f.4596333c.0b879a26.cadd00d0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 295,
                            "endLine": 295,
                            "startColumn": 29,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 295,
                            "endLine": 295,
                            "startColumn": 16,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 295,
                            "endLine": 295,
                            "startColumn": 5,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 296,
                            "endLine": 296,
                            "startColumn": 26,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 296,
                            "endLine": 296,
                            "startColumn": 10,
                            "endColumn": 25
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into zipfile.ZipFile, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20)",
              "[zipfile.ZipFile](21)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 310,
                  "endLine": 310,
                  "startColumn": 10,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "56c074764fb422c4f144dfe20430f90b7ade8afafb35fb31434cbcb399e26334",
            "1": "a05a9d4a.f261d51f.187bf175.ed6cedd4.f158b6e4.ba14daf2.0b879a26.ebed174f.2e8ddaeb.99ae851e.187bf175.ed6cedd4.4608c58f.4596333c.0b879a26.cadd00d0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 309,
                            "endLine": 309,
                            "startColumn": 29,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 309,
                            "endLine": 309,
                            "startColumn": 16,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 309,
                            "endLine": 309,
                            "startColumn": 5,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 26,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/source_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 10,
                            "endColumn": 25
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19)",
              "[shutil.copy](20)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 80,
                  "endLine": 80,
                  "startColumn": 5,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3bed7a1dab9ddc6e6b04f3ada86840fcb67a90fa6b569e148239c83e96bf896a",
            "1": "2d06e3d6.caa37d73.79e62dc9.44691350.93a5bd7c.6067d8bd.e9505ae1.6eb46ac5.e3054d7a.577bab1d.a0049c93.42eea8ad.93a5bd7c.6067d8bd.e9505ae1.6eb46ac5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 19,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 5,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 39,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 5,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20)",
              "[shutil.copy](21)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 81,
                  "endLine": 81,
                  "startColumn": 5,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f8df32664989e281e25069abb693633e9907e9e8a3983a1ef3b8c413a02baba3",
            "1": "2d06e3d6.caa37d73.79e62dc9.44691350.93a5bd7c.6067d8bd.081ac3f4.6eb46ac5.e3054d7a.577bab1d.a0049c93.44691350.93a5bd7c.6067d8bd.e9505ae1.6eb46ac5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 19,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 5,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 39,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 38,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 5,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21)",
              "[shutil.copy](22)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 82,
                  "endLine": 82,
                  "startColumn": 5,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "989096d1ad15cdd0e1c38d3de8e8031c2fec3193a285c7c1ecb91b73b7e913e5",
            "1": "2d06e3d6.2678f4b8.fadac385.44691350.d9192d64.6067d8bd.081ac3f4.6eb46ac5.87d5fd00.577bab1d.fadac385.44691350.93a5bd7c.6067d8bd.e9505ae1.6eb46ac5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 19,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 5,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 39,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 38,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 29,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 5,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22)",
              "[shutil.copy](23)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 83,
                  "endLine": 83,
                  "startColumn": 5,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5312b746e03a0b91ba22f5037778f87771a30a821f71d94ac91f79c62a427863",
            "1": "2d06e3d6.2678f4b8.fadac385.44691350.cc857d4e.ba14daf2.081ac3f4.6eb46ac5.e3054d7a.577bab1d.fadac385.44691350.93a5bd7c.6067d8bd.e9505ae1.ee22b362"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 19,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 5,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 39,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 38,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 29,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 28,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 5,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.io.FileInputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[java.io.FileInputStream](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/java/ovic/src/main/java/org/tensorflow/ovic/OvicValidator.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 97,
                  "endLine": 97,
                  "startColumn": 39,
                  "endColumn": 54
                }
              }
            }
          ],
          "fingerprints": {
            "0": "82af16a4cc329df2015d5c22d81eb6df89366869cd3422a3b66d7f200611b1a7",
            "1": "19689298.83dbfe52.3087b6d0.6c52ae28.190b6459.8f875032.78adfa9a.54d46e25.8df8fa68.7f413d6f.5bd3957c.49f16b45.408180c7.f66e80d9.2cd4068c.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/java/ovic/src/main/java/org/tensorflow/ovic/OvicValidator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 30,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/java/ovic/src/main/java/org/tensorflow/ovic/OvicValidator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 30,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/java/ovic/src/main/java/org/tensorflow/ovic/OvicValidator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 18,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/java/ovic/src/main/java/org/tensorflow/ovic/OvicValidator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 46,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/java/ovic/src/main/java/org/tensorflow/ovic/OvicValidator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 49,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/java/ovic/src/main/java/org/tensorflow/ovic/OvicValidator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 26,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/java/ovic/src/main/java/org/tensorflow/ovic/OvicValidator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 10,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/java/ovic/src/main/java/org/tensorflow/ovic/OvicValidator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 55,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/java/ovic/src/main/java/org/tensorflow/ovic/OvicValidator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 39,
                            "endColumn": 54
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.nio.file.Files.readAllBytes, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[java.nio.file.Files.readAllBytes](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/java/src/main/java/org/tensorflow/examples/LabelImage.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 142,
                  "endLine": 142,
                  "startColumn": 14,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "42d63f4052cd34d58b655688467666491219c681caf6e25aa136b39976da529e",
            "1": "7465f031.c3069519.a224ef38.218e1320.03a76c7f.0d476878.6178e09e.fc437a5b.7465f031.4f9c3a26.d8433a2e.218e1320.d31a8364.b379182c.377b98a3.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/java/src/main/java/org/tensorflow/examples/LabelImage.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 23,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/java/src/main/java/org/tensorflow/examples/LabelImage.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 23,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/java/src/main/java/org/tensorflow/examples/LabelImage.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 12,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/java/src/main/java/org/tensorflow/examples/LabelImage.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 42,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/java/src/main/java/org/tensorflow/examples/LabelImage.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 140,
                            "endLine": 140,
                            "startColumn": 44,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/java/src/main/java/org/tensorflow/examples/LabelImage.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 142,
                            "endLine": 142,
                            "startColumn": 33,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/java/src/main/java/org/tensorflow/examples/LabelImage.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 142,
                            "endLine": 142,
                            "startColumn": 14,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.nio.file.Files.readAllLines, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[java.nio.file.Files.readAllLines](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/java/src/main/java/org/tensorflow/examples/LabelImage.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 152,
                  "endLine": 152,
                  "startColumn": 14,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ae5c88c0e088b0bfb0a12c402f3d604027c847e269e32ac187c70bf38a5f31ac",
            "1": "0f0ce740.38ef72d7.fd4fd63e.334c3b1f.a1491c54.0d476878.dbfe5035.bf8c9279.e1d7cd7c.38ef72d7.d6312d77.8d606d95.d31a8364.b379182c.377b98a3.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/java/src/main/java/org/tensorflow/examples/LabelImage.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 23,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/java/src/main/java/org/tensorflow/examples/LabelImage.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 23,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/java/src/main/java/org/tensorflow/examples/LabelImage.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 12,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/java/src/main/java/org/tensorflow/examples/LabelImage.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 28,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/java/src/main/java/org/tensorflow/examples/LabelImage.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 150,
                            "endLine": 150,
                            "startColumn": 50,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/java/src/main/java/org/tensorflow/examples/LabelImage.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 152,
                            "endLine": 152,
                            "startColumn": 33,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/java/src/main/java/org/tensorflow/examples/LabelImage.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 152,
                            "endLine": 152,
                            "startColumn": 14,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/Ssrf",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into requests.get, where it is used as an URL to perform a request. This may result in a Server Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as an URL to perform a request. This may result in a Server Side Request Forgery vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6)",
              "[requests.get](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/distribute/failure_handling/failure_handling_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 82,
                  "endLine": 82,
                  "startColumn": 16,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "12bb5c75ddf01ec029b485046d9e87189ab0581857a000826c3abe6681d953a0",
            "1": "a91f2560.2da3d253.ef7ad415.139c59a8.f4f10911.73cfdf26.081ac3f4.6aac30d8.101172a8.2da3d253.ef7ad415.ad0154f5.eb9e989f.73cfdf26.cc914b1e.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/distribute/failure_handling/failure_handling_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 39,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/distribute/failure_handling/failure_handling_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 39,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/distribute/failure_handling/failure_handling_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 77,
                            "startColumn": 27,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/distribute/failure_handling/failure_handling_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 77,
                            "startColumn": 3,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/distribute/failure_handling/failure_handling_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 84,
                            "endLine": 84,
                            "startColumn": 10,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/distribute/failure_handling/failure_handling_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 84,
                            "endLine": 84,
                            "startColumn": 9,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/distribute/failure_handling/failure_handling_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 84,
                            "startColumn": 9,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/distribute/failure_handling/failure_handling_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 16,
                            "endColumn": 28
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 301,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/PT",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a CLI argument flows into io.ioutil.ReadFile, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a CLI argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[io.ioutil.ReadFile](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/go/genop/main.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 45,
                  "endLine": 45,
                  "startColumn": 15,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "76c00d399898144a1357b9c0733f7e83709b43a2b0136b5bd431f92ebc3d5c7b",
            "1": "8b957093.8642ae5d.45df3e14.f375235c.0d4e5e89.67ab4541.be8ec6d7.657b3c81.8379f5e8.73eb5804.45df3e14.1913ff44.800847ac.67ab4541.be8ec6d7.1bff12d3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/genop/main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/genop/main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/genop/main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/genop/main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 6,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/genop/main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 5,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/genop/main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/genop/main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 15,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/PT",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a CLI argument flows into io.ioutil.WriteFile, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a CLI argument](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[io.ioutil.WriteFile](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/go/genop/main.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 67,
                  "endLine": 67,
                  "startColumn": 12,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "048757488c2b299ba00afaa3399bfb61ca1b3e59073897aec4d095b46ba2b711",
            "1": "7b93dee7.8642ae5d.45df3e14.df616bb5.c32477a4.67ab4541.44119440.0e38ef76.7b93dee7.73eb5804.45df3e14.df616bb5.c32477a4.67ab4541.da899bb0.1bff12d3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/genop/main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 35,
                            "endLine": 35,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/genop/main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 35,
                            "endLine": 35,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/genop/main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 35,
                            "endLine": 35,
                            "startColumn": 3,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/genop/main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 6,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/genop/main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 5,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/genop/main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 27,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/genop/main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 29,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/genop/main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 12,
                            "endColumn": 28
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash/test",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.sha1 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.sha1](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/debug/lib/grpc_debug_test_server.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 181,
                  "endLine": 181,
                  "startColumn": 22,
                  "endColumn": 63
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5f92406999ccd8578d0f59840878cd795f1def4670bedc85998fe605665bbee7",
            "1": "4535cebd.2dd6d7a6.ab1abd52.139c59a8.3e7fde08.ba14daf2.081ac3f4.ebed174f.4535cebd.59b34bce.ab1abd52.5b43f80a.3e7fde08.ba14daf2.4836399a.ebed174f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/debug/lib/grpc_debug_test_server.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 181,
                            "endLine": 181,
                            "startColumn": 22,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 151,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/TarSlip",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "Calling extractall to extract all files from a tar file without sanitization. This may result files outside destination directory to be overwritten, resulting in an arbitrary file write.",
            "markdown": "Calling {0} to extract all files from a tar file without sanitization. This may result files outside destination directory to be overwritten, resulting in an arbitrary file write.",
            "arguments": [
              "[extractall](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/examples/speech_commands/input_data.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 240,
                  "endLine": 240,
                  "startColumn": 7,
                  "endColumn": 48
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7fb375eba8e03bdbf4aad4aeede0c47a7f1449ba28be41dfd4eb0b7b4d444386",
            "1": "82b5fe00.755ecede.6da5baaf.a294a590.1d07cee4.ba14daf2.d12f9a71.a85190f8.82b5fe00.755ecede.6da5baaf.a294a590.3f5ff851.ba14daf2.d12f9a71.a85190f8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/examples/speech_commands/input_data.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 240,
                            "endLine": 240,
                            "startColumn": 7,
                            "endColumn": 48
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/reDOS/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Unsanitized user input from an environment variable flows into re.compile, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "markdown": "Unsanitized user input from an environment variable {0} into {1}, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25)",
              "[re.compile](26)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/tools/visualize_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 55,
                  "endLine": 55,
                  "startColumn": 20,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "877a60849f9f4d0600123fcf75add682aaa463bfeb7c92a1c5354c94c2738896",
            "1": "7c4be816.1c6650e9.8e5ed954.139c59a8.0be7e9b7.ba14daf2.081ac3f4.e2dbeca3.983befcc.5db0d0b9.187bf175.47ccebf6.0be7e9b7.0824323c.34050f90.cadd00d0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 15,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 5,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 35,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 22,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 5,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 15,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 39,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 39,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 31,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 20,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/reDOS/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Unsanitized user input from a command line argument flows into re.search, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "markdown": "Unsanitized user input from {0} {1} into {2}, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29)",
              "[re.search](30)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/compiler/tests/lstm_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 328,
                  "endLine": 328,
                  "startColumn": 3,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5143d37a6d18542aaf16c5ad8af3b4483b3e70ce7fab435a7796a5a45816195c",
            "1": "e06468b8.f89755c5.2683ade8.139c59a8.056de048.ba14daf2.081ac3f4.8794408a.e06468b8.b377bf81.d4fa07ba.139c59a8.c8b7d5cc.73cfdf26.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/compiler/tests/lstm_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 19,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/compiler/tests/lstm_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 19,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/compiler/tests/lstm_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 19,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/compiler/tests/lstm_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 18,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/compiler/tests/lstm_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 18,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/compiler/tests/lstm_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 13,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 27,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 5,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 58,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 53,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 467,
                            "endLine": 467,
                            "startColumn": 32,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 474,
                            "endLine": 474,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 478,
                            "endLine": 478,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 478,
                            "endLine": 480,
                            "startColumn": 7,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 481,
                            "startColumn": 15,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 481,
                            "startColumn": 3,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 482,
                            "endLine": 482,
                            "startColumn": 6,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 484,
                            "endLine": 484,
                            "startColumn": 17,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 486,
                            "endLine": 486,
                            "startColumn": 13,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 486,
                            "endLine": 486,
                            "startColumn": 13,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 486,
                            "endLine": 486,
                            "startColumn": 13,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 486,
                            "endLine": 486,
                            "startColumn": 13,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 486,
                            "endLine": 486,
                            "startColumn": 5,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 487,
                            "endLine": 487,
                            "startColumn": 39,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 423,
                            "endLine": 423,
                            "startColumn": 21,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 454,
                            "endLine": 454,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 454,
                            "endLine": 454,
                            "startColumn": 38,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 454,
                            "endLine": 454,
                            "startColumn": 28,
                            "endColumn": 37
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/reDOS/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Unsanitized user input from a command line argument flows into re.search, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "markdown": "Unsanitized user input from {0} {1} into {2}, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22)",
              "[re.search](23)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/platform/googletest.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 62,
                  "endLine": 62,
                  "startColumn": 3,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "99adbc755cd75baf7f86e8fe1884113db2c3d72727e7afbbd1ca9ed782115555",
            "1": "2d06e3d6.a3184e79.d1b84bf6.b5f6ec27.2a394f89.e1e63cbf.6ec8ca45.545e9171.2d06e3d6.a3184e79.d1b84bf6.b5f6ec27.c8b7d5cc.e1e63cbf.6ec8ca45.0cde1deb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 14,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 14,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 7,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 38,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 58,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 53,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 467,
                            "endLine": 467,
                            "startColumn": 32,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 474,
                            "endLine": 474,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 478,
                            "endLine": 478,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 478,
                            "endLine": 480,
                            "startColumn": 7,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 481,
                            "startColumn": 15,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 481,
                            "startColumn": 3,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 482,
                            "endLine": 482,
                            "startColumn": 6,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 484,
                            "endLine": 484,
                            "startColumn": 17,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 486,
                            "endLine": 486,
                            "startColumn": 13,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 486,
                            "endLine": 486,
                            "startColumn": 13,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 486,
                            "endLine": 486,
                            "startColumn": 13,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 486,
                            "endLine": 486,
                            "startColumn": 13,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 486,
                            "endLine": 486,
                            "startColumn": 5,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 487,
                            "endLine": 487,
                            "startColumn": 39,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 423,
                            "endLine": 423,
                            "startColumn": 21,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 454,
                            "endLine": 454,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 454,
                            "endLine": 454,
                            "startColumn": 38,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 454,
                            "endLine": 454,
                            "startColumn": 28,
                            "endColumn": 37
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 351,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/Deserialization/test",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into pickle.load, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26)",
              "[pickle.load](27)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 550,
                  "endLine": 550,
                  "startColumn": 17,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5500dbfa324c11e3b661cc3b11f97531fc1b1c619e4ffca0ff0fd182a5f40c97",
            "1": "2e8ddaeb.e6662437.a832003e.5bc6639a.b5144d8b.ba14daf2.081ac3f4.9bdd70f3.2e8ddaeb.577bab1d.a832003e.5bc6639a.e067a2f7.ba14daf2.bc740e82.a4830b9a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 540,
                            "endLine": 540,
                            "startColumn": 17,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 540,
                            "endLine": 540,
                            "startColumn": 7,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 541,
                            "endLine": 541,
                            "startColumn": 28,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 541,
                            "endLine": 541,
                            "startColumn": 15,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 541,
                            "endLine": 541,
                            "startColumn": 7,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 542,
                            "endLine": 542,
                            "startColumn": 17,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 549,
                            "endLine": 549,
                            "startColumn": 17,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 549,
                            "endLine": 549,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 549,
                            "endLine": 549,
                            "startColumn": 33,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 550,
                            "endLine": 550,
                            "startColumn": 29,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/kernel_tests/variables/resource_variable_ops_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 550,
                            "endLine": 550,
                            "startColumn": 17,
                            "endColumn": 28
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/Deserialization/test",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into pickle.load, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26)",
              "[pickle.load](27)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/eager/core_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 481,
                  "endLine": 481,
                  "startColumn": 11,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4c4b021510e7f7374ad852c7bd7af6ac9862403285deb35337814e71a3f5164a",
            "1": "2e8ddaeb.df73b9fc.a832003e.5bc6639a.f3eda546.ba14daf2.081ac3f4.9bdd70f3.2e8ddaeb.577bab1d.a832003e.5bc6639a.e067a2f7.ba14daf2.7cc96b57.a4830b9a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 474,
                            "endLine": 474,
                            "startColumn": 15,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 474,
                            "endLine": 474,
                            "startColumn": 5,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 475,
                            "endLine": 475,
                            "startColumn": 26,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 475,
                            "endLine": 475,
                            "startColumn": 13,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 475,
                            "endLine": 475,
                            "startColumn": 5,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 476,
                            "startColumn": 15,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 480,
                            "endLine": 480,
                            "startColumn": 15,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 480,
                            "endLine": 480,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 480,
                            "endLine": 480,
                            "startColumn": 31,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 481,
                            "endLine": 481,
                            "startColumn": 23,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/core_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 481,
                            "endLine": 481,
                            "startColumn": 11,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/PT/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a CLI argument flows into io.ioutil.ReadFile, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a CLI argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[io.ioutil.ReadFile](13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/go/example_inception_inference_test.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 91,
                  "endLine": 91,
                  "startColumn": 16,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3589c728a8ff2d74da2982635f5a1b34f861867784f5eb2e22e02f42fff3c780",
            "1": "d558cbe0.dcaaa74a.45df3e14.e22980a8.f1d9f854.995dab92.df7e59ba.1bff12d3.d558cbe0.fb148050.45df3e14.1913ff44.800847ac.67ab4541.be8ec6d7.1bff12d3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 14,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 14,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 2,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 44,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 43,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 17,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 222,
                            "endLine": 222,
                            "startColumn": 27,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 222,
                            "endLine": 222,
                            "startColumn": 13,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 222,
                            "endLine": 222,
                            "startColumn": 3,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 226,
                            "endLine": 226,
                            "startColumn": 16,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 240,
                            "endLine": 240,
                            "startColumn": 9,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 2,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 32,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 16,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/PT/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a CLI argument flows into io.ioutil.ReadFile, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a CLI argument](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[io.ioutil.ReadFile](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/go/example_inception_inference_test.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 148,
                  "endLine": 148,
                  "startColumn": 16,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f3d01df04c828cadb79799cbfa5fcacba1dea84d858353aed6a5fefd98ad8a5e",
            "1": "7b93dee7.8642ae5d.45df3e14.d9166389.556f02b4.2f4e1548.93af9749.678b0e20.7b93dee7.73eb5804.45df3e14.1913ff44.800847ac.67ab4541.93af9749.1bff12d3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 15,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 15,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 2,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 38,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 37,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 147,
                            "endLine": 147,
                            "startColumn": 26,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 32,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 16,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/PT/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a CLI argument flows into os.Remove, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to delete arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to delete arbitrary files.",
            "arguments": [
              "[a CLI argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15)",
              "[os.Remove](16)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/go/example_inception_inference_test.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 239,
                  "endLine": 239,
                  "startColumn": 2,
                  "endColumn": 11
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cf1f1abc95d20858ce17ef176b6b4096d968f227b054c8114a1d89476bc43ae6",
            "1": "7b93dee7.1c5d5c80.45df3e14.47a9547c.556f02b4.57f89f2f.df7e59ba.678b0e20.ea14e3e0.dcaaa74a.635e63af.580de02b.556f02b4.57f89f2f.be8ec6d7.1bff12d3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 14,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 14,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 2,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 44,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 43,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 17,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 222,
                            "endLine": 222,
                            "startColumn": 27,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 223,
                            "endLine": 223,
                            "startColumn": 27,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 224,
                            "endLine": 224,
                            "startColumn": 27,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 224,
                            "endLine": 224,
                            "startColumn": 13,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 224,
                            "endLine": 224,
                            "startColumn": 3,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 233,
                            "endLine": 233,
                            "startColumn": 26,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 20,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 236,
                            "endLine": 236,
                            "startColumn": 23,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 267,
                            "endLine": 267,
                            "startColumn": 17,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 239,
                            "endLine": 239,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 239,
                            "endLine": 239,
                            "startColumn": 2,
                            "endColumn": 11
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/PT/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a CLI argument flows into os.OpenFile, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to open arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to open arbitrary files.",
            "arguments": [
              "[a CLI argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13)",
              "[os.OpenFile](14)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/go/example_inception_inference_test.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 258,
                  "endLine": 258,
                  "startColumn": 15,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "799d1fae6911add58e9a20668344e1bd4538cd63a0f0055c6430567f25a8bfc1",
            "1": "7b93dee7.1c5d5c80.45df3e14.47a9547c.556f02b4.e4d7b7ac.aa359f29.678b0e20.ea14e3e0.dcaaa74a.9fa62a61.580de02b.56ffa9d2.e4d7b7ac.be8ec6d7.1bff12d3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 14,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 14,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 2,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 44,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 43,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 17,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 222,
                            "endLine": 222,
                            "startColumn": 27,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 223,
                            "endLine": 223,
                            "startColumn": 27,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 224,
                            "endLine": 224,
                            "startColumn": 27,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 224,
                            "endLine": 224,
                            "startColumn": 13,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 224,
                            "endLine": 224,
                            "startColumn": 3,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 233,
                            "endLine": 233,
                            "startColumn": 26,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 20,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 258,
                            "endLine": 258,
                            "startColumn": 27,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 258,
                            "endLine": 258,
                            "startColumn": 15,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/PT/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "Unsanitized input from open zip file flows into os.OpenFile, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to open arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to open arbitrary files.",
            "arguments": [
              "[open zip file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)",
              "[os.OpenFile](12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/go/example_inception_inference_test.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 279,
                  "endLine": 279,
                  "startColumn": 15,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e0a3570796bd00b770f40a4a89faf4bc1fa8de55e7cf827b6aeda5f44b4d5e30",
            "1": "7572e22a.e0beca80.45df3e14.b1e0a0f9.1240d8b6.e4d7b7ac.aa359f29.5c311668.067e0058.4d7c6729.9fa62a61.e22980a8.56ffa9d2.57f89f2f.aa359f29.1bff12d3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 268,
                            "endLine": 268,
                            "startColumn": 12,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 268,
                            "endLine": 268,
                            "startColumn": 12,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 268,
                            "endLine": 268,
                            "startColumn": 2,
                            "endColumn": 3
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 272,
                            "endLine": 272,
                            "startColumn": 8,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 273,
                            "endLine": 273,
                            "startColumn": 20,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 273,
                            "endLine": 273,
                            "startColumn": 20,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 273,
                            "endLine": 273,
                            "startColumn": 9,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 274,
                            "endLine": 274,
                            "startColumn": 15,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 278,
                            "endLine": 278,
                            "startColumn": 29,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 278,
                            "endLine": 278,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 279,
                            "endLine": 279,
                            "startColumn": 46,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 279,
                            "endLine": 279,
                            "startColumn": 27,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 279,
                            "endLine": 279,
                            "startColumn": 15,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/PT/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a CLI argument flows into os.Open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to open arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to open arbitrary files.",
            "arguments": [
              "[a CLI argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15)",
              "[os.Open](16)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/go/example_inception_inference_test.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 294,
                  "endLine": 294,
                  "startColumn": 15,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b8fd520b2311fd92f18d756fdbefb494c1e69581810374a689fba6a07f95ecfe",
            "1": "93578345.dcaaa74a.45df3e14.89f13fa7.556f02b4.207678a7.6373e1ef.678b0e20.d558cbe0.dcaaa74a.45df3e14.580de02b.556f02b4.67ab4541.be8ec6d7.1bff12d3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 14,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 14,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 2,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 44,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 43,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 17,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 222,
                            "endLine": 222,
                            "startColumn": 27,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 223,
                            "endLine": 223,
                            "startColumn": 27,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 223,
                            "endLine": 223,
                            "startColumn": 13,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 223,
                            "endLine": 223,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 226,
                            "endLine": 226,
                            "startColumn": 23,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 240,
                            "endLine": 240,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 13,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 32,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 291,
                            "endLine": 291,
                            "startColumn": 21,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 294,
                            "endLine": 294,
                            "startColumn": 23,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/go/example_inception_inference_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 294,
                            "endLine": 294,
                            "startColumn": 15,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CommandInjection/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into os.system, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23)",
              "[os.system](24)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/python/tflite_convert_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 61,
                  "endLine": 61,
                  "startColumn": 16,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3206c7eaa5d8d6026cb5e44bf84d36198b717f616a53972fd9ca0be7a693c1ec",
            "1": "f2477505.5657161a.8e7e6909.139c59a8.0c58d398.ba14daf2.081ac3f4.ebed174f.fdca2659.577bab1d.e626d819.139c59a8.cf0d71c7.a5d7f69f.21b1f77a.69dd7c61"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 32,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 5,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 62,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 15,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 59,
                            "startColumn": 5,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 26,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 16,
                            "endColumn": 25
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CommandInjection/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment variable flows into subprocess.call, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26)",
              "[subprocess.call](27)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/tools/flatbuffer_utils_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 225,
                  "endLine": 225,
                  "startColumn": 5,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5d7cd15abd410d92cab06196468f4b2e6294b1f77f2a6c66b7c41b612baad8ce",
            "1": "be65c3aa.de68ea1e.79e62dc9.139c59a8.cc857d4e.ba14daf2.071b90ad.ebed174f.705360af.e9548b34.f7dd0695.49b19ce7.8c24caba.ba14daf2.071b90ad.a7dea587"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2603,
                            "endLine": 2603,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/test_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2604,
                            "endLine": 2604,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/flatbuffer_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 215,
                            "endLine": 215,
                            "startColumn": 15,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/flatbuffer_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 215,
                            "endLine": 215,
                            "startColumn": 5,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/flatbuffer_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 216,
                            "endLine": 216,
                            "startColumn": 35,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/flatbuffer_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 216,
                            "endLine": 216,
                            "startColumn": 22,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/flatbuffer_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 216,
                            "endLine": 216,
                            "startColumn": 5,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/flatbuffer_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 49,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/flatbuffer_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 224,
                            "endLine": 224,
                            "startColumn": 39,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/flatbuffer_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 224,
                            "endLine": 224,
                            "startColumn": 15,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/flatbuffer_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 224,
                            "endLine": 224,
                            "startColumn": 5,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/flatbuffer_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 225,
                            "endLine": 225,
                            "startColumn": 21,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/flatbuffer_utils_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 225,
                            "endLine": 225,
                            "startColumn": 5,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 351,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 11,
          "level": "note",
          "message": {
            "text": "hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.md5](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/python/convert.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1156,
                  "endLine": 1156,
                  "startColumn": 15,
                  "endColumn": 78
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d6f4fb993e0447e7651e0d4dd09b3cefb5c025f07b5aa67452e32e348396c668",
            "1": "6d41d7cd.577bab1d.79e62dc9.139c59a8.bab9de6f.ba14daf2.081ac3f4.0b2dae4a.6d41d7cd.577bab1d.f04405c4.139c59a8.e26e24d8.ba14daf2.65068a99.67a97ae1"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1156,
                            "endLine": 1156,
                            "startColumn": 15,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 201,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 11,
          "level": "note",
          "message": {
            "text": "hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.md5](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/keras/utils/data_utils.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 291,
                  "endLine": 291,
                  "startColumn": 10,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3b23349b23d3e66d5bfa8f8de266179b6618eb3745cb2de56449755bdaaf7ca2",
            "1": "dcc2234a.1511eee7.f04405c4.139c59a8.3a605997.ba14daf2.4fe60176.d80711a4.dcc2234a.1511eee7.f04405c4.139c59a8.3a605997.ba14daf2.4fe60176.d80711a4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/keras/utils/data_utils.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 291,
                            "endLine": 291,
                            "startColumn": 10,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 201,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 11,
          "level": "note",
          "message": {
            "text": "hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.md5](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/keras/utils/data_utils.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 322,
                  "endLine": 322,
                  "startColumn": 10,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1473bb6f122e6e7436d3839a563ab302ada885fa5531e9be1ff4403544eaafa2",
            "1": "8a30cfc6.2dd6d7a6.79e62dc9.139c59a8.3a605997.a186cddf.0a7337bb.2c77ce57.dcc2234a.1511eee7.f04405c4.139c59a8.3a605997.a186cddf.4fe60176.d80711a4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/keras/utils/data_utils.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 291,
                            "endLine": 291,
                            "startColumn": 10,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 201,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 11,
          "level": "note",
          "message": {
            "text": "hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.md5](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/ops/distributions/util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 794,
                  "endLine": 794,
                  "startColumn": 14,
                  "endColumn": 43
                }
              }
            }
          ],
          "fingerprints": {
            "0": "12d7bc959294aab34ca3cb60dfb9a1fc00d515ad6de092afef976814cceb0f91",
            "1": "b741fe90.a64350f9.59612bde.fe11b42a.ddbb0a47.c6c920ac.a2237efa.f46ed94e.b741fe90.a64350f9.f04405c4.da2e1872.e26e24d8.c6c920ac.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/ops/distributions/util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 794,
                            "endLine": 794,
                            "startColumn": 14,
                            "endColumn": 25
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 151,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 11,
          "level": "note",
          "message": {
            "text": "hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.md5](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/keras/layers/legacy_rnn/rnn_cell_wrapper_impl.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 180,
                  "endLine": 180,
                  "startColumn": 16,
                  "endColumn": 45
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1747dabde0779898997aedf5ca7278cdf2f5d6d9491dbe82a09b477f46142db5",
            "1": "b741fe90.a64350f9.59612bde.fe11b42a.ddbb0a47.c6c920ac.a2237efa.f46ed94e.b741fe90.a64350f9.f04405c4.da2e1872.e26e24d8.c6c920ac.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/keras/layers/legacy_rnn/rnn_cell_wrapper_impl.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 180,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 151,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 11,
          "level": "note",
          "message": {
            "text": "hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.md5](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/ops/data_flow_ops.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 698,
                  "endLine": 698,
                  "startColumn": 19,
                  "endColumn": 48
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5cc3b7acaf8ec7ad16889852887dcc88b119952032167793b92ff1bfe3995fa7",
            "1": "b741fe90.a64350f9.59612bde.fe11b42a.ddbb0a47.c6c920ac.a2237efa.f46ed94e.b741fe90.a64350f9.f04405c4.da2e1872.e26e24d8.c6c920ac.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/ops/data_flow_ops.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 698,
                            "endLine": 698,
                            "startColumn": 19,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 151,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 11,
          "level": "note",
          "message": {
            "text": "hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.md5](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/tpu/tensor_tracer.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 126,
                  "endLine": 126,
                  "startColumn": 10,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "89cef49ddb40dfbb258124ca56eea0e9dc1665a0e988dc786a05e281f0bcfb9a",
            "1": "6751cc34.50a287eb.79e62dc9.be5f5edc.13a0ff5e.ba14daf2.b9443c90.a8041d14.6751cc34.50a287eb.f04405c4.be5f5edc.13a0ff5e.ba14daf2.b9443c90.a8041d14"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 201,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 11,
          "level": "note",
          "message": {
            "text": "hashlib.sha1 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.sha1](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/data/experimental/benchmarks/map_and_batch_benchmark.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 103,
                  "endLine": 103,
                  "startColumn": 15,
                  "endColumn": 62
                }
              }
            }
          ],
          "fingerprints": {
            "0": "205e8e6179a283cf5de20b2137f48c19fceb48267d7e6ba02bd547d47c391291",
            "1": "b741fe90.2dd6d7a6.59612bde.139c59a8.bab9de6f.c6c920ac.a2237efa.6aac30d8.b741fe90.59b34bce.c2b6f7fb.139c59a8.e26e24d8.c6c920ac.a2237efa.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/data/experimental/benchmarks/map_and_batch_benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 15,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 201,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 11,
          "level": "note",
          "message": {
            "text": "hashlib.sha1 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.sha1](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/examples/speech_commands/input_data.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 100,
                  "endLine": 100,
                  "startColumn": 22,
                  "endColumn": 72
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b164d9af048235126c1fdbbe0dc59d5b0e27e6f37d8943cbb347f51e5260e8f6",
            "1": "30099ba6.9f68b84a.79e62dc9.139c59a8.c38b6d36.34db5445.081ac3f4.ebed174f.9f8f50f3.59b34bce.110e3285.139c59a8.c38b6d36.34db5445.4836399a.c7b5b7f1"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/examples/speech_commands/input_data.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 22,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 201,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 11,
          "level": "note",
          "message": {
            "text": "hashlib.sha1 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.sha1](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/framework/load_library.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 64,
                  "startColumn": 17,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "01be04dfb639207e709d3d0d8802070b7b5b2e25b23aca081838bbf394e4cad5",
            "1": "a2db85fa.dc31aa48.79e62dc9.56635305.49cb7a82.1f681bca.d585c80e.ebed174f.a2db85fa.59b34bce.c2b6f7fb.56635305.49cb7a82.1f681bca.4836399a.1b4a817d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/load_library.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 17,
                            "endColumn": 29
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 151,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 11,
          "level": "note",
          "message": {
            "text": "hashlib.sha1 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.sha1](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/framework/function.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 575,
                  "endLine": 575,
                  "startColumn": 12,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "778c848a28dacff8b8f6395c116caf5e64c2338e5409690d17799d326d62e121",
            "1": "b741fe90.4976207b.59612bde.139c59a8.3a605997.c6c920ac.a2237efa.f46ed94e.b741fe90.4976207b.c2b6f7fb.139c59a8.3a605997.c6c920ac.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/framework/function.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 545,
                            "endLine": 545,
                            "startColumn": 14,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 151,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureTmpFile/test",
          "ruleIndex": 12,
          "level": "note",
          "message": {
            "text": "Use of tempfile.mktemp is deprecated and poses a security risk",
            "markdown": "Use of {0} is deprecated and poses a security risk",
            "arguments": [
              "[tempfile.mktemp](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/compiler/mlir/tensorflow/tests/tf_saved_model/common_v1.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 91,
                  "endLine": 91,
                  "startColumn": 25,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "59e84961c6bf8b475d317ed443c37ea3cc7e099a2e544a93c0277ebe3ade3f7a",
            "1": "26f1400e.0b116892.cceaa0b6.139c59a8.ac563c4e.ba14daf2.96583ebc.8356f9c3.26f1400e.0b116892.cceaa0b6.139c59a8.ac563c4e.ba14daf2.96583ebc.8356f9c3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/compiler/mlir/tensorflow/tests/tf_saved_model/common_v1.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 25,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 151,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[open](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/tools/visualize.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 544,
                  "endLine": 544,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7319930ddaaa94788511bde1b15ca5c9d3b518910c9d3d07616c20251bed60e1",
            "1": "d343a666.d3fa0bdc.187bf175.63814dd6.cf0d71c7.ba14daf2.a2237efa.f46ed94e.d343a666.364f4105.187bf175.139c59a8.4608c58f.73cfdf26.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 549,
                            "endLine": 549,
                            "startColumn": 8,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 549,
                            "endLine": 549,
                            "startColumn": 8,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 536,
                            "endLine": 536,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 538,
                            "endLine": 538,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 539,
                            "endLine": 539,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 539,
                            "endLine": 539,
                            "startColumn": 19,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 539,
                            "endLine": 539,
                            "startColumn": 5,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 544,
                            "endLine": 544,
                            "startColumn": 15,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 544,
                            "endLine": 544,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[open](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/compatibility/tf_upgrade.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 244,
                  "endLine": 244,
                  "startColumn": 5,
                  "endColumn": 9
                }
              }
            }
          ],
          "fingerprints": {
            "0": "03417c5bb6b6fe7ef0280f4c94d7e5addd6c1a8844af92c226289b40140f5a38",
            "1": "800eb1b9.e3d9b656.79e62dc9.139c59a8.4608c58f.ba14daf2.682a1833.08a60334.800eb1b9.9bf37872.89bf942d.9cd2dfe0.4608c58f.a5d7f69f.89d8794c.50359551"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 228,
                            "endLine": 228,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 228,
                            "endLine": 228,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 228,
                            "endLine": 228,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 232,
                            "endLine": 232,
                            "startColumn": 21,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 232,
                            "endLine": 232,
                            "startColumn": 21,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 232,
                            "endLine": 232,
                            "startColumn": 3,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 244,
                            "endLine": 244,
                            "startColumn": 10,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 244,
                            "endLine": 244,
                            "startColumn": 5,
                            "endColumn": 9
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[open](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/build_info/gen_build_info.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 80,
                  "endLine": 80,
                  "startColumn": 3,
                  "endColumn": 7
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4c330edbabba9c216740f1782f8eaa109c6ca014ab86ba5564d0d99233dfd19e",
            "1": "a3a83dac.e3d9b656.32b92dee.139c59a8.4608c58f.e1324707.081ac3f4.4201a018.d7130274.e3d9b656.32b92dee.f109daae.4608c58f.e1324707.f6dc7859.0eb6d2f4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/build_info/gen_build_info.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/build_info/gen_build_info.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/build_info/gen_build_info.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 1,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/build_info/gen_build_info.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 4,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/build_info/gen_build_info.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 4,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/build_info/gen_build_info.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 20,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/build_info/gen_build_info.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 22,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/build_info/gen_build_info.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 8,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/build_info/gen_build_info.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 3,
                            "endColumn": 7
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[open](13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/git/gen_git_source.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 97,
                  "endLine": 97,
                  "startColumn": 5,
                  "endColumn": 9
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a01470839ec0856bca490f3788b5424fd0beeff403fd3e8ac1c98d376d8594f8",
            "1": "481822ba.67df6de4.03e7c989.139c59a8.4608c58f.ba14daf2.081ac3f4.a9c71abd.d5c0229d.e3d9b656.e0ef3301.9cd2dfe0.4608c58f.ae429a6c.f6dc7859.e6cc82cd"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 1,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 330,
                            "endLine": 330,
                            "startColumn": 4,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 331,
                            "endLine": 331,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 331,
                            "endLine": 331,
                            "startColumn": 6,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 333,
                            "endLine": 333,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 30,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 21,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 15,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 24,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 23,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 10,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 5,
                            "endColumn": 9
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13)",
              "[open](14)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/git/gen_git_source.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 98,
                  "endLine": 98,
                  "startColumn": 5,
                  "endColumn": 9
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b8d6a78544df7b52f04bac80866a7ff48fa8ac677a632c15e97333594672dfcd",
            "1": "481822ba.67df6de4.03e7c989.139c59a8.4608c58f.ba14daf2.081ac3f4.a9c71abd.d5c0229d.e3d9b656.e0ef3301.9cd2dfe0.4608c58f.ae429a6c.f6dc7859.e6cc82cd"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 1,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 330,
                            "endLine": 330,
                            "startColumn": 4,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 331,
                            "endLine": 331,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 331,
                            "endLine": 331,
                            "startColumn": 6,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 333,
                            "endLine": 333,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 30,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 21,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 15,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 24,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 23,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 98,
                            "endLine": 98,
                            "startColumn": 23,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 98,
                            "endLine": 98,
                            "startColumn": 10,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 98,
                            "endLine": 98,
                            "startColumn": 5,
                            "endColumn": 9
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[open](13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/git/gen_git_source.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 113,
                  "endLine": 113,
                  "startColumn": 7,
                  "endColumn": 11
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6f6de020ed8342ba4b9ef23cda289b256c6b86d34eea377e601453780f4c2074",
            "1": "59b2cac1.67df6de4.03e7c989.139c59a8.4608c58f.ba14daf2.081ac3f4.0990edd8.d5c0229d.e3d9b656.e0ef3301.9cd2dfe0.4608c58f.26a73016.f6dc7859.e6cc82cd"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 1,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 330,
                            "endLine": 330,
                            "startColumn": 4,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 331,
                            "endLine": 331,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 331,
                            "endLine": 331,
                            "startColumn": 6,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 333,
                            "endLine": 333,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 30,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 21,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 15,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 24,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 25,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 7,
                            "endColumn": 11
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[open](13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/git/gen_git_source.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 119,
                  "endLine": 119,
                  "startColumn": 7,
                  "endColumn": 11
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d41734c12f7b9a0b6638cbcb7d36146d805957aa2323c10f35114dfce98c3b07",
            "1": "59b2cac1.67df6de4.03e7c989.139c59a8.4608c58f.ba14daf2.081ac3f4.0990edd8.d5c0229d.e3d9b656.e0ef3301.9cd2dfe0.4608c58f.26a73016.f6dc7859.e6cc82cd"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 1,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 330,
                            "endLine": 330,
                            "startColumn": 4,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 331,
                            "endLine": 331,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 331,
                            "endLine": 331,
                            "startColumn": 6,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 333,
                            "endLine": 333,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 30,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 21,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 15,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 24,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 25,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 7,
                            "endColumn": 11
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[open](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/git/gen_git_source.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 223,
                  "endLine": 223,
                  "startColumn": 3,
                  "endColumn": 7
                }
              }
            }
          ],
          "fingerprints": {
            "0": "aad221fcbc0fe77df9a62c8d338b26a1b7367e50651d05a78542640c61506bf0",
            "1": "1f6cb542.163466e8.03e7c989.139c59a8.4608c58f.ba14daf2.d42a1390.4201a018.2dcd93ba.277c621c.e0ef3301.9cd2dfe0.4608c58f.0a892d8d.f6dc7859.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 1,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 330,
                            "endLine": 330,
                            "startColumn": 4,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 334,
                            "endLine": 334,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 334,
                            "endLine": 334,
                            "startColumn": 6,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 255,
                            "endLine": 255,
                            "startColumn": 26,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 268,
                            "endLine": 268,
                            "startColumn": 22,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 185,
                            "endLine": 185,
                            "startColumn": 24,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 223,
                            "endLine": 223,
                            "startColumn": 8,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 223,
                            "endLine": 223,
                            "startColumn": 3,
                            "endColumn": 7
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[open](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/ci_build/linux/mkl/set-build-env.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 365,
                  "endLine": 365,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d3bbcee1f506da7473a48cc7c4b9cc584d4db08ceba39f2221e3fd1fa8c8e1b2",
            "1": "2e8ddaeb.577bab1d.187bf175.139c59a8.f3eda546.ba14daf2.ddedfe68.a4830b9a.2e8ddaeb.04ad2656.5fe980be.9cd2dfe0.4608c58f.0a892d8d.ddedfe68.a4830b9a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/linux/mkl/set-build-env.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 323,
                            "endLine": 323,
                            "startColumn": 17,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/linux/mkl/set-build-env.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 323,
                            "endLine": 323,
                            "startColumn": 17,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/linux/mkl/set-build-env.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 323,
                            "endLine": 323,
                            "startColumn": 5,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/linux/mkl/set-build-env.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 327,
                            "endLine": 327,
                            "startColumn": 23,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/linux/mkl/set-build-env.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 25,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/linux/mkl/set-build-env.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 25,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/linux/mkl/set-build-env.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 331,
                            "endLine": 331,
                            "startColumn": 26,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/linux/mkl/set-build-env.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 327,
                            "endLine": 327,
                            "startColumn": 23,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/linux/mkl/set-build-env.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 365,
                            "endLine": 365,
                            "startColumn": 15,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/linux/mkl/set-build-env.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 365,
                            "endLine": 365,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37)",
              "[open](38)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 689,
                  "endLine": 689,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3fcd029f6dca277bd0e32b761efec7fc3a08bbee7c7832cede9a04ef52381c2d",
            "1": "a6b41d6e.09b47a5b.187bf175.5074e214.f3eda546.ba14daf2.a2237efa.f46ed94e.f942f700.f4a1ab20.f5e5e26e.04d70ea8.4608c58f.73cfdf26.98332e65.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 817,
                            "endLine": 817,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 817,
                            "endLine": 817,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 817,
                            "endLine": 817,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 819,
                            "endLine": 819,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 825,
                            "endLine": 825,
                            "startColumn": 15,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 828,
                            "endLine": 828,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 828,
                            "endLine": 828,
                            "startColumn": 14,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 828,
                            "endLine": 828,
                            "startColumn": 14,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 828,
                            "endLine": 828,
                            "startColumn": 3,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 829,
                            "endLine": 829,
                            "startColumn": 18,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 845,
                            "endLine": 845,
                            "startColumn": 39,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 589,
                            "endLine": 589,
                            "startColumn": 30,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 641,
                            "endLine": 641,
                            "startColumn": 25,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 444,
                            "endLine": 444,
                            "startColumn": 23,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 681,
                            "endLine": 681,
                            "startColumn": 40,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 681,
                            "endLine": 681,
                            "startColumn": 40,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 539,
                            "endLine": 539,
                            "startColumn": 39,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 579,
                            "endLine": 579,
                            "startColumn": 6,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 580,
                            "endLine": 580,
                            "startColumn": 29,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 580,
                            "endLine": 580,
                            "startColumn": 29,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 580,
                            "endLine": 580,
                            "startColumn": 29,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 580,
                            "endLine": 580,
                            "startColumn": 5,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 581,
                            "endLine": 581,
                            "startColumn": 7,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 582,
                            "endLine": 582,
                            "startColumn": 19,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 583,
                            "endLine": 583,
                            "startColumn": 24,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 564,
                            "endLine": 564,
                            "startColumn": 8,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 565,
                            "endLine": 565,
                            "startColumn": 21,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 565,
                            "endLine": 565,
                            "startColumn": 21,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 565,
                            "endLine": 565,
                            "startColumn": 21,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 565,
                            "endLine": 565,
                            "startColumn": 7,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 568,
                            "endLine": 568,
                            "startColumn": 27,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 568,
                            "endLine": 568,
                            "startColumn": 3,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 572,
                            "endLine": 572,
                            "startColumn": 6,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 573,
                            "endLine": 573,
                            "startColumn": 26,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 585,
                            "endLine": 585,
                            "startColumn": 46,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 683,
                            "endLine": 683,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 689,
                            "endLine": 689,
                            "startColumn": 40,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 689,
                            "endLine": 689,
                            "startColumn": 15,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 689,
                            "endLine": 689,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[open](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 720,
                  "endLine": 720,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c1d8020d37eaa79b6065a5d3122306c272977f2d15e7c0d132f392ecc67a95c2",
            "1": "051cbef9.09b47a5b.184a673a.139c59a8.f3eda546.ba14daf2.081ac3f4.66eef47e.9d86e1a1.f4a1ab20.184a673a.9cd2dfe0.4608c58f.73cfdf26.18614a65.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 817,
                            "endLine": 817,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 817,
                            "endLine": 817,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 817,
                            "endLine": 817,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 819,
                            "endLine": 819,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 819,
                            "endLine": 819,
                            "startColumn": 10,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 715,
                            "endLine": 715,
                            "startColumn": 7,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 716,
                            "endLine": 716,
                            "startColumn": 41,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 717,
                            "endLine": 717,
                            "startColumn": 42,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 720,
                            "endLine": 720,
                            "startColumn": 15,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 720,
                            "endLine": 720,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[open](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "configure.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 123,
                  "endLine": 123,
                  "startColumn": 8,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ebbf9cf5526a46d4f0f30279a30e0bb7916544e67334bb54b436e34c3fe008cd",
            "1": "2e8ddaeb.09b47a5b.187bf175.139c59a8.fec61343.05a1d16e.081ac3f4.a4830b9a.41fca0ba.e3d9b656.5fe980be.6e7214eb.4608c58f.05a1d16e.f6dc7859.f395ae1b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1252,
                            "endLine": 1252,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1252,
                            "endLine": 1252,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1252,
                            "endLine": 1252,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 24,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 3,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1255,
                            "endLine": 1255,
                            "startColumn": 30,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1255,
                            "endLine": 1255,
                            "startColumn": 17,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1255,
                            "endLine": 1255,
                            "startColumn": 3,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[open](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "configure.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 250,
                  "endLine": 250,
                  "startColumn": 8,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3ba93df2d993fbc4e9104b2ac91c904afdbcb4b5e22b455396a8d272fc4232da",
            "1": "2e8ddaeb.7712c1b4.187bf175.06b7897a.fec61343.05a1d16e.081ac3f4.a4830b9a.2e8ddaeb.7712c1b4.187bf175.57143927.4608c58f.216fb85d.f6dc7859.f395ae1b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1252,
                            "endLine": 1252,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1252,
                            "endLine": 1252,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1252,
                            "endLine": 1252,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 24,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 3,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1255,
                            "endLine": 1255,
                            "startColumn": 30,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 251,
                            "endLine": 251,
                            "startColumn": 20,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 251,
                            "endLine": 251,
                            "startColumn": 7,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 250,
                            "endLine": 250,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19)",
              "[open](20)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 182,
                  "endLine": 182,
                  "startColumn": 8,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6ba0e25516ee12521113f46b9b002f595b63467ddc2aea528b64c638bcc5c380",
            "1": "ea2b1bbf.42e15d56.187bf175.139c59a8.f3eda546.d612f5c7.081ac3f4.bb63d1ec.4e8c8b1f.2fca03ac.4195170d.d3e43d12.4608c58f.73cfdf26.f6dc7859.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 39,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 39,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 39,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 10,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 10,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 223,
                            "endLine": 223,
                            "startColumn": 3,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 224,
                            "endLine": 224,
                            "startColumn": 48,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 225,
                            "endLine": 225,
                            "startColumn": 48,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 226,
                            "endLine": 226,
                            "startColumn": 48,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 227,
                            "endLine": 227,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 227,
                            "endLine": 227,
                            "startColumn": 49,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 227,
                            "endLine": 227,
                            "startColumn": 49,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 141,
                            "endLine": 141,
                            "startColumn": 61,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 156,
                            "endLine": 156,
                            "startColumn": 25,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 158,
                            "endLine": 158,
                            "startColumn": 39,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 161,
                            "endLine": 161,
                            "startColumn": 36,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 161,
                            "endLine": 161,
                            "startColumn": 23,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 161,
                            "endLine": 161,
                            "startColumn": 3,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 182,
                            "endLine": 182,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 182,
                            "endLine": 182,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[open](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/tools/evaluation/tasks/imagenet_image_classification/generate_validation_labels.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 56,
                  "endLine": 56,
                  "startColumn": 72,
                  "endColumn": 76
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3b150c8f16fba481c43cd144a8fa533c85839a5a3bb4f46fe68fbde8bc8cd575",
            "1": "7b0793b4.a05b35b1.187bf175.139c59a8.f3eda546.ba14daf2.d42a1390.4201a018.129db901.2f4b09ed.187bf175.9cd2dfe0.4608c58f.91bde6e6.f6dc7859.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/imagenet_image_classification/generate_validation_labels.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/imagenet_image_classification/generate_validation_labels.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/imagenet_image_classification/generate_validation_labels.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/imagenet_image_classification/generate_validation_labels.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 22,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/imagenet_image_classification/generate_validation_labels.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 22,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/imagenet_image_classification/generate_validation_labels.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/imagenet_image_classification/generate_validation_labels.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 10,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/imagenet_image_classification/generate_validation_labels.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 31,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/imagenet_image_classification/generate_validation_labels.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 45,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/imagenet_image_classification/generate_validation_labels.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 7,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/imagenet_image_classification/generate_validation_labels.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 72,
                            "endColumn": 76
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 502,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[open](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/eager/gen_gradient_input_output_exclusions.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 28,
                  "endLine": 28,
                  "startColumn": 8,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "992631088fada2666a7b4f4c88a9a5e48cca66f5a0d9cb89d4cebe321914dbd7",
            "1": "7fa89cc7.e3d9b656.187bf175.139c59a8.f3eda546.ba14daf2.d42a1390.4201a018.cd5b7e60.e0e4ab8a.187bf175.9cd2dfe0.4608c58f.a5d7f69f.ad0c69d8.742d9b21"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/gen_gradient_input_output_exclusions.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 35,
                            "endLine": 35,
                            "startColumn": 10,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/gen_gradient_input_output_exclusions.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 35,
                            "endLine": 35,
                            "startColumn": 10,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/gen_gradient_input_output_exclusions.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 35,
                            "endLine": 35,
                            "startColumn": 3,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/gen_gradient_input_output_exclusions.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/gen_gradient_input_output_exclusions.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 8,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/gen_gradient_input_output_exclusions.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 10,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/gen_gradient_input_output_exclusions.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/eager/gen_gradient_input_output_exclusions.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 502,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[open](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 192,
                  "endLine": 192,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "196d93ac90d701d0853371a6b679e600a148d63eea32165af155534c205cfe1d",
            "1": "7f932732.e3d9b656.187bf175.139c59a8.f3eda546.ba14daf2.7d0630a5.08a60334.7f932732.1c04f711.187bf175.9cd2dfe0.4608c58f.a5d7f69f.7d0630a5.d2271497"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 130,
                            "endLine": 130,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 130,
                            "endLine": 130,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 130,
                            "endLine": 130,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 146,
                            "endLine": 146,
                            "startColumn": 21,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 146,
                            "endLine": 146,
                            "startColumn": 21,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 146,
                            "endLine": 146,
                            "startColumn": 3,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 192,
                            "endLine": 192,
                            "startColumn": 15,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 192,
                            "endLine": 192,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[open](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "third_party/xla/configure.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 80,
                  "endLine": 80,
                  "startColumn": 8,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ff62126b7ab38fafffa942dac6e344ea357ca4b2a206b941e96ed5ddc696f799",
            "1": "2e8ddaeb.09b47a5b.187bf175.139c59a8.fec61343.05a1d16e.081ac3f4.a4830b9a.41fca0ba.e3d9b656.5fe980be.6e7214eb.4608c58f.05a1d16e.f6dc7859.a4830b9a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 913,
                            "endLine": 913,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 913,
                            "endLine": 913,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 913,
                            "endLine": 913,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 915,
                            "endLine": 915,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 915,
                            "endLine": 915,
                            "startColumn": 24,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 915,
                            "endLine": 915,
                            "startColumn": 3,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 916,
                            "endLine": 916,
                            "startColumn": 30,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 916,
                            "endLine": 916,
                            "startColumn": 17,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 916,
                            "endLine": 916,
                            "startColumn": 3,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[open](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "third_party/xla/configure.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 207,
                  "endLine": 207,
                  "startColumn": 8,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "03530148dbb3fdb1e19cf6dac5327f5d014bf5ac2a62e3b6375ab9f9bcf4c2a8",
            "1": "2e8ddaeb.7712c1b4.187bf175.06b7897a.fec61343.05a1d16e.081ac3f4.a4830b9a.2e8ddaeb.7712c1b4.187bf175.57143927.4608c58f.05a1d16e.f6dc7859.a4830b9a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 913,
                            "endLine": 913,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 913,
                            "endLine": 913,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 913,
                            "endLine": 913,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 915,
                            "endLine": 915,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 915,
                            "endLine": 915,
                            "startColumn": 24,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 915,
                            "endLine": 915,
                            "startColumn": 3,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 916,
                            "endLine": 916,
                            "startColumn": 30,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 208,
                            "endLine": 208,
                            "startColumn": 20,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 208,
                            "endLine": 208,
                            "startColumn": 7,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 207,
                            "endLine": 207,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[open](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 182,
                  "endLine": 182,
                  "startColumn": 8,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "03bcb6abbad42aa6fcd2cc2ec33fe964aaa99da158370c5be419e5e436da5b71",
            "1": "ef95323b.09b47a5b.187bf175.139c59a8.f3eda546.5838b497.7d0a4165.ebed174f.4e8c8b1f.9d7bdf1b.187bf175.e7802535.4608c58f.73cfdf26.2fb32822.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 43,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 38,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 14,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 3,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 174,
                            "endLine": 174,
                            "startColumn": 13,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 179,
                            "endLine": 179,
                            "startColumn": 18,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 182,
                            "endLine": 182,
                            "startColumn": 13,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 182,
                            "endLine": 182,
                            "startColumn": 13,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 182,
                            "endLine": 182,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[open](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 185,
                  "endLine": 185,
                  "startColumn": 8,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5c880463a0e510e5460c9238e48dea22ffa09ed1ad09329f12fd2c885d9bbb36",
            "1": "f068dc40.d777924a.187bf175.139c59a8.f3eda546.ba14daf2.2fb32822.c17034f1.4e8c8b1f.a80e9ae2.187bf175.e7802535.4608c58f.73cfdf26.2fb32822.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 43,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 38,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 14,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 3,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 174,
                            "endLine": 174,
                            "startColumn": 13,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 179,
                            "endLine": 179,
                            "startColumn": 18,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 182,
                            "endLine": 182,
                            "startColumn": 13,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 185,
                            "endLine": 185,
                            "startColumn": 13,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 185,
                            "endLine": 185,
                            "startColumn": 13,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 185,
                            "endLine": 185,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13)",
              "[open](14)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/ios/extract_object_files_main.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 33,
                  "endLine": 33,
                  "startColumn": 5,
                  "endColumn": 46
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9387f6b725882ad2549906f798d91854a7a2db82e28ed0a11596cc1951f68d8f",
            "1": "85a616cf.f372746c.79e62dc9.139c59a8.1d07cee4.ba14daf2.a2237efa.f46ed94e.85a616cf.f372746c.187bf175.d67de54d.c8b7d5cc.73cfdf26.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/ios/extract_object_files_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 8,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/ios/extract_object_files_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 8,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/ios/extract_object_files_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 10,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/ios/extract_object_files_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/ios/extract_object_files_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/ios/extract_object_files_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/ios/extract_object_files_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 14,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/ios/extract_object_files_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 3,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/ios/extract_object_files_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "endLine": 33,
                            "startColumn": 61,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/ios/extract_object_files.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 26,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/ios/extract_object_files.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 25,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/ios/extract_object_files.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 17,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/ios/extract_object_files.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 32,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/ios/extract_object_files.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/ios/extract_object_files.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 502,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into os.remove, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14)",
              "[os.remove](15)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "configure.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 116,
                  "endLine": 116,
                  "startColumn": 7,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "44c5388f0ebc3038ba1adae8c22b6ffab785db281b995a15f349af8b044b821b",
            "1": "44363df4.c19e870b.94564cc4.19ff2b17.2074b403.ba14daf2.6db98602.4201a018.61137a49.c19e870b.94564cc4.9cd2dfe0.2074b403.216fb85d.f6dc7859.f395ae1b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1252,
                            "endLine": 1252,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1252,
                            "endLine": 1252,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1252,
                            "endLine": 1252,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 24,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 3,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1255,
                            "endLine": 1255,
                            "startColumn": 30,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1156,
                            "endLine": 1156,
                            "startColumn": 38,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1157,
                            "endLine": 1157,
                            "startColumn": 37,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1157,
                            "endLine": 1157,
                            "startColumn": 24,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1157,
                            "endLine": 1157,
                            "startColumn": 5,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1158,
                            "endLine": 1158,
                            "startColumn": 38,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 105,
                            "endLine": 105,
                            "startColumn": 27,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 24,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 17,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 7,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into os.remove, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15)",
              "[os.remove](16)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "configure.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 272,
                  "endLine": 272,
                  "startColumn": 11,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "027591635b8195706efec51fd25d3a91e5e745634c94e1d27e93666e33d4ab5c",
            "1": "2e8ddaeb.67df6de4.2683ade8.139c59a8.cc857d4e.ba14daf2.081ac3f4.a4830b9a.da9cf85a.0b46fc8b.187bf175.9cd2dfe0.2074b403.216fb85d.2701234b.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1252,
                            "endLine": 1252,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1252,
                            "endLine": 1252,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1252,
                            "endLine": 1252,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 24,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 3,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1255,
                            "endLine": 1255,
                            "startColumn": 30,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 266,
                            "endLine": 266,
                            "startColumn": 40,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 266,
                            "endLine": 266,
                            "startColumn": 27,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 266,
                            "endLine": 267,
                            "startColumn": 3,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 268,
                            "endLine": 268,
                            "startColumn": 20,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 269,
                            "endLine": 269,
                            "startColumn": 39,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 269,
                            "endLine": 269,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 269,
                            "endLine": 269,
                            "startColumn": 9,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 272,
                            "endLine": 272,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 272,
                            "endLine": 272,
                            "startColumn": 21,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 272,
                            "endLine": 272,
                            "startColumn": 11,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into os.remove, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14)",
              "[os.remove](15)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "configure.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1158,
                  "endLine": 1158,
                  "startColumn": 5,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "22c1878e2124feefc74482d5441030706aac662195327b8f39402731735edb11",
            "1": "61137a49.c19e870b.94564cc4.6ba51aae.2074b403.216fb85d.a9867171.742d9b21.61137a49.c19e870b.94564cc4.9cd2dfe0.2074b403.216fb85d.f6dc7859.f395ae1b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1252,
                            "endLine": 1252,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1252,
                            "endLine": 1252,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1252,
                            "endLine": 1252,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 24,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 3,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1255,
                            "endLine": 1255,
                            "startColumn": 30,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1156,
                            "endLine": 1156,
                            "startColumn": 38,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1157,
                            "endLine": 1157,
                            "startColumn": 37,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1157,
                            "endLine": 1157,
                            "startColumn": 24,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1157,
                            "endLine": 1157,
                            "startColumn": 5,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1158,
                            "endLine": 1158,
                            "startColumn": 38,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 105,
                            "endLine": 105,
                            "startColumn": 27,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 24,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 17,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 7,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into os.remove, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15)",
              "[os.remove](16)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "configure.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1162,
                  "endLine": 1162,
                  "startColumn": 5,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c73ba2e39eb3d133f656478b2174ea7cbbd6e9ed4a2b274ef47a51f359c204f7",
            "1": "61137a49.c19e870b.94564cc4.6ba51aae.fec61343.ba14daf2.ef9c0520.f395ae1b.61137a49.c19e870b.94564cc4.9cd2dfe0.2074b403.216fb85d.f6dc7859.f395ae1b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1252,
                            "endLine": 1252,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1252,
                            "endLine": 1252,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1252,
                            "endLine": 1252,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 24,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 3,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1255,
                            "endLine": 1255,
                            "startColumn": 30,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1156,
                            "endLine": 1156,
                            "startColumn": 38,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1157,
                            "endLine": 1157,
                            "startColumn": 37,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1161,
                            "endLine": 1161,
                            "startColumn": 33,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1161,
                            "endLine": 1161,
                            "startColumn": 20,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1161,
                            "endLine": 1161,
                            "startColumn": 5,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1162,
                            "endLine": 1162,
                            "startColumn": 29,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 105,
                            "endLine": 105,
                            "startColumn": 27,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 24,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 17,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 7,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into os.walk, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)",
              "[os.walk](12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/compatibility/tf_upgrade.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 239,
                  "endLine": 239,
                  "startColumn": 44,
                  "endColumn": 64
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a89a5bdeebb0d857bccb2342e9338da1bf28b205bfc81627efacfa177b563489",
            "1": "26f1400e.d3fa0bdc.79e62dc9.139c59a8.a6ff83ee.ba14daf2.081ac3f4.6aac30d8.2d06e3d6.b27a1336.508f86e9.9cd2dfe0.6a11a45d.a5d7f69f.89d8794c.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 228,
                            "endLine": 228,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 228,
                            "endLine": 228,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 228,
                            "endLine": 228,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 232,
                            "endLine": 232,
                            "startColumn": 21,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 234,
                            "endLine": 234,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 238,
                            "endLine": 238,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 238,
                            "endLine": 238,
                            "startColumn": 8,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 240,
                            "endLine": 240,
                            "startColumn": 9,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 984,
                            "endLine": 984,
                            "startColumn": 26,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1001,
                            "endLine": 1001,
                            "startColumn": 33,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1011,
                            "endLine": 1011,
                            "startColumn": 48,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1022,
                            "endLine": 1022,
                            "startColumn": 43,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1022,
                            "endLine": 1022,
                            "startColumn": 35,
                            "endColumn": 42
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into os.walk, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)",
              "[os.walk](12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "configure.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 269,
                  "endLine": 269,
                  "startColumn": 31,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9662932b0c849e95b464eafdab57cc55342ef800e5dc5f522e071cc6d940d63b",
            "1": "aa277ab2.6a0e600c.79e62dc9.139c59a8.1d07cee4.ba14daf2.62b2f8b6.6aac30d8.36c322df.0b46fc8b.187bf175.9cd2dfe0.2074b403.216fb85d.f6dc7859.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1252,
                            "endLine": 1252,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1252,
                            "endLine": 1252,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1252,
                            "endLine": 1252,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 24,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 3,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1255,
                            "endLine": 1255,
                            "startColumn": 30,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 266,
                            "endLine": 266,
                            "startColumn": 40,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 266,
                            "endLine": 266,
                            "startColumn": 27,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 266,
                            "endLine": 267,
                            "startColumn": 3,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 268,
                            "endLine": 268,
                            "startColumn": 20,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 269,
                            "endLine": 269,
                            "startColumn": 39,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 269,
                            "endLine": 269,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into os.walk, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[os.walk](13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 168,
                  "endLine": 168,
                  "startColumn": 44,
                  "endColumn": 64
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4db756117fc4ee1e3e6d8d2217c726b1bb0ab3863880839ccc4356190a3d8990",
            "1": "26f1400e.d3fa0bdc.79e62dc9.139c59a8.a6ff83ee.ba14daf2.7570adf8.6aac30d8.129db901.b27a1336.508f86e9.aa9a38b4.bb92c26a.a5d7f69f.f6dc7859.d2271497"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 130,
                            "endLine": 130,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 130,
                            "endLine": 130,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 130,
                            "endLine": 130,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 146,
                            "endLine": 146,
                            "startColumn": 21,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 8,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 169,
                            "endLine": 169,
                            "startColumn": 9,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 984,
                            "endLine": 984,
                            "startColumn": 26,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1001,
                            "endLine": 1001,
                            "startColumn": 33,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1011,
                            "endLine": 1011,
                            "startColumn": 48,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1022,
                            "endLine": 1022,
                            "startColumn": 43,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1022,
                            "endLine": 1022,
                            "startColumn": 35,
                            "endColumn": 42
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)",
              "[open](12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/tools/visualize.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 449,
                  "endLine": 449,
                  "startColumn": 12,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8ee5f5702632c6679aeaef76671979223652e1414191ed9da89231ab5f12d736",
            "1": "da9cf85a.364f4105.187bf175.cf481f5e.f3eda546.a478f07e.2701234b.d2a21262.d343a666.ce49a847.187bf175.6a649305.fb9fe9af.a478f07e.2701234b.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 549,
                            "endLine": 549,
                            "startColumn": 8,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 549,
                            "endLine": 549,
                            "startColumn": 8,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 536,
                            "endLine": 536,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 538,
                            "endLine": 538,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 538,
                            "endLine": 538,
                            "startColumn": 20,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 538,
                            "endLine": 538,
                            "startColumn": 5,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 543,
                            "endLine": 543,
                            "startColumn": 24,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 429,
                            "endLine": 429,
                            "startColumn": 17,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 446,
                            "endLine": 446,
                            "startColumn": 27,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 448,
                            "endLine": 448,
                            "startColumn": 8,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 448,
                            "endLine": 448,
                            "startColumn": 44,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 449,
                            "endLine": 449,
                            "startColumn": 17,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 449,
                            "endLine": 449,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[open](13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/tools/visualize.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 453,
                  "endLine": 453,
                  "startColumn": 24,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c9b5e583044af69e120a17f8063df28acb681130c280bd3f62b6f6034ef06e50",
            "1": "da9cf85a.364f4105.79e62dc9.cf481f5e.f3eda546.a478f07e.2701234b.d2a21262.d343a666.be004016.187bf175.6a649305.fb9fe9af.a478f07e.2701234b.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 549,
                            "endLine": 549,
                            "startColumn": 8,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 549,
                            "endLine": 549,
                            "startColumn": 8,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 536,
                            "endLine": 536,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 538,
                            "endLine": 538,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 538,
                            "endLine": 538,
                            "startColumn": 20,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 538,
                            "endLine": 538,
                            "startColumn": 5,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 543,
                            "endLine": 543,
                            "startColumn": 24,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 429,
                            "endLine": 429,
                            "startColumn": 17,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 446,
                            "endLine": 446,
                            "startColumn": 27,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 448,
                            "endLine": 448,
                            "startColumn": 8,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 448,
                            "endLine": 448,
                            "startColumn": 44,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 452,
                            "endLine": 452,
                            "startColumn": 10,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 453,
                            "endLine": 453,
                            "startColumn": 29,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/visualize.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 453,
                            "endLine": 453,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[open](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/compatibility/tf_upgrade.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 235,
                  "endLine": 235,
                  "startColumn": 44,
                  "endColumn": 64
                }
              }
            }
          ],
          "fingerprints": {
            "0": "eebb30379eaec34c799babf67816880aecd06a07e02fde06cf60990dff05d342",
            "1": "26f1400e.e3d9b656.79e62dc9.139c59a8.a6ff83ee.ba14daf2.081ac3f4.6aac30d8.2d06e3d6.9bf37872.1fec1f5d.a2296575.a5fb405f.a5d7f69f.89d8794c.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 228,
                            "endLine": 228,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 228,
                            "endLine": 228,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 228,
                            "endLine": 228,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 232,
                            "endLine": 232,
                            "startColumn": 21,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 234,
                            "endLine": 234,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 234,
                            "endLine": 234,
                            "startColumn": 6,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 236,
                            "endLine": 236,
                            "startColumn": 9,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 894,
                            "endLine": 894,
                            "startColumn": 20,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 909,
                            "endLine": 909,
                            "startColumn": 15,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ast_edits.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 909,
                            "endLine": 909,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16)",
              "[open](17)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/git/gen_git_source.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 52,
                  "endLine": 52,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dacb52922168cf2323cfb91e31eebb47663c2a9e3343ea52d6510e0ac1a4120a",
            "1": "16691f08.b4c4694e.79e62dc9.72ba0eff.145e7f2f.ba14daf2.081ac3f4.0990edd8.0e79e88c.f4a1ab20.ca263840.9cd2dfe0.63f925ac.0a892d8d.f6dc7859.e6cc82cd"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 1,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 330,
                            "endLine": 330,
                            "startColumn": 4,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 330,
                            "endLine": 330,
                            "startColumn": 4,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 333,
                            "endLine": 333,
                            "startColumn": 13,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 15,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 27,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 14,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 3,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 24,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 34,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 21,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 5,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 104,
                            "startColumn": 39,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 22,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 15,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[open](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/git/gen_git_source.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 256,
                  "endLine": 256,
                  "startColumn": 20,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "64bc6b39f742e3aa91b9d0ca4318c7cb8c731f22bd619e7227bca55ff7873e15",
            "1": "16691f08.e773a705.79e62dc9.139c59a8.f3eda546.73cfdf26.081ac3f4.6aac30d8.2dcd93ba.be004016.e0ef3301.9cd2dfe0.f3eda546.73cfdf26.f6dc7859.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 1,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 330,
                            "endLine": 330,
                            "startColumn": 4,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 334,
                            "endLine": 334,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 334,
                            "endLine": 334,
                            "startColumn": 6,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 255,
                            "endLine": 255,
                            "startColumn": 3,
                            "endColumn": 7
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 256,
                            "endLine": 256,
                            "startColumn": 25,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 256,
                            "endLine": 256,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13)",
              "[open](14)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 669,
                  "endLine": 669,
                  "startColumn": 12,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3f00bb702f24df8360c6714e66d7657198a731b26b358e577e5410ca400fd676",
            "1": "6e325cdb.79ca9a0d.187bf175.c28d3510.f3eda546.a5d7f69f.081ac3f4.4201a018.a6b41d6e.1d483982.f5e5e26e.e8f6326c.f3eda546.73cfdf26.98332e65.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 817,
                            "endLine": 817,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 817,
                            "endLine": 817,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 817,
                            "endLine": 817,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 819,
                            "endLine": 819,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 825,
                            "endLine": 825,
                            "startColumn": 15,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 828,
                            "endLine": 828,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 831,
                            "endLine": 831,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 834,
                            "endLine": 834,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 844,
                            "endLine": 844,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 846,
                            "endLine": 846,
                            "startColumn": 30,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 846,
                            "endLine": 846,
                            "startColumn": 30,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 591,
                            "endLine": 591,
                            "startColumn": 30,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 667,
                            "endLine": 667,
                            "startColumn": 34,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 669,
                            "endLine": 669,
                            "startColumn": 17,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 669,
                            "endLine": 669,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26)",
              "[open](27)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 675,
                  "endLine": 675,
                  "startColumn": 12,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0a8d7012f406222212f891645dbad375b248ecf424594c0f9a56ce36da64cbf3",
            "1": "e6c68c6b.1777c091.187bf175.5074e214.f3eda546.ba14daf2.d5d02941.41bb6989.d25b000c.1d483982.4a2d6f48.a30699d5.f3eda546.ce3b7999.df19ec3e.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 817,
                            "endLine": 817,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 817,
                            "endLine": 817,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 817,
                            "endLine": 817,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 819,
                            "endLine": 819,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 825,
                            "endLine": 825,
                            "startColumn": 15,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 828,
                            "endLine": 828,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 831,
                            "endLine": 831,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 834,
                            "endLine": 834,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 844,
                            "endLine": 844,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 846,
                            "endLine": 846,
                            "startColumn": 30,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 846,
                            "endLine": 846,
                            "startColumn": 55,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 847,
                            "endLine": 847,
                            "startColumn": 30,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 847,
                            "endLine": 847,
                            "startColumn": 51,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 847,
                            "endLine": 847,
                            "startColumn": 65,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 848,
                            "endLine": 848,
                            "startColumn": 30,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 848,
                            "endLine": 848,
                            "startColumn": 30,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 596,
                            "endLine": 596,
                            "startColumn": 30,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 642,
                            "endLine": 642,
                            "startColumn": 38,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 449,
                            "endLine": 449,
                            "startColumn": 23,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 651,
                            "endLine": 651,
                            "startColumn": 23,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 651,
                            "endLine": 651,
                            "startColumn": 19,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 651,
                            "endLine": 651,
                            "startColumn": 7,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 649,
                            "endLine": 652,
                            "startColumn": 31,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 649,
                            "endLine": 652,
                            "startColumn": 3,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 673,
                            "endLine": 673,
                            "startColumn": 20,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 675,
                            "endLine": 675,
                            "startColumn": 17,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 675,
                            "endLine": 675,
                            "startColumn": 17,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 675,
                            "endLine": 675,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[open](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 822,
                  "endLine": 822,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7c10490dfbedf7811208dcd2eca7fffbf7be958e8f0cd5b964eb16cf36771e3e",
            "1": "6d3220cc.080e9721.187bf175.139c59a8.f3eda546.73cfdf26.081ac3f4.ebed174f.a6b41d6e.b88e75ef.187bf175.f6463326.f3eda546.73cfdf26.98332e65.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 817,
                            "endLine": 817,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 817,
                            "endLine": 817,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 817,
                            "endLine": 817,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 819,
                            "endLine": 819,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 819,
                            "endLine": 819,
                            "startColumn": 10,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 822,
                            "endLine": 822,
                            "startColumn": 15,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 822,
                            "endLine": 822,
                            "startColumn": 15,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 822,
                            "endLine": 822,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[open](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "startColumn": 8,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e0f344b67bbc1fbf3366b781acb526061437845e4903a7ab794cc33e5b97a6ba",
            "1": "2e8ddaeb.daa42df7.187bf175.1e2c0147.f3eda546.ba14daf2.081ac3f4.a4830b9a.2e8ddaeb.201dca5d.187bf175.b35be3ab.c8b7d5cc.48e1de78.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 18,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 18,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 18,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 1,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 39,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 26,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 28,
                            "startColumn": 1,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 23,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 30,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 24,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 13,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[open](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 65,
                  "endLine": 65,
                  "startColumn": 8,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e9842b6d9e548a45217cbafbf6288665b41343fa47b5f36e0c3229f30eeba2d6",
            "1": "3c5d1c89.2fca03ac.187bf175.d3e43d12.f3eda546.ba14daf2.081ac3f4.4201a018.4e8c8b1f.2fca03ac.66c40026.d3e43d12.c8b7d5cc.73cfdf26.f6dc7859.1027c68d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 39,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 39,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 39,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 10,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 10,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 223,
                            "endLine": 223,
                            "startColumn": 3,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 224,
                            "endLine": 224,
                            "startColumn": 48,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 224,
                            "endLine": 224,
                            "startColumn": 48,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 34,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 65,
                            "endLine": 65,
                            "startColumn": 13,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 65,
                            "endLine": 65,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[open](13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 72,
                  "endLine": 72,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a9dc529cf02719e42e37d9a04fcab992df0f306755a2e95d8652ca927d544a92",
            "1": "3c5d1c89.09b47a5b.187bf175.a1f9e143.7f62eb7c.ba14daf2.7e8da20f.4201a018.4e8c8b1f.2fca03ac.187bf175.d3e43d12.c8b7d5cc.31a96f2a.f6dc7859.3acd807d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 39,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 39,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 39,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 10,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 10,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 223,
                            "endLine": 223,
                            "startColumn": 3,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 224,
                            "endLine": 224,
                            "startColumn": 48,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 225,
                            "endLine": 225,
                            "startColumn": 48,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 225,
                            "endLine": 225,
                            "startColumn": 48,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 34,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 6,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 15,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4)",
              "[open](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/benchmark/parse_onednn_benchmarks.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 90,
                  "endLine": 90,
                  "startColumn": 8,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e20848976dc95bac8a86dde3d2e4ada7ee896826eb0153fbe1c74fc6d5628e2a",
            "1": "2e8ddaeb.09b47a5b.187bf175.139c59a8.f3eda546.ba14daf2.a2237efa.f46ed94e.2e8ddaeb.f8545116.187bf175.5f8952c4.c8b7d5cc.31a96f2a.a2237efa.3acd807d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/benchmark/parse_onednn_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 14,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/benchmark/parse_onednn_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 14,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/benchmark/parse_onednn_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 14,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/benchmark/parse_onednn_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 3,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/benchmark/parse_onednn_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 13,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/benchmark/parse_onednn_benchmarks.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 502,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41)",
              "[open](42)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/python/tflite_convert.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 680,
                  "endLine": 680,
                  "startColumn": 11,
                  "endColumn": 43
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8300fefac3246eb8c42fa881f4f51dbe4c91f9eae1a842963c53c7ec1a0c643a",
            "1": "9a8719cb.d27be68f.c166e7dd.139c59a8.1d07cee4.ba14daf2.58cc0f57.cffa3410.4e8c8b1f.d27be68f.3fbb86fa.f6463326.c8b7d5cc.323873e0.d1ae8237.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 650,
                            "endLine": 650,
                            "startColumn": 57,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 650,
                            "endLine": 650,
                            "startColumn": 57,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 650,
                            "endLine": 650,
                            "startColumn": 57,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 650,
                            "endLine": 650,
                            "startColumn": 52,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 650,
                            "endLine": 650,
                            "startColumn": 28,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 650,
                            "endLine": 650,
                            "startColumn": 3,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 654,
                            "endLine": 654,
                            "startColumn": 24,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 662,
                            "endLine": 662,
                            "startColumn": 24,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 366,
                            "endLine": 366,
                            "startColumn": 22,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 676,
                            "endLine": 676,
                            "startColumn": 26,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 152,
                            "endLine": 152,
                            "startColumn": 24,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 162,
                            "endLine": 162,
                            "startColumn": 6,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 166,
                            "endLine": 166,
                            "startColumn": 37,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 104,
                            "startColumn": 27,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 167,
                            "endLine": 167,
                            "startColumn": 6,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 170,
                            "endLine": 170,
                            "startColumn": 6,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 6,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 177,
                            "endLine": 177,
                            "startColumn": 6,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 177,
                            "endLine": 177,
                            "startColumn": 28,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 198,
                            "endLine": 198,
                            "startColumn": 7,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 198,
                            "endLine": 198,
                            "startColumn": 50,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 203,
                            "endLine": 203,
                            "startColumn": 6,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 205,
                            "endLine": 205,
                            "startColumn": 6,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 207,
                            "endLine": 207,
                            "startColumn": 6,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 211,
                            "endLine": 211,
                            "startColumn": 6,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 214,
                            "endLine": 214,
                            "startColumn": 6,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 223,
                            "endLine": 223,
                            "startColumn": 6,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 232,
                            "endLine": 232,
                            "startColumn": 6,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 239,
                            "endLine": 239,
                            "startColumn": 6,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 245,
                            "endLine": 245,
                            "startColumn": 6,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 247,
                            "endLine": 247,
                            "startColumn": 6,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 249,
                            "endLine": 249,
                            "startColumn": 6,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 249,
                            "endLine": 249,
                            "startColumn": 6,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 678,
                            "endLine": 678,
                            "startColumn": 10,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/python/tflite_convert.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 680,
                            "endLine": 680,
                            "startColumn": 44,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 204,
                            "endLine": 204,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 227,
                            "endLine": 227,
                            "startColumn": 39,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 228,
                            "endLine": 228,
                            "startColumn": 38,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 228,
                            "endLine": 228,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 228,
                            "endLine": 228,
                            "startColumn": 3,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 234,
                            "endLine": 234,
                            "startColumn": 25,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 253,
                            "endLine": 253,
                            "startColumn": 13,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/toco/logging/gen_html.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 253,
                            "endLine": 253,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 502,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[open](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 174,
                  "endLine": 174,
                  "startColumn": 8,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bd67be769b1b565ff1f5689fb4f0f0a4d198e2d360d90bb01c54bdf25739558e",
            "1": "16691f08.09b47a5b.187bf175.5d108eaa.f3eda546.d2dcb616.f8bddf01.0990edd8.4e8c8b1f.9c58cb7a.187bf175.e7802535.c8b7d5cc.73cfdf26.f8bddf01.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 43,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 38,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 14,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 3,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 174,
                            "endLine": 174,
                            "startColumn": 13,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 174,
                            "endLine": 174,
                            "startColumn": 13,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/experimental/acceleration/compatibility/convert_binary_to_cc_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 174,
                            "endLine": 174,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)",
              "[open](12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/examples/python/label_image.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 26,
                  "endLine": 26,
                  "startColumn": 8,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5d5f7b7feaf730dd9fe691d3331d796f72461f0823826646a3a7bba0373357b3",
            "1": "2e8ddaeb.e3d9b656.187bf175.139c59a8.145e7f2f.ba14daf2.2eae0c7e.a4830b9a.9d86e1a1.44db85d1.cc8ca7fc.f6463326.6be384b6.31a96f2a.f6dc7859.3acd807d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/examples/python/label_image.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 65,
                            "endLine": 65,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/examples/python/label_image.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 65,
                            "endLine": 65,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/examples/python/label_image.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 65,
                            "endLine": 65,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/examples/python/label_image.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/examples/python/label_image.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/examples/python/label_image.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/examples/python/label_image.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/examples/python/label_image.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/examples/python/label_image.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/examples/python/label_image.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 24,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/examples/python/label_image.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 17,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/examples/python/label_image.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 13,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/examples/python/label_image.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 502,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[open](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/examples/label_image/label_image.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 26,
                  "endLine": 26,
                  "startColumn": 8,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7e330200dcb5f304e3e02a56f6268b7e79d8393b83b813bdaf5f5f67c9fd5b09",
            "1": "2e8ddaeb.f83fcb93.187bf175.1e2c0147.f3eda546.ba14daf2.081ac3f4.a4830b9a.16fe57f6.9d8b2dfb.187bf175.9cd2dfe0.8de7e567.4aa7d169.f6dc7859.a4830b9a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/examples/label_image/label_image.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/examples/label_image/label_image.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/examples/label_image/label_image.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/examples/label_image/label_image.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/examples/label_image/label_image.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 6,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/examples/label_image/label_image.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/examples/label_image/label_image.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 5,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/examples/label_image/label_image.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 109,
                            "endLine": 109,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/examples/label_image/label_image.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/examples/label_image/label_image.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 13,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/examples/label_image/label_image.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 502,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into shutil.rmtree, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[shutil.rmtree](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/git/gen_git_source.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 76,
                  "endLine": 76,
                  "startColumn": 9,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0130bcde0c691fecddc963ccc0e5af5222b0313d7e5bffe485f33aa7c0fe467a",
            "1": "d5c0229d.2a77314f.2683ade8.139c59a8.1d07cee4.ba14daf2.682a1833.6eb46ac5.d5c0229d.4faa5b1b.e0ef3301.9cd2dfe0.a5fb405f.ae429a6c.f6dc7859.395368c9"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 1,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 330,
                            "endLine": 330,
                            "startColumn": 4,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 331,
                            "endLine": 331,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 331,
                            "endLine": 331,
                            "startColumn": 6,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 333,
                            "endLine": 333,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 30,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 21,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 74,
                            "endLine": 74,
                            "startColumn": 22,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 23,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 9,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into shutil.copy2, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[shutil.copy2](13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/git/gen_git_source.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 128,
                  "endLine": 128,
                  "startColumn": 11,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fa513225e8a2fbdebbc3e44f7730041a439ac6da51b25845ca110e7df0f5dac8",
            "1": "59b2cac1.d3fa0bdc.bbbb01ca.139c59a8.cc857d4e.a322722c.081ac3f4.6eb46ac5.d5c0229d.d3fa0bdc.e0ef3301.9cd2dfe0.e57c3047.a322722c.f6dc7859.e6cc82cd"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 1,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 330,
                            "endLine": 330,
                            "startColumn": 4,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 331,
                            "endLine": 331,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 331,
                            "endLine": 331,
                            "startColumn": 6,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 333,
                            "endLine": 333,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 30,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 21,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 15,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 24,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 42,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 29,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 11,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into shutil.copy2, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14)",
              "[shutil.copy2](15)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/git/gen_git_source.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 130,
                  "endLine": 130,
                  "startColumn": 9,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c0ac41f130ac2eefbaff284ea9df7f5d0b0642ec958523e3121ec4626e29fa63",
            "1": "59b2cac1.67df6de4.2683ade8.139c59a8.cc857d4e.a322722c.081ac3f4.6eb46ac5.d5c0229d.8c82a947.e0ef3301.9cd2dfe0.e57c3047.a322722c.f6dc7859.e6cc82cd"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 1,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 330,
                            "endLine": 330,
                            "startColumn": 4,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 331,
                            "endLine": 331,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 331,
                            "endLine": 331,
                            "startColumn": 6,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 333,
                            "endLine": 333,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 30,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 21,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 15,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 24,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 42,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 126,
                            "endLine": 126,
                            "startColumn": 40,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 130,
                            "endLine": 130,
                            "startColumn": 40,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 130,
                            "endLine": 130,
                            "startColumn": 27,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 130,
                            "endLine": 130,
                            "startColumn": 9,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into shutil.copy2, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19)",
              "[shutil.copy2](20)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 177,
                  "endLine": 177,
                  "startColumn": 5,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f0fa6b57dedf2e5bf925c14df8378fb4257b849a80b19a45abdb04467de5974b",
            "1": "0d68fdd3.1c6650e9.ec35cf50.139c59a8.0408afa2.a322722c.2f76c3cb.6eb46ac5.4e8c8b1f.2fca03ac.a07e0ee1.d3e43d12.c8b7d5cc.a322722c.f6dc7859.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 39,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 39,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 39,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 10,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 10,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 223,
                            "endLine": 223,
                            "startColumn": 3,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 224,
                            "endLine": 224,
                            "startColumn": 48,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 225,
                            "endLine": 225,
                            "startColumn": 48,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 226,
                            "endLine": 226,
                            "startColumn": 48,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 227,
                            "endLine": 227,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 227,
                            "endLine": 227,
                            "startColumn": 49,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 227,
                            "endLine": 227,
                            "startColumn": 49,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 141,
                            "endLine": 141,
                            "startColumn": 61,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 156,
                            "endLine": 156,
                            "startColumn": 25,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 158,
                            "endLine": 158,
                            "startColumn": 39,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 158,
                            "endLine": 158,
                            "startColumn": 26,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 158,
                            "endLine": 158,
                            "startColumn": 3,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 159,
                            "endLine": 159,
                            "startColumn": 25,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 179,
                            "endLine": 179,
                            "startColumn": 9,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/lite/tools/evaluation/tasks/coco_object_detection/preprocess_coco_minival.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 177,
                            "endLine": 177,
                            "startColumn": 5,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into json.dump, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13)",
              "[json.dump](14)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/git/gen_git_source.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 132,
                  "endLine": 132,
                  "startColumn": 3,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4d8d39f48ba4868c0bd11fc2f08b7c2b86e7a97377bf3764b65db9812b14f8bd",
            "1": "2d06e3d6.67df6de4.314c34e7.139c59a8.175c247b.111d979a.081ac3f4.a9c71abd.d5c0229d.e3d9b656.e0ef3301.9cd2dfe0.e57c3047.111d979a.f6dc7859.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 1,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 330,
                            "endLine": 330,
                            "startColumn": 4,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 331,
                            "endLine": 331,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 331,
                            "endLine": 331,
                            "startColumn": 6,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 333,
                            "endLine": 333,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 30,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 21,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 15,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 24,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 37,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 24,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/git/gen_git_source.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 3,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into json.dump, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20)",
              "[json.dump](21)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 43,
                  "endLine": 43,
                  "startColumn": 7,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "720f8f1fc95e906a0ac01423c1f7d4ac1920cb2cc8b09c98e777079637724c2b",
            "1": "da9cf85a.84270e81.79e62dc9.139c59a8.5f53c33c.ba14daf2.2701234b.6aac30d8.da9cf85a.84270e81.ec35cf50.a2296575.bb92c26a.5729499d.2701234b.d2271497"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 130,
                            "endLine": 130,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 130,
                            "endLine": 130,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 130,
                            "endLine": 130,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 146,
                            "endLine": 146,
                            "startColumn": 21,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 6,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 157,
                            "endLine": 157,
                            "startColumn": 9,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 35,
                            "endLine": 35,
                            "startColumn": 18,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 6,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 8,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/tf_upgrade_v2_main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 26,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ipynb.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "endLine": 33,
                            "startColumn": 18,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ipynb.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 34,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ipynb.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 99,
                            "endLine": 99,
                            "startColumn": 15,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ipynb.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 60,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ipynb.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 9,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ipynb.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 5,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ipynb.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 22,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ipynb.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 8,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ipynb.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 31,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/compatibility/ipynb.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 7,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8)",
              "[open](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/keras/backend.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 6234,
                  "endLine": 6234,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "33fed9647430e694284f345bebb7b1df914e012ab7cb16b17f77660c2cec6ff0",
            "1": "129db901.057182f1.187bf175.378fd781.29e43099.ba14daf2.d898de19.742d9b21.b6b970a5.be004016.187bf175.378fd781.29e43099.71f327fb.d6ba28d7.cadd00d0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/keras/backend.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6227,
                            "endLine": 6227,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/keras/backend.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6227,
                            "endLine": 6227,
                            "startColumn": 16,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/keras/backend.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6227,
                            "endLine": 6227,
                            "startColumn": 3,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/keras/backend.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6231,
                            "endLine": 6231,
                            "startColumn": 48,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/keras/backend.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6231,
                            "endLine": 6231,
                            "startColumn": 35,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/keras/backend.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6231,
                            "endLine": 6231,
                            "startColumn": 16,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/keras/backend.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6231,
                            "endLine": 6231,
                            "startColumn": 1,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/keras/backend.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6232,
                            "endLine": 6232,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/keras/backend.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6234,
                            "endLine": 6234,
                            "startColumn": 15,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/keras/backend.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6234,
                            "endLine": 6234,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[open](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/keras/backend.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 6265,
                  "endLine": 6265,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "013f02911ba08640917636a3d4d696c8184f6311dd0c6edd81e7a1e4d26614e7",
            "1": "2e8ddaeb.83d20387.187bf175.139c59a8.f3eda546.ba14daf2.081ac3f4.a4830b9a.b6b970a5.89553cb4.187bf175.378fd781.29e43099.48e1de78.87edbecf.a4830b9a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/keras/backend.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6227,
                            "endLine": 6227,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/keras/backend.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6227,
                            "endLine": 6227,
                            "startColumn": 16,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/keras/backend.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6227,
                            "endLine": 6227,
                            "startColumn": 3,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/keras/backend.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6231,
                            "endLine": 6231,
                            "startColumn": 48,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/keras/backend.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6231,
                            "endLine": 6231,
                            "startColumn": 35,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/keras/backend.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6231,
                            "endLine": 6231,
                            "startColumn": 16,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/keras/backend.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6231,
                            "endLine": 6231,
                            "startColumn": 1,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/keras/backend.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6232,
                            "endLine": 6232,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/keras/backend.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6257,
                            "endLine": 6257,
                            "startColumn": 23,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/keras/backend.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6265,
                            "endLine": 6265,
                            "startColumn": 15,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/keras/backend.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6265,
                            "endLine": 6265,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19)",
              "[open](20)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/data/experimental/benchmarks/csv_dataset_benchmark.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 45,
                  "endLine": 45,
                  "startColumn": 12,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "43b9092b5bfc69ae6e75e8b2f66d8015c7385c84c44a02482b263c42e719ac99",
            "1": "2e8ddaeb.09b47a5b.187bf175.139c59a8.f3eda546.ba14daf2.081ac3f4.a4830b9a.29f70f0d.5a469365.5fe980be.7dfbd28d.4608c58f.ba14daf2.68c92446.ce0bf0ae"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 7,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 10,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/data/experimental/benchmarks/csv_dataset_benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 43,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/data/experimental/benchmarks/csv_dataset_benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 39,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/data/experimental/benchmarks/csv_dataset_benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 22,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/data/experimental/benchmarks/csv_dataset_benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 5,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/data/experimental/benchmarks/csv_dataset_benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 25,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/data/experimental/benchmarks/csv_dataset_benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/data/experimental/benchmarks/csv_dataset_benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 7,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/data/experimental/benchmarks/csv_dataset_benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 17,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/data/experimental/benchmarks/csv_dataset_benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into zipfile.ZipFile, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20)",
              "[zipfile.ZipFile](21)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/ci_build/copy_binary.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 78,
                  "endLine": 78,
                  "startColumn": 12,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "05bc011698104e00ae6bc553eb659a0c33514261cc02078fc0423df7b422b31e",
            "1": "b2db508b.a18bdf23.79e62dc9.8326ed20.a58c77e1.ba14daf2.0467d62a.f355b44c.b2db508b.a18bdf23.30b8893c.a1f5782e.4608c58f.1e397d4f.f6dc7859.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/copy_binary.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 114,
                            "endLine": 114,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/copy_binary.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 114,
                            "endLine": 114,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/copy_binary.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 114,
                            "endLine": 114,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/copy_binary.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 35,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/copy_binary.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 3,
                            "endColumn": 7
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/copy_binary.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 118,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/copy_binary.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 46,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/copy_binary.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 51,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/copy_binary.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 51,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/copy_binary.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 44,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/copy_binary.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 13,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/copy_binary.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 3,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/copy_binary.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 130,
                            "endLine": 130,
                            "startColumn": 38,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/copy_binary.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 40,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/copy_binary.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 66,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/copy_binary.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 60,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/copy_binary.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 41,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/copy_binary.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 16,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/copy_binary.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 3,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/copy_binary.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 40,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/copy_binary.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 28,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/copy_binary.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 12,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 502,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CodeInjection",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into exec, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14)",
              "[exec](15)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 56,
                  "endLine": 56,
                  "startColumn": 5,
                  "endColumn": 9
                }
              }
            }
          ],
          "fingerprints": {
            "0": "532a8101612ad79e124412924422895b144525de2373ab6aa930f8bff265474c",
            "1": "2e8ddaeb.a38c8fa5.cb4088d3.139c59a8.cc857d4e.ba14daf2.081ac3f4.a4830b9a.2e8ddaeb.201dca5d.187bf175.b35be3ab.c8b7d5cc.48e1de78.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 18,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 18,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 18,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 1,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 39,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 26,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 28,
                            "startColumn": 1,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 23,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 30,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 24,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 13,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 31,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 10,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/tools/ci_build/builds/check_system_libs.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 5,
                            "endColumn": 9
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CodeInjection",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into exec, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4)",
              "[exec](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/distribute/multi_process_lib.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 151,
                  "endLine": 151,
                  "startColumn": 3,
                  "endColumn": 7
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0804a1dade1ef40c6485fb2208d5bd2bc2fd6c106864a950cb6514abe12da7b2",
            "1": "a6b41d6e.fbfcdaf9.79e62dc9.139c59a8.e8f266eb.ba14daf2.a2237efa.f46ed94e.a6b41d6e.fbfcdaf9.d4fa07ba.139c59a8.b9abe432.ba14daf2.e75968cd.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/distribute/multi_process_lib.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 142,
                            "endLine": 142,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/distribute/multi_process_lib.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 142,
                            "endLine": 142,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/distribute/multi_process_lib.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 142,
                            "endLine": 142,
                            "startColumn": 9,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/distribute/multi_process_lib.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 142,
                            "endLine": 142,
                            "startColumn": 3,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/distribute/multi_process_lib.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 151,
                            "endLine": 151,
                            "startColumn": 8,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/distribute/multi_process_lib.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 151,
                            "endLine": 151,
                            "startColumn": 3,
                            "endColumn": 7
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CodeInjection",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into importlib.import_module, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)",
              "[importlib.import_module](12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 830,
                  "endLine": 830,
                  "startColumn": 5,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9a9c36af9d6758ddd4408170cacd07008161a5a04c800db63218b862a6ac6dac",
            "1": "4ebfc95f.1c6650e9.f5e5e26e.139c59a8.a3d9eb6e.ba14daf2.a96016dc.51b382b5.f942f700.b88e75ef.f5e5e26e.e8f6326c.a5fb405f.73cfdf26.98332e65.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 817,
                            "endLine": 817,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 817,
                            "endLine": 817,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 817,
                            "endLine": 817,
                            "startColumn": 3,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 819,
                            "endLine": 819,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 825,
                            "endLine": 825,
                            "startColumn": 15,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 828,
                            "endLine": 828,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 828,
                            "endLine": 828,
                            "startColumn": 14,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 828,
                            "endLine": 828,
                            "startColumn": 14,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 828,
                            "endLine": 828,
                            "startColumn": 3,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 829,
                            "endLine": 829,
                            "startColumn": 18,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 829,
                            "endLine": 829,
                            "startColumn": 7,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 830,
                            "endLine": 830,
                            "startColumn": 29,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tools/api/generator/create_python_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 830,
                            "endLine": 830,
                            "startColumn": 5,
                            "endColumn": 28
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/reDOS",
          "ruleIndex": 15,
          "level": "warning",
          "message": {
            "text": "Unsanitized user input from an environment variable flows into re.compile, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "markdown": "Unsanitized user input from an environment variable {0} into {1}, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54)",
              "[re.compile](55)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 298,
                  "endLine": 298,
                  "startColumn": 18,
                  "endColumn": 46
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a46dab2fd47215b805a5a0ec0c4b9f49981a5b6dbcdfe477863aa5c4ac60197d",
            "1": "129db901.9649860f.451791fc.139c59a8.1d07cee4.ba14daf2.d41b3b83.6aac30d8.129db901.99c0327a.451791fc.9085b4d9.456e00cd.73cfdf26.d41b3b83.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 140,
                            "endLine": 140,
                            "startColumn": 19,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 140,
                            "endLine": 140,
                            "startColumn": 7,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 293,
                            "endLine": 293,
                            "startColumn": 27,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 436,
                            "endLine": 436,
                            "startColumn": 27,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 198,
                            "endLine": 198,
                            "startColumn": 21,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 436,
                            "endLine": 436,
                            "startColumn": 27,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 436,
                            "endLine": 436,
                            "startColumn": 5,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 437,
                            "endLine": 437,
                            "startColumn": 12,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 442,
                            "endLine": 442,
                            "startColumn": 11,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 262,
                            "endLine": 262,
                            "startColumn": 33,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 298,
                            "endLine": 298,
                            "startColumn": 47,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 298,
                            "endLine": 298,
                            "startColumn": 18,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 441,
                            "endLine": 441,
                            "startColumn": 26,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 441,
                            "endLine": 441,
                            "startColumn": 7,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 443,
                            "endLine": 443,
                            "startColumn": 14,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 445,
                            "endLine": 445,
                            "startColumn": 19,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 452,
                            "endLine": 452,
                            "startColumn": 13,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 275,
                            "endLine": 275,
                            "startColumn": 13,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 275,
                            "endLine": 275,
                            "startColumn": 5,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 276,
                            "endLine": 276,
                            "startColumn": 8,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 277,
                            "endLine": 277,
                            "startColumn": 14,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 298,
                            "endLine": 298,
                            "startColumn": 7,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 299,
                            "endLine": 299,
                            "startColumn": 14,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 301,
                            "endLine": 301,
                            "startColumn": 19,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 307,
                            "endLine": 307,
                            "startColumn": 13,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 278,
                            "endLine": 278,
                            "startColumn": 13,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 278,
                            "endLine": 278,
                            "startColumn": 5,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 279,
                            "endLine": 279,
                            "startColumn": 8,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 280,
                            "endLine": 280,
                            "startColumn": 14,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 447,
                            "endLine": 447,
                            "startColumn": 22,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 447,
                            "endLine": 447,
                            "startColumn": 22,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 447,
                            "endLine": 447,
                            "startColumn": 9,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 451,
                            "endLine": 451,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 451,
                            "endLine": 451,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 422,
                            "endLine": 422,
                            "startColumn": 7,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 192,
                            "endLine": 192,
                            "startColumn": 31,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 472,
                            "endLine": 472,
                            "startColumn": 25,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 204,
                            "endLine": 204,
                            "startColumn": 23,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 216,
                            "endLine": 216,
                            "startColumn": 24,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 216,
                            "endLine": 216,
                            "startColumn": 12,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 217,
                            "endLine": 217,
                            "startColumn": 18,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 223,
                            "endLine": 223,
                            "startColumn": 12,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 244,
                            "endLine": 244,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 184,
                            "endLine": 184,
                            "startColumn": 8,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 438,
                            "endLine": 438,
                            "startColumn": 21,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 45,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 167,
                            "endLine": 167,
                            "startColumn": 8,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 46,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 444,
                            "endLine": 444,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 47,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 460,
                            "endLine": 460,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 48,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 461,
                            "endLine": 461,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 49,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 463,
                            "endLine": 463,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 50,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 463,
                            "endLine": 463,
                            "startColumn": 22,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 51,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 463,
                            "endLine": 463,
                            "startColumn": 5,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 52,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 464,
                            "endLine": 464,
                            "startColumn": 14,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 53,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 464,
                            "endLine": 464,
                            "startColumn": 9,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 54,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 465,
                            "endLine": 465,
                            "startColumn": 22,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 55,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 465,
                            "endLine": 465,
                            "startColumn": 11,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/reDOS",
          "ruleIndex": 15,
          "level": "warning",
          "message": {
            "text": "Unsanitized user input from an environment variable flows into re.compile, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "markdown": "Unsanitized user input from an environment variable {0} into {1}, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54)",
              "[re.compile](55)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 441,
                  "endLine": 441,
                  "startColumn": 26,
                  "endColumn": 54
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0eb33c9908a3f896e4b91c7a9aaba0843212fccb3680195e588576e144f03fd2",
            "1": "129db901.9649860f.451791fc.139c59a8.1d07cee4.ba14daf2.d41b3b83.6aac30d8.129db901.99c0327a.451791fc.9085b4d9.456e00cd.73cfdf26.d41b3b83.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 140,
                            "endLine": 140,
                            "startColumn": 19,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 140,
                            "endLine": 140,
                            "startColumn": 7,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 293,
                            "endLine": 293,
                            "startColumn": 27,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 436,
                            "endLine": 436,
                            "startColumn": 27,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 198,
                            "endLine": 198,
                            "startColumn": 21,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 293,
                            "endLine": 293,
                            "startColumn": 27,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 293,
                            "endLine": 293,
                            "startColumn": 5,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 294,
                            "endLine": 294,
                            "startColumn": 12,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 298,
                            "endLine": 298,
                            "startColumn": 47,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 262,
                            "endLine": 262,
                            "startColumn": 33,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 442,
                            "endLine": 442,
                            "startColumn": 11,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 298,
                            "endLine": 298,
                            "startColumn": 18,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 441,
                            "endLine": 441,
                            "startColumn": 26,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 441,
                            "endLine": 441,
                            "startColumn": 7,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 443,
                            "endLine": 443,
                            "startColumn": 14,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 445,
                            "endLine": 445,
                            "startColumn": 19,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 452,
                            "endLine": 452,
                            "startColumn": 13,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 275,
                            "endLine": 275,
                            "startColumn": 13,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 275,
                            "endLine": 275,
                            "startColumn": 5,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 276,
                            "endLine": 276,
                            "startColumn": 8,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 277,
                            "endLine": 277,
                            "startColumn": 14,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 298,
                            "endLine": 298,
                            "startColumn": 7,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 299,
                            "endLine": 299,
                            "startColumn": 14,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 301,
                            "endLine": 301,
                            "startColumn": 19,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 307,
                            "endLine": 307,
                            "startColumn": 13,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 278,
                            "endLine": 278,
                            "startColumn": 13,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 278,
                            "endLine": 278,
                            "startColumn": 5,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 279,
                            "endLine": 279,
                            "startColumn": 8,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 280,
                            "endLine": 280,
                            "startColumn": 14,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 447,
                            "endLine": 447,
                            "startColumn": 22,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 447,
                            "endLine": 447,
                            "startColumn": 22,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 447,
                            "endLine": 447,
                            "startColumn": 9,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 451,
                            "endLine": 451,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 451,
                            "endLine": 451,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 422,
                            "endLine": 422,
                            "startColumn": 7,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 192,
                            "endLine": 192,
                            "startColumn": 31,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 472,
                            "endLine": 472,
                            "startColumn": 25,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 204,
                            "endLine": 204,
                            "startColumn": 23,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 216,
                            "endLine": 216,
                            "startColumn": 24,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 216,
                            "endLine": 216,
                            "startColumn": 12,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 217,
                            "endLine": 217,
                            "startColumn": 18,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 223,
                            "endLine": 223,
                            "startColumn": 12,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 244,
                            "endLine": 244,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 184,
                            "endLine": 184,
                            "startColumn": 8,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 438,
                            "endLine": 438,
                            "startColumn": 21,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 45,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 167,
                            "endLine": 167,
                            "startColumn": 8,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 46,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 444,
                            "endLine": 444,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 47,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 460,
                            "endLine": 460,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 48,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 461,
                            "endLine": 461,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 49,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 463,
                            "endLine": 463,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 50,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 463,
                            "endLine": 463,
                            "startColumn": 22,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 51,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 463,
                            "endLine": 463,
                            "startColumn": 5,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 52,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 464,
                            "endLine": 464,
                            "startColumn": 14,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 53,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 464,
                            "endLine": 464,
                            "startColumn": 9,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 54,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 465,
                            "endLine": 465,
                            "startColumn": 22,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 55,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 465,
                            "endLine": 465,
                            "startColumn": 11,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/reDOS",
          "ruleIndex": 15,
          "level": "warning",
          "message": {
            "text": "Unsanitized user input from an environment variable flows into re.compile, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "markdown": "Unsanitized user input from an environment variable {0} into {1}, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66)",
              "[re.compile](67)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 465,
                  "endLine": 465,
                  "startColumn": 11,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7cffd48d090a19c09803ff9469238ca7a6710c688e8bd952bca0e7504863b1c1",
            "1": "a934e357.fc37a577.3b7b86da.139c59a8.0be7e9b7.ba14daf2.12931867.e2dbeca3.f942f700.6372c1ab.3b7b86da.f6463326.a2bc67cd.85b76ac4.a3d1a075.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 140,
                            "endLine": 140,
                            "startColumn": 19,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 140,
                            "endLine": 140,
                            "startColumn": 7,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 293,
                            "endLine": 293,
                            "startColumn": 27,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 436,
                            "endLine": 436,
                            "startColumn": 27,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 198,
                            "endLine": 198,
                            "startColumn": 21,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 293,
                            "endLine": 293,
                            "startColumn": 27,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 293,
                            "endLine": 293,
                            "startColumn": 5,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 294,
                            "endLine": 294,
                            "startColumn": 12,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 298,
                            "endLine": 298,
                            "startColumn": 47,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 262,
                            "endLine": 262,
                            "startColumn": 33,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 275,
                            "endLine": 275,
                            "startColumn": 52,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 278,
                            "endLine": 278,
                            "startColumn": 52,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 281,
                            "endLine": 281,
                            "startColumn": 48,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 284,
                            "endLine": 284,
                            "startColumn": 48,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 284,
                            "endLine": 284,
                            "startColumn": 13,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 284,
                            "endLine": 284,
                            "startColumn": 5,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 285,
                            "endLine": 285,
                            "startColumn": 8,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 287,
                            "endLine": 287,
                            "startColumn": 14,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 441,
                            "endLine": 441,
                            "startColumn": 7,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 443,
                            "endLine": 443,
                            "startColumn": 14,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 281,
                            "endLine": 281,
                            "startColumn": 13,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 281,
                            "endLine": 281,
                            "startColumn": 5,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 282,
                            "endLine": 282,
                            "startColumn": 8,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 283,
                            "endLine": 283,
                            "startColumn": 14,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 298,
                            "endLine": 298,
                            "startColumn": 7,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 299,
                            "endLine": 299,
                            "startColumn": 14,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 278,
                            "endLine": 278,
                            "startColumn": 13,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 278,
                            "endLine": 278,
                            "startColumn": 5,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 279,
                            "endLine": 279,
                            "startColumn": 8,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 280,
                            "endLine": 280,
                            "startColumn": 14,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 275,
                            "endLine": 275,
                            "startColumn": 13,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 275,
                            "endLine": 275,
                            "startColumn": 5,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 276,
                            "endLine": 276,
                            "startColumn": 8,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 277,
                            "endLine": 277,
                            "startColumn": 14,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 289,
                            "endLine": 289,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 445,
                            "endLine": 445,
                            "startColumn": 19,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 447,
                            "endLine": 447,
                            "startColumn": 22,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 447,
                            "endLine": 447,
                            "startColumn": 22,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 447,
                            "endLine": 447,
                            "startColumn": 9,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 451,
                            "endLine": 451,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 451,
                            "endLine": 451,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 422,
                            "endLine": 422,
                            "startColumn": 7,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 216,
                            "endLine": 216,
                            "startColumn": 12,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 217,
                            "endLine": 217,
                            "startColumn": 18,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 223,
                            "endLine": 223,
                            "startColumn": 12,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 45,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 5,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 46,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 249,
                            "endLine": 249,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 47,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 250,
                            "endLine": 250,
                            "startColumn": 25,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 48,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 252,
                            "endLine": 252,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 49,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 255,
                            "endLine": 255,
                            "startColumn": 8,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 50,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 259,
                            "endLine": 259,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 51,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 5,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 52,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 444,
                            "endLine": 444,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 53,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 228,
                            "endLine": 228,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 54,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 229,
                            "endLine": 229,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 55,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 237,
                            "endLine": 237,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 56,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 57,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 142,
                            "endLine": 142,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 58,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 438,
                            "endLine": 438,
                            "startColumn": 21,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 59,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 460,
                            "endLine": 460,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 60,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 461,
                            "endLine": 461,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 61,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 463,
                            "endLine": 463,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 62,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 463,
                            "endLine": 463,
                            "startColumn": 22,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 63,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 463,
                            "endLine": 463,
                            "startColumn": 5,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 64,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 464,
                            "endLine": 464,
                            "startColumn": 14,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 65,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 464,
                            "endLine": 464,
                            "startColumn": 9,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 66,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 465,
                            "endLine": 465,
                            "startColumn": 22,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 67,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/tpu/tensor_tracer_flags.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 465,
                            "endLine": 465,
                            "startColumn": 11,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/reDOS",
          "ruleIndex": 15,
          "level": "warning",
          "message": {
            "text": "Unsanitized user input from a command line argument flows into re.search, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "markdown": "Unsanitized user input from {0} {1} into {2}, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18)",
              "[re.search](19)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/platform/benchmark.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 454,
                  "endLine": 454,
                  "startColumn": 28,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5e78fb058396e235c06f7278683e001b415d8f88baadc4ea07d558fd460d8428",
            "1": "344f243b.ad474090.a919c294.6b73b382.1d07cee4.a5d7f69f.dddb4c97.e2dbeca3.9d86e1a1.2a62c6ef.67b4e3c5.6b73b382.c8b7d5cc.c0f44694.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 475,
                            "endLine": 475,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 475,
                            "endLine": 475,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 478,
                            "endLine": 478,
                            "startColumn": 11,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 479,
                            "endLine": 479,
                            "startColumn": 10,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 480,
                            "endLine": 480,
                            "startColumn": 10,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 477,
                            "endLine": 477,
                            "startColumn": 7,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 481,
                            "startColumn": 15,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 481,
                            "startColumn": 3,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 482,
                            "endLine": 482,
                            "startColumn": 6,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 484,
                            "endLine": 484,
                            "startColumn": 17,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 484,
                            "endLine": 484,
                            "startColumn": 17,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 486,
                            "endLine": 486,
                            "startColumn": 13,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 486,
                            "endLine": 486,
                            "startColumn": 13,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 486,
                            "endLine": 486,
                            "startColumn": 13,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 486,
                            "endLine": 486,
                            "startColumn": 5,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 487,
                            "endLine": 487,
                            "startColumn": 39,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 423,
                            "endLine": 423,
                            "startColumn": 21,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 454,
                            "endLine": 454,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 454,
                            "endLine": 454,
                            "startColumn": 38,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 454,
                            "endLine": 454,
                            "startColumn": 28,
                            "endColumn": 37
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/reDOS",
          "ruleIndex": 15,
          "level": "warning",
          "message": {
            "text": "Unsanitized user input from a command line argument flows into re.search, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "markdown": "Unsanitized user input from {0} {1} into {2}, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29)",
              "[re.search](30)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tensorflow/python/ops/batch_norm_benchmark.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 259,
                  "endLine": 259,
                  "startColumn": 3,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6f0e31c3f963e6172b78dba1cf9071e953eee8a163d42d6caee5cc65b279bafc",
            "1": "e06468b8.f89755c5.2683ade8.139c59a8.056de048.ba14daf2.081ac3f4.8794408a.e06468b8.b377bf81.d4fa07ba.139c59a8.c8b7d5cc.73cfdf26.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/ops/batch_norm_benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 259,
                            "endLine": 259,
                            "startColumn": 19,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/ops/batch_norm_benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 259,
                            "endLine": 259,
                            "startColumn": 19,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/ops/batch_norm_benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 259,
                            "endLine": 259,
                            "startColumn": 19,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/ops/batch_norm_benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 259,
                            "endLine": 259,
                            "startColumn": 18,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/ops/batch_norm_benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 259,
                            "endLine": 259,
                            "startColumn": 18,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/ops/batch_norm_benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 259,
                            "endLine": 259,
                            "startColumn": 13,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 27,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 5,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 58,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/googletest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 53,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 467,
                            "endLine": 467,
                            "startColumn": 32,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 474,
                            "endLine": 474,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 478,
                            "endLine": 478,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 478,
                            "endLine": 480,
                            "startColumn": 7,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 481,
                            "startColumn": 15,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 481,
                            "startColumn": 3,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 482,
                            "endLine": 482,
                            "startColumn": 6,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 484,
                            "endLine": 484,
                            "startColumn": 17,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 486,
                            "endLine": 486,
                            "startColumn": 13,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 486,
                            "endLine": 486,
                            "startColumn": 13,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 486,
                            "endLine": 486,
                            "startColumn": 13,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 486,
                            "endLine": 486,
                            "startColumn": 13,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 486,
                            "endLine": 486,
                            "startColumn": 5,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 487,
                            "endLine": 487,
                            "startColumn": 39,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 423,
                            "endLine": 423,
                            "startColumn": 21,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 454,
                            "endLine": 454,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 454,
                            "endLine": 454,
                            "startColumn": 38,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tensorflow/python/platform/benchmark.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 454,
                            "endLine": 454,
                            "startColumn": 28,
                            "endColumn": 37
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/reDOS",
          "ruleIndex": 15,
          "level": "warning",
          "message": {
            "text": "Unsanitized user input from a command line argument flows into re.compile, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "markdown": "Unsanitized user input from {0} {1} into {2}, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[re.compile](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "third_party/xla/build_tools/lint/check_contents.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "startColumn": 19,
                  "endColumn": 29
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4ef6b7acb5b310e8e6dd9070a51b0834af7fd4a6b3cfad58e9ac0b38973cd0ee",
            "1": "9d86e1a1.4034128a.93dad617.139c59a8.0be7e9b7.ba14daf2.081ac3f4.e2dbeca3.9d86e1a1.c5dbbc72.eef514f0.6b73b382.6055f0c5.0824323c.f6dc7859.6afab1c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 3,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 20,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 74,
                            "endLine": 74,
                            "startColumn": 41,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 74,
                            "endLine": 74,
                            "startColumn": 30,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 74,
                            "endLine": 74,
                            "startColumn": 19,
                            "endColumn": 29
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/reDOS",
          "ruleIndex": 15,
          "level": "warning",
          "message": {
            "text": "Unsanitized user input from a command line argument flows into re.compile, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "markdown": "Unsanitized user input from {0} {1} into {2}, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[re.compile](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "third_party/xla/build_tools/lint/check_contents.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 79,
                  "endLine": 79,
                  "startColumn": 28,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fbd9931a876bfc0cfdd8fce0a5a3fbda867aa657677397007a8e61e2e983c59e",
            "1": "9d86e1a1.4034128a.7a7e9c9f.139c59a8.0be7e9b7.ba14daf2.081ac3f4.e2dbeca3.9d86e1a1.c5dbbc72.eef514f0.6b73b382.6055f0c5.0824323c.f6dc7859.6afab1c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 3,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 29,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 50,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 39,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/reDOS",
          "ruleIndex": 15,
          "level": "warning",
          "message": {
            "text": "Unsanitized user input from a command line argument flows into re.compile, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "markdown": "Unsanitized user input from {0} {1} into {2}, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[re.compile](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "third_party/xla/build_tools/lint/check_contents.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 110,
                  "endLine": 110,
                  "startColumn": 22,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3650de3c5ad8727495723dc4164eb946a4659fb3a2b38f62d3a76903fc670221",
            "1": "0e6f4fa3.c5dbbc72.59612bde.139c59a8.0be7e9b7.ba14daf2.be0b5052.727fe002.cb73cf95.c5dbbc72.eef514f0.9cd2dfe0.0be7e9b7.0824323c.f6dc7859.6afab1c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 3,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 154,
                            "endLine": 154,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 154,
                            "endLine": 154,
                            "startColumn": 24,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 5,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 110,
                            "endLine": 110,
                            "startColumn": 33,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 110,
                            "endLine": 110,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/reDOS",
          "ruleIndex": 15,
          "level": "warning",
          "message": {
            "text": "Unsanitized user input from a command line argument flows into re.compile, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "markdown": "Unsanitized user input from {0} {1} into {2}, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[re.compile](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "third_party/xla/build_tools/lint/check_contents.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 112,
                  "endLine": 112,
                  "startColumn": 25,
                  "endColumn": 35
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b06727e05e8dbf11e15fb7630ee2f36563b8a9b404c4283a623e44255be26c2c",
            "1": "b05b4cf9.b817598f.79e62dc9.139c59a8.0be7e9b7.ba14daf2.7e8da20f.e2dbeca3.0e6f4fa3.c5dbbc72.eef514f0.9cd2dfe0.0be7e9b7.0824323c.f6dc7859.6afab1c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 3,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 154,
                            "endLine": 154,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 155,
                            "endLine": 155,
                            "startColumn": 25,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 155,
                            "endLine": 155,
                            "startColumn": 25,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 5,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 111,
                            "endLine": 111,
                            "startColumn": 6,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 36,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/build_tools/lint/check_contents.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into subprocess.Popen, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27)",
              "[subprocess.Popen](28)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "configure.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1195,
                  "endLine": 1195,
                  "startColumn": 10,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "22ab5fcc7191ff487a0b4a228ed08584bb1e3f446ab5e5f76dac7eca971dff19",
            "1": "e06468b8.6d7b0371.79e62dc9.ca863bfa.0d742eee.73cfdf26.a2237efa.f46ed94e.4f009864.f16887a3.36d659c2.1ba31ac6.860b7577.4a94a322.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 21,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 3,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1272,
                            "endLine": 1272,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1305,
                            "endLine": 1305,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1311,
                            "endLine": 1311,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 360,
                            "endLine": 360,
                            "startColumn": 24,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1312,
                            "endLine": 1312,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1313,
                            "endLine": 1313,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1314,
                            "endLine": 1314,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1318,
                            "endLine": 1318,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1318,
                            "endLine": 1318,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1321,
                            "endLine": 1321,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1321,
                            "endLine": 1321,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1329,
                            "endLine": 1329,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1333,
                            "endLine": 1333,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1334,
                            "endLine": 1334,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1337,
                            "endLine": 1337,
                            "startColumn": 9,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1343,
                            "endLine": 1343,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1346,
                            "endLine": 1346,
                            "startColumn": 31,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1165,
                            "endLine": 1165,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1182,
                            "endLine": 1182,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1184,
                            "endLine": 1184,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 8,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 7,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 7,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1195,
                            "endLine": 1195,
                            "startColumn": 10,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into subprocess.Popen, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28)",
              "[subprocess.Popen](29)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "configure.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1346,
                  "endLine": 1346,
                  "startColumn": 10,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "19d1b1ac52f9689121905541640ea229765356544e9b41fe85267680fe4d2126",
            "1": "a6b41d6e.993139d5.36d659c2.139c59a8.1d07cee4.ba14daf2.a2237efa.f46ed94e.4f009864.f8120871.36d659c2.1ba31ac6.860b7577.4a94a322.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 21,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 3,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1272,
                            "endLine": 1272,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1305,
                            "endLine": 1305,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1311,
                            "endLine": 1311,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 360,
                            "endLine": 360,
                            "startColumn": 24,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1312,
                            "endLine": 1312,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1313,
                            "endLine": 1313,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1314,
                            "endLine": 1314,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1318,
                            "endLine": 1318,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1318,
                            "endLine": 1318,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1321,
                            "endLine": 1321,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1321,
                            "endLine": 1321,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1329,
                            "endLine": 1329,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1333,
                            "endLine": 1333,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1334,
                            "endLine": 1334,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1337,
                            "endLine": 1337,
                            "startColumn": 9,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1343,
                            "endLine": 1343,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1346,
                            "endLine": 1346,
                            "startColumn": 31,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1165,
                            "endLine": 1165,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1182,
                            "endLine": 1182,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1184,
                            "endLine": 1184,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1187,
                            "endLine": 1187,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 8,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 7,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 7,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1195,
                            "endLine": 1195,
                            "startColumn": 10,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into subprocess.Popen, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43)",
              "[subprocess.Popen](44)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "configure.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1371,
                  "endLine": 1371,
                  "startColumn": 7,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c6edae8835bb220599938838ac29ad9893e1dcf918c40f45cbe3b5864ed2ec4b",
            "1": "26f1400e.1c6650e9.64119d3a.1e2c0147.1d07cee4.ba14daf2.1fc2ecb8.742d9b21.4f009864.ba411cad.36d659c2.1ba31ac6.860b7577.4a94a322.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 21,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 3,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1272,
                            "endLine": 1272,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1305,
                            "endLine": 1305,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1311,
                            "endLine": 1311,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 360,
                            "endLine": 360,
                            "startColumn": 24,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1312,
                            "endLine": 1312,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1313,
                            "endLine": 1313,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1314,
                            "endLine": 1314,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1318,
                            "endLine": 1318,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1318,
                            "endLine": 1318,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1321,
                            "endLine": 1321,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1321,
                            "endLine": 1321,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1329,
                            "endLine": 1329,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1333,
                            "endLine": 1333,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1334,
                            "endLine": 1334,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1337,
                            "endLine": 1337,
                            "startColumn": 9,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1343,
                            "endLine": 1343,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1343,
                            "endLine": 1343,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1343,
                            "endLine": 1343,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1369,
                            "endLine": 1369,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1369,
                            "endLine": 1369,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1369,
                            "endLine": 1369,
                            "startColumn": 7,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1371,
                            "endLine": 1371,
                            "startColumn": 27,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 896,
                            "endLine": 896,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 901,
                            "endLine": 901,
                            "startColumn": 53,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 518,
                            "endLine": 518,
                            "startColumn": 37,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 534,
                            "endLine": 534,
                            "startColumn": 9,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 212,
                            "endLine": 212,
                            "startColumn": 21,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 240,
                            "endLine": 240,
                            "startColumn": 3,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 244,
                            "endLine": 244,
                            "startColumn": 6,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 245,
                            "endLine": 245,
                            "startColumn": 20,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 247,
                            "endLine": 247,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1346,
                            "endLine": 1346,
                            "startColumn": 31,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1165,
                            "endLine": 1165,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1182,
                            "endLine": 1182,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1184,
                            "endLine": 1184,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1187,
                            "endLine": 1187,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 8,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 7,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 7,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1195,
                            "endLine": 1195,
                            "startColumn": 10,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into subprocess.Popen, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45)",
              "[subprocess.Popen](46)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "configure.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1372,
                  "endLine": 1372,
                  "startColumn": 7,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a8fa236f3d7a3575b353ee9788c508d260175f1f6aba54c734e8b94bd72621dd",
            "1": "7b0793b4.1c6650e9.79e62dc9.e1d3f3f9.5e17df49.94385396.ca327b3b.742d9b21.4f009864.f8120871.36d659c2.1ba31ac6.860b7577.4a94a322.ca327b3b.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 21,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 3,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1272,
                            "endLine": 1272,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1305,
                            "endLine": 1305,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1311,
                            "endLine": 1311,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 360,
                            "endLine": 360,
                            "startColumn": 24,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1312,
                            "endLine": 1312,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1313,
                            "endLine": 1313,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1314,
                            "endLine": 1314,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1318,
                            "endLine": 1318,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1318,
                            "endLine": 1318,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1321,
                            "endLine": 1321,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1321,
                            "endLine": 1321,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1329,
                            "endLine": 1329,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1333,
                            "endLine": 1333,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1334,
                            "endLine": 1334,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1337,
                            "endLine": 1337,
                            "startColumn": 9,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1343,
                            "endLine": 1343,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1343,
                            "endLine": 1343,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1343,
                            "endLine": 1343,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1369,
                            "endLine": 1369,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1369,
                            "endLine": 1369,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1369,
                            "endLine": 1369,
                            "startColumn": 7,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1371,
                            "endLine": 1371,
                            "startColumn": 27,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 896,
                            "endLine": 896,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1372,
                            "endLine": 1372,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 908,
                            "endLine": 908,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 913,
                            "endLine": 913,
                            "startColumn": 54,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 518,
                            "endLine": 518,
                            "startColumn": 37,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 534,
                            "endLine": 534,
                            "startColumn": 9,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 212,
                            "endLine": 212,
                            "startColumn": 21,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 240,
                            "endLine": 240,
                            "startColumn": 3,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 244,
                            "endLine": 244,
                            "startColumn": 6,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 245,
                            "endLine": 245,
                            "startColumn": 20,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 247,
                            "endLine": 247,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1346,
                            "endLine": 1346,
                            "startColumn": 31,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1165,
                            "endLine": 1165,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1182,
                            "endLine": 1182,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1184,
                            "endLine": 1184,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1187,
                            "endLine": 1187,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 8,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 7,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 45,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 7,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 46,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1195,
                            "endLine": 1195,
                            "startColumn": 10,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into subprocess.Popen, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48)",
              "[subprocess.Popen](49)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "configure.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1374,
                  "endLine": 1374,
                  "startColumn": 9,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9b397d7cd25a3b51619444a4fa998cc07f903917366cbce301bcd88fb1cacfcf",
            "1": "7b0793b4.04913769.3c3a65ff.139c59a8.44ecb2d4.ba14daf2.1fc2ecb8.742d9b21.4f009864.f8120871.36d659c2.1ba31ac6.860b7577.4a94a322.ca327b3b.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 21,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 3,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1272,
                            "endLine": 1272,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1305,
                            "endLine": 1305,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1311,
                            "endLine": 1311,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 360,
                            "endLine": 360,
                            "startColumn": 24,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1312,
                            "endLine": 1312,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1313,
                            "endLine": 1313,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1314,
                            "endLine": 1314,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1318,
                            "endLine": 1318,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1318,
                            "endLine": 1318,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1321,
                            "endLine": 1321,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1321,
                            "endLine": 1321,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1329,
                            "endLine": 1329,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1333,
                            "endLine": 1333,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1334,
                            "endLine": 1334,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1337,
                            "endLine": 1337,
                            "startColumn": 9,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1343,
                            "endLine": 1343,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1343,
                            "endLine": 1343,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1343,
                            "endLine": 1343,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1369,
                            "endLine": 1369,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1369,
                            "endLine": 1369,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1369,
                            "endLine": 1369,
                            "startColumn": 7,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1371,
                            "endLine": 1371,
                            "startColumn": 27,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 896,
                            "endLine": 896,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1372,
                            "endLine": 1372,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 908,
                            "endLine": 908,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1374,
                            "endLine": 1374,
                            "startColumn": 33,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 920,
                            "endLine": 920,
                            "startColumn": 29,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 925,
                            "endLine": 925,
                            "startColumn": 14,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 932,
                            "endLine": 932,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 518,
                            "endLine": 518,
                            "startColumn": 37,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 534,
                            "endLine": 534,
                            "startColumn": 9,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 212,
                            "endLine": 212,
                            "startColumn": 21,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 240,
                            "endLine": 240,
                            "startColumn": 3,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 244,
                            "endLine": 244,
                            "startColumn": 6,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 245,
                            "endLine": 245,
                            "startColumn": 20,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 247,
                            "endLine": 247,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1346,
                            "endLine": 1346,
                            "startColumn": 31,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1165,
                            "endLine": 1165,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1182,
                            "endLine": 1182,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1184,
                            "endLine": 1184,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1187,
                            "endLine": 1187,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 45,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 46,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 8,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 47,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 7,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 48,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 7,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 49,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1195,
                            "endLine": 1195,
                            "startColumn": 10,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into subprocess.Popen, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48)",
              "[subprocess.Popen](49)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "configure.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1376,
                  "endLine": 1376,
                  "startColumn": 9,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "baa66580947e2f5fc8000c0e4b11a588ee25ca1f943625a367cde72e34cf8dcb",
            "1": "7b0793b4.04913769.3c3a65ff.139c59a8.44ecb2d4.ba14daf2.1fc2ecb8.742d9b21.4f009864.f8120871.36d659c2.1ba31ac6.860b7577.4a94a322.ca327b3b.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 21,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 3,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1272,
                            "endLine": 1272,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1305,
                            "endLine": 1305,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1311,
                            "endLine": 1311,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 360,
                            "endLine": 360,
                            "startColumn": 24,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1312,
                            "endLine": 1312,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1313,
                            "endLine": 1313,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1314,
                            "endLine": 1314,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1318,
                            "endLine": 1318,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1318,
                            "endLine": 1318,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1321,
                            "endLine": 1321,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1321,
                            "endLine": 1321,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1329,
                            "endLine": 1329,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1333,
                            "endLine": 1333,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1334,
                            "endLine": 1334,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1337,
                            "endLine": 1337,
                            "startColumn": 9,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1343,
                            "endLine": 1343,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1343,
                            "endLine": 1343,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1343,
                            "endLine": 1343,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1369,
                            "endLine": 1369,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1369,
                            "endLine": 1369,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1369,
                            "endLine": 1369,
                            "startColumn": 7,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1371,
                            "endLine": 1371,
                            "startColumn": 27,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 896,
                            "endLine": 896,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1372,
                            "endLine": 1372,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 908,
                            "endLine": 908,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1376,
                            "endLine": 1376,
                            "startColumn": 33,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 920,
                            "endLine": 920,
                            "startColumn": 29,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 925,
                            "endLine": 925,
                            "startColumn": 14,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 932,
                            "endLine": 932,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 518,
                            "endLine": 518,
                            "startColumn": 37,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 534,
                            "endLine": 534,
                            "startColumn": 9,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 212,
                            "endLine": 212,
                            "startColumn": 21,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 240,
                            "endLine": 240,
                            "startColumn": 3,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 244,
                            "endLine": 244,
                            "startColumn": 6,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 245,
                            "endLine": 245,
                            "startColumn": 20,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 247,
                            "endLine": 247,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1346,
                            "endLine": 1346,
                            "startColumn": 31,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1165,
                            "endLine": 1165,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1182,
                            "endLine": 1182,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1184,
                            "endLine": 1184,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1187,
                            "endLine": 1187,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 45,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 46,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 8,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 47,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 7,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 48,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 7,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 49,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1195,
                            "endLine": 1195,
                            "startColumn": 10,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into subprocess.Popen, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50)",
              "[subprocess.Popen](51)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "configure.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1377,
                  "endLine": 1377,
                  "startColumn": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "124236580f12ce14c7d98f708ecdfb4c1d90533184af4dc1c941162e4b2c2b79",
            "1": "c9902d78.1c6650e9.3c3a65ff.139c59a8.8a7dd40d.ba14daf2.1fc2ecb8.742d9b21.4f009864.f8120871.36d659c2.1ba31ac6.860b7577.4a94a322.ca327b3b.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 21,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 3,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1272,
                            "endLine": 1272,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1305,
                            "endLine": 1305,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1311,
                            "endLine": 1311,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 360,
                            "endLine": 360,
                            "startColumn": 24,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1312,
                            "endLine": 1312,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1313,
                            "endLine": 1313,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1314,
                            "endLine": 1314,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1318,
                            "endLine": 1318,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1318,
                            "endLine": 1318,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1321,
                            "endLine": 1321,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1321,
                            "endLine": 1321,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1329,
                            "endLine": 1329,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1333,
                            "endLine": 1333,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1334,
                            "endLine": 1334,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1337,
                            "endLine": 1337,
                            "startColumn": 9,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1343,
                            "endLine": 1343,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1343,
                            "endLine": 1343,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1343,
                            "endLine": 1343,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1369,
                            "endLine": 1369,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1369,
                            "endLine": 1369,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1369,
                            "endLine": 1369,
                            "startColumn": 7,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1371,
                            "endLine": 1371,
                            "startColumn": 27,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 896,
                            "endLine": 896,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1372,
                            "endLine": 1372,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 908,
                            "endLine": 908,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1376,
                            "endLine": 1376,
                            "startColumn": 33,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 920,
                            "endLine": 920,
                            "startColumn": 29,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1377,
                            "endLine": 1377,
                            "startColumn": 29,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 937,
                            "endLine": 937,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 942,
                            "endLine": 942,
                            "startColumn": 27,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 948,
                            "endLine": 948,
                            "startColumn": 53,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 518,
                            "endLine": 518,
                            "startColumn": 37,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 534,
                            "endLine": 534,
                            "startColumn": 9,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 212,
                            "endLine": 212,
                            "startColumn": 21,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 240,
                            "endLine": 240,
                            "startColumn": 3,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 244,
                            "endLine": 244,
                            "startColumn": 6,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 245,
                            "endLine": 245,
                            "startColumn": 20,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 247,
                            "endLine": 247,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1346,
                            "endLine": 1346,
                            "startColumn": 31,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1165,
                            "endLine": 1165,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1182,
                            "endLine": 1182,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 45,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1184,
                            "endLine": 1184,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 46,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1187,
                            "endLine": 1187,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 47,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 48,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 8,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 49,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 7,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 50,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 7,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 51,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1195,
                            "endLine": 1195,
                            "startColumn": 10,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into subprocess.Popen, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47)",
              "[subprocess.Popen](48)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "configure.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1379,
                  "endLine": 1379,
                  "startColumn": 7,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3f469489f4d618a81af7328f523c3f0a9e18462f87d1e8fddb4a0a26376016ff",
            "1": "c5227f32.1c6650e9.3c3a65ff.139c59a8.cc857d4e.ba14daf2.1fc2ecb8.742d9b21.4f009864.f8120871.36d659c2.1ba31ac6.860b7577.4a94a322.637e33af.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 21,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 3,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1272,
                            "endLine": 1272,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1305,
                            "endLine": 1305,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1311,
                            "endLine": 1311,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 360,
                            "endLine": 360,
                            "startColumn": 24,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1312,
                            "endLine": 1312,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1313,
                            "endLine": 1313,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1314,
                            "endLine": 1314,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1318,
                            "endLine": 1318,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1318,
                            "endLine": 1318,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1321,
                            "endLine": 1321,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1321,
                            "endLine": 1321,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1329,
                            "endLine": 1329,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1333,
                            "endLine": 1333,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1334,
                            "endLine": 1334,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1337,
                            "endLine": 1337,
                            "startColumn": 9,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1343,
                            "endLine": 1343,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1343,
                            "endLine": 1343,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1343,
                            "endLine": 1343,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1369,
                            "endLine": 1369,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1369,
                            "endLine": 1369,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1369,
                            "endLine": 1369,
                            "startColumn": 7,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1371,
                            "endLine": 1371,
                            "startColumn": 27,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 896,
                            "endLine": 896,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1372,
                            "endLine": 1372,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 908,
                            "endLine": 908,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1379,
                            "endLine": 1379,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 885,
                            "endLine": 885,
                            "startColumn": 23,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 890,
                            "endLine": 890,
                            "startColumn": 51,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 518,
                            "endLine": 518,
                            "startColumn": 37,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 534,
                            "endLine": 534,
                            "startColumn": 9,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 212,
                            "endLine": 212,
                            "startColumn": 21,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 240,
                            "endLine": 240,
                            "startColumn": 3,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 244,
                            "endLine": 244,
                            "startColumn": 6,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 245,
                            "endLine": 245,
                            "startColumn": 20,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 247,
                            "endLine": 247,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1346,
                            "endLine": 1346,
                            "startColumn": 31,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1165,
                            "endLine": 1165,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1182,
                            "endLine": 1182,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1184,
                            "endLine": 1184,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1187,
                            "endLine": 1187,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 45,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 8,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 46,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 7,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 47,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1196,
                            "endLine": 1196,
                            "startColumn": 7,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 48,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1195,
                            "endLine": 1195,
                            "startColumn": 10,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into subprocess.Popen, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24)",
              "[subprocess.Popen](25)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "third_party/xla/configure.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 861,
                  "endLine": 861,
                  "startColumn": 10,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d46429e516cf446ec5af31dc91aa3c813affa4956799818ac45c86e5d581927b",
            "1": "e06468b8.6d7b0371.79e62dc9.ca863bfa.0d742eee.73cfdf26.a2237efa.f46ed94e.da90c889.f16887a3.36d659c2.1ba31ac6.860b7577.4a94a322.a2237efa.d44736de"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 920,
                            "endLine": 920,
                            "startColumn": 21,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 920,
                            "endLine": 920,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 920,
                            "endLine": 920,
                            "startColumn": 3,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 932,
                            "endLine": 932,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 963,
                            "endLine": 963,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 303,
                            "endLine": 303,
                            "startColumn": 24,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 964,
                            "endLine": 964,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 965,
                            "endLine": 965,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 966,
                            "endLine": 966,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 970,
                            "endLine": 970,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 970,
                            "endLine": 970,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 973,
                            "endLine": 973,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 973,
                            "endLine": 973,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 981,
                            "endLine": 981,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 985,
                            "endLine": 985,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 986,
                            "endLine": 986,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 988,
                            "endLine": 988,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 991,
                            "endLine": 991,
                            "startColumn": 31,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 837,
                            "endLine": 837,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 854,
                            "endLine": 854,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 862,
                            "endLine": 862,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 862,
                            "endLine": 862,
                            "startColumn": 8,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 862,
                            "endLine": 862,
                            "startColumn": 7,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 862,
                            "endLine": 862,
                            "startColumn": 7,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 861,
                            "endLine": 861,
                            "startColumn": 10,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into subprocess.Popen, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24)",
              "[subprocess.Popen](25)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "third_party/xla/configure.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 991,
                  "endLine": 991,
                  "startColumn": 10,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5be08b4421644af449373f8d696d13e61a22d876c43bd46efc324a4bd54b77df",
            "1": "a6b41d6e.993139d5.36d659c2.03d71cbf.1d07cee4.ba14daf2.a2237efa.f46ed94e.da90c889.f8120871.36d659c2.1ba31ac6.860b7577.4a94a322.a2237efa.d44736de"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 920,
                            "endLine": 920,
                            "startColumn": 21,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 920,
                            "endLine": 920,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 920,
                            "endLine": 920,
                            "startColumn": 3,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 932,
                            "endLine": 932,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 963,
                            "endLine": 963,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 303,
                            "endLine": 303,
                            "startColumn": 24,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 964,
                            "endLine": 964,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 965,
                            "endLine": 965,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 966,
                            "endLine": 966,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 970,
                            "endLine": 970,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 970,
                            "endLine": 970,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 973,
                            "endLine": 973,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 973,
                            "endLine": 973,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 981,
                            "endLine": 981,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 985,
                            "endLine": 985,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 986,
                            "endLine": 986,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 988,
                            "endLine": 988,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 991,
                            "endLine": 991,
                            "startColumn": 31,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 837,
                            "endLine": 837,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 854,
                            "endLine": 854,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 862,
                            "endLine": 862,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 862,
                            "endLine": 862,
                            "startColumn": 8,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 862,
                            "endLine": 862,
                            "startColumn": 7,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 862,
                            "endLine": 862,
                            "startColumn": 7,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 861,
                            "endLine": 861,
                            "startColumn": 10,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into subprocess.Popen, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46)",
              "[subprocess.Popen](47)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "third_party/xla/configure.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1014,
                  "endLine": 1014,
                  "startColumn": 7,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fffc3fd5a6193af09231b9170d117ead9fac0311af0447afae36332c2e275a63",
            "1": "26f1400e.1c6650e9.64119d3a.1e2c0147.1d07cee4.ba14daf2.1fc2ecb8.742d9b21.da90c889.ba411cad.36d659c2.1ba31ac6.860b7577.4a94a322.a2237efa.d44736de"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 920,
                            "endLine": 920,
                            "startColumn": 21,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 920,
                            "endLine": 920,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 920,
                            "endLine": 920,
                            "startColumn": 3,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 932,
                            "endLine": 932,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 963,
                            "endLine": 963,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 303,
                            "endLine": 303,
                            "startColumn": 24,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 964,
                            "endLine": 964,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 965,
                            "endLine": 965,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 966,
                            "endLine": 966,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 970,
                            "endLine": 970,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 970,
                            "endLine": 970,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 973,
                            "endLine": 973,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 973,
                            "endLine": 973,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 981,
                            "endLine": 981,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 985,
                            "endLine": 985,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 986,
                            "endLine": 986,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 988,
                            "endLine": 988,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 988,
                            "endLine": 988,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 988,
                            "endLine": 988,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1012,
                            "endLine": 1012,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1012,
                            "endLine": 1012,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1012,
                            "endLine": 1012,
                            "startColumn": 7,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1014,
                            "endLine": 1014,
                            "startColumn": 27,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 608,
                            "endLine": 608,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 613,
                            "endLine": 613,
                            "startColumn": 53,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 460,
                            "endLine": 460,
                            "startColumn": 37,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 476,
                            "startColumn": 9,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 739,
                            "endLine": 739,
                            "startColumn": 3,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1028,
                            "endLine": 1028,
                            "startColumn": 29,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1028,
                            "endLine": 1028,
                            "startColumn": 44,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1033,
                            "endLine": 1033,
                            "startColumn": 23,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 424,
                            "endLine": 424,
                            "startColumn": 23,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1034,
                            "endLine": 1034,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1036,
                            "endLine": 1036,
                            "startColumn": 29,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 444,
                            "endLine": 444,
                            "startColumn": 27,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 450,
                            "endLine": 450,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 15,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 218,
                            "endLine": 218,
                            "startColumn": 13,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 983,
                            "endLine": 983,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 991,
                            "endLine": 991,
                            "startColumn": 31,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 837,
                            "endLine": 837,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 854,
                            "endLine": 854,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 862,
                            "endLine": 862,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 862,
                            "endLine": 862,
                            "startColumn": 8,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 45,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 862,
                            "endLine": 862,
                            "startColumn": 7,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 46,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 862,
                            "endLine": 862,
                            "startColumn": 7,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 47,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 861,
                            "endLine": 861,
                            "startColumn": 10,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into subprocess.Popen, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48)",
              "[subprocess.Popen](49)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "third_party/xla/configure.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1015,
                  "endLine": 1015,
                  "startColumn": 7,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "12e437424cfed657c0650da7c3ca34983c87a46e995caa19bded3dd6e714678e",
            "1": "7b0793b4.1c6650e9.79e62dc9.e1d3f3f9.5e17df49.94385396.ca327b3b.742d9b21.da90c889.f8120871.36d659c2.1ba31ac6.860b7577.4a94a322.ca327b3b.d44736de"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 920,
                            "endLine": 920,
                            "startColumn": 21,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 920,
                            "endLine": 920,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 920,
                            "endLine": 920,
                            "startColumn": 3,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 932,
                            "endLine": 932,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 963,
                            "endLine": 963,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 303,
                            "endLine": 303,
                            "startColumn": 24,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 964,
                            "endLine": 964,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 965,
                            "endLine": 965,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 966,
                            "endLine": 966,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 970,
                            "endLine": 970,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 970,
                            "endLine": 970,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 973,
                            "endLine": 973,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 973,
                            "endLine": 973,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 981,
                            "endLine": 981,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 985,
                            "endLine": 985,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 986,
                            "endLine": 986,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 988,
                            "endLine": 988,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 988,
                            "endLine": 988,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 988,
                            "endLine": 988,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1012,
                            "endLine": 1012,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1012,
                            "endLine": 1012,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1012,
                            "endLine": 1012,
                            "startColumn": 7,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1014,
                            "endLine": 1014,
                            "startColumn": 27,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 608,
                            "endLine": 608,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1015,
                            "endLine": 1015,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 620,
                            "endLine": 620,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 625,
                            "endLine": 625,
                            "startColumn": 54,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 460,
                            "endLine": 460,
                            "startColumn": 37,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 476,
                            "startColumn": 9,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 739,
                            "endLine": 739,
                            "startColumn": 3,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1028,
                            "endLine": 1028,
                            "startColumn": 29,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1028,
                            "endLine": 1028,
                            "startColumn": 44,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1033,
                            "endLine": 1033,
                            "startColumn": 23,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 424,
                            "endLine": 424,
                            "startColumn": 23,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1034,
                            "endLine": 1034,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1036,
                            "endLine": 1036,
                            "startColumn": 29,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 444,
                            "endLine": 444,
                            "startColumn": 27,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 450,
                            "endLine": 450,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 15,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 218,
                            "endLine": 218,
                            "startColumn": 13,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 983,
                            "endLine": 983,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 991,
                            "endLine": 991,
                            "startColumn": 31,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 837,
                            "endLine": 837,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 854,
                            "endLine": 854,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 45,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 862,
                            "endLine": 862,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 46,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 862,
                            "endLine": 862,
                            "startColumn": 8,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 47,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 862,
                            "endLine": 862,
                            "startColumn": 7,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 48,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 862,
                            "endLine": 862,
                            "startColumn": 7,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 49,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 861,
                            "endLine": 861,
                            "startColumn": 10,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into subprocess.Popen, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51)",
              "[subprocess.Popen](52)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "third_party/xla/configure.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1017,
                  "endLine": 1017,
                  "startColumn": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ecd4f9f00f6ee7de466e06aaa826bdfff202fa1fdc35044300e39b3b9ce68c58",
            "1": "c9902d78.1c6650e9.3c3a65ff.1e2c0147.8a7dd40d.ba14daf2.1fc2ecb8.742d9b21.c5227f32.f8120871.36d659c2.1ba31ac6.860b7577.4a94a322.ca327b3b.d44736de"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 920,
                            "endLine": 920,
                            "startColumn": 21,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 920,
                            "endLine": 920,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 920,
                            "endLine": 920,
                            "startColumn": 3,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 932,
                            "endLine": 932,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 963,
                            "endLine": 963,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 303,
                            "endLine": 303,
                            "startColumn": 24,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 964,
                            "endLine": 964,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 965,
                            "endLine": 965,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 966,
                            "endLine": 966,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 970,
                            "endLine": 970,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 970,
                            "endLine": 970,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 973,
                            "endLine": 973,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 973,
                            "endLine": 973,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 981,
                            "endLine": 981,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 985,
                            "endLine": 985,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 986,
                            "endLine": 986,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 988,
                            "endLine": 988,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 988,
                            "endLine": 988,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 988,
                            "endLine": 988,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1012,
                            "endLine": 1012,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1012,
                            "endLine": 1012,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1012,
                            "endLine": 1012,
                            "startColumn": 7,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1014,
                            "endLine": 1014,
                            "startColumn": 27,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 608,
                            "endLine": 608,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1015,
                            "endLine": 1015,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 620,
                            "endLine": 620,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1017,
                            "endLine": 1017,
                            "startColumn": 29,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 632,
                            "endLine": 632,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 637,
                            "endLine": 637,
                            "startColumn": 27,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 643,
                            "endLine": 643,
                            "startColumn": 53,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 460,
                            "endLine": 460,
                            "startColumn": 37,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 476,
                            "startColumn": 9,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 739,
                            "endLine": 739,
                            "startColumn": 3,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1028,
                            "endLine": 1028,
                            "startColumn": 29,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1028,
                            "endLine": 1028,
                            "startColumn": 44,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1033,
                            "endLine": 1033,
                            "startColumn": 23,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 424,
                            "endLine": 424,
                            "startColumn": 23,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1034,
                            "endLine": 1034,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1036,
                            "endLine": 1036,
                            "startColumn": 29,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 444,
                            "endLine": 444,
                            "startColumn": 27,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 450,
                            "endLine": 450,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 15,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 218,
                            "endLine": 218,
                            "startColumn": 13,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 983,
                            "endLine": 983,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 45,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 991,
                            "endLine": 991,
                            "startColumn": 31,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 46,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 837,
                            "endLine": 837,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 47,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 854,
                            "endLine": 854,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 48,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 862,
                            "endLine": 862,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 49,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 862,
                            "endLine": 862,
                            "startColumn": 8,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 50,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 862,
                            "endLine": 862,
                            "startColumn": 7,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 51,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 862,
                            "endLine": 862,
                            "startColumn": 7,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 52,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 861,
                            "endLine": 861,
                            "startColumn": 10,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into subprocess.Popen, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50)",
              "[subprocess.Popen](51)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "third_party/xla/configure.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1019,
                  "endLine": 1019,
                  "startColumn": 7,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6aadd404d1f004c9180b64b47c72c13cd1e89ae7b4ab429dfa7441e2708d871b",
            "1": "c5227f32.1c6650e9.3c3a65ff.1e2c0147.29e57dec.ba14daf2.1fc2ecb8.742d9b21.c5227f32.f8120871.36d659c2.1ba31ac6.860b7577.4a94a322.637e33af.d44736de"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 920,
                            "endLine": 920,
                            "startColumn": 21,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 920,
                            "endLine": 920,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 920,
                            "endLine": 920,
                            "startColumn": 3,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 932,
                            "endLine": 932,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 963,
                            "endLine": 963,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 303,
                            "endLine": 303,
                            "startColumn": 24,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 964,
                            "endLine": 964,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 965,
                            "endLine": 965,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 966,
                            "endLine": 966,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 970,
                            "endLine": 970,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 970,
                            "endLine": 970,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 973,
                            "endLine": 973,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 973,
                            "endLine": 973,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 981,
                            "endLine": 981,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 985,
                            "endLine": 985,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 986,
                            "endLine": 986,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 988,
                            "endLine": 988,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 988,
                            "endLine": 988,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 988,
                            "endLine": 988,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1012,
                            "endLine": 1012,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1012,
                            "endLine": 1012,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1012,
                            "endLine": 1012,
                            "startColumn": 7,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1014,
                            "endLine": 1014,
                            "startColumn": 27,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 608,
                            "endLine": 608,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1015,
                            "endLine": 1015,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 620,
                            "endLine": 620,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1019,
                            "endLine": 1019,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 597,
                            "endLine": 597,
                            "startColumn": 23,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 602,
                            "endLine": 602,
                            "startColumn": 51,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 460,
                            "endLine": 460,
                            "startColumn": 37,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 476,
                            "startColumn": 9,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 739,
                            "endLine": 739,
                            "startColumn": 3,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1028,
                            "endLine": 1028,
                            "startColumn": 29,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1028,
                            "endLine": 1028,
                            "startColumn": 44,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1033,
                            "endLine": 1033,
                            "startColumn": 23,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 424,
                            "endLine": 424,
                            "startColumn": 23,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1034,
                            "endLine": 1034,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1036,
                            "endLine": 1036,
                            "startColumn": 29,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 444,
                            "endLine": 444,
                            "startColumn": 27,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 450,
                            "endLine": 450,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 15,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 218,
                            "endLine": 218,
                            "startColumn": 13,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 983,
                            "endLine": 983,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 991,
                            "endLine": 991,
                            "startColumn": 31,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 45,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 837,
                            "endLine": 837,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 46,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 854,
                            "endLine": 854,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 47,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 862,
                            "endLine": 862,
                            "startColumn": 8,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 48,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 862,
                            "endLine": 862,
                            "startColumn": 8,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 49,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 862,
                            "endLine": 862,
                            "startColumn": 7,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 50,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 862,
                            "endLine": 862,
                            "startColumn": 7,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 51,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "third_party/xla/configure.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 861,
                            "endLine": 861,
                            "startColumn": 10,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "isSupported": true,
            "lang": "Swift",
            "files": 18,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "C#",
            "files": 2,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "HTML",
            "files": 2,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "XML",
            "files": 52,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "JavaScript",
            "files": 3,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Python",
            "files": 3060,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Go",
            "files": 40,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Java",
            "files": 179,
            "type": "SUPPORTED"
          }
        ]
      }
    }
  ]
}
