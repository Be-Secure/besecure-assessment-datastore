{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "java/HardcodedPassword/test",
              "name": "HardcodedPassword/test",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n## Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "HardcodedPassword",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/winstonli/writelatex-git-bridge/commit/1117c70f31cee7d9a84c565c143f353d8bbab19e?diff=split#diff-16d090e60dcd386546c2164ae454bd356cbf326d715a66796582e8c003d8af10L-1",
                    "lines": [
                      {
                        "line": "    public static void setBasicAuth(String username, String password) {\n",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "        USERNAME = username;\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "        PASSWORD = password;\n",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "    public static void setBaseURL(String baseURL) {\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "        BASE_URL = baseURL;\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/clowee/OpenSZZ-Cloud-Native/commit/ee429faf9d384074cf33515eda2a52e4e85ef061?diff=split#diff-a125fdf9d37b8daa4d9f0a7a46aedd416a80a49936bdee4bae40db3f3eef22deL-1",
                    "lines": [
                      {
                        "line": "final String username = \"noreply.openszz@gmail.com\";\n",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "final String password = \"Aa30011992\";\n",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "final String username = System.getenv(\"EMAIL\");\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "final String password = System.getenv(\"PWD\");\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/ScaleSec/vulnado/commit/d4666a783ce3e1edcccdecf44cffcd33efbc18f8?diff=split#diff-0a97815f45976f1bd8887fa62f7671e9f85344c4efeeeef612b6d219e86e50b1L-1",
                    "lines": [
                      {
                        "line": "return DriverManager.getConnection(\"jdbc:postgresql://localhost:5432/vulnado\",\n",
                        "lineNumber": 13,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        \"postgres\", \"vulnado\");\n",
                        "lineNumber": 14,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String url = new StringBuilder()\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      },
                      {
                        "line": "        .append(\"jdbc:postgresql://\")\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "        .append(System.getenv(\"PGHOST\"))\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "        .append(\"/\")\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "        .append(System.getenv(\"PGDATABASE\")).toString();\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "return DriverManager.getConnection(url,\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "        System.getenv(\"PGUSER\"), System.getenv(\"PGPASSWORD\"));\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 84,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            },
            {
              "id": "java/TooPermissiveTrustManager/test",
              "name": "TooPermissiveTrustManager/test",
              "shortDescription": {
                "text": "Improper Certificate Validation"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nCommunication through encrypted TLS/SSL protocols can only take place when the server bears a valid certificate associating that server with a valid public-key identity issued by a third-party authority. If certificate validation is cursory or incomplete, this creates a weakness whereby an attacker can spoof one or more certificate details (e.g., expiration date), gaining unauthorized access to confidential data and privileged actions.\n\n## Best practices for prevention\n* Verify all aspects of any certificate provided, particularly chain of trust (issuing authority), host identity, and expiration.\n* Limit the validity period for certificates.\n* Avoid using self-signed certificates, certificate pinning, and wildcard certificates, as these all add levels of convenience but can also lead to loss of control over site/app security.\n* Disable older and insecure protocols (for example, SSL 2.0/3.0, MD5, and 3DES).\n* Ensure that all team members are familiar with current best practices and approaches, such as current TLS protocols.\n* Implement automated and manual testing using current tools and techniques designed to reveal this and related SSL weaknesses (for example, web application scanners).",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "TooPermissiveTrustManager",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/yeriomin/YalpStore/commit/4bcddf049328e961399cb2a5dcd8b8091c498fb5?diff=split#diff-ecf6b03aa31abb56639b85e2523164f43612495b994d0dea719fb98e8e16ccb9L-1",
                    "lines": [
                      {
                        "line": "import java.security.cert.CertificateException;\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      },
                      {
                        "line": "import javax.net.ssl.X509TrustManager;\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "class NullX509TrustManager implements X509TrustManager {\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "    @Override\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public void checkClientTrusted(java.security.cert.X509Certificate[] x509Certificates, String s) throws java.security.cert.CertificateException {\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "        // not implemented\n",
                        "lineNumber": 8,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        try {\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "            x509Certificates[0].checkValidity();\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "        } catch (Exception e) {\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "            throw new CertificateException(\"Certificate not valid or trusted.\");\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/huanghaibin-dev/HttpNet/commit/f903bb22e1fa0a5132c140eb6a9210fec011dbae?diff=split#diff-8aa1ea806dfe3056586a21ba42a8a104ef9616d13369cc277547954db96d315eL-1",
                    "lines": [
                      {
                        "line": "import java.io.FileInputStream;\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "import java.security.KeyStore;\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "import java.security.cert.CertificateException;\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "import java.security.cert.X509Certificate;\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "import javax.net.ssl.TrustManager;\n",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "import javax.net.ssl.TrustManagerFactory;\n",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "import javax.net.ssl.X509TrustManager;\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "/**\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": " *\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": " */\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "public class HttpsSSLManager implements X509TrustManager {\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "    private X509TrustManager sunJSSEX509TrustManager;\n",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "    public HttpsSSLManager() throws Exception {\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "        KeyStore ks = KeyStore.getInstance(\"JKS\");\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "        ks.load(new FileInputStream(\"trustedCerts\"),\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "                \"passphrase\".toCharArray());\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      },
                      {
                        "line": "        TrustManagerFactory tmf =\n",
                        "lineNumber": 37,
                        "lineChange": "added"
                      },
                      {
                        "line": "                TrustManagerFactory.getInstance(\"SunX509\", \"SunJSSE\");\n",
                        "lineNumber": 38,
                        "lineChange": "added"
                      },
                      {
                        "line": "        tmf.init(ks);\n",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "        TrustManager tms[] = tmf.getTrustManagers();\n",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "        for (int i = 0; i < tms.length; i++) {\n",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "            if (tms[i] instanceof X509TrustManager) {\n",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "                sunJSSEX509TrustManager = (X509TrustManager) tms[i];\n",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "                return;\n",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "            }\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 46,
                        "lineChange": "added"
                      },
                      {
                        "line": "        throw new Exception(\"Couldn't initialize\");\n",
                        "lineNumber": 47,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 48,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 49,
                        "lineChange": "added"
                      },
                      {
                        "line": "    @Override\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException {\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 29,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        try {\n",
                        "lineNumber": 52,
                        "lineChange": "added"
                      },
                      {
                        "line": "            sunJSSEX509TrustManager.checkClientTrusted(chain, authType);\n",
                        "lineNumber": 53,
                        "lineChange": "added"
                      },
                      {
                        "line": "        } catch (CertificateException e) {\n",
                        "lineNumber": 54,
                        "lineChange": "added"
                      },
                      {
                        "line": "            e.printStackTrace();\n",
                        "lineNumber": 55,
                        "lineChange": "added"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 56,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/mariadb-corporation/mariadb-connector-j/commit/73dc67efdab39fdf767f206fa2736785bfd42194?diff=split#diff-961623ebbdbcacaf50c32603bfeec04ba04a336706c04ed20037523dfeca35a6L-1",
                    "lines": [
                      {
                        "line": "@Override\n",
                        "lineNumber": 185,
                        "lineChange": "none"
                      },
                      {
                        "line": "public void checkClientTrusted(X509Certificate[] x509Certificates, String string) throws CertificateException {\n",
                        "lineNumber": 186,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (trustManager == null) return;\n",
                        "lineNumber": 187,
                        "lineChange": "added"
                      },
                      {
                        "line": "    trustManager.checkClientTrusted(x509Certificates, string);\n",
                        "lineNumber": 188,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 26,
                "cwe": [
                  "CWE-295"
                ]
              }
            },
            {
              "id": "java/NonCryptoHardcodedSecret",
              "name": "NonCryptoHardcodedSecret",
              "shortDescription": {
                "text": "Use of Hardcoded, Security-relevant Constants"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n## Best practices for prevention\n* Never hard code security-related constants; use symbolic names or configuration lookup files.\n* As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n* Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "NonCryptoHardcodedSecret",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/shuxianfeng/movision/commit/5ee84a05bac382bea508e6a42da3330b1ccf4371?diff=split#diff-bdd70437062ccb0d3735e4c014d182875ef0c029af6c9c8c3e2a42e4136d410fL-1",
                    "lines": [
                      {
                        "line": "        String accessKeyId = \"LTAITI0FOKgMZQty\";\n",
                        "lineNumber": 15,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        String accessKeySecret = \"5x12H1yASg31OlPanhTCg0z0PzNr3t\";\n",
                        "lineNumber": 16,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        String accessKeyId = PropertiesLoader.getValue(\"access.key.id\");\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "        String accessKeySecret = PropertiesLoader.getValue(\"access.key.secret\");\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/xiexianbin/UEditor-for-aliyun-OSS/commit/324d6fd48c4c99d43ac30545ba30f9736b505c61?diff=split#diff-4d95e836c61d2ea3ffdda0f95df204e45f3b74f5ba58cb53c85cdb5114efa29fL-1",
                    "lines": [
                      {
                        "line": "static {\r\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "String OSSKeyPath = SystemUtil.getProjectClassesPath() + \"OSSKey.properties\";\r\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "// 生成文件输入流\r\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "FileInputStream inpf = null;\r\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "try {\r\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "    inpf = new FileInputStream(new File(OSSKeyPath));\r\n",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "    OSSKeyProperties.load(inpf);\r\n",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "    useStatus = (Boolean) OSSKeyProperties.get(\"useStatus\");\r\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "    key = (String) OSSKeyProperties.get(\"key\");\r\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "    secret = (String) OSSKeyProperties.get(\"secret\");\r\n",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "    endPoint = (String) OSSKeyProperties.get(\"endPoint\");\r\n",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "} catch (Exception e) {\r\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "    e.printStackTrace();\r\n",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "}\r\n",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "}\r\n",
                        "lineNumber": 31,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/tronprotocol/java-tron/commit/84148c19e3d15f344fc164913be5bee478c1f637?diff=split#diff-9ff136527c21b19349c00267ff04c85b76dae23a2d28bc0f17a7c5b2eac78565L-1",
                    "lines": [
                      {
                        "line": "private String ownerAddress = \"TDZdB4ogHSgU1CGrun8WXaMb2QDDkvAKQm\";\n",
                        "lineNumber": 17,
                        "lineChange": "removed"
                      },
                      {
                        "line": "private String ownerAddress = Configuration.getByPath(\"stress.conf\").getString(\"address.exchangeOwnerAddress\");\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "private long exchangeID = commonexchangeid;\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "private long quant = 1000000L;\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "private String privateKey = \"549c7797b351e48ab1c6bb5857138b418012d97526fc2acba022357d49c93ac0\";\n",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "private String privateKey = Configuration.getByPath(\"stress.conf\").getString(\"privateKey.exchangeOwnerKey\");\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 52,
                "cwe": [
                  "CWE-547"
                ]
              }
            },
            {
              "id": "go/NoHardcodedCredentials/test",
              "name": "NoHardcodedCredentials/test",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n## Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "go",
                  "NoHardcodedCredentials",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/alfred-zhong/wserver/commit/bc7d33643368e16d9801ab88f7ba2dfdc49467af?diff=split#diff-005f9a0396b938d96245e8fc04dcd633d0716b5610fd4d90c09af361625fb74dL-1",
                    "lines": [
                      {
                        "line": "userID := \"476B40DD-DFE9-4CDE-AD4F-F0A53FE18FA5\"\n",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "userID := uuid.New().String()\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/k0kubun/sqldef/commit/5ac0feda25dfa3b4a3e2201c017425beec13a02d?diff=split#diff-ed17e21a49a7d3b117a41187ac6d384ef656de942120f74001fa9b057fde5688L-1",
                    "lines": [
                      {
                        "line": "user := \"postgres\"\n",
                        "lineNumber": 8,
                        "lineChange": "removed"
                      },
                      {
                        "line": "password := \"\"\n",
                        "lineNumber": 9,
                        "lineChange": "removed"
                      },
                      {
                        "line": "host := \"127.0.0.1:5432\"\n",
                        "lineNumber": 10,
                        "lineChange": "removed"
                      },
                      {
                        "line": "user := config.User\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "password := config.Password\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "host := fmt.Sprintf(\"%s:%d\", config.Host, config.Port)\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/fjukstad/kvik/commit/254d8dd1c34e017b1aac1493286a3f3b773ff40c?diff=split#diff-6a37a2c5ea8c5a951b2830b342cc07312e7cfa6eb69afdecc4b5bfce636f28e0L-1",
                    "lines": [
                      {
                        "line": "//addr := \"192.168.99.100:8004\"\n",
                        "lineNumber": 12,
                        "lineChange": "removed"
                      },
                      {
                        "line": "addr := \"public.opencpu.org\"\n",
                        "lineNumber": 13,
                        "lineChange": "removed"
                      },
                      {
                        "line": "username := \"user\"\n",
                        "lineNumber": 14,
                        "lineChange": "removed"
                      },
                      {
                        "line": "password := \"password\"\n",
                        "lineNumber": 15,
                        "lineChange": "removed"
                      },
                      {
                        "line": "addr := \"localhost:8181\"\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "//addr := \"public.opencpu.org\"\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "username := \"\"\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      },
                      {
                        "line": "password := \"\"\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 71,
                "cwe": [
                  "CWE-798"
                ]
              }
            },
            {
              "id": "java/DisablesCSRFProtection",
              "name": "DisablesCSRFProtection",
              "shortDescription": {
                "text": "Cross-Site Request Forgery (CSRF)"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "\n## Details\nCross-site request forgery is an attack in which a malicious third party takes advantage of a user's authenticated credentials (such as a browser cookie) to impersonate that trusted user and perform unauthorized actions. The web application server cannot tell the difference between legitimate and malicious requests. This type of attack generally begins by tricking the user with a social engineering attack, such as a link or popup that the user inadvertently clicks, causing an unauthorized request to be sent to the web server. Consequences vary: At a standard user level, attackers can change passwords, transfer funds, make purchases, or connect with contacts; from an administrator account, attackers can then make changes to or even take down the app itself.\n\n## Best practices for prevention\n* Use development frameworks that defend against CSRF, using a nonce, hash, or some other security device to the URL and/or to forms.\n* Implement secure, unique, hidden tokens that are checked by the server each time to validate state-change requests.\n* Never assume that authentication tokens and session identifiers mean a request is legitimate.\n* Understand and implement other safe-cookie techniques, such as double submit cookies.\n* Terminate user sessions when not in use, including automatic timeout.\n* Ensure rigorous coding practices and defenses against other commonly exploited CWEs, since cross-site scripting (XSS), for example, can be used to bypass defenses against CSRF.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "DisablesCSRFProtection",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/13482477/JFDF/commit/3326a94a203ab334e9185d93beadc38b9c93b100?diff=split#diff-a9f9136673bc42f9fcd901899a430de1862ad2f7cda4150ce17bbddbd5909851L-1",
                    "lines": [
                      {
                        "line": "http\r\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": ".authorizeRequests()\r\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t.antMatchers(new String[] {\r\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\"/login\",\r\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\"/logout\",\r\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\"/**/*.css\",\r\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\"/**/*.js\",\r\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\"/**/*.woff\",\r\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\"/**/*.woff2\",\r\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\"/**/*.css.map\",\r\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\"/**/*.ttf\",\r\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\"/**/*.png\",\r\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\"/**/*.jpg\",\r\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\"/**/*.jpeg\",\r\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\"/**/*.gif\",\r\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t}).permitAll()\r\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t.anyRequest().authenticated()\r\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t.and()\r\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": ".formLogin()\r\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t.loginPage(\"/login\")\r\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t.defaultSuccessUrl(\"/index\")\r\n",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t.failureHandler(new FeedbackLoginInfoAuthenticationFailureHandler(\"/login\"))\r\n",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t.and()\r\n",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": ".logout()\r\n",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t.logoutUrl(\"/logout\")\r\n",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t.logoutSuccessUrl(\"/login\")\r\n",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t.and()\r\n",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": ".csrf()\r\n",
                        "lineNumber": 64,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t.disable();\r\n",
                        "lineNumber": 65,
                        "lineChange": "removed"
                      },
                      {
                        "line": ".csrf();\r\n",
                        "lineNumber": 64,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/mpalourdio/SpringBootAngularHTML5/commit/26ef0b0520066f2dfa0954e13c6a77d29111dcaf?diff=split#diff-f929f184271d7b4d6e4d5efd1c2dbc3666f1e583c083fbcb7efbe634085401e4L-1",
                    "lines": [
                      {
                        "line": "    @Override\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "    protected void configure(HttpSecurity http) throws Exception {\n",
                        "lineNumber": 12,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        http.csrf().disable();\n",
                        "lineNumber": 13,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    public void configure(WebSecurity web) throws Exception {\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "        super.configure(web);\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/SourceLabOrg/kafka-webview/commit/dc56a20e4824c9030fc3240a94251387fdc2efc4?diff=split#diff-e2cc136c8778b4f686ec8f2457379300e6d94491266803e1a202f107beb98407L-1",
                    "lines": [
                      {
                        "line": "        http\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "            .csrf().disable()\n",
                        "lineNumber": 38,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            // CSRF Enabled\n",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "            .csrf().and()\n",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "            // But wide open access, no user support yet.\n",
                        "lineNumber": 42,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 42,
                "cwe": [
                  "CWE-352"
                ]
              }
            },
            {
              "id": "java/InsecureHash",
              "name": "InsecureHash",
              "shortDescription": {
                "text": "Use of Password Hash With Insufficient Computational Effort"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n## Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "InsecureHash",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/javabeanz/owasp-security-logging/commit/477ecf68f3102f309f3ec9af01ab852294cbd826?diff=split#diff-c14e8b3d208e6acad1c0ca88a8a8227e4140088dfe2206349680aec0558df5cbL-1",
                    "lines": [
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"SHA-1\");\n",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/serenity-bdd/serenity-core/commit/0f81a03ae3f907922a05167688dadc8c3e3fbfb8?diff=split#diff-801c01409e6adce75757fddee032ee993bc0d54328d0632f7d728689a4b8effdL-1",
                    "lines": [
                      {
                        "line": "return DigestUtils.md5Hex(screenshotData) + \".png\";\n",
                        "lineNumber": 7,
                        "lineChange": "removed"
                      },
                      {
                        "line": "return DigestUtils.sha256Hex(screenshotData) + \".png\";\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/freenet/fred/commit/90a727b4116eafd4b6892fa49295966de4e355ae?diff=split#diff-385b90a2c9a20669f73977a4d82d2dcebad9b0728cfe0479f26285a8cec90bbeL-1",
                    "lines": [
                      {
                        "line": "md = MessageDigest.getInstance(\"SHA-1\");\n",
                        "lineNumber": 75,
                        "lineChange": "removed"
                      },
                      {
                        "line": "md = MessageDigest.getInstance(\"SHA-256\");\n",
                        "lineNumber": 75,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 64,
                "cwe": [
                  "CWE-916"
                ]
              }
            },
            {
              "id": "java/TooPermissiveHostnameVerifier",
              "name": "TooPermissiveHostnameVerifier",
              "shortDescription": {
                "text": "Improper Certificate Validation"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nCommunication through encrypted TLS/SSL protocols can only take place when the server bears a valid certificate associating that server with a valid public-key identity issued by a third-party authority. If certificate validation is cursory or incomplete, this creates a weakness whereby an attacker can spoof one or more certificate details (e.g., expiration date), gaining unauthorized access to confidential data and privileged actions.\n\n## Best practices for prevention\n* Verify all aspects of any certificate provided, particularly chain of trust (issuing authority), host identity, and expiration.\n* Limit the validity period for certificates.\n* Avoid using self-signed certificates, certificate pinning, and wildcard certificates, as these all add levels of convenience but can also lead to loss of control over site/app security.\n* Disable older and insecure protocols (for example, SSL 2.0/3.0, MD5, and 3DES).\n* Ensure that all team members are familiar with current best practices and approaches, such as current TLS protocols.\n* Implement automated and manual testing using current tools and techniques designed to reveal this and related SSL weaknesses (for example, web application scanners).",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "TooPermissiveHostnameVerifier",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/wso2-attic/product-private-paas/commit/89c5a1cabca113bf300a980fa03f953f23007291?diff=split#diff-cc88e7f244ddd3009cedf91c2872926fe4f5ccc145c0b69b19b8e60faf769e69L-1",
                    "lines": [
                      {
                        "line": "@Override public boolean verify(String s, SSLSession sslSession) {\n",
                        "lineNumber": 45,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return true;\n",
                        "lineNumber": 46,
                        "lineChange": "removed"
                      },
                      {
                        "line": "public boolean verify(String hostname, SSLSession session) {\n",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return hostname.equals(System.getProperty(Constants.HOSTNAME));\n",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/wpq2014/MyDemo/commit/bfc60f58a9425b6d97c8f601b08b6bc75f68758b?diff=split#diff-b4d9d40afc5fafbd08481172560b08dbccbc6bde8895e6544a99f0886c5a1adeL-1",
                    "lines": [
                      {
                        "line": "        try {\n",
                        "lineNumber": 28,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            OkHttpClient client = new OkHttpClient.Builder()\n",
                        "lineNumber": 29,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    //            .socketFactory(javax.net.ssl.SSLSocketFactory.getDefault())\n",
                        "lineNumber": 30,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                    .connectTimeout(20, TimeUnit.SECONDS)\n",
                        "lineNumber": 31,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                    .writeTimeout(20, TimeUnit.SECONDS)\n",
                        "lineNumber": 32,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                    .readTimeout(20, TimeUnit.SECONDS)\n",
                        "lineNumber": 33,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                    .hostnameVerifier(new HostnameVerifier() {\n",
                        "lineNumber": 34,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                        @Override\n",
                        "lineNumber": 35,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                        public boolean verify(String hostname, SSLSession session) {\n",
                        "lineNumber": 36,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                            return true;\n",
                        "lineNumber": 37,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                        }\n",
                        "lineNumber": 38,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                    })\n",
                        "lineNumber": 39,
                        "lineChange": "removed"
                      },
                      {
                        "line": "//                    .sslSocketFactory(OkHttpClientManager.getSSLSocketFactory(getAssets().open(\"miaoyiapp.cer\")))\n",
                        "lineNumber": 40,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                    .socketFactory(OkHttpClientManager.getSSLSocketFactory(getAssets().open(\"_.miaoyiapp.com.cer\")))\n",
                        "lineNumber": 41,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                    .addInterceptor(new Interceptor() {\n",
                        "lineNumber": 42,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                        @Override\n",
                        "lineNumber": 43,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                        public Response intercept(Chain chain) throws IOException {\n",
                        "lineNumber": 44,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                            Request request = chain.request()\n",
                        "lineNumber": 45,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                                    .newBuilder()\n",
                        "lineNumber": 46,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                                    .addHeader(\"x-app-platform\", \"Android\")\n",
                        "lineNumber": 47,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                                    .addHeader(\"x-app-id\", \"miaoyi\")\n",
                        "lineNumber": 48,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                                    .addHeader(\"Content-Type\", \"application/json\")\n",
                        "lineNumber": 49,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                                    .build();\n",
                        "lineNumber": 50,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                            return chain.proceed(request);\n",
                        "lineNumber": 51,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                        }\n",
                        "lineNumber": 52,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                    })\n",
                        "lineNumber": 53,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                    .build();\n",
                        "lineNumber": 54,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            OkHttpUtils.initClient(client);\n",
                        "lineNumber": 55,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        } catch (Exception e) {\n",
                        "lineNumber": 56,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            e.printStackTrace();\n",
                        "lineNumber": 57,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        Fresco.initialize(this);\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "        OkHttpClientManager.init(this);\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/vanita5/twittnuker/commit/990af33b71cecccffe756e3e17d8e45b4e927dd6?diff=split#diff-ba9da8f640b0e36931f66e0f301a60ae2bcde8ae26290362eda8c7199ecc1f5eL-1",
                    "lines": [
                      {
                        "line": "\n",
                        "lineNumber": 79,
                        "lineChange": "none"
                      },
                      {
                        "line": "        builder.connectTimeout(connectionTimeoutSeconds, TimeUnit.SECONDS);\n",
                        "lineNumber": 80,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 81,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        if (ignoreSslError) {\n",
                        "lineNumber": 82,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            // We use insecure connections intentionally\n",
                        "lineNumber": 83,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            final int sslConnectTimeout = ((int) TimeUnit.SECONDS.toMillis(connectionTimeoutSeconds));\n",
                        "lineNumber": 84,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            builder.sslSocketFactory(SSLCertificateSocketFactory.getInsecure(sslConnectTimeout, null));\n",
                        "lineNumber": 85,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            builder.hostnameVerifier(new HostnameVerifier() {\n",
                        "lineNumber": 86,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                @Override\n",
                        "lineNumber": 87,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                public boolean verify(String hostname, SSLSession session) {\n",
                        "lineNumber": 88,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                    return true;\n",
                        "lineNumber": 89,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                }\n",
                        "lineNumber": 90,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            });\n",
                        "lineNumber": 91,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 92,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        builder.connectTimeout(connectionTimeoutMillis, TimeUnit.MILLISECONDS);\n",
                        "lineNumber": 75,
                        "lineChange": "added"
                      },
                      {
                        "line": "        if (enableProxy) {\n",
                        "lineNumber": 93,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 43,
                "cwe": [
                  "CWE-295"
                ]
              }
            },
            {
              "id": "java/PT/test",
              "name": "PT/test",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "PT",
                  "Security",
                  "InTest",
                  "SourceNonServer",
                  "SourceResourceAccess",
                  "SourceArchive",
                  "Taint"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/blackducksoftware/synopsys-detect/commit/36555b9322986e9560f241d05f2262c29a17663b?diff=split#diff-0762b4660a948292965002710b58e8fdfe28da3fe4aacdf01a6bac7406a33934L-1",
                    "lines": [
                      {
                        "line": "import java.nio.file.Path;\r\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "import java.util.Enumeration;\r\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "import java.util.zip.ZipEntry;\r\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "import java.util.zip.ZipFile;\r\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "import org.apache.commons.compress.utils.IOUtils;\r\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "public class DetectZipUtil {\r\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public static void unzip(File zip, File dest, Charset charset) throws IOException {\r\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Path destPath = dest.toPath();\r\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try (ZipFile zipFile = new ZipFile(zip, ZipFile.OPEN_READ, charset)) {\r\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "            Enumeration<? extends ZipEntry> entries = zipFile.entries();\r\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "            while (entries.hasMoreElements()) {\r\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "                ZipEntry entry = entries.nextElement();\r\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "                Path entryPath = destPath.resolve(entry.getName());\r\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "                if (!entryPath.normalize().startsWith(dest.toPath()))\r\n",
                        "lineNumber": 48,
                        "lineChange": "added"
                      },
                      {
                        "line": "                    throw new IOException(\"Zip entry contained path traversal\");\r\n",
                        "lineNumber": 49,
                        "lineChange": "added"
                      },
                      {
                        "line": "                if (entry.isDirectory()) {\r\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    Files.createDirectories(entryPath);\r\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "                } else {\r\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    Files.createDirectories(entryPath.getParent());\r\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    try (InputStream in = zipFile.getInputStream(entry)) {\r\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "                        try (OutputStream out = new FileOutputStream(entryPath.toFile())) {\r\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/tingley/globalsight/commit/9e9ea721f67f3a7b7c8d207f34ea549fb4ec52ee?diff=split#diff-10bf7160d01d941d63b0f194ae52f54d3b55ae8e8e33beaa7334783770d39117L-1",
                    "lines": [
                      {
                        "line": " File rootFile = new File(docRoot);\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "  String rootPath = rootFile.getCanonicalPath();\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "  String path = file.getCanonicalPath();\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "  if (!path.startsWith(rootPath)) {\n",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": " \t out.print(\"Failed to get XSL file for reason: Bad pathname.\");\n",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": " \t return;\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "  input =  new BufferedReader(new FileReader(file));\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/OpenRefine/OpenRefine/commit/7f7b71459ca031978c3f8024cb14af13446d6d9c?diff=split#diff-c8321cdc05ebb81f79c44f1f701d1659b3b20baa5d22df0c9ff29cdc5ec7d1a6L-1",
                    "lines": [
                      {
                        "line": "// For CVE-2018-19859, issue #1840\n",
                        "lineNumber": 443,
                        "lineChange": "added"
                      },
                      {
                        "line": "if (!file.toPath().normalize().startsWith(dir.toPath().normalize())) {\n",
                        "lineNumber": 444,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tthrow new IllegalArgumentException(\"Zip archives with files escaping their root directory are not allowed.\");\n",
                        "lineNumber": 445,
                        "lineChange": "added"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 446,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 447,
                        "lineChange": "none"
                      },
                      {
                        "line": "int dot = name.indexOf('.');\n",
                        "lineNumber": 448,
                        "lineChange": "none"
                      },
                      {
                        "line": "String prefix = dot < 0 ? name : name.substring(0, dot);\n",
                        "lineNumber": 449,
                        "lineChange": "none"
                      },
                      {
                        "line": "String suffix = dot < 0 ? \"\" : name.substring(dot);\n",
                        "lineNumber": 450,
                        "lineChange": "none"
                      },
                      {
                        "line": "int index = 2;\n",
                        "lineNumber": 451,
                        "lineChange": "none"
                      },
                      {
                        "line": "while (file.exists()) {\n",
                        "lineNumber": 452,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 49,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "javascript/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "PT",
                  "Security",
                  "SourceNonServer",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "<unknown>",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/eclipse-vertx/vert.x/commit/d1183271de193b6bef158e2b1dfb5ba65a15cbc9?diff=split#diff-fa3b44a1f7fa945e9aedd043ef316ad52d191aef30871789663bea3426ba14baL-1",
                    "lines": [
                      {
                        "line": "} else if (req.path.indexOf('..') == -1) {\n",
                        "lineNumber": 8,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  req.response.sendFile(\".\" + req.path);\n",
                        "lineNumber": 9,
                        "lineChange": "removed"
                      },
                      {
                        "line": "} else if (req.path().indexOf('..') == -1) {\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "  req.response.sendFile(\".\" + req.path());\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/iamfrntdv/adm-dev-kit/commit/8edeb067e703a642cb7ac7c88fb95fce8dd9c248?diff=split#diff-52baeef6a12dda5ae6078825eeb32958966ba6cbdd56792899f6273fecd26eabL-1",
                    "lines": [
                      {
                        "line": "const img = fs.readFileSync(filePath);\n",
                        "lineNumber": 7,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.end(img);\n",
                        "lineNumber": 8,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.sendFile(filePath, {root: './'});\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/substack/shipboard/commit/e2722480410eea3f3d7b51730dcdea49df649cd2?diff=split#diff-e727e4bdf3657fd1d798edcd6b099d6e092f8573cba266154583a746bba0f346L-1",
                    "lines": [
                      {
                        "line": "    if (has(pages, req.url)) {\n",
                        "lineNumber": 14,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    var p = req.url.split(/[#?]/)[0];\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (p === '/') {\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "        html('layout.html').pipe(hyperstream({\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "            '#content': html(pages[req.url])\n",
                        "lineNumber": 16,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            '[page=create]': html('create.html'),\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "            '[page=view]': html('view.html'),\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "            '[page=edit]': html('edit.html')\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "        })).pipe(res);\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else st(req, res);\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "};\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "function html (file) {\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return fs.createReadStream(path.join(__dirname, 'html', file));\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 40,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "java/SpringCSRF",
              "name": "SpringCSRF",
              "shortDescription": {
                "text": "Spring Cross-Site Request Forgery (CSRF)"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nWhen a web server is designed to receive a request from a client without any mechanism for verifying that it was intentionally sent, then it might be possible for an attacker to trick a client into making an unintentional request to the web server which will be treated as an authentic request. This can be done via a URL, image load, XMLHttpRequest, etc. and can result in exposure of data or unintended code execution.\n\n## Best practices for prevention\n* Use a vetted library or framework which has anti-CSRF packages that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Consider including Spring Security library within your application.\n\n\n## References\n* [Spring Security Docs](https://docs.spring.io/spring-security/site/docs/5.0.x/reference/html/csrf.html)\n* [A Guide to CSRF Protection in Spring Security](https://www.baeldung.com/spring-security-csrf)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "SpringCSRF",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-352"
                ]
              }
            },
            {
              "id": "java/NoHardcodedCredentials/test",
              "name": "NoHardcodedCredentials/test",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n## Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "NoHardcodedCredentials",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-798"
                ]
              }
            },
            {
              "id": "java/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "PT",
                  "Security",
                  "SourceNonServer",
                  "SourceLocalEnv",
                  "SourceEnvironmentVariable",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/blackducksoftware/synopsys-detect/commit/36555b9322986e9560f241d05f2262c29a17663b?diff=split#diff-0762b4660a948292965002710b58e8fdfe28da3fe4aacdf01a6bac7406a33934L-1",
                    "lines": [
                      {
                        "line": "import java.nio.file.Path;\r\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "import java.util.Enumeration;\r\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "import java.util.zip.ZipEntry;\r\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "import java.util.zip.ZipFile;\r\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "import org.apache.commons.compress.utils.IOUtils;\r\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "public class DetectZipUtil {\r\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public static void unzip(File zip, File dest, Charset charset) throws IOException {\r\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Path destPath = dest.toPath();\r\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try (ZipFile zipFile = new ZipFile(zip, ZipFile.OPEN_READ, charset)) {\r\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "            Enumeration<? extends ZipEntry> entries = zipFile.entries();\r\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "            while (entries.hasMoreElements()) {\r\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "                ZipEntry entry = entries.nextElement();\r\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "                Path entryPath = destPath.resolve(entry.getName());\r\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "                if (!entryPath.normalize().startsWith(dest.toPath()))\r\n",
                        "lineNumber": 48,
                        "lineChange": "added"
                      },
                      {
                        "line": "                    throw new IOException(\"Zip entry contained path traversal\");\r\n",
                        "lineNumber": 49,
                        "lineChange": "added"
                      },
                      {
                        "line": "                if (entry.isDirectory()) {\r\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    Files.createDirectories(entryPath);\r\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "                } else {\r\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    Files.createDirectories(entryPath.getParent());\r\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    try (InputStream in = zipFile.getInputStream(entry)) {\r\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "                        try (OutputStream out = new FileOutputStream(entryPath.toFile())) {\r\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/tingley/globalsight/commit/9e9ea721f67f3a7b7c8d207f34ea549fb4ec52ee?diff=split#diff-10bf7160d01d941d63b0f194ae52f54d3b55ae8e8e33beaa7334783770d39117L-1",
                    "lines": [
                      {
                        "line": " File rootFile = new File(docRoot);\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "  String rootPath = rootFile.getCanonicalPath();\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "  String path = file.getCanonicalPath();\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "  if (!path.startsWith(rootPath)) {\n",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": " \t out.print(\"Failed to get XSL file for reason: Bad pathname.\");\n",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": " \t return;\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "  input =  new BufferedReader(new FileReader(file));\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/OpenRefine/OpenRefine/commit/7f7b71459ca031978c3f8024cb14af13446d6d9c?diff=split#diff-c8321cdc05ebb81f79c44f1f701d1659b3b20baa5d22df0c9ff29cdc5ec7d1a6L-1",
                    "lines": [
                      {
                        "line": "// For CVE-2018-19859, issue #1840\n",
                        "lineNumber": 443,
                        "lineChange": "added"
                      },
                      {
                        "line": "if (!file.toPath().normalize().startsWith(dir.toPath().normalize())) {\n",
                        "lineNumber": 444,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tthrow new IllegalArgumentException(\"Zip archives with files escaping their root directory are not allowed.\");\n",
                        "lineNumber": 445,
                        "lineChange": "added"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 446,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 447,
                        "lineChange": "none"
                      },
                      {
                        "line": "int dot = name.indexOf('.');\n",
                        "lineNumber": 448,
                        "lineChange": "none"
                      },
                      {
                        "line": "String prefix = dot < 0 ? name : name.substring(0, dot);\n",
                        "lineNumber": 449,
                        "lineChange": "none"
                      },
                      {
                        "line": "String suffix = dot < 0 ? \"\" : name.substring(dot);\n",
                        "lineNumber": 450,
                        "lineChange": "none"
                      },
                      {
                        "line": "int index = 2;\n",
                        "lineNumber": 451,
                        "lineChange": "none"
                      },
                      {
                        "line": "while (file.exists()) {\n",
                        "lineNumber": 452,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 49,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "python/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "PT",
                  "Security",
                  "SourceNonServer",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/Guad/fuwa/commit/955baf1c0e8824f08a96e48a350ee3cd0e3c5493?diff=split#diff-568470d013cd12e4f388206520da39ab9a4e4c3c6b95846cbc281abc1ba3c959L-1",
                    "lines": [
                      {
                        "line": "import string, random\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "import string, random, hashlib, os\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      },
                      {
                        "line": "from werkzeug import secure_filename\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      },
                      {
                        "line": "#Load config file\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "config = {}\n",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "with open('config.ini', 'r') as file:\n",
                        "lineNumber": 6,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tfor line in file.read().splitlines():\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tline = line.split('==')\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tconfig[line[0]] = line[1]\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "app = flask.Flask(__name__) #Initialize our application\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.config['MAX_CONTENT_LENGTH'] = 10 * 1024 * 1024 #Set the upload limit to 10MiB\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "def genHash(seed): #Generate five letter filenames for our files\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "    base = string.ascii_lowercase+string.digits \n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "    random.seed(seed)\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "    hash_value = \"\"\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for i in range(5):\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "        hash_value += random.choice(base)\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return hash_value\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "@app.route('/', methods=['GET', 'POST'])\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "def index():\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tif flask.request.method == 'POST':\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\"\"\"\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tFile upload happens here.\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tWe get your filename and convert it to our hash with your extension.\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tThen we redirect to the file itself.\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\"\"\"\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tf = flask.request.files['file']\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\textension = f.filename.split('.')[-1]\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tfilename = genHash(f.filename) + '.' + extension\n",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tf.save('static/files/%s' % filename)\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tprint 'Uploaded file \\'%s\\'' % filename #Log what file was uploaded\n",
                        "lineNumber": 27,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\treturn flask.redirect(flask.url_for('getFile', filename=filename))\n",
                        "lineNumber": 28,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\thasher = hashlib.md5() \t\t\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tbuf = f.read()\t\t   \t\t\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tf.seek(0) #Set cursor back to position 0 so we can read it again in the save function.\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\t\t\t\t\t\t\t# We hash the file to get its filename.\t   \t\t\n",
                        "lineNumber": 37,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\t\t\t\t\t\t\t# So that we can upload two different images with the same filename,\n",
                        "lineNumber": 38,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\thasher.update(buf)\t   \t\t# But not two same images with different filenames.\n",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tdirname = genHash(hasher.hexdigest())\n",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tif not os.path.exists(\"static/files/%s\" % dirname): # Check if the folder already exists\n",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tos.mkdir('static/files/%s' % dirname) #Make it\n",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tf.save('static/files/%s/%s' % (dirname, secure_filename(f.filename)))\n",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tprint 'Uploaded file \\'%s\\'' % secure_filename(f.filename) #Log what file was uploaded\n",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\treturn flask.redirect(flask.url_for('getFile', dirname=dirname,filename=secure_filename(f.filename)))\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\telse:\n",
                        "lineNumber": 46,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tflask.flash('File already exists in %s!' % dirname) #Display a message for the user.\n",
                        "lineNumber": 47,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\treturn flask.redirect(flask.url_for('index'))\n",
                        "lineNumber": 48,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/fonttools/fonttools/commit/0b99c8968e04e2e36c6c46ad8bb1a550d25969b4?diff=split#diff-e8b6161353c7ce5b13e62df1da329a85de0ef80ce8f039d283c25bf892b2b600L-1",
                    "lines": [
                      {
                        "line": "os.system('gzip -9v %s' % tar)\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "os.rename(gz, tgz)\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "if destdir:\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tprint \"destination directory:\", destdir\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tos.system('mv %s %s' % (gz, destdir))\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Chenwe-i-lin/KnowledgeFruits/commit/?diff=split#diff-ab8c675e5b4b07c550455b0884835f1df471bb69ad7142f6ad43b26cf33eb4e6L-1",
                    "lines": [
                      {
                        "line": "base_path = os.path.abspath(os.path.dirname(__file__))\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "base_path_for_data =  os.path.join(base_path,'data/texture')\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "file = os.path.join(base_path_for_data, image + '.png')\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "if os.path.abspath(file).startswith(base_path_for_data):\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "with open(os.getcwd() + \"/data/texture/\" + image + '.png', \"rb\") as f:\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 36,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "javascript/IndirectCommandInjection",
              "name": "IndirectCommandInjection",
              "shortDescription": {
                "text": "Command Injection"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nWith an OS command injection attack a web application user can pass commands directly to the system shell, attached to a legitimate request. These commands can then be executed on the application server, potentially leading to harmful consequences, including data exposure or deletion. Like code injection attacks, command injection attacks are essentially a failure of data validation. Unlike code injection attacks, which introduce new code, command injection attacks use existing system functions, often taking advantage of the application's unnecessarily high privilege level, increasing the risk of serious harm and reputational damage.\n\n## Best practices for prevention\n- Never trust user input. Assume any input may transmit harmful values.\n- Adopt the principle of least privilege: No application should have a greater access level than needed to run its required tasks.\n- Control user access policies on a task-by-task basis.\n- Don't pass user input directly to the system; use libraries or APIs that lack system access.\n- Where shell commands must be passed, escape values using functions like shlex for Python, or escapeshellarg() for PHP.\n- Sanitize user input with regular expressions to define permitted characters along with maximum string length.\n- Convert special characters such as `& |  ; $ > < \\ !` before passing to the server.\n- Whitelist permitted commands and validate user responses against these expectations.\n- Remember that code injection can take place on multiple fronts: GET and POST requests, but also cookies and HTTP headers.\n- Ensure up-to-date patching across all systems to remediate known vulnerabilities.\n- Educate all team members on safer data handling procedures to prevent attacks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "IndirectCommandInjection",
                  "Security",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/cozy/create-cozy-app/commit/18f2d8927f5cfcf1145b296b54579d5e223f9316?diff=split#diff-92924b69babda11fbd5cc3c51bc4e8c05228c5257c418ba70e7cfa44aad52f78L-1",
                    "lines": [
                      {
                        "line": "const { exec } = require('child_process')\n",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const spawn = require('cross-spawn')\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "module.exports = () => {\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "  const argv = process.argv.slice(3)\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "  exec(`eslint ${argv.join(' ')}`, (err, stdout) => {\n",
                        "lineNumber": 7,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    console.log(stdout)\n",
                        "lineNumber": 8,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  })\n",
                        "lineNumber": 9,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  spawn.sync('eslint', argv, { stdio: 'inherit' })\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/storyteller/Storyteller/commit/ddb531dc473c64ad98a470d87984abbd403bcdac?diff=split#diff-25789e3ba4c2adf4a68996260eb693a441b4a834c38b76167a120f0b51b969f7L-1",
                    "lines": [
                      {
                        "line": "    var cmd = executable + ' ' + dll + ' --NUnitXml TestResult.xml';\n",
                        "lineNumber": 68,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    run(cmd).exec();\n",
                        "lineNumber": 69,
                        "lineChange": "removed"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 70,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    var output = child_process.spawnSync(executable, [dll, '--NUnitXml', 'TestResult.xml']);\n",
                        "lineNumber": 61,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/chrisjpatty/create-react-redux-router-app/commit/7f4ff133dd5338bcabcf0bb8aa46fe6f34c32fa1?diff=split#diff-e727e4bdf3657fd1d798edcd6b099d6e092f8573cba266154583a746bba0f346L-1",
                    "lines": [
                      {
                        "line": "shell.exec(`cd ${appName}`, ()=>{resolve()})\n",
                        "lineNumber": 40,
                        "lineChange": "removed"
                      },
                      {
                        "line": "shell.cd(appDirectory)\n",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "resolve()\n",
                        "lineNumber": 41,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 40,
                "cwe": [
                  "CWE-78"
                ]
              }
            },
            {
              "id": "java/TooPermissiveTrustManager",
              "name": "TooPermissiveTrustManager",
              "shortDescription": {
                "text": "Improper Certificate Validation"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nCommunication through encrypted TLS/SSL protocols can only take place when the server bears a valid certificate associating that server with a valid public-key identity issued by a third-party authority. If certificate validation is cursory or incomplete, this creates a weakness whereby an attacker can spoof one or more certificate details (e.g., expiration date), gaining unauthorized access to confidential data and privileged actions.\n\n## Best practices for prevention\n* Verify all aspects of any certificate provided, particularly chain of trust (issuing authority), host identity, and expiration.\n* Limit the validity period for certificates.\n* Avoid using self-signed certificates, certificate pinning, and wildcard certificates, as these all add levels of convenience but can also lead to loss of control over site/app security.\n* Disable older and insecure protocols (for example, SSL 2.0/3.0, MD5, and 3DES).\n* Ensure that all team members are familiar with current best practices and approaches, such as current TLS protocols.\n* Implement automated and manual testing using current tools and techniques designed to reveal this and related SSL weaknesses (for example, web application scanners).",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "TooPermissiveTrustManager",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/yeriomin/YalpStore/commit/4bcddf049328e961399cb2a5dcd8b8091c498fb5?diff=split#diff-ecf6b03aa31abb56639b85e2523164f43612495b994d0dea719fb98e8e16ccb9L-1",
                    "lines": [
                      {
                        "line": "import java.security.cert.CertificateException;\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      },
                      {
                        "line": "import javax.net.ssl.X509TrustManager;\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "class NullX509TrustManager implements X509TrustManager {\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "    @Override\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public void checkClientTrusted(java.security.cert.X509Certificate[] x509Certificates, String s) throws java.security.cert.CertificateException {\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "        // not implemented\n",
                        "lineNumber": 8,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        try {\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "            x509Certificates[0].checkValidity();\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "        } catch (Exception e) {\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "            throw new CertificateException(\"Certificate not valid or trusted.\");\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/huanghaibin-dev/HttpNet/commit/f903bb22e1fa0a5132c140eb6a9210fec011dbae?diff=split#diff-8aa1ea806dfe3056586a21ba42a8a104ef9616d13369cc277547954db96d315eL-1",
                    "lines": [
                      {
                        "line": "import java.io.FileInputStream;\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "import java.security.KeyStore;\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "import java.security.cert.CertificateException;\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "import java.security.cert.X509Certificate;\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "import javax.net.ssl.TrustManager;\n",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "import javax.net.ssl.TrustManagerFactory;\n",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "import javax.net.ssl.X509TrustManager;\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "/**\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": " *\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": " */\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "public class HttpsSSLManager implements X509TrustManager {\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "    private X509TrustManager sunJSSEX509TrustManager;\n",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "    public HttpsSSLManager() throws Exception {\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "        KeyStore ks = KeyStore.getInstance(\"JKS\");\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "        ks.load(new FileInputStream(\"trustedCerts\"),\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "                \"passphrase\".toCharArray());\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      },
                      {
                        "line": "        TrustManagerFactory tmf =\n",
                        "lineNumber": 37,
                        "lineChange": "added"
                      },
                      {
                        "line": "                TrustManagerFactory.getInstance(\"SunX509\", \"SunJSSE\");\n",
                        "lineNumber": 38,
                        "lineChange": "added"
                      },
                      {
                        "line": "        tmf.init(ks);\n",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "        TrustManager tms[] = tmf.getTrustManagers();\n",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "        for (int i = 0; i < tms.length; i++) {\n",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "            if (tms[i] instanceof X509TrustManager) {\n",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "                sunJSSEX509TrustManager = (X509TrustManager) tms[i];\n",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "                return;\n",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "            }\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 46,
                        "lineChange": "added"
                      },
                      {
                        "line": "        throw new Exception(\"Couldn't initialize\");\n",
                        "lineNumber": 47,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 48,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 49,
                        "lineChange": "added"
                      },
                      {
                        "line": "    @Override\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException {\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 29,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        try {\n",
                        "lineNumber": 52,
                        "lineChange": "added"
                      },
                      {
                        "line": "            sunJSSEX509TrustManager.checkClientTrusted(chain, authType);\n",
                        "lineNumber": 53,
                        "lineChange": "added"
                      },
                      {
                        "line": "        } catch (CertificateException e) {\n",
                        "lineNumber": 54,
                        "lineChange": "added"
                      },
                      {
                        "line": "            e.printStackTrace();\n",
                        "lineNumber": 55,
                        "lineChange": "added"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 56,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/mariadb-corporation/mariadb-connector-j/commit/73dc67efdab39fdf767f206fa2736785bfd42194?diff=split#diff-961623ebbdbcacaf50c32603bfeec04ba04a336706c04ed20037523dfeca35a6L-1",
                    "lines": [
                      {
                        "line": "@Override\n",
                        "lineNumber": 185,
                        "lineChange": "none"
                      },
                      {
                        "line": "public void checkClientTrusted(X509Certificate[] x509Certificates, String string) throws CertificateException {\n",
                        "lineNumber": 186,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (trustManager == null) return;\n",
                        "lineNumber": 187,
                        "lineChange": "added"
                      },
                      {
                        "line": "    trustManager.checkClientTrusted(x509Certificates, string);\n",
                        "lineNumber": 188,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 26,
                "cwe": [
                  "CWE-295"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-wrapper-prepare/src/test/java/com/mercedesbenz/sechub/wrapper/prepare/modules/skopeo/SkopeoInputValidatorTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 119,
                  "endLine": 119,
                  "startColumn": 26,
                  "endColumn": 47
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8dcf2eb9df76a94e694764c89f24182a74477c069791f6e6b0ea1e8e19a82972",
            "1": "5387ee68.e8c02a15.ecc5c209.ede9cf8e.0bf67f0b.935029da.be04624c.fde7589e.19689298.e8c02a15.fc7d5400.e22980a8.0bf67f0b.4b7bad1e.8d4f5a6c.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-wrapper-prepare/src/test/java/com/mercedesbenz/sechub/wrapper/prepare/modules/skopeo/SkopeoInputValidatorTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 26,
                            "endColumn": 47
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 417,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-wrapper-prepare/src/test/java/com/mercedesbenz/sechub/wrapper/prepare/modules/skopeo/SkopeoInputValidatorTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 171,
                  "endLine": 171,
                  "startColumn": 26,
                  "endColumn": 68
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8e2079f14f82e6fcd40a13f08a0441ebc8fb23ac155e02ef8b83216f5128cc15",
            "1": "5387ee68.e8c02a15.1f982402.ede9cf8e.0bf67f0b.935029da.7e8512fd.fde7589e.5387ee68.e8c02a15.fc7d5400.e22980a8.0bf67f0b.4e1269f6.7e8512fd.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-wrapper-prepare/src/test/java/com/mercedesbenz/sechub/wrapper/prepare/modules/skopeo/SkopeoInputValidatorTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 171,
                            "endLine": 171,
                            "startColumn": 26,
                            "endColumn": 68
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 417,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-adapter/src/test/java/com/mercedesbenz/sechub/adapter/AbstractWebScanAdapterConfigBuilderTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 70,
                  "endLine": 70,
                  "startColumn": 34,
                  "endColumn": 43
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fa0d15b9ea84bd933d02bcadad73fe8709eb885fd52f3ee10108b7c87f9098c1",
            "1": "fa5ee523.97acdc08.3675d218.26bd3afd.22b4a068.e09655a9.2e3e0d34.075dc17c.fa5ee523.bc9437f9.6074183c.907140cd.22b4a068.9c1ad5fd.78f4df00.075dc17c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-adapter/src/test/java/com/mercedesbenz/sechub/adapter/AbstractWebScanAdapterConfigBuilderTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 34,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 367,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-wrapper-prepare/src/test/java/com/mercedesbenz/sechub/wrapper/prepare/modules/git/GitInputValidatorTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 187,
                  "endLine": 187,
                  "startColumn": 26,
                  "endColumn": 68
                }
              }
            }
          ],
          "fingerprints": {
            "0": "86256874acaba32412d240e8bca76985eb08848d05bc10b61cbaba944ca93006",
            "1": "5387ee68.e8c02a15.1f982402.ede9cf8e.0bf67f0b.935029da.7e8512fd.fde7589e.5387ee68.e8c02a15.fc7d5400.e22980a8.0bf67f0b.4e1269f6.7e8512fd.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-wrapper-prepare/src/test/java/com/mercedesbenz/sechub/wrapper/prepare/modules/git/GitInputValidatorTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 187,
                            "endLine": 187,
                            "startColumn": 26,
                            "endColumn": 68
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 367,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-wrapper-prepare/src/test/java/com/mercedesbenz/sechub/wrapper/prepare/modules/skopeo/PrepareWrapperModuleSkopeoTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 86,
                  "endLine": 86,
                  "startColumn": 26,
                  "endColumn": 68
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d5295d8f92edd73be749dcb2a6068955a2b465e32adf54917ad675c16fa6936f",
            "1": "5387ee68.e8c02a15.1f982402.ede9cf8e.0bf67f0b.935029da.7e8512fd.fde7589e.5387ee68.e8c02a15.b65f5002.e22980a8.0bf67f0b.4e1269f6.29b2df3c.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-wrapper-prepare/src/test/java/com/mercedesbenz/sechub/wrapper/prepare/modules/skopeo/PrepareWrapperModuleSkopeoTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 26,
                            "endColumn": 68
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 367,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deprecated-sechub-adapter-nessus/src/test/java/com/mercedesbenz/sechub/adapter/nessus/NessusAdapterV1WireMockTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 39,
                  "endLine": 39,
                  "startColumn": 44,
                  "endColumn": 61
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8b44654b5188c9323510f206191772edc513d9fadf7b9d6825a1fe7b47839cdd",
            "1": "19f079a4.dd05ec30.5cc1370f.de031890.8b2d3351.ce109560.1148c131.3dad1119.19f079a4.dd05ec30.fa38d17f.de031890.8b2d3351.ce109560.992386c4.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "deprecated-sechub-adapter-nessus/src/test/java/com/mercedesbenz/sechub/adapter/nessus/NessusAdapterV1WireMockTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 44,
                            "endColumn": 61
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 417,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-adapter/src/test/java/com/mercedesbenz/sechub/adapter/AbstractAdapterConfigBuilderTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 157,
                  "endLine": 157,
                  "startColumn": 32,
                  "endColumn": 47
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c25d244f25d994c663c0b3ace6a822179f29c4725aa1c91365b30dc3d8c361f3",
            "1": "19689298.83dbfe52.3b40b2cb.ede9cf8e.4a9c8cbc.70a06167.79c1d8e9.54d46e25.32ce4c09.83dbfe52.3b40b2cb.e22980a8.ae63d11c.70a06167.f0e0ed1a.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-adapter/src/test/java/com/mercedesbenz/sechub/adapter/AbstractAdapterConfigBuilderTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 157,
                            "endLine": 157,
                            "startColumn": 32,
                            "endColumn": 47
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 417,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-adapter-checkmarx/src/test/java/com/mercedesbenz/sechub/adapter/checkmarx/CheckmarxAdapterV1WireMockTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 45,
                  "endLine": 45,
                  "startColumn": 44,
                  "endColumn": 61
                }
              }
            }
          ],
          "fingerprints": {
            "0": "33140f9dd536d1292d0e9a25dfc024f32ff61fd599c96cd37728e3b6e3da43e3",
            "1": "19f079a4.dd05ec30.5cc1370f.de031890.8b2d3351.ce109560.1148c131.3dad1119.19f079a4.dd05ec30.c9c5e111.de031890.a9699bba.ce109560.1148c131.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-adapter-checkmarx/src/test/java/com/mercedesbenz/sechub/adapter/checkmarx/CheckmarxAdapterV1WireMockTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 44,
                            "endColumn": 61
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 417,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-doc/src/test/java/com/mercedesbenz/sechub/restdoc/SchedulerRestControllerRestDocTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 634,
                  "endLine": 634,
                  "startColumn": 45,
                  "endColumn": 80
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e9b979ee8ca3929a22b7b894e26c341bdd3edc82faeb86f8dc9b9591718870b7",
            "1": "5387ee68.e8c02a15.0bbdcc23.d6ab05b5.d5363441.e2f0b62f.63f26063.fde7589e.19689298.e8c02a15.f0706e3f.d6ab05b5.f1d9f854.1abeb424.30f784d4.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/test/java/com/mercedesbenz/sechub/restdoc/SchedulerRestControllerRestDocTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 634,
                            "endLine": 634,
                            "startColumn": 45,
                            "endColumn": 80
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 367,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-commons-model/src/test/java/com/mercedesbenz/sechub/commons/model/ClientCertificateConfigurationTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 79,
                  "endLine": 79,
                  "startColumn": 28,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7d5df9935c1167072546cb8a6057463de04aa8172aa2441f2e9221cde75b003e",
            "1": "5387ee68.e8c02a15.313c6fd7.d6ab05b5.4a9c8cbc.e2f0b62f.397c5745.fde7589e.5387ee68.e8c02a15.43c4c681.d6ab05b5.b7990d14.e2f0b62f.397c5745.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-model/src/test/java/com/mercedesbenz/sechub/commons/model/ClientCertificateConfigurationTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 28,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 417,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-commons-model/src/test/java/com/mercedesbenz/sechub/commons/model/ClientCertificateConfigurationTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 178,
                  "endLine": 178,
                  "startColumn": 52,
                  "endColumn": 82
                }
              }
            }
          ],
          "fingerprints": {
            "0": "97c8f4414e4d790c9e15771ce7bd3017a5e6f1f03381fcd5b266b1b46d2fdef8",
            "1": "5387ee68.e8c02a15.c8a839b8.d6ab05b5.f9fa8c1e.e2f0b62f.be04624c.fde7589e.19689298.e8c02a15.f0706e3f.d6ab05b5.54e9b777.e2f0b62f.be04624c.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-model/src/test/java/com/mercedesbenz/sechub/commons/model/ClientCertificateConfigurationTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 52,
                            "endColumn": 82
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 417,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-wrapper-prepare/src/test/java/com/mercedesbenz/sechub/wrapper/prepare/modules/git/PrepareWrapperModuleGitTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 87,
                  "endLine": 87,
                  "startColumn": 26,
                  "endColumn": 68
                }
              }
            }
          ],
          "fingerprints": {
            "0": "924f8f3da38648b81a43012cf48b51a6415f457761c4bb2bd923e457cafb77b9",
            "1": "5387ee68.e8c02a15.1f982402.ede9cf8e.0bf67f0b.935029da.7e8512fd.fde7589e.94263bf5.e8c02a15.fc7d5400.e22980a8.0bf67f0b.4e1269f6.7e8512fd.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-wrapper-prepare/src/test/java/com/mercedesbenz/sechub/wrapper/prepare/modules/git/PrepareWrapperModuleGitTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 26,
                            "endColumn": 68
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 367,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-commons-model/src/test/java/com/mercedesbenz/sechub/commons/model/login/BasicLoginConfigurationTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 42,
                  "startColumn": 28,
                  "endColumn": 53
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b477f0f30cf2cf0c5cc4dafe6b15b9c0b36a097175953992ceb1b27522fde914",
            "1": "5387ee68.e8c02a15.c8a839b8.d6ab05b5.4a9c8cbc.2e21a068.397c5745.fde7589e.5387ee68.e8c02a15.fc7d5400.de031890.b7990d14.2e21a068.17b0e51b.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-model/src/test/java/com/mercedesbenz/sechub/commons/model/login/BasicLoginConfigurationTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 28,
                            "endColumn": 53
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 367,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-doc/src/test/java/com/mercedesbenz/sechub/restdoc/ProductExecutorConfigRestControllerRestDocTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 79,
                  "endLine": 79,
                  "startColumn": 62,
                  "endColumn": 191
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8a211d3eec205483a77528b01e95340770b1b13e1b0682fddb9bf07640795573",
            "1": "58341285.dd05ec30.c40d08e5.de031890.fce364bf.ce109560.e4580e17.f59541db.54a08867.63d9ef7d.c40d08e5.de031890.fce364bf.ce109560.4569a8e0.cfe78928"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/test/java/com/mercedesbenz/sechub/restdoc/ProductExecutorConfigRestControllerRestDocTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 62,
                            "endColumn": 191
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 367,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "TrustManager might be too permissive: all clients are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all clients are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-integrationtest/src/main/java/com/mercedesbenz/sechub/integrationtest/SecurityTestHelper.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 208,
                  "endLine": 208,
                  "startColumn": 39,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4f2ee279f18b5174b8e56d244888c6cb09d1756a622c847d1ac7792dda1443c7",
            "1": "d3279c65.528e35bc.8c56ae10.de031890.f0e1baa5.eacd09e2.7011a60a.1d874c72.d3279c65.528e35bc.8c56ae10.de031890.f0e1baa5.eacd09e2.7011a60a.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-integrationtest/src/main/java/com/mercedesbenz/sechub/integrationtest/SecurityTestHelper.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 208,
                            "endLine": 208,
                            "startColumn": 39,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 405,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "TrustManager might be too permissive: all clients are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all clients are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-systemtest/src/main/java/com/mercedesbenz/sechub/systemtest/pdsclient/internal/PDSApiClientBuilder.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 47,
                  "endLine": 47,
                  "startColumn": 29,
                  "endColumn": 47
                }
              }
            }
          ],
          "fingerprints": {
            "0": "20351fa63112c0e2f411c02ab408ce7681e7d85e8eae9269a13338b9ba207f2b",
            "1": "d3279c65.528e35bc.8c56ae10.de031890.f0e1baa5.eacd09e2.7011a60a.1d874c72.d3279c65.528e35bc.8c56ae10.de031890.f0e1baa5.eacd09e2.7011a60a.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-systemtest/src/main/java/com/mercedesbenz/sechub/systemtest/pdsclient/internal/PDSApiClientBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 405,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "TrustManager might be too permissive: all servers are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all servers are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-integrationtest/src/main/java/com/mercedesbenz/sechub/integrationtest/SecurityTestHelper.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 212,
                  "endLine": 212,
                  "startColumn": 39,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0f228035d341e80b468073d7bf3311e2e711ec6c5dc5196ff23c93a070c7642a",
            "1": "d3279c65.528e35bc.8c56ae10.de031890.f0e1baa5.eacd09e2.7011a60a.1d874c72.d3279c65.528e35bc.8c56ae10.de031890.f0e1baa5.eacd09e2.7011a60a.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-integrationtest/src/main/java/com/mercedesbenz/sechub/integrationtest/SecurityTestHelper.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 212,
                            "endLine": 212,
                            "startColumn": 39,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 405,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "TrustManager might be too permissive: all servers are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all servers are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-systemtest/src/main/java/com/mercedesbenz/sechub/systemtest/pdsclient/internal/PDSApiClientBuilder.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 51,
                  "endLine": 51,
                  "startColumn": 29,
                  "endColumn": 47
                }
              }
            }
          ],
          "fingerprints": {
            "0": "af440c12f08edaf31b21e64b610fc974ff4bc76fb2b2b7698a659ac3bb8417a8",
            "1": "d3279c65.528e35bc.8c56ae10.de031890.f0e1baa5.eacd09e2.7011a60a.1d874c72.d3279c65.528e35bc.8c56ae10.de031890.f0e1baa5.eacd09e2.7011a60a.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-systemtest/src/main/java/com/mercedesbenz/sechub/systemtest/pdsclient/internal/PDSApiClientBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 405,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/NonCryptoHardcodedSecret",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found hardcoded secret.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found hardcoded {0}.",
            "arguments": [
              "[secret](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-adapter-checkmarx/src/main/java/com/mercedesbenz/sechub/adapter/checkmarx/CheckmarxConstants.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 14,
                  "endLine": 14,
                  "startColumn": 56,
                  "endColumn": 94
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d31f968444d9fee6056ea4d6b227da67177a79d91f6aebdc1bcc2331afda03ee",
            "1": "2e57b24b.dd05ec30.d29876d0.de031890.8b2d3351.ce109560.e4580e17.fcac495c.55344e5c.dd05ec30.d29876d0.de031890.bb61bed7.ce109560.7115c551.fcac495c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-adapter-checkmarx/src/main/java/com/mercedesbenz/sechub/adapter/checkmarx/CheckmarxConstants.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 56,
                            "endColumn": 94
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 752,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in ASSIGN.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[ASSIGN](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-cli/src/mercedes-benz.com/sechub/cli/config_test.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 43,
                  "endLine": 43,
                  "startColumn": 2,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "310ef6531d8187af8eb2b6400904c99d9182f4655aa512f8629c2b3c9e52a8ad",
            "1": "3e0ea818.73eb5804.52a8a1ee.e22980a8.c8f211d9.67ab4541.07b057d9.1bff12d3.3e0ea818.73eb5804.52a8a1ee.e22980a8.db7259b9.67ab4541.07b057d9.1bff12d3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-cli/src/mercedes-benz.com/sechub/cli/config_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 16,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-cli/src/mercedes-benz.com/sechub/cli/config_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 2,
                            "endColumn": 28
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 405,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in ASSIGN.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[ASSIGN](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-cli/src/mercedes-benz.com/sechub/cli/config_test.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 107,
                  "endLine": 107,
                  "startColumn": 2,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ec207c7cdb4b130dd799716d7c6348e5fa0e87bf12c4e004dc01e95427c4b4a5",
            "1": "3e0ea818.73eb5804.52a8a1ee.e22980a8.c8f211d9.67ab4541.860c51ff.1bff12d3.3e0ea818.73eb5804.52a8a1ee.e22980a8.db7259b9.67ab4541.860c51ff.1bff12d3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-cli/src/mercedes-benz.com/sechub/cli/config_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 107,
                            "endLine": 107,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-cli/src/mercedes-benz.com/sechub/cli/config_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 107,
                            "endLine": 107,
                            "startColumn": 2,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 405,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in ASSIGN.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[ASSIGN](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-cli/src/mercedes-benz.com/sechub/cli/config_test.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 483,
                  "endLine": 483,
                  "startColumn": 2,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9d71e80addf195fb3f6d59e98d29bf08c92a669638e8e5caad1eb6c77e8f6d44",
            "1": "3e0ea818.73eb5804.52a8a1ee.e22980a8.c8f211d9.67ab4541.860c51ff.1bff12d3.3e0ea818.73eb5804.52a8a1ee.e22980a8.db7259b9.67ab4541.860c51ff.1bff12d3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-cli/src/mercedes-benz.com/sechub/cli/config_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 483,
                            "endLine": 483,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-cli/src/mercedes-benz.com/sechub/cli/config_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 483,
                            "endLine": 483,
                            "startColumn": 2,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 405,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "go/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in ASSIGN.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[ASSIGN](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-cli/src/mercedes-benz.com/sechub/cli/config_test.go",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 519,
                  "endLine": 519,
                  "startColumn": 2,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a11c59f6fb128d9c790347b12e3964b39f915eed9997efdc201c3aa8cc84e9e1",
            "1": "3e0ea818.3a6ae72b.52a8a1ee.e22980a8.c8f211d9.67ab4541.860c51ff.1bff12d3.3e0ea818.3a6ae72b.52a8a1ee.e22980a8.db7259b9.67ab4541.3155a03f.1bff12d3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-cli/src/mercedes-benz.com/sechub/cli/config_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 519,
                            "endLine": 519,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-cli/src/mercedes-benz.com/sechub/cli/config_test.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 519,
                            "endLine": 519,
                            "startColumn": 2,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 405,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/DisablesCSRFProtection",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "CSRF protection is disabled by csrf. This allows the attackers to execute requests on a user's behalf.",
            "markdown": "CSRF protection is disabled by {0}. This allows the attackers to execute requests on a user's behalf.",
            "arguments": [
              "[csrf](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-shared-kernel/src/main/java/com/mercedesbenz/sechub/sharedkernel/configuration/AbstractSecHubAPISecurityConfiguration.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 20,
                  "endLine": 31,
                  "startColumn": 3,
                  "endColumn": 10
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6cb62400763f3636976e0457acca01c43c4025ff7e4bd4c2e66b633018a80ef7",
            "1": "0f51f81b.0268ef4f.13c31930.a919e4a8.f17f544b.4bae721f.92978997.54d46e25.0f51f81b.0268ef4f.13c31930.32bd3632.f17f544b.4bae721f.3953228b.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-shared-kernel/src/main/java/com/mercedesbenz/sechub/sharedkernel/configuration/AbstractSecHubAPISecurityConfiguration.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 31,
                            "startColumn": 3,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 754,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/DisablesCSRFProtection",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "CSRF protection is disabled by csrf. This allows the attackers to execute requests on a user's behalf.",
            "markdown": "CSRF protection is disabled by {0}. This allows the attackers to execute requests on a user's behalf.",
            "arguments": [
              "[csrf](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-webui/src/main/java/com/mercedesbenz/sechub/webui/security/SecurityConfiguration.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 26,
                  "endLine": 39,
                  "startColumn": 6,
                  "endColumn": 8
                }
              }
            }
          ],
          "fingerprints": {
            "0": "427d66c231ae372520259f6b06b5863c1fad113ce303ae94a96bde45c3496ee4",
            "1": "2742186f.37fa1e89.13c31930.e22980a8.d35c355a.c02e305f.d6712bb3.54d46e25.2742186f.37fa1e89.13c31930.32bd3632.d35c355a.c02e305f.3953228b.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-webui/src/main/java/com/mercedesbenz/sechub/webui/security/SecurityConfiguration.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 39,
                            "startColumn": 6,
                            "endColumn": 8
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 754,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/DisablesCSRFProtection",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "CSRF protection is disabled by csrf. This allows the attackers to execute requests on a user's behalf.",
            "markdown": "CSRF protection is disabled by {0}. This allows the attackers to execute requests on a user's behalf.",
            "arguments": [
              "[csrf](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-pds/src/main/java/com/mercedesbenz/sechub/pds/security/PDSAPISecurityConfiguration.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 33,
                  "startColumn": 3,
                  "endColumn": 10
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f0662bcaf30bf2daa2f12a717987b35b54651365bd0031b63c1dec98e478f41b",
            "1": "0f51f81b.0268ef4f.13c31930.a919e4a8.f17f544b.4bae721f.92978997.54d46e25.0f51f81b.0268ef4f.13c31930.32bd3632.f17f544b.4bae721f.3953228b.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-pds/src/main/java/com/mercedesbenz/sechub/pds/security/PDSAPISecurityConfiguration.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 33,
                            "startColumn": 3,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 754,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/InsecureHash",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in java.security.MessageDigest.getInstance) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The {0} hash (used in {1}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[MD5](0)",
              "[java.security.MessageDigest.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-adapter/src/main/java/com/mercedesbenz/sechub/adapter/support/MessageDigestSupport.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 12,
                  "endLine": 12,
                  "startColumn": 19,
                  "endColumn": 44
                }
              }
            }
          ],
          "fingerprints": {
            "0": "27cbe88cc495667a45102b6e9c49028c7ca77b6c8ec0d029b3ee3819df464b00",
            "1": "ca9876a9.da263459.33fa5dbe.e22980a8.f1d9f854.7fda7c5e.2a1a68a1.54d46e25.ca9876a9.da263459.33fa5dbe.e22980a8.f1d9f854.7fda7c5e.df7e59ba.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-adapter/src/main/java/com/mercedesbenz/sechub/adapter/support/MessageDigestSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 45,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-adapter/src/main/java/com/mercedesbenz/sechub/adapter/support/MessageDigestSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 19,
                            "endColumn": 44
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 352,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/TooPermissiveHostnameVerifier",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "The verify method always returns true, which means that any hostname is accepted. Such behaviour is insecure.",
            "markdown": "The {0} method always returns {1}, which means that any hostname is accepted. Such behaviour is insecure.",
            "arguments": [
              "[verify](0)",
              "[true](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-wrapper-owasp-zap/src/main/java/com/mercedesbenz/sechub/zapwrapper/util/TargetConnectionChecker.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 178,
                  "endLine": 178,
                  "startColumn": 24,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "847ee9ea91ea014576a1fcc5a3260659204a5b72672ec5fcb1907dc8295891f9",
            "1": "f2e8f30b.7f413d6f.df604cdb.e22980a8.0681ed2b.58c3080a.f323b56d.9c4228d3.f2e8f30b.7f413d6f.df604cdb.e22980a8.0681ed2b.58c3080a.f323b56d.9c4228d3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-wrapper-owasp-zap/src/main/java/com/mercedesbenz/sechub/zapwrapper/util/TargetConnectionChecker.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 24,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-wrapper-owasp-zap/src/main/java/com/mercedesbenz/sechub/zapwrapper/util/TargetConnectionChecker.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 179,
                            "endLine": 179,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a zip file flows into mkdirs, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "arguments": [
              "[a zip file](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[mkdirs](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-testframework/src/main/java/com/mercedesbenz/sechub/test/TestUtil.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 258,
                  "endLine": 258,
                  "startColumn": 21,
                  "endColumn": 59
                }
              }
            }
          ],
          "fingerprints": {
            "0": "39690707985a1e94d30238f4254385057f131e821cf1444d3b547c35710d1cf6",
            "1": "338a57c4.97acdc08.8828b72d.e11e1d28.f1d9f854.41d8b89f.ad1e4069.54d46e25.19689298.2329d1ab.2159a181.e11e1d28.408180c7.7fda7c5e.e9cd5b21.bb8d04ae"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-testframework/src/main/java/com/mercedesbenz/sechub/test/TestUtil.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 253,
                            "endLine": 253,
                            "startColumn": 53,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-testframework/src/main/java/com/mercedesbenz/sechub/test/TestUtil.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 253,
                            "endLine": 253,
                            "startColumn": 53,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-testframework/src/main/java/com/mercedesbenz/sechub/test/TestUtil.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 253,
                            "endLine": 253,
                            "startColumn": 37,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-testframework/src/main/java/com/mercedesbenz/sechub/test/TestUtil.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 253,
                            "endLine": 253,
                            "startColumn": 28,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-testframework/src/main/java/com/mercedesbenz/sechub/test/TestUtil.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 258,
                            "endLine": 258,
                            "startColumn": 21,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-testframework/src/main/java/com/mercedesbenz/sechub/test/TestUtil.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 258,
                            "endLine": 258,
                            "startColumn": 21,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-testframework/src/main/java/com/mercedesbenz/sechub/test/TestUtil.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 258,
                            "endLine": 258,
                            "startColumn": 21,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-testframework/src/main/java/com/mercedesbenz/sechub/test/TestUtil.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 258,
                            "endLine": 258,
                            "startColumn": 21,
                            "endColumn": 59
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a zip file flows into java.nio.file.Files.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[a zip file](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[java.nio.file.Files.copy](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-testframework/src/main/java/com/mercedesbenz/sechub/test/TestUtil.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 259,
                  "endLine": 259,
                  "startColumn": 21,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f902ad418fb54f25821966b394d775309de8de0d17ea8a1833f8e615a6eb4b82",
            "1": "19689298.d081a77a.f617a9ed.e11e1d28.742d3e05.f940a352.ad1e4069.54d46e25.19689298.2329d1ab.2159a181.e11e1d28.408180c7.7fda7c5e.e9cd5b21.bb8d04ae"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-testframework/src/main/java/com/mercedesbenz/sechub/test/TestUtil.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 253,
                            "endLine": 253,
                            "startColumn": 53,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-testframework/src/main/java/com/mercedesbenz/sechub/test/TestUtil.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 253,
                            "endLine": 253,
                            "startColumn": 53,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-testframework/src/main/java/com/mercedesbenz/sechub/test/TestUtil.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 253,
                            "endLine": 253,
                            "startColumn": 37,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-testframework/src/main/java/com/mercedesbenz/sechub/test/TestUtil.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 253,
                            "endLine": 253,
                            "startColumn": 28,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-testframework/src/main/java/com/mercedesbenz/sechub/test/TestUtil.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 258,
                            "endLine": 258,
                            "startColumn": 21,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-testframework/src/main/java/com/mercedesbenz/sechub/test/TestUtil.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 259,
                            "endLine": 259,
                            "startColumn": 48,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-testframework/src/main/java/com/mercedesbenz/sechub/test/TestUtil.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 259,
                            "endLine": 259,
                            "startColumn": 21,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/PT",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into fs.readFileSync, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4)",
              "[fs.readFileSync](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "github-actions/scan/dist/exec-child.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 10,
                  "endLine": 10,
                  "startColumn": 24,
                  "endColumn": 39
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cf7de4b04076501c65649a90e622030272399ef0478768a4e6d501ab57a57020",
            "1": "f6ca9610.4773f344.607187b5.c930ff27.223ceb9e.8020cfdf.df7e59ba.e8752bfb.6e283998.4773f344.a9585e66.c8688b2b.3f452f8c.5fce695c.fb92b9ca.83183368"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 21,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 5,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 40,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 24,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 554,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/PT",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into fs.createWriteStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15)",
              "[fs.createWriteStream](16)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "github-actions/scan/dist/exec-child.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 29,
                  "endLine": 29,
                  "startColumn": 20,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "26ab002806184f8fed872e63e28053f60cc01da274a720488f372cf2450210b4",
            "1": "5a562d4f.4773f344.607187b5.ead2e4d9.ef9f7d82.896f4fb7.2d907f8e.a908d775.6e283998.4773f344.6213b3fa.c8688b2b.3f452f8c.5fce695c.ae1c42ea.e6930396"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 21,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 5,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 40,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 24,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 5,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 25,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 19,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 5,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 19,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 18,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 41,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 20,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 554,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/PT",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into fs.createWriteStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16)",
              "[fs.createWriteStream](17)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "github-actions/scan/dist/exec-child.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 30,
                  "endLine": 30,
                  "startColumn": 20,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "08195ab24b0e8d8c6292407e6b061686f7702eee89721748be08561aa4f73567",
            "1": "5a562d4f.4773f344.607187b5.d7919eeb.ef9f7d82.f8890b3c.063c2731.6785f9ff.6e283998.835671b4.6213b3fa.c8688b2b.3f452f8c.5fce695c.ae1c42ea.e6930396"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 21,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 5,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 40,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 24,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 5,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 25,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 19,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 5,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 19,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 18,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 18,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 41,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 20,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 554,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The signupInput parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[signupInput](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-administration/src/main/java/com/mercedesbenz/sechub/domain/administration/signup/AnonymousSignupRestController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 43,
                  "endLine": 43,
                  "startColumn": 27,
                  "endColumn": 74
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0b499dfbed7955864ec0be21359437fb8da80eeee8c417b75c8d9dc0d5f14af0",
            "1": "cb724ed2.7f413d6f.3d9422af.3519ac88.f0e1baa5.58c3080a.5b1ccecb.30d1072c.cb724ed2.7f413d6f.3d9422af.3519ac88.f0e1baa5.58c3080a.1a0c7c19.30d1072c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-administration/src/main/java/com/mercedesbenz/sechub/domain/administration/signup/AnonymousSignupRestController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 27,
                            "endColumn": 74
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 175,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The body parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[body](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-scan/src/main/java/com/mercedesbenz/sechub/domain/scan/IntegrationTestScanRestController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 155,
                  "endLine": 155,
                  "startColumn": 35,
                  "endColumn": 59
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b9d2575bcffc79a937291209c07d7cb657acbdf90a28189e917fbbd5fefb9a9a",
            "1": "17e8b02c.fdf3e474.a224ef38.6c52ae28.80a66200.58c3080a.5b1ccecb.e3b4b7ed.17e8b02c.fdf3e474.a224ef38.6c52ae28.80a66200.58c3080a.1a0c7c19.e3b4b7ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-scan/src/main/java/com/mercedesbenz/sechub/domain/scan/IntegrationTestScanRestController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 155,
                            "endLine": 155,
                            "startColumn": 35,
                            "endColumn": 59
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 225,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The mappingData parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[mappingData](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-scan/src/main/java/com/mercedesbenz/sechub/domain/scan/IntegrationTestScanRestController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 203,
                  "endLine": 203,
                  "startColumn": 80,
                  "endColumn": 116
                }
              }
            }
          ],
          "fingerprints": {
            "0": "889d2301b3b5b90e1205e0407d797aa5876b2ac95658777c9790420546c78b2d",
            "1": "f6af1239.7f413d6f.a224ef38.3519ac88.f0e1baa5.58c3080a.bf4628c3.87dfd8cc.f6af1239.7f413d6f.a224ef38.3519ac88.f0e1baa5.58c3080a.1a0c7c19.87dfd8cc"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-scan/src/main/java/com/mercedesbenz/sechub/domain/scan/IntegrationTestScanRestController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 203,
                            "endLine": 203,
                            "startColumn": 80,
                            "endColumn": 116
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 225,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The mappingData parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[mappingData](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-administration/src/main/java/com/mercedesbenz/sechub/domain/administration/mapping/MappingAdministrationRestController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 57,
                  "endLine": 57,
                  "startColumn": 81,
                  "endColumn": 117
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7cd05328937758c677e7caa72d3f39c0df04a6c3049f6d44891bcb656d4d597d",
            "1": "f6af1239.57bc388d.a224ef38.ee928056.f0e1baa5.58c3080a.bf4628c3.96f2b075.f6af1239.57bc388d.a224ef38.ee928056.f0e1baa5.58c3080a.1a0c7c19.96f2b075"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-administration/src/main/java/com/mercedesbenz/sechub/domain/administration/mapping/MappingAdministrationRestController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 81,
                            "endColumn": 117
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 175,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The text parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[text](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-server-core/src/main/java/com/mercedesbenz/sechub/server/core/IntegrationTestServerRestController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 171,
                  "endLine": 171,
                  "startColumn": 25,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "af60d825b29baa002ac742fb92b14e1ac675b71d8717294ef0b19cd86ac044a7",
            "1": "b35c28b5.7f413d6f.d1b658f2.3519ac88.f0e1baa5.5002925a.5b1ccecb.87dfd8cc.b35c28b5.7f413d6f.d1b658f2.3519ac88.f0e1baa5.5002925a.1a0c7c19.87dfd8cc"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-server-core/src/main/java/com/mercedesbenz/sechub/server/core/IntegrationTestServerRestController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 171,
                            "endLine": 171,
                            "startColumn": 25,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 175,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The text parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[text](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-pds/src/main/java/com/mercedesbenz/sechub/pds/IntegrationTestPDSRestController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 79,
                  "endLine": 79,
                  "startColumn": 25,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cef7e3c2d262c2abcaa7a59eb916d023815ce7f61e97e291515414c6c7fd31d9",
            "1": "b35c28b5.7f413d6f.d1b658f2.3519ac88.f0e1baa5.5002925a.5b1ccecb.87dfd8cc.b35c28b5.7f413d6f.d1b658f2.3519ac88.f0e1baa5.5002925a.1a0c7c19.87dfd8cc"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-pds/src/main/java/com/mercedesbenz/sechub/pds/IntegrationTestPDSRestController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 25,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 175,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The configuration parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[configuration](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-scan/src/main/java/com/mercedesbenz/sechub/domain/scan/project/ScanProjectMockDataRestController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 55,
                  "endLine": 55,
                  "startColumn": 4,
                  "endColumn": 63
                }
              }
            }
          ],
          "fingerprints": {
            "0": "366141f88b779b311512667cd8fead7610cb581e055de453f9d79739e0a1b6d5",
            "1": "29b65ed5.005f2dd1.a224ef38.3519ac88.80a66200.58c3080a.5b1ccecb.06464960.29b65ed5.005f2dd1.a224ef38.3519ac88.80a66200.58c3080a.1a0c7c19.06464960"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-scan/src/main/java/com/mercedesbenz/sechub/domain/scan/project/ScanProjectMockDataRestController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 4,
                            "endColumn": 63
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 175,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The configuration parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[configuration](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-pds/src/main/java/com/mercedesbenz/sechub/pds/job/PDSJobRestController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 65,
                  "endLine": 65,
                  "startColumn": 41,
                  "endColumn": 87
                }
              }
            }
          ],
          "fingerprints": {
            "0": "09c051da975efa5aa2d92000034d83ac07d4f10b93b1210466125a755adf2038",
            "1": "29b65ed5.7f413d6f.a224ef38.3519ac88.f0e1baa5.58c3080a.5b1ccecb.6f5ed252.29b65ed5.7f413d6f.a224ef38.3519ac88.f0e1baa5.58c3080a.1a0c7c19.6f5ed252"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-pds/src/main/java/com/mercedesbenz/sechub/pds/job/PDSJobRestController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 65,
                            "endLine": 65,
                            "startColumn": 41,
                            "endColumn": 87
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 175,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The configuration parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[configuration](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-schedule/src/main/java/com/mercedesbenz/sechub/domain/schedule/SchedulerRestController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 84,
                  "endLine": 84,
                  "startColumn": 83,
                  "endColumn": 136
                }
              }
            }
          ],
          "fingerprints": {
            "0": "87e753cc277da27cd5b06da11259940bc1b496051845c40f08c15e96cd97842f",
            "1": "29b65ed5.7f413d6f.a224ef38.3519ac88.80a66200.b1b0bdca.5b1ccecb.6f5ed252.29b65ed5.7f413d6f.a224ef38.3519ac88.80a66200.b1b0bdca.1a0c7c19.6f5ed252"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-schedule/src/main/java/com/mercedesbenz/sechub/domain/schedule/SchedulerRestController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 84,
                            "endLine": 84,
                            "startColumn": 83,
                            "endColumn": 136
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 225,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The data parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[data](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-scan/src/main/java/com/mercedesbenz/sechub/domain/scan/project/FalsePositiveRestController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 44,
                  "endLine": 44,
                  "startColumn": 13,
                  "endColumn": 55
                }
              }
            }
          ],
          "fingerprints": {
            "0": "de0f86b04ca09846b9471948db923fcf9169a6c1c2ed7d24dfe4eae5220f2dd6",
            "1": "cb724ed2.7f413d6f.a224ef38.c81e2a8c.80a66200.58c3080a.be55589d.87dfd8cc.cb724ed2.7f413d6f.a224ef38.c81e2a8c.80a66200.58c3080a.1a0c7c19.87dfd8cc"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-scan/src/main/java/com/mercedesbenz/sechub/domain/scan/project/FalsePositiveRestController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 13,
                            "endColumn": 55
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 175,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The profileFromuser parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[profileFromuser](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-scan/src/main/java/com/mercedesbenz/sechub/domain/scan/product/config/ProductExecutionProfileRestController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 69,
                  "endLine": 69,
                  "startColumn": 65,
                  "endColumn": 117
                }
              }
            }
          ],
          "fingerprints": {
            "0": "804ba5359156e2630a83bccb1fbadf0794283e8087f095771dac9ad9723872bf",
            "1": "946baba2.7f413d6f.a224ef38.3519ac88.f0e1baa5.1d08f7fd.12295ad4.87dfd8cc.946baba2.7f413d6f.a224ef38.3519ac88.f0e1baa5.1d08f7fd.1a0c7c19.87dfd8cc"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-scan/src/main/java/com/mercedesbenz/sechub/domain/scan/product/config/ProductExecutionProfileRestController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 69,
                            "endLine": 69,
                            "startColumn": 65,
                            "endColumn": 117
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 225,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The profile parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[profile](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-scan/src/main/java/com/mercedesbenz/sechub/domain/scan/product/config/ProductExecutionProfileRestController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 91,
                  "endLine": 91,
                  "startColumn": 69,
                  "endColumn": 113
                }
              }
            }
          ],
          "fingerprints": {
            "0": "464e76d5e71aac4e85154cb89d76964268f60577104b96942341462658e79e92",
            "1": "cb724ed2.5060c5a8.a224ef38.3519ac88.cd96b099.a427abd1.5b1ccecb.87dfd8cc.cb724ed2.5060c5a8.a224ef38.3519ac88.cd96b099.a427abd1.1a0c7c19.87dfd8cc"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-scan/src/main/java/com/mercedesbenz/sechub/domain/scan/product/config/ProductExecutionProfileRestController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 69,
                            "endColumn": 113
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 225,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The config parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[config](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-administration/src/main/java/com/mercedesbenz/sechub/domain/administration/config/ConfigAdministrationRestController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "startColumn": 45,
                  "endColumn": 97
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8e724a5a216e76d0bba354ba7c08c47fe20dc09f76704adf1f25f384e0ede1ee",
            "1": "cb724ed2.b9e49132.a224ef38.3519ac88.5e5ce6b6.679bbd58.95494300.13c56f84.cb724ed2.b9e49132.a224ef38.3519ac88.5e5ce6b6.679bbd58.1a0c7c19.13c56f84"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-administration/src/main/java/com/mercedesbenz/sechub/domain/administration/config/ConfigAdministrationRestController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 45,
                            "endColumn": 97
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 175,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The config parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[config](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-pds/src/main/java/com/mercedesbenz/sechub/pds/config/PDSAdminConfigRestController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 63,
                  "endLine": 63,
                  "startColumn": 48,
                  "endColumn": 89
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c4d98d514b1792b13bb6f828baa415783d5c4b983e1f6745e42f8ce550a0e609",
            "1": "cb724ed2.b9e49132.382f74f1.3519ac88.5e5ce6b6.c285fc26.95494300.13c56f84.cb724ed2.b9e49132.382f74f1.3519ac88.5e5ce6b6.c285fc26.1a0c7c19.13c56f84"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-pds/src/main/java/com/mercedesbenz/sechub/pds/config/PDSAdminConfigRestController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 48,
                            "endColumn": 89
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 175,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The input parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[input](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-administration/src/main/java/com/mercedesbenz/sechub/domain/administration/project/ProjectUpdateAdministrationRestController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 60,
                  "endLine": 60,
                  "startColumn": 37,
                  "endColumn": 83
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c80485b7e91890945f6189f79df5fa3900859822b545b4bd97d3b0ad00a48b89",
            "1": "cb724ed2.7f413d6f.a224ef38.3519ac88.80a66200.58c3080a.a00de70b.96f2b075.cb724ed2.7f413d6f.a224ef38.3519ac88.80a66200.58c3080a.1a0c7c19.96f2b075"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-administration/src/main/java/com/mercedesbenz/sechub/domain/administration/project/ProjectUpdateAdministrationRestController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 37,
                            "endColumn": 83
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 225,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The input parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[input](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-administration/src/main/java/com/mercedesbenz/sechub/domain/administration/project/ProjectUpdateAdministrationRestController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 75,
                  "endLine": 75,
                  "startColumn": 39,
                  "endColumn": 85
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5c0ad95828cddbf9f6f3501d240c4b58c32187767db65cede460fa2862dff40c",
            "1": "cb724ed2.7f413d6f.baf7ce33.3519ac88.80a66200.58c3080a.da3c44f5.96f2b075.cb724ed2.7f413d6f.baf7ce33.3519ac88.80a66200.58c3080a.1a0c7c19.96f2b075"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-administration/src/main/java/com/mercedesbenz/sechub/domain/administration/project/ProjectUpdateAdministrationRestController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 75,
                            "endLine": 75,
                            "startColumn": 39,
                            "endColumn": 85
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 225,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The input parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[input](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-administration/src/main/java/com/mercedesbenz/sechub/domain/administration/project/ProjectAdministrationRestController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 98,
                  "endLine": 98,
                  "startColumn": 28,
                  "endColumn": 70
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1cd807675fd0f9751ee0e370687a4352b58112305aa6009ede3c145d32680759",
            "1": "d51fcf31.7f413d6f.3dd08ec2.3519ac88.f0e1baa5.58c3080a.5b1ccecb.24db846a.d51fcf31.7f413d6f.3dd08ec2.3519ac88.f0e1baa5.58c3080a.1a0c7c19.24db846a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-administration/src/main/java/com/mercedesbenz/sechub/domain/administration/project/ProjectAdministrationRestController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 98,
                            "endLine": 98,
                            "startColumn": 28,
                            "endColumn": 70
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 225,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The configFromUser parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[configFromUser](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-scan/src/main/java/com/mercedesbenz/sechub/domain/scan/product/config/ProductExecutorConfigRestController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 69,
                  "endLine": 69,
                  "startColumn": 41,
                  "endColumn": 90
                }
              }
            }
          ],
          "fingerprints": {
            "0": "06fbe020ca26ca96b856cdc60b33df6b55c4c7fde1e81786b31eb7eb13224e3d",
            "1": "38d43882.7f413d6f.257abb70.56a619b3.f0e1baa5.58c3080a.82e93dd8.13c56f84.38d43882.7f413d6f.257abb70.56a619b3.f0e1baa5.58c3080a.1a0c7c19.13c56f84"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-scan/src/main/java/com/mercedesbenz/sechub/domain/scan/product/config/ProductExecutorConfigRestController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 69,
                            "endLine": 69,
                            "startColumn": 41,
                            "endColumn": 90
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 225,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The setup parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[setup](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-scan/src/main/java/com/mercedesbenz/sechub/domain/scan/product/config/ProductExecutorConfigRestController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 97,
                  "endLine": 97,
                  "startColumn": 79,
                  "endColumn": 119
                }
              }
            }
          ],
          "fingerprints": {
            "0": "10ba4637bd0bafc2f8c9043ebaaa5ec48be798a000219a23e2ccf6157dc51acc",
            "1": "22fa8e7f.7f413d6f.a224ef38.99bdb25b.f0e1baa5.58c3080a.5b1ccecb.44d78e2a.22fa8e7f.7f413d6f.a224ef38.99bdb25b.f0e1baa5.58c3080a.1a0c7c19.44d78e2a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-scan/src/main/java/com/mercedesbenz/sechub/domain/scan/product/config/ProductExecutorConfigRestController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 79,
                            "endColumn": 119
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 225,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The project parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[project](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-administration/src/main/java/com/mercedesbenz/sechub/domain/administration/project/ProjectAdministrationRestController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 127,
                  "endLine": 127,
                  "startColumn": 114,
                  "endColumn": 151
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2f2f504a44a1cfd87a7da1cb06f41e3b9baae2d1529067993a11634f1ef56ef3",
            "1": "6b87d9d0.7f413d6f.a224ef38.3519ac88.80a66200.58c3080a.ce9e6ec1.96f2b075.6b87d9d0.7f413d6f.a224ef38.3519ac88.80a66200.58c3080a.1a0c7c19.96f2b075"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-administration/src/main/java/com/mercedesbenz/sechub/domain/administration/project/ProjectAdministrationRestController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 114,
                            "endColumn": 151
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 225,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/NoHardcodedCredentials/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code.",
            "markdown": "Do not hardcode credentials in code.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deprecated-sechub-adapter-nessus/src/test/java/com/mercedesbenz/sechub/adapter/nessus/NessusAdapterV1WireMockTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 49,
                  "endLine": 49,
                  "startColumn": 44,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7355051fd8e65a4a873c4a721451def0476adf4b776e910488bfab6cb495fc2d",
            "1": "e7119c34.dd05ec30.3c7d90aa.de031890.8b2d3351.ce109560.e4580e17.eecd1d6c.19689298.dd05ec30.fa38d17f.de031890.f5f4b203.ce109560.992386c4.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "deprecated-sechub-adapter-nessus/src/test/java/com/mercedesbenz/sechub/adapter/nessus/NessusAdapterV1WireMockTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 44,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 205,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/NoHardcodedCredentials/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code.",
            "markdown": "Do not hardcode credentials in code.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-adapter/src/test/java/com/mercedesbenz/sechub/adapter/AbstractAdapterConfigBuilderTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "startColumn": 23,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cfc36cd5e0b0bba3e99fe16a543efab5572086f1063dec41006effe82ec39823",
            "1": "19689298.83dbfe52.23acd789.ede9cf8e.0bf67f0b.4e1269f6.be04624c.54d46e25.19689298.83dbfe52.fc7d5400.e22980a8.0bf67f0b.4e1269f6.85c09417.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-adapter/src/test/java/com/mercedesbenz/sechub/adapter/AbstractAdapterConfigBuilderTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 158,
                            "endLine": 158,
                            "startColumn": 23,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 205,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/NoHardcodedCredentials/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code.",
            "markdown": "Do not hardcode credentials in code.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-adapter-checkmarx/src/test/java/com/mercedesbenz/sechub/adapter/checkmarx/CheckmarxAdapterV1WireMockTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 51,
                  "endLine": 51,
                  "startColumn": 44,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "87c4293e72e368d084cd7f244241fdd72d4b9ce75a8dda03be03af825f396c5c",
            "1": "e7119c34.dd05ec30.3c7d90aa.de031890.8b2d3351.ce109560.e4580e17.eecd1d6c.19689298.dd05ec30.a048dfbb.de031890.f5f4b203.ce109560.d75a0942.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-adapter-checkmarx/src/test/java/com/mercedesbenz/sechub/adapter/checkmarx/CheckmarxAdapterV1WireMockTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 44,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 205,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/NoHardcodedCredentials/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code.",
            "markdown": "Do not hardcode credentials in code.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-notification/src/test/java/com/mercedesbenz/sechub/domain/notification/email/SMTPServerConfigurationTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 67,
                  "endLine": 67,
                  "startColumn": 46,
                  "endColumn": 52
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3ad64906c1a6bec95aeb404539c8efad6b41780236aa44d8c47fe39477faf9b5",
            "1": "ac4e7c8b.f83477b6.30b90e32.ede9cf8e.9115318e.f0f4d39e.b576fe9b.54d46e25.f943005b.fbca90aa.fc7d5400.e22980a8.9115318e.f940a352.02cadf1f.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-notification/src/test/java/com/mercedesbenz/sechub/domain/notification/email/SMTPServerConfigurationTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 46,
                            "endColumn": 52
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 155,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment path variable flows into exists, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the conditional expression.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the {3}.",
            "arguments": [
              "[an environment path variable](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18)",
              "[exists](19)",
              "[conditional expression](20)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "startColumn": 9,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c7c6c041e4327f1db6ea95cda090f70f85696c7ef81c6153e8ec07e6b49b8a5e",
            "1": "19689298.469b2c9e.a134f350.280e977c.097c9a30.2f4e1548.68055ed7.54d46e25.0989e686.cdfddedc.a134f350.280e977c.dd06b926.e4d7b7ac.3ea79feb.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 41,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 41,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 16,
                            "endColumn": 90
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 311,
                            "endLine": 311,
                            "startColumn": 47,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "endLine": 314,
                            "startColumn": 33,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 317,
                            "endLine": 317,
                            "startColumn": 31,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 318,
                            "endLine": 318,
                            "startColumn": 14,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 321,
                            "endLine": 321,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 304,
                            "endLine": 304,
                            "startColumn": 30,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 304,
                            "endLine": 304,
                            "startColumn": 14,
                            "endColumn": 89
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 305,
                            "endLine": 305,
                            "startColumn": 9,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 306,
                            "endLine": 306,
                            "startColumn": 29,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 48,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 14,
                            "endColumn": 136
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 74,
                            "endLine": 74,
                            "startColumn": 21,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 22,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 14,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 22,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 13,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 97,
                            "startColumn": 9,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 567,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment path variable flows into exists, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the conditional expression.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the {3}.",
            "arguments": [
              "[an environment path variable](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14)",
              "[exists](15)",
              "[conditional expression](16)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 216,
                  "endLine": 216,
                  "startColumn": 13,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f5d5428383329b53d6c5331e59355c1f7d92551bff04f75810a80a73c28508f9",
            "1": "19689298.aa997324.a134f350.280e977c.ae63d11c.cd61f7ee.df7e59ba.54d46e25.0989e686.cdfddedc.5d3b0445.280e977c.544c7208.e4d7b7ac.3ea79feb.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 41,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 41,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 16,
                            "endColumn": 90
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 311,
                            "endLine": 311,
                            "startColumn": 47,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "endLine": 314,
                            "startColumn": 33,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 317,
                            "endLine": 317,
                            "startColumn": 31,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 318,
                            "endLine": 318,
                            "startColumn": 14,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 321,
                            "endLine": 321,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 300,
                            "endLine": 300,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 74,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 215,
                            "endLine": 215,
                            "startColumn": 35,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 215,
                            "endLine": 215,
                            "startColumn": 18,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 216,
                            "endLine": 216,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 22,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 13,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 97,
                            "startColumn": 9,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 567,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment path variable flows into exists, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the conditional expression.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the {3}.",
            "arguments": [
              "[an environment path variable](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14)",
              "[exists](15)",
              "[conditional expression](16)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 256,
                  "endLine": 256,
                  "startColumn": 9,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3074204c54ae2227e89a604851c81a02a398b9d2f356f2f4e86322532af9fa36",
            "1": "19689298.aa997324.a134f350.280e977c.ae63d11c.cd61f7ee.df7e59ba.54d46e25.0989e686.cdfddedc.5d3b0445.280e977c.544c7208.e4d7b7ac.3ea79feb.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 41,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 41,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 16,
                            "endColumn": 90
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 311,
                            "endLine": 311,
                            "startColumn": 47,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "endLine": 314,
                            "startColumn": 33,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 317,
                            "endLine": 317,
                            "startColumn": 31,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 318,
                            "endLine": 318,
                            "startColumn": 14,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 321,
                            "endLine": 321,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 300,
                            "endLine": 300,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 74,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 255,
                            "endLine": 255,
                            "startColumn": 31,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 255,
                            "endLine": 255,
                            "startColumn": 14,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 256,
                            "endLine": 256,
                            "startColumn": 21,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 22,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 13,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 97,
                            "startColumn": 9,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 567,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment path variable flows into exists, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the conditional expression.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the {3}.",
            "arguments": [
              "[an environment path variable](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13)",
              "[exists](14)",
              "[conditional expression](15)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 284,
                  "endLine": 284,
                  "startColumn": 14,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2e1063b40dba6b4a431757595c79c236c1022e0bc412d68850cdf13273fc0df8",
            "1": "19689298.c8c8034f.ad6c9bc7.280e977c.dd06b926.17752155.f11465f9.54d46e25.0989e686.cdfddedc.5d3b0445.280e977c.544c7208.e4d7b7ac.3ea79feb.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 41,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 41,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 16,
                            "endColumn": 90
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 311,
                            "endLine": 311,
                            "startColumn": 47,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "endLine": 314,
                            "startColumn": 33,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 317,
                            "endLine": 317,
                            "startColumn": 31,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 318,
                            "endLine": 318,
                            "startColumn": 14,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 321,
                            "endLine": 321,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 300,
                            "endLine": 300,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 74,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 282,
                            "endLine": 282,
                            "startColumn": 35,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 283,
                            "endLine": 283,
                            "startColumn": 31,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 283,
                            "endLine": 283,
                            "startColumn": 14,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 284,
                            "endLine": 284,
                            "startColumn": 14,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 284,
                            "endLine": 284,
                            "startColumn": 14,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 284,
                            "endLine": 292,
                            "startColumn": 9,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 567,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment path variable flows into exists, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the conditional expression.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the {3}.",
            "arguments": [
              "[an environment path variable](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)",
              "[exists](12)",
              "[conditional expression](13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 318,
                  "endLine": 318,
                  "startColumn": 14,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5d090f64257495c5659980d4724484bed7a803c9deb8f02b5188a381b2dff1ee",
            "1": "b7848510.cdfddedc.95b3bca4.9998adc9.dd06b926.d3f1fdc8.6d63f75a.a1df1a3b.0989e686.cdfddedc.67ab06d7.de031890.dd06b926.e4d7b7ac.3ea79feb.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 41,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 41,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 16,
                            "endColumn": 90
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 311,
                            "endLine": 311,
                            "startColumn": 47,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "endLine": 314,
                            "startColumn": 33,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 317,
                            "endLine": 317,
                            "startColumn": 31,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 318,
                            "endLine": 318,
                            "startColumn": 14,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 321,
                            "endLine": 321,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 304,
                            "endLine": 304,
                            "startColumn": 30,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 304,
                            "endLine": 304,
                            "startColumn": 14,
                            "endColumn": 89
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 305,
                            "endLine": 305,
                            "startColumn": 9,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 306,
                            "endLine": 306,
                            "startColumn": 29,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 318,
                            "endLine": 318,
                            "startColumn": 14,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 318,
                            "endLine": 320,
                            "startColumn": 9,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 567,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment path variable flows into createNewFile, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "arguments": [
              "[an environment path variable](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14)",
              "[createNewFile](15)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 285,
                  "endLine": 285,
                  "startColumn": 18,
                  "endColumn": 42
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3056317fa6d5c46d8586ddd20b1d14abffa62d7810fe888f4dbbfcfe3491e0ca",
            "1": "cf573ba2.c8c8034f.e83aa755.280e977c.dd06b926.6b8db2bc.f11465f9.9197d2b7.0989e686.cdfddedc.e83aa755.280e977c.544c7208.e4d7b7ac.3ea79feb.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 41,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 41,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 16,
                            "endColumn": 90
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 311,
                            "endLine": 311,
                            "startColumn": 47,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "endLine": 314,
                            "startColumn": 33,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 317,
                            "endLine": 317,
                            "startColumn": 31,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 318,
                            "endLine": 318,
                            "startColumn": 14,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 321,
                            "endLine": 321,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 300,
                            "endLine": 300,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 74,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 282,
                            "endLine": 282,
                            "startColumn": 35,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 283,
                            "endLine": 283,
                            "startColumn": 31,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 283,
                            "endLine": 283,
                            "startColumn": 14,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 284,
                            "endLine": 284,
                            "startColumn": 14,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 285,
                            "endLine": 285,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 285,
                            "endLine": 285,
                            "startColumn": 18,
                            "endColumn": 42
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 567,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment path variable flows into mkdirs, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "arguments": [
              "[an environment path variable](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[mkdirs](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 305,
                  "endLine": 305,
                  "startColumn": 9,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "38e7cd6487d78a01fd7c82e6466a91dd5726e554c10cc5ed7e50ec474b350066",
            "1": "b7848510.cdfddedc.a224ef38.e22980a8.6ded528b.d3f1fdc8.e18b4fc5.54d46e25.0989e686.cdfddedc.67ab06d7.de031890.dd06b926.e4d7b7ac.3ea79feb.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 41,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 41,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 16,
                            "endColumn": 90
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 311,
                            "endLine": 311,
                            "startColumn": 47,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "endLine": 314,
                            "startColumn": 33,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 317,
                            "endLine": 317,
                            "startColumn": 31,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 318,
                            "endLine": 318,
                            "startColumn": 14,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 321,
                            "endLine": 321,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 304,
                            "endLine": 304,
                            "startColumn": 30,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 304,
                            "endLine": 304,
                            "startColumn": 14,
                            "endColumn": 89
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 305,
                            "endLine": 305,
                            "startColumn": 9,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-doc/src/main/java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 305,
                            "endLine": 305,
                            "startColumn": 9,
                            "endColumn": 25
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 567,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a zip file flows into exists, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the conditional expression.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the {3}.",
            "arguments": [
              "[a zip file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[exists](9)",
              "[conditional expression](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 498,
                  "endLine": 498,
                  "startColumn": 22,
                  "endColumn": 39
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7601fa7d0666a6c1a73b69f66c12887c13fd64f4c745ba899500d1b6c577d993",
            "1": "19689298.3ddf9eb6.8828b72d.9998adc9.dd06b926.d7c8947b.6d63f75a.f82433aa.3ab06a9f.3ddf9eb6.2159a181.8d26b0e6.d30c819d.eaad94b8.875d2222.c5b28e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 471,
                            "endLine": 471,
                            "startColumn": 27,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 471,
                            "endLine": 471,
                            "startColumn": 27,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 471,
                            "endLine": 471,
                            "startColumn": 20,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 476,
                            "startColumn": 94,
                            "endColumn": 98
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 519,
                            "endLine": 519,
                            "startColumn": 110,
                            "endColumn": 121
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 494,
                            "endLine": 494,
                            "startColumn": 35,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 494,
                            "endLine": 494,
                            "startColumn": 18,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 497,
                            "endLine": 497,
                            "startColumn": 57,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 498,
                            "endLine": 498,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 498,
                            "endLine": 498,
                            "startColumn": 22,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 498,
                            "endLine": 503,
                            "startColumn": 17,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 567,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a zip file flows into exists, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the conditional expression.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the {3}.",
            "arguments": [
              "[a zip file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13)",
              "[exists](14)",
              "[conditional expression](15)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 532,
                  "endLine": 532,
                  "startColumn": 13,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c207059b375ecaeaf84ed3b24ae17b12149a303b250226d205073e8f63420624",
            "1": "bbbd7c96.c8c8034f.fc7d5400.e22980a8.32911b38.c864750c.a204df5d.a1df1a3b.3ab06a9f.3ddf9eb6.2159a181.8d26b0e6.32911b38.eaad94b8.a204df5d.c5b28e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 471,
                            "endLine": 471,
                            "startColumn": 27,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 471,
                            "endLine": 471,
                            "startColumn": 27,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 471,
                            "endLine": 471,
                            "startColumn": 20,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 476,
                            "startColumn": 94,
                            "endColumn": 98
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 519,
                            "endLine": 519,
                            "startColumn": 110,
                            "endColumn": 121
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 494,
                            "endLine": 494,
                            "startColumn": 35,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 494,
                            "endLine": 494,
                            "startColumn": 18,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 505,
                            "endLine": 505,
                            "startColumn": 55,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 506,
                            "endLine": 506,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 526,
                            "endLine": 526,
                            "startColumn": 43,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 527,
                            "endLine": 527,
                            "startColumn": 27,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 527,
                            "endLine": 527,
                            "startColumn": 27,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 527,
                            "endLine": 527,
                            "startColumn": 14,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 532,
                            "endLine": 532,
                            "startColumn": 13,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 532,
                            "endLine": 532,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 532,
                            "endLine": 535,
                            "startColumn": 9,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 567,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a zip file flows into exists, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the conditional expression.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the {3}.",
            "arguments": [
              "[a zip file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19)",
              "[exists](20)",
              "[conditional expression](21)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 541,
                  "endLine": 541,
                  "startColumn": 17,
                  "endColumn": 35
                }
              }
            }
          ],
          "fingerprints": {
            "0": "907fc9bfd81bd3d2c2b5f397dd077295e0c338a94030f5901157e4624dd1cf8a",
            "1": "19689298.c8c8034f.33fa5dbe.e22980a8.32911b38.7fda7c5e.a204df5d.54d46e25.3ab06a9f.3ddf9eb6.2159a181.8d26b0e6.32911b38.eaad94b8.a204df5d.c5b28e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 471,
                            "endLine": 471,
                            "startColumn": 27,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 471,
                            "endLine": 471,
                            "startColumn": 27,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 471,
                            "endLine": 471,
                            "startColumn": 20,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 476,
                            "startColumn": 94,
                            "endColumn": 98
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 519,
                            "endLine": 519,
                            "startColumn": 110,
                            "endColumn": 121
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 494,
                            "endLine": 494,
                            "startColumn": 35,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 494,
                            "endLine": 494,
                            "startColumn": 18,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 505,
                            "endLine": 505,
                            "startColumn": 55,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 506,
                            "endLine": 506,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 526,
                            "endLine": 526,
                            "startColumn": 43,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 527,
                            "endLine": 527,
                            "startColumn": 27,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 527,
                            "endLine": 527,
                            "startColumn": 27,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 527,
                            "endLine": 527,
                            "startColumn": 14,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 532,
                            "endLine": 532,
                            "startColumn": 13,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 537,
                            "endLine": 537,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 537,
                            "endLine": 537,
                            "startColumn": 14,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 540,
                            "endLine": 540,
                            "startColumn": 32,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 540,
                            "endLine": 540,
                            "startColumn": 32,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 540,
                            "endLine": 540,
                            "startColumn": 18,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 541,
                            "endLine": 541,
                            "startColumn": 17,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 541,
                            "endLine": 541,
                            "startColumn": 17,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 541,
                            "endLine": 543,
                            "startColumn": 13,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 567,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a zip file flows into mkdirs, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "arguments": [
              "[a zip file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[mkdirs](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 500,
                  "endLine": 500,
                  "startColumn": 26,
                  "endColumn": 43
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7417beec09b6776467b1def1186120ce4cb7a031f0e6a898e949bc9ec6c92d62",
            "1": "daf8aa0f.3ddf9eb6.8828b72d.9998adc9.dd06b926.d7c8947b.6d63f75a.f82433aa.3ab06a9f.3ddf9eb6.2159a181.8d26b0e6.d30c819d.eaad94b8.875d2222.c5b28e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 471,
                            "endLine": 471,
                            "startColumn": 27,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 471,
                            "endLine": 471,
                            "startColumn": 27,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 471,
                            "endLine": 471,
                            "startColumn": 20,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 476,
                            "startColumn": 94,
                            "endColumn": 98
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 519,
                            "endLine": 519,
                            "startColumn": 110,
                            "endColumn": 121
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 494,
                            "endLine": 494,
                            "startColumn": 35,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 494,
                            "endLine": 494,
                            "startColumn": 18,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 497,
                            "endLine": 497,
                            "startColumn": 57,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 498,
                            "endLine": 498,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 500,
                            "endLine": 500,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 500,
                            "endLine": 500,
                            "startColumn": 26,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 567,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a zip file flows into mkdirs, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "arguments": [
              "[a zip file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16)",
              "[mkdirs](17)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 546,
                  "endLine": 546,
                  "startColumn": 14,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3a77133437e0f54a774bbfb32f29c0f86a2d22a7488adaa4d4299f8171a5755d",
            "1": "19689298.c8c8034f.33fa5dbe.9998adc9.32911b38.7fda7c5e.6d63f75a.54d46e25.3ab06a9f.3ddf9eb6.2159a181.8d26b0e6.32911b38.eaad94b8.a204df5d.c5b28e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 471,
                            "endLine": 471,
                            "startColumn": 27,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 471,
                            "endLine": 471,
                            "startColumn": 27,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 471,
                            "endLine": 471,
                            "startColumn": 20,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 476,
                            "startColumn": 94,
                            "endColumn": 98
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 519,
                            "endLine": 519,
                            "startColumn": 110,
                            "endColumn": 121
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 494,
                            "endLine": 494,
                            "startColumn": 35,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 494,
                            "endLine": 494,
                            "startColumn": 18,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 505,
                            "endLine": 505,
                            "startColumn": 55,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 506,
                            "endLine": 506,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 526,
                            "endLine": 526,
                            "startColumn": 43,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 527,
                            "endLine": 527,
                            "startColumn": 27,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 527,
                            "endLine": 527,
                            "startColumn": 27,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 527,
                            "endLine": 527,
                            "startColumn": 14,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 532,
                            "endLine": 532,
                            "startColumn": 13,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 537,
                            "endLine": 537,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 537,
                            "endLine": 537,
                            "startColumn": 14,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 546,
                            "endLine": 546,
                            "startColumn": 14,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 546,
                            "endLine": 546,
                            "startColumn": 14,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 567,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a zip file flows into java.io.FileOutputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[a zip file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)",
              "[java.io.FileOutputStream](12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 510,
                  "endLine": 510,
                  "startColumn": 58,
                  "endColumn": 74
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bc001ed247f551e3bf98ee1896fb9222f8d348440c3203593eebb70f71c2ba67",
            "1": "9cf53582.3ddf9eb6.a224ef38.6c52ae28.b4532127.0d476878.df7e59ba.33a27e27.3ab06a9f.3ddf9eb6.2159a181.8d26b0e6.b4532127.eaad94b8.a204df5d.c5b28e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 471,
                            "endLine": 471,
                            "startColumn": 27,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 471,
                            "endLine": 471,
                            "startColumn": 27,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 471,
                            "endLine": 471,
                            "startColumn": 20,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 476,
                            "startColumn": 94,
                            "endColumn": 98
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 519,
                            "endLine": 519,
                            "startColumn": 110,
                            "endColumn": 121
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 494,
                            "endLine": 494,
                            "startColumn": 35,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 494,
                            "endLine": 494,
                            "startColumn": 18,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 505,
                            "endLine": 505,
                            "startColumn": 55,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 506,
                            "endLine": 506,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 526,
                            "endLine": 526,
                            "startColumn": 43,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 507,
                            "endLine": 507,
                            "startColumn": 21,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 510,
                            "endLine": 510,
                            "startColumn": 75,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-archive/src/main/java/com/mercedesbenz/sechub/commons/archive/ArchiveSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 510,
                            "endLine": 510,
                            "startColumn": 58,
                            "endColumn": 74
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 567,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into java.security.DigestInputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17)",
              "[java.security.DigestInputStream](18)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-schedule/src/main/java/com/mercedesbenz/sechub/domain/schedule/SchedulerRestController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 100,
                  "endLine": 100,
                  "startColumn": 6,
                  "endColumn": 46
                }
              }
            }
          ],
          "fingerprints": {
            "0": "38d6a1cd79d15e45336003ae25ef97ae1e319bae6ddf2fc4fcad7c3951cecfaa",
            "1": "1555720a.277c621c.a19d428b.06245546.80a66200.b0fa7e36.a42e1496.54d46e25.22fa8e7f.277c621c.a19d428b.de031890.80a66200.ce109560.0779b355.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-schedule/src/main/java/com/mercedesbenz/sechub/domain/schedule/SchedulerRestController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 10,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-schedule/src/main/java/com/mercedesbenz/sechub/domain/schedule/SchedulerRestController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 10,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-schedule/src/main/java/com/mercedesbenz/sechub/domain/schedule/SchedulerRestController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 67,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-schedule/src/main/java/com/mercedesbenz/sechub/domain/schedule/SchedulerSourcecodeUploadService.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 84,
                            "endLine": 84,
                            "startColumn": 66,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-schedule/src/main/java/com/mercedesbenz/sechub/domain/schedule/SchedulerSourcecodeUploadService.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 102,
                            "endLine": 102,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-schedule/src/main/java/com/mercedesbenz/sechub/domain/schedule/SchedulerSourcecodeUploadService.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 171,
                            "endLine": 171,
                            "startColumn": 38,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-schedule/src/main/java/com/mercedesbenz/sechub/domain/schedule/SchedulerSourcecodeUploadService.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-schedule/src/main/java/com/mercedesbenz/sechub/domain/schedule/SchedulerSourcecodeUploadService.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 157,
                            "endLine": 157,
                            "startColumn": 43,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-schedule/src/main/java/com/mercedesbenz/sechub/domain/schedule/SchedulerSourcecodeUploadService.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 161,
                            "endLine": 161,
                            "startColumn": 40,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-schedule/src/main/java/com/mercedesbenz/sechub/domain/schedule/SchedulerSourcecodeUploadService.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 161,
                            "endLine": 161,
                            "startColumn": 40,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-schedule/src/main/java/com/mercedesbenz/sechub/domain/schedule/SchedulerSourcecodeUploadService.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 161,
                            "endLine": 161,
                            "startColumn": 26,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-schedule/src/main/java/com/mercedesbenz/sechub/domain/schedule/SchedulerSourcecodeUploadService.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 163,
                            "endLine": 163,
                            "startColumn": 45,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-schedule/src/main/java/com/mercedesbenz/sechub/domain/schedule/SchedulerSourcecodeUploadService.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 185,
                            "endLine": 185,
                            "startColumn": 57,
                            "endColumn": 80
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-schedule/src/main/java/com/mercedesbenz/sechub/domain/schedule/SchedulerSourcecodeUploadService.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 65,
                            "endColumn": 76
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-core/src/main/java/com/mercedesbenz/sechub/commons/core/security/CheckSumSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 62,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-core/src/main/java/com/mercedesbenz/sechub/commons/core/security/CheckSumSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 50,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-core/src/main/java/com/mercedesbenz/sechub/commons/core/security/CheckSumSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 110,
                            "endLine": 110,
                            "startColumn": 40,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-core/src/main/java/com/mercedesbenz/sechub/commons/core/security/CheckSumSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 60,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-commons-core/src/main/java/com/mercedesbenz/sechub/commons/core/security/CheckSumSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 42,
                            "endColumn": 59
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 817,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 12,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[open](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-wrapper-owasp-zap/src/main/resources/zap-ruleset-helper/zap_ruleset_helper.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 25,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "73413defa05deed3518890e6c0523bd14faab9aabd80cce5a4a43e98d3227ba0",
            "1": "7b0793b4.ca612888.187bf175.139c59a8.f3eda546.addfbd48.d42a1390.f9236156.2d06e3d6.ca612888.094e9cf7.9cd2dfe0.4608c58f.a5d7f69f.f6dc7859.f9236156"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-wrapper-owasp-zap/src/main/resources/zap-ruleset-helper/zap_ruleset_helper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-wrapper-owasp-zap/src/main/resources/zap-ruleset-helper/zap_ruleset_helper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-wrapper-owasp-zap/src/main/resources/zap-ruleset-helper/zap_ruleset_helper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-wrapper-owasp-zap/src/main/resources/zap-ruleset-helper/zap_ruleset_helper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 31,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-wrapper-owasp-zap/src/main/resources/zap-ruleset-helper/zap_ruleset_helper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 57,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-wrapper-owasp-zap/src/main/resources/zap-ruleset-helper/zap_ruleset_helper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 57,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-wrapper-owasp-zap/src/main/resources/zap-ruleset-helper/zap_ruleset_helper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 52,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-wrapper-owasp-zap/src/main/resources/zap-ruleset-helper/zap_ruleset_helper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 15,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-wrapper-owasp-zap/src/main/resources/zap-ruleset-helper/zap_ruleset_helper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 502,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/IndirectCommandInjection",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into child_process.exec, where it is used to build a shell command. Forwarding command-line arguments or file paths from the local environment to a function that executes a system command can change the meaning of the command unexpectedly due to unescaped special characters, which may result in a Indirect Command Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to build a shell command. Forwarding command-line arguments or file paths from the local environment to a function that executes a system command can change the meaning of the command unexpectedly due to unescaped special characters, which may result in a Indirect Command Injection vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[child_process.exec](13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "github-actions/scan/dist/exec-child.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 19,
                  "endLine": 19,
                  "startColumn": 9,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1cca746d83322046347970401ecfb89979bfebec6879eb9cd5b35bca6474843d",
            "1": "5a562d4f.4773f344.607187b5.dd894bdc.88319c03.f8890b3c.877b899d.d29e96f4.6e283998.4773f344.8ed128db.dd894bdc.3f452f8c.5fce695c.cd61fc56.e6930396"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 21,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 5,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 40,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 24,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 5,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 25,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 19,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 5,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 5,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 27,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "github-actions/scan/dist/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 9,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all clients are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all clients are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-wrapper-owasp-zap/src/main/java/com/mercedesbenz/sechub/zapwrapper/util/TargetConnectionChecker.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 149,
                  "endLine": 149,
                  "startColumn": 25,
                  "endColumn": 43
                }
              }
            }
          ],
          "fingerprints": {
            "0": "795ed33e3dbd74f1ebf5bc67bd37208f63da18dbb65a66338313c3d92760fabf",
            "1": "d3279c65.528e35bc.9fe7ead9.de031890.f0e1baa5.eacd09e2.7011a60a.1d874c72.d3279c65.528e35bc.9fe7ead9.de031890.f0e1baa5.eacd09e2.7011a60a.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-wrapper-owasp-zap/src/main/java/com/mercedesbenz/sechub/zapwrapper/util/TargetConnectionChecker.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 25,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 563,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all clients are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all clients are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-adapter/src/main/java/com/mercedesbenz/sechub/adapter/support/TrustAllSupport.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 118,
                  "endLine": 118,
                  "startColumn": 43,
                  "endColumn": 61
                }
              }
            }
          ],
          "fingerprints": {
            "0": "16cbe019ffc6bf6b4a235be0791707b7ca88bab14721dd18fa1f083b27c19180",
            "1": "d3279c65.528e35bc.8c56ae10.de031890.f0e1baa5.eacd09e2.7011a60a.1d874c72.d3279c65.528e35bc.8c56ae10.de031890.f0e1baa5.eacd09e2.7011a60a.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-adapter/src/main/java/com/mercedesbenz/sechub/adapter/support/TrustAllSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 118,
                            "startColumn": 43,
                            "endColumn": 61
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 563,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all clients are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all clients are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-api-java/src/main/java/com/mercedesbenz/sechub/api/internal/ApiClientBuilder.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 62,
                  "endLine": 62,
                  "startColumn": 21,
                  "endColumn": 39
                }
              }
            }
          ],
          "fingerprints": {
            "0": "81440348d8ba6e3281be1d10c06fe02b09ba22a84509e2380fb0ae04d2a44c91",
            "1": "d3279c65.dd05ec30.622565c7.de031890.f0e1baa5.ce109560.7011a60a.1d874c72.d3279c65.dd05ec30.622565c7.de031890.f0e1baa5.ce109560.7011a60a.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-api-java/src/main/java/com/mercedesbenz/sechub/api/internal/ApiClientBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 21,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 563,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all clients are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all clients are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-api-java/src/main/java/com/mercedesbenz/sechub/api/internal/ApiClientBuilder.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 75,
                  "endLine": 75,
                  "startColumn": 21,
                  "endColumn": 39
                }
              }
            }
          ],
          "fingerprints": {
            "0": "075e7a437e9700fd9932c3745e476cf1d88ad0aec2448e123222432d8c541281",
            "1": "d3279c65.dd05ec30.b1ce14cf.de031890.f0e1baa5.ce109560.7011a60a.1d874c72.d3279c65.dd05ec30.b1ce14cf.de031890.f0e1baa5.ce109560.7011a60a.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-api-java/src/main/java/com/mercedesbenz/sechub/api/internal/ApiClientBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 75,
                            "endLine": 75,
                            "startColumn": 21,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 563,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all clients are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all clients are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-api-java/src/main/java/com/mercedesbenz/sechub/api/internal/ApiClientBuilder.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 85,
                  "endLine": 85,
                  "startColumn": 21,
                  "endColumn": 39
                }
              }
            }
          ],
          "fingerprints": {
            "0": "da2182a41ec8d987d5d169e26133faac243ef052c6e878248c58bed40d97db65",
            "1": "d3279c65.dd05ec30.b1ce14cf.de031890.f0e1baa5.ce109560.7011a60a.1d874c72.d3279c65.dd05ec30.b1ce14cf.de031890.f0e1baa5.ce109560.7011a60a.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-api-java/src/main/java/com/mercedesbenz/sechub/api/internal/ApiClientBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 21,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 563,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all servers are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all servers are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-wrapper-owasp-zap/src/main/java/com/mercedesbenz/sechub/zapwrapper/util/TargetConnectionChecker.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 153,
                  "endLine": 153,
                  "startColumn": 25,
                  "endColumn": 43
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e425a38744a68b64533ba62101a9db1d7191ad8419160c2673f30af60c7e1bec",
            "1": "d3279c65.528e35bc.9fe7ead9.de031890.f0e1baa5.eacd09e2.7011a60a.1d874c72.d3279c65.528e35bc.9fe7ead9.de031890.f0e1baa5.eacd09e2.7011a60a.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-wrapper-owasp-zap/src/main/java/com/mercedesbenz/sechub/zapwrapper/util/TargetConnectionChecker.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 153,
                            "endLine": 153,
                            "startColumn": 25,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 563,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all servers are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all servers are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-adapter/src/main/java/com/mercedesbenz/sechub/adapter/support/TrustAllSupport.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 122,
                  "endLine": 122,
                  "startColumn": 43,
                  "endColumn": 61
                }
              }
            }
          ],
          "fingerprints": {
            "0": "383b6d442e6aa40ccaf15b35672d24694f361895fbf8ae38b977a44a9649fcbc",
            "1": "d3279c65.528e35bc.8c56ae10.de031890.f0e1baa5.eacd09e2.7011a60a.1d874c72.d3279c65.528e35bc.8c56ae10.de031890.f0e1baa5.eacd09e2.7011a60a.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-adapter/src/main/java/com/mercedesbenz/sechub/adapter/support/TrustAllSupport.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 43,
                            "endColumn": 61
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 563,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all servers are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all servers are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-api-java/src/main/java/com/mercedesbenz/sechub/api/internal/ApiClientBuilder.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 66,
                  "endLine": 66,
                  "startColumn": 21,
                  "endColumn": 39
                }
              }
            }
          ],
          "fingerprints": {
            "0": "32dc68cffaf6ca504ce59b1446f38530e908e6d02494442b911519ba5b4dc2d5",
            "1": "d3279c65.dd05ec30.622565c7.de031890.f0e1baa5.ce109560.7011a60a.1d874c72.d3279c65.dd05ec30.622565c7.de031890.f0e1baa5.ce109560.7011a60a.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-api-java/src/main/java/com/mercedesbenz/sechub/api/internal/ApiClientBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 21,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 563,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all servers are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all servers are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-api-java/src/main/java/com/mercedesbenz/sechub/api/internal/ApiClientBuilder.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 80,
                  "endLine": 80,
                  "startColumn": 21,
                  "endColumn": 39
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7aa1605c891e340a7ec7f1c8a790cd38423e5eaa2fdf30ca715a4414a31f6a78",
            "1": "d3279c65.dd05ec30.b1ce14cf.de031890.f0e1baa5.ce109560.7011a60a.1d874c72.d3279c65.dd05ec30.b1ce14cf.de031890.f0e1baa5.ce109560.7011a60a.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-api-java/src/main/java/com/mercedesbenz/sechub/api/internal/ApiClientBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 21,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 563,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all servers are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all servers are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sechub-api-java/src/main/java/com/mercedesbenz/sechub/api/internal/ApiClientBuilder.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 91,
                  "endLine": 91,
                  "startColumn": 21,
                  "endColumn": 39
                }
              }
            }
          ],
          "fingerprints": {
            "0": "111f0818462d9940dab9923bf17feb054bdcfb87b856bee03a82396699a33ded",
            "1": "d3279c65.dd05ec30.b1ce14cf.de031890.f0e1baa5.ce109560.7011a60a.1d874c72.d3279c65.dd05ec30.b1ce14cf.de031890.f0e1baa5.ce109560.7011a60a.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sechub-api-java/src/main/java/com/mercedesbenz/sechub/api/internal/ApiClientBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 21,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 563,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "isSupported": true,
            "lang": "XML",
            "files": 35,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "PHP",
            "files": 1,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "C",
            "files": 5,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Python",
            "files": 8,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Vue",
            "files": 8,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "HTML",
            "files": 17,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Visual Basic .NET",
            "files": 1,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Go",
            "files": 52,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "JavaScript",
            "files": 3,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "TypeScript",
            "files": 32,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Java",
            "files": 2808,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Ruby",
            "files": 1,
            "type": "SUPPORTED"
          },
          {
            "isSupported": false,
            "lang": "Java",
            "files": 1,
            "type": "FAILED_PARSING"
          },
          {
            "isSupported": false,
            "lang": "XML",
            "files": 2,
            "type": "FAILED_PARSING"
          }
        ]
      }
    }
  ]
}
