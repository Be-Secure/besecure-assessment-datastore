{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "java/SpringCSRF",
              "name": "SpringCSRF",
              "shortDescription": {
                "text": "Spring Cross-Site Request Forgery (CSRF)"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nWhen a web server is designed to receive a request from a client without any mechanism for verifying that it was intentionally sent, then it might be possible for an attacker to trick a client into making an unintentional request to the web server which will be treated as an authentic request. This can be done via a URL, image load, XMLHttpRequest, etc. and can result in exposure of data or unintended code execution.\n\n## Best practices for prevention\n* Use a vetted library or framework which has anti-CSRF packages that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Consider including Spring Security library within your application.\n\n\n## References\n* [Spring Security Docs](https://docs.spring.io/spring-security/site/docs/5.0.x/reference/html/csrf.html)\n* [A Guide to CSRF Protection in Spring Security](https://www.baeldung.com/spring-security-csrf)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "SpringCSRF",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-352"
                ]
              }
            },
            {
              "id": "java/TrustBoundaryViolation",
              "name": "TrustBoundaryViolation",
              "shortDescription": {
                "text": "Trust Boundary Violation"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nGood application design includes defining trusted and untrusted areas. Trusted areas might include secure session information, while untrusted areas might include general website content such as a company logo. When this weakness is present, the application allows untrusted data-such as unsanitized user input-to be moved into trusted areas, generally data structures. If this happens, the data is often inadvertently then treated as \"trusted\" by the server, allowing attackers to gain higher-level access, taking control of the application or leading to denial of service.\n\n## Best practices for prevention\n\n* In early application planning stages, incorporate secure design principles in consultation with application security professionals.\n* Sanitize and validate all user input, including data from cookies and HTTP headers-limiting input to expected values if possible-before transferring to a trusted data structure (Never pass user input directly to a trusted data structure.).\n* Use sanitization and validation methods built into your development environment if these are available rather than relying on DIY methods, which are more complex to implement and may not catch special cases or can break if the application is modified.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "TrustBoundaryViolation",
                  "Security",
                  "SourceHttpParam",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-501"
                ]
              }
            },
            {
              "id": "java/DisablesCSRFProtection/test",
              "name": "DisablesCSRFProtection/test",
              "shortDescription": {
                "text": "Cross-Site Request Forgery (CSRF)"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\nCross-site request forgery is an attack in which a malicious third party takes advantage of a user's authenticated credentials (such as a browser cookie) to impersonate that trusted user and perform unauthorized actions. The web application server cannot tell the difference between legitimate and malicious requests. This type of attack generally begins by tricking the user with a social engineering attack, such as a link or popup that the user inadvertently clicks, causing an unauthorized request to be sent to the web server. Consequences vary: At a standard user level, attackers can change passwords, transfer funds, make purchases, or connect with contacts; from an administrator account, attackers can then make changes to or even take down the app itself.\n\n## Best practices for prevention\n* Use development frameworks that defend against CSRF, using a nonce, hash, or some other security device to the URL and/or to forms.\n* Implement secure, unique, hidden tokens that are checked by the server each time to validate state-change requests.\n* Never assume that authentication tokens and session identifiers mean a request is legitimate.\n* Understand and implement other safe-cookie techniques, such as double submit cookies.\n* Terminate user sessions when not in use, including automatic timeout.\n* Ensure rigorous coding practices and defenses against other commonly exploited CWEs, since cross-site scripting (XSS), for example, can be used to bypass defenses against CSRF.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "DisablesCSRFProtection",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/hocgin/SpringBoot-CMS/commit/ca9c4230ea0798354ec5daa74721c0ff10964997?diff=split#diff-9b1a54996a1ac9ec5ce8e59a5a2e16e9bd07b2cc0bf0c81c25fccdffcd426f65L-1",
                    "lines": [
                      {
                        "line": "http.antMatcher(\"/**\")\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "        .exceptionHandling()\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "        .authenticationEntryPoint(new IWebUnauthorizedEntryPoint()).and()\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "        .csrf().disable() //TODO 临时关闭, 调试\n",
                        "lineNumber": 32,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        .csrf().and()\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/blackducksoftware/blackduck-alert/commit/bd5da4c01f8a11a0b3219180a7f9cd899bbc999e?diff=split#diff-4a764a20aa4d81721b3ba9c25ca03615286b91d5147fe7b715f0a1b399c37420L-1",
                    "lines": [
                      {
                        "line": "        http.csrf().disable().authorizeRequests().antMatchers(allowedPaths).permitAll()\n",
                        "lineNumber": 56,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        final String[] csrfIgnoredPaths = {\n",
                        "lineNumber": 65,
                        "lineChange": "added"
                      },
                      {
                        "line": "                \"/\",\n",
                        "lineNumber": 66,
                        "lineChange": "added"
                      },
                      {
                        "line": "                \"/#\",\n",
                        "lineNumber": 67,
                        "lineChange": "added"
                      },
                      {
                        "line": "                \"/favicon.ico\",\n",
                        "lineNumber": 68,
                        "lineChange": "added"
                      },
                      {
                        "line": "                \"/fonts/**\",\n",
                        "lineNumber": 69,
                        "lineChange": "added"
                      },
                      {
                        "line": "                \"/js/bundle.js\",\n",
                        "lineNumber": 70,
                        "lineChange": "added"
                      },
                      {
                        "line": "                \"/js/bundle.js.map\",\n",
                        "lineNumber": 71,
                        "lineChange": "added"
                      },
                      {
                        "line": "                \"/css/style.css\",\n",
                        "lineNumber": 72,
                        "lineChange": "added"
                      },
                      {
                        "line": "                \"index.html\",\n",
                        "lineNumber": 73,
                        "lineChange": "added"
                      },
                      {
                        "line": "                BaseController.BASE_PATH + \"/login\",\n",
                        "lineNumber": 74,
                        "lineChange": "added"
                      },
                      {
                        "line": "                BaseController.BASE_PATH + \"/verify\",\n",
                        "lineNumber": 75,
                        "lineChange": "added"
                      },
                      {
                        "line": "                BaseController.BASE_PATH + \"/about\" };\n",
                        "lineNumber": 76,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 77,
                        "lineChange": "added"
                      },
                      {
                        "line": "        http.csrf().csrfTokenRepository(csrfTokenRepository).ignoringAntMatchers(csrfIgnoredPaths)\n",
                        "lineNumber": 78,
                        "lineChange": "added"
                      },
                      {
                        "line": "                .and().authorizeRequests().antMatchers(allowedPaths).permitAll()\n",
                        "lineNumber": 79,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/mraible/java-webapp-security-examples/commit/1ae83aeb6975a107dcdb616eeae63bc846fcadaf?diff=split#diff-b8cb20d5732c784ae693cb1cd9ecb813e912a21fe570c581998875276a2a642dL-1",
                    "lines": [
                      {
                        "line": "http\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "    .csrf().disable()\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    .csrf().and()\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 69,
                "cwe": [
                  "CWE-352"
                ]
              }
            },
            {
              "id": "java/HardcodedPassword/test",
              "name": "HardcodedPassword/test",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n## Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "HardcodedPassword",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/Gepardec/Hogarama/commit/7b532d9240eb2e7a059539e419ea218c22a5b0f5?diff=split#diff-db19dfe0e7a0c625c6e48b0d94c04add219239f2f63cf6f2674dd962e92e8ff2L-1",
                    "lines": [
                      {
                        "line": "\tprivate static final char[] PASSWORD = \"hogajama@mongodb\".toCharArray();\n",
                        "lineNumber": 22,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\tprivate static final char[] PASSWORD = System.getProperty(\"MONGODB_PW\").toCharArray();\n",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tprivate static final int PORT = 27017;\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tprivate static final String COLLECTION = \"habarama\";\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tprivate static final String HOST = System.getProperty(\"mongo.host\", \"mongodb\");\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t@Produces \n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tpublic Datastore datastore() {\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tMongoClient mongoClient = getClient();\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tMorphia morphia = new Morphia();\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tmorphia.mapPackage(\"com.gepardec.hogarama.domain\");\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tDatastore datastore = morphia.createDatastore(mongoClient, MongoDbProducer.HOGAJAMA_DB);\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tdatastore.ensureIndexes();\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\treturn datastore;\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t}\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t@Produces \n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tpublic DBCollection collection() {\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tMongoClient mongoClient = getClient();\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tDB db = mongoClient.getDB(HOGAJAMA_DB);\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\treturn db.getCollection(COLLECTION);\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t}\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tprivate MongoClient getClient() {\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tMongoCredential credential = MongoCredential.createCredential(USER, HOGAJAMA_DB, PASSWORD);\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/xfifix/SEO_REPO/commit/4807500fee6a392ed64f66bc4dfe38d103bdb64e?diff=split#diff-9873c5adc0806eb5d51fdefea3f0460c6fc28b67d21ce7380f6c9cd52770b250L-1",
                    "lines": [
                      {
                        "line": "\t\t//\t\tString url = props.getProperty(\"db.url\");\n",
                        "lineNumber": 41,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t//\t\tString user = props.getProperty(\"db.user\");\n",
                        "lineNumber": 42,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t//\t\tString passwd = props.getProperty(\"db.passwd\");\n",
                        "lineNumber": 43,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t//\t\t\n",
                        "lineNumber": 44,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tString url=\"jdbc:postgresql://localhost/KEYWORDSDB\";\n",
                        "lineNumber": 45,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tString user=\"postgres\";\n",
                        "lineNumber": 46,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tString passwd=\"mogette\";\n",
                        "lineNumber": 47,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 48,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tString url = props.getProperty(\"db.url\");\n",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tString user = props.getProperty(\"db.user\");\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tString passwd = props.getProperty(\"db.passwd\");\n",
                        "lineNumber": 46,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t// Instantiating the database\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tConnection con = null;\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tPreparedStatement pst = null;\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t// the csv file variables\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tResultSet rs = null;\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\ttry {\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tcon = DriverManager.getConnection(url, user, passwd);\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/xfifix/SEO_REPO/commit/4807500fee6a392ed64f66bc4dfe38d103bdb64e?diff=split#diff-a3dca6ec48a4147bea68835a9da60df6ca08a8bff0c47e1eff8ce86c6a1c601fL-1",
                    "lines": [
                      {
                        "line": "//\t\tString url = props.getProperty(\"db.url\");\n",
                        "lineNumber": 41,
                        "lineChange": "removed"
                      },
                      {
                        "line": "//\t\tString user = props.getProperty(\"db.user\");\n",
                        "lineNumber": 42,
                        "lineChange": "removed"
                      },
                      {
                        "line": "//\t\tString passwd = props.getProperty(\"db.passwd\");\n",
                        "lineNumber": 43,
                        "lineChange": "removed"
                      },
                      {
                        "line": "//\t\t\n",
                        "lineNumber": 44,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tString url=\"jdbc:postgresql://localhost/KEYWORDSDB\";\n",
                        "lineNumber": 45,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tString user=\"postgres\";\n",
                        "lineNumber": 46,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tString passwd=\"mogette\";\n",
                        "lineNumber": 47,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t\n",
                        "lineNumber": 48,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tString url = props.getProperty(\"db.url\");\n",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tString user = props.getProperty(\"db.user\");\n",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tString passwd = props.getProperty(\"db.passwd\");\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t// Instantiating the database\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tConnection con = null;\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tPreparedStatement pst = null;\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t// the csv file variables\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tResultSet rs = null;\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\ttry {\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tcon = DriverManager.getConnection(url, user, passwd);\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 65,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            },
            {
              "id": "java/HardcodedPassword",
              "name": "HardcodedPassword",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n## Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "HardcodedPassword",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/Gepardec/Hogarama/commit/7b532d9240eb2e7a059539e419ea218c22a5b0f5?diff=split#diff-db19dfe0e7a0c625c6e48b0d94c04add219239f2f63cf6f2674dd962e92e8ff2L-1",
                    "lines": [
                      {
                        "line": "\tprivate static final char[] PASSWORD = \"hogajama@mongodb\".toCharArray();\n",
                        "lineNumber": 22,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\tprivate static final char[] PASSWORD = System.getProperty(\"MONGODB_PW\").toCharArray();\n",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tprivate static final int PORT = 27017;\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tprivate static final String COLLECTION = \"habarama\";\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tprivate static final String HOST = System.getProperty(\"mongo.host\", \"mongodb\");\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t@Produces \n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tpublic Datastore datastore() {\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tMongoClient mongoClient = getClient();\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tMorphia morphia = new Morphia();\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tmorphia.mapPackage(\"com.gepardec.hogarama.domain\");\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tDatastore datastore = morphia.createDatastore(mongoClient, MongoDbProducer.HOGAJAMA_DB);\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tdatastore.ensureIndexes();\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\treturn datastore;\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t}\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t@Produces \n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tpublic DBCollection collection() {\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tMongoClient mongoClient = getClient();\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tDB db = mongoClient.getDB(HOGAJAMA_DB);\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\treturn db.getCollection(COLLECTION);\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t}\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tprivate MongoClient getClient() {\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tMongoCredential credential = MongoCredential.createCredential(USER, HOGAJAMA_DB, PASSWORD);\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/xfifix/SEO_REPO/commit/4807500fee6a392ed64f66bc4dfe38d103bdb64e?diff=split#diff-9873c5adc0806eb5d51fdefea3f0460c6fc28b67d21ce7380f6c9cd52770b250L-1",
                    "lines": [
                      {
                        "line": "\t\t//\t\tString url = props.getProperty(\"db.url\");\n",
                        "lineNumber": 41,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t//\t\tString user = props.getProperty(\"db.user\");\n",
                        "lineNumber": 42,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t//\t\tString passwd = props.getProperty(\"db.passwd\");\n",
                        "lineNumber": 43,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t//\t\t\n",
                        "lineNumber": 44,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tString url=\"jdbc:postgresql://localhost/KEYWORDSDB\";\n",
                        "lineNumber": 45,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tString user=\"postgres\";\n",
                        "lineNumber": 46,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tString passwd=\"mogette\";\n",
                        "lineNumber": 47,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 48,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tString url = props.getProperty(\"db.url\");\n",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tString user = props.getProperty(\"db.user\");\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tString passwd = props.getProperty(\"db.passwd\");\n",
                        "lineNumber": 46,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t// Instantiating the database\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tConnection con = null;\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tPreparedStatement pst = null;\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t// the csv file variables\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tResultSet rs = null;\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\ttry {\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tcon = DriverManager.getConnection(url, user, passwd);\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/xfifix/SEO_REPO/commit/4807500fee6a392ed64f66bc4dfe38d103bdb64e?diff=split#diff-a3dca6ec48a4147bea68835a9da60df6ca08a8bff0c47e1eff8ce86c6a1c601fL-1",
                    "lines": [
                      {
                        "line": "//\t\tString url = props.getProperty(\"db.url\");\n",
                        "lineNumber": 41,
                        "lineChange": "removed"
                      },
                      {
                        "line": "//\t\tString user = props.getProperty(\"db.user\");\n",
                        "lineNumber": 42,
                        "lineChange": "removed"
                      },
                      {
                        "line": "//\t\tString passwd = props.getProperty(\"db.passwd\");\n",
                        "lineNumber": 43,
                        "lineChange": "removed"
                      },
                      {
                        "line": "//\t\t\n",
                        "lineNumber": 44,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tString url=\"jdbc:postgresql://localhost/KEYWORDSDB\";\n",
                        "lineNumber": 45,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tString user=\"postgres\";\n",
                        "lineNumber": 46,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tString passwd=\"mogette\";\n",
                        "lineNumber": 47,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t\n",
                        "lineNumber": 48,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tString url = props.getProperty(\"db.url\");\n",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tString user = props.getProperty(\"db.user\");\n",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tString passwd = props.getProperty(\"db.passwd\");\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t// Instantiating the database\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tConnection con = null;\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tPreparedStatement pst = null;\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t// the csv file variables\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tResultSet rs = null;\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\ttry {\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tcon = DriverManager.getConnection(url, user, passwd);\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 65,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "java/SpringCSRF",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "The sessionAttributeForm parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[sessionAttributeForm](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "spring-session-samples/spring-session-sample-boot-mongodb-reactive/src/main/java/org/springframework/session/mongodb/examples/SessionController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 35,
                  "endLine": 35,
                  "startColumn": 29,
                  "endColumn": 86
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f725191f439f76de46248163f78e82024a14962eec8703a16fa6e5f84da637b4",
            "1": "164c23b7.7f413d6f.cdc7c262.3519ac88.f0e1baa5.1912faec.3b42e79c.5525cfd2.164c23b7.7f413d6f.cdc7c262.3519ac88.f0e1baa5.1912faec.3b42e79c.5525cfd2"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-boot-mongodb-reactive/src/main/java/org/springframework/session/mongodb/examples/SessionController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 35,
                            "endLine": 35,
                            "startColumn": 29,
                            "endColumn": 86
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 164,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "The sessionAttributeForm parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[sessionAttributeForm](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "spring-session-samples/spring-session-sample-boot-webflux-custom-cookie/src/main/java/sample/SessionController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 31,
                  "endLine": 31,
                  "startColumn": 29,
                  "endColumn": 86
                }
              }
            }
          ],
          "fingerprints": {
            "0": "973e8a1a3abc0b2402acc32bcfa6ce42dd62eb395d2c5970ee11889a29013fcf",
            "1": "164c23b7.7f413d6f.b29a2e2c.3c1f2bdc.f0e1baa5.1912faec.5fa5ecf9.5525cfd2.164c23b7.7f413d6f.b29a2e2c.3c1f2bdc.f0e1baa5.1912faec.026eda45.5525cfd2"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-boot-webflux-custom-cookie/src/main/java/sample/SessionController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 29,
                            "endColumn": 86
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 164,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/SpringCSRF",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "The sessionAttributeForm parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[sessionAttributeForm](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "spring-session-samples/spring-session-sample-boot-webflux/src/main/java/sample/SessionController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 31,
                  "endLine": 31,
                  "startColumn": 29,
                  "endColumn": 86
                }
              }
            }
          ],
          "fingerprints": {
            "0": "625f95b0c5d21e4c9007a0cd26e462d656445efbae7211862aee73a40b1ed5b9",
            "1": "164c23b7.7f413d6f.b29a2e2c.3c1f2bdc.f0e1baa5.1912faec.5fa5ecf9.5525cfd2.164c23b7.7f413d6f.b29a2e2c.3c1f2bdc.f0e1baa5.1912faec.026eda45.5525cfd2"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-boot-webflux/src/main/java/sample/SessionController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 29,
                            "endColumn": 86
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 164,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/TrustBoundaryViolation",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into setAttribute where it is used to modify the HTTP session object. This could result in mixing trusted and untrusted data in the same data structure, thus increasing the likelihood to mistakenly trust unvalidated data.",
            "markdown": "Unsanitized input from {0} {1} into {2} where it is used to modify the HTTP session object. This could result in mixing trusted and untrusted data in the same data structure, thus increasing the likelihood to mistakenly trust unvalidated data.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3)",
              "[setAttribute](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "spring-session-samples/spring-session-sample-javaconfig-jdbc/src/main/java/sample/SessionServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "startColumn": 3,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1be05c16fe567e26d305757a498837232361463f7a8f3551427b1129a639c07b",
            "1": "19689298.83dbfe52.fdbc0497.55a9af9e.53e0e770.2f4e1548.d11a1cde.54d46e25.19689298.c5d10016.fdbc0497.e22980a8.53e0e770.0d476878.d11a1cde.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-javaconfig-jdbc/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 26,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-javaconfig-jdbc/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 26,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-javaconfig-jdbc/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 10,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-javaconfig-jdbc/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 33,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-javaconfig-jdbc/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 3,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 190,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/TrustBoundaryViolation",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into setAttribute where it is used to modify the HTTP session object. This could result in mixing trusted and untrusted data in the same data structure, thus increasing the likelihood to mistakenly trust unvalidated data.",
            "markdown": "Unsanitized input from {0} {1} into {2} where it is used to modify the HTTP session object. This could result in mixing trusted and untrusted data in the same data structure, thus increasing the likelihood to mistakenly trust unvalidated data.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3)",
              "[setAttribute](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "spring-session-samples/spring-session-sample-misc-hazelcast/src/main/java/sample/SessionServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 36,
                  "startColumn": 3,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9f45e427e1fc46c558e23a9a03a810b34bd38b6db70631f5bed838115a34f3c3",
            "1": "19689298.83dbfe52.fdbc0497.55a9af9e.53e0e770.2f4e1548.d11a1cde.54d46e25.19689298.c5d10016.fdbc0497.e22980a8.53e0e770.0d476878.d11a1cde.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-misc-hazelcast/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 26,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-misc-hazelcast/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 26,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-misc-hazelcast/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 10,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-misc-hazelcast/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 33,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-misc-hazelcast/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 3,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 190,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/TrustBoundaryViolation",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into setAttribute where it is used to modify the HTTP session object. This could result in mixing trusted and untrusted data in the same data structure, thus increasing the likelihood to mistakenly trust unvalidated data.",
            "markdown": "Unsanitized input from {0} {1} into {2} where it is used to modify the HTTP session object. This could result in mixing trusted and untrusted data in the same data structure, thus increasing the likelihood to mistakenly trust unvalidated data.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3)",
              "[setAttribute](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "spring-session-samples/spring-session-sample-xml-jdbc/src/main/java/sample/SessionServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 32,
                  "endLine": 32,
                  "startColumn": 3,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c85d52605c1a7e4fafe9dffdd4141e9c600e90d4878cb6ee955eb5576e27bf72",
            "1": "19689298.83dbfe52.fdbc0497.55a9af9e.53e0e770.2f4e1548.d11a1cde.54d46e25.19689298.c5d10016.fdbc0497.e22980a8.53e0e770.0d476878.d11a1cde.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-xml-jdbc/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 26,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-xml-jdbc/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 26,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-xml-jdbc/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 10,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-xml-jdbc/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 33,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-xml-jdbc/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 3,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 190,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/TrustBoundaryViolation",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into setAttribute where it is used to modify the HTTP session object. This could result in mixing trusted and untrusted data in the same data structure, thus increasing the likelihood to mistakenly trust unvalidated data.",
            "markdown": "Unsanitized input from {0} {1} into {2} where it is used to modify the HTTP session object. This could result in mixing trusted and untrusted data in the same data structure, thus increasing the likelihood to mistakenly trust unvalidated data.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3)",
              "[setAttribute](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "spring-session-samples/spring-session-sample-javaconfig-hazelcast/src/main/java/sample/SessionServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 33,
                  "endLine": 33,
                  "startColumn": 3,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c525c7f40e924e57f3c8191b5dc3faef96145fc82c597cf5c87a0f54db17b172",
            "1": "19689298.83dbfe52.fdbc0497.55a9af9e.53e0e770.2f4e1548.d11a1cde.54d46e25.19689298.c5d10016.fdbc0497.e22980a8.53e0e770.0d476878.d11a1cde.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-javaconfig-hazelcast/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 26,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-javaconfig-hazelcast/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 26,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-javaconfig-hazelcast/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 10,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-javaconfig-hazelcast/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "endLine": 33,
                            "startColumn": 33,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-javaconfig-hazelcast/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "endLine": 33,
                            "startColumn": 3,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 190,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/TrustBoundaryViolation",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into setAttribute where it is used to modify the HTTP session object. This could result in mixing trusted and untrusted data in the same data structure, thus increasing the likelihood to mistakenly trust unvalidated data.",
            "markdown": "Unsanitized input from {0} {1} into {2} where it is used to modify the HTTP session object. This could result in mixing trusted and untrusted data in the same data structure, thus increasing the likelihood to mistakenly trust unvalidated data.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2)",
              "[setAttribute](3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "spring-session-samples/spring-session-sample-boot-redis-json/src/main/java/sample/web/HomeController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 36,
                  "startColumn": 4,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9a9779a050c576851bcbbfd4771b6be2aba74de7e6f6b1a8674dea011a3a982c",
            "1": "41ca1140.de01baf8.a224ef38.e8d76583.53e0e770.3fe77750.d11a1cde.96f2b075.daf8aa0f.b4074dda.a224ef38.9998adc9.53e0e770.3fe77750.d11a1cde.96f2b075"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-boot-redis-json/src/main/java/sample/web/HomeController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "endLine": 33,
                            "startColumn": 25,
                            "endColumn": 81
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-boot-redis-json/src/main/java/sample/web/HomeController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "endLine": 33,
                            "startColumn": 25,
                            "endColumn": 81
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-boot-redis-json/src/main/java/sample/web/HomeController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 38,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-boot-redis-json/src/main/java/sample/web/HomeController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 4,
                            "endColumn": 37
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 190,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/TrustBoundaryViolation",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into setAttribute where it is used to modify the HTTP session object. This could result in mixing trusted and untrusted data in the same data structure, thus increasing the likelihood to mistakenly trust unvalidated data.",
            "markdown": "Unsanitized input from {0} {1} into {2} where it is used to modify the HTTP session object. This could result in mixing trusted and untrusted data in the same data structure, thus increasing the likelihood to mistakenly trust unvalidated data.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3)",
              "[setAttribute](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "spring-session-samples/spring-session-sample-javaconfig-custom-cookie/src/main/java/sample/SessionServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "startColumn": 3,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4ecc32f0f41733b74661fa31061ad29baf75f1ccb8334ae60d5d873762b5981d",
            "1": "19689298.83dbfe52.fdbc0497.55a9af9e.53e0e770.2f4e1548.d11a1cde.54d46e25.19689298.c5d10016.fdbc0497.e22980a8.53e0e770.0d476878.d11a1cde.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-javaconfig-custom-cookie/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 26,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-javaconfig-custom-cookie/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 26,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-javaconfig-custom-cookie/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 10,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-javaconfig-custom-cookie/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 33,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-javaconfig-custom-cookie/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 3,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 190,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/TrustBoundaryViolation",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into setAttribute where it is used to modify the HTTP session object. This could result in mixing trusted and untrusted data in the same data structure, thus increasing the likelihood to mistakenly trust unvalidated data.",
            "markdown": "Unsanitized input from {0} {1} into {2} where it is used to modify the HTTP session object. This could result in mixing trusted and untrusted data in the same data structure, thus increasing the likelihood to mistakenly trust unvalidated data.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3)",
              "[setAttribute](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "spring-session-samples/spring-session-sample-javaconfig-redis/src/main/java/sample/SessionServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "startColumn": 3,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2d40ed7929c6a7e9367209a967acbd11563998ce7c5dc78f7a753d92f85d90a7",
            "1": "19689298.83dbfe52.fdbc0497.55a9af9e.53e0e770.2f4e1548.d11a1cde.54d46e25.19689298.c5d10016.fdbc0497.e22980a8.53e0e770.0d476878.d11a1cde.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-javaconfig-redis/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 26,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-javaconfig-redis/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 26,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-javaconfig-redis/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 10,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-javaconfig-redis/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 33,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-javaconfig-redis/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 3,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 190,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/TrustBoundaryViolation",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into setAttribute where it is used to modify the HTTP session object. This could result in mixing trusted and untrusted data in the same data structure, thus increasing the likelihood to mistakenly trust unvalidated data.",
            "markdown": "Unsanitized input from {0} {1} into {2} where it is used to modify the HTTP session object. This could result in mixing trusted and untrusted data in the same data structure, thus increasing the likelihood to mistakenly trust unvalidated data.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3)",
              "[setAttribute](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "spring-session-samples/spring-session-sample-xml-redis/src/main/java/sample/SessionServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 32,
                  "endLine": 32,
                  "startColumn": 3,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f239081c8f30f4f671b3ce451bab5b44e87a9cc4f62a2b6adb948e1f554effd6",
            "1": "19689298.83dbfe52.fdbc0497.55a9af9e.53e0e770.2f4e1548.d11a1cde.54d46e25.19689298.c5d10016.fdbc0497.e22980a8.53e0e770.0d476878.d11a1cde.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-xml-redis/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 26,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-xml-redis/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 26,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-xml-redis/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 10,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-xml-redis/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 33,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-xml-redis/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 3,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 190,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/TrustBoundaryViolation",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into setAttribute where it is used to modify the HTTP session object. This could result in mixing trusted and untrusted data in the same data structure, thus increasing the likelihood to mistakenly trust unvalidated data.",
            "markdown": "Unsanitized input from {0} {1} into {2} where it is used to modify the HTTP session object. This could result in mixing trusted and untrusted data in the same data structure, thus increasing the likelihood to mistakenly trust unvalidated data.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3)",
              "[setAttribute](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "spring-session-samples/spring-session-sample-javaconfig-security/src/main/java/sample/SessionServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 33,
                  "endLine": 33,
                  "startColumn": 3,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f87f82df6a4884979990ea73bdb2413eb17e8c4839c5e578c5494fa5023e525b",
            "1": "19689298.83dbfe52.fdbc0497.55a9af9e.53e0e770.2f4e1548.d11a1cde.54d46e25.19689298.c5d10016.fdbc0497.e22980a8.53e0e770.0d476878.d11a1cde.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-javaconfig-security/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 26,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-javaconfig-security/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 26,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-javaconfig-security/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 10,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-javaconfig-security/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "endLine": 33,
                            "startColumn": 33,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-javaconfig-security/src/main/java/sample/SessionServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "endLine": 33,
                            "startColumn": 3,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 190,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/DisablesCSRFProtection/test",
          "ruleIndex": 2,
          "level": "note",
          "message": {
            "text": "CSRF protection is disabled by csrf. This allows the attackers to execute requests on a user's behalf.",
            "markdown": "CSRF protection is disabled by {0}. This allows the attackers to execute requests on a user's behalf.",
            "arguments": [
              "[csrf](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "spring-session-data-mongodb/src/integration-test/java/org/springframework/session/data/mongo/MongoDbDeleteJacksonSessionVerificationTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 151,
                  "endLine": 154,
                  "startColumn": 11,
                  "endColumn": 11
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fc9904c8782cae0d75682ceaf03d12e28e9c13970605b8369f05c27eaed71b7b",
            "1": "0f51f81b.37fa1e89.13c31930.30877db4.d35c355a.c02e305f.d6712bb3.54d46e25.0f51f81b.37fa1e89.13c31930.32bd3632.d35c355a.c02e305f.3953228b.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-data-mongodb/src/integration-test/java/org/springframework/session/data/mongo/MongoDbDeleteJacksonSessionVerificationTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 151,
                            "endLine": 154,
                            "startColumn": 11,
                            "endColumn": 11
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 409,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/DisablesCSRFProtection/test",
          "ruleIndex": 2,
          "level": "note",
          "message": {
            "text": "CSRF protection is disabled by csrf. This allows the attackers to execute requests on a user's behalf.",
            "markdown": "CSRF protection is disabled by {0}. This allows the attackers to execute requests on a user's behalf.",
            "arguments": [
              "[csrf](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "spring-session-data-mongodb/src/integration-test/java/org/springframework/session/data/mongo/MongoDbLogoutVerificationTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 162,
                  "startColumn": 11,
                  "endColumn": 11
                }
              }
            }
          ],
          "fingerprints": {
            "0": "753ccc5663633d05f9129e6dafed0a001fedfb0e63db7cecbebdcd5f7ef0a028",
            "1": "0f51f81b.37fa1e89.13c31930.30877db4.d35c355a.c02e305f.d6712bb3.54d46e25.0f51f81b.37fa1e89.13c31930.32bd3632.d35c355a.c02e305f.3953228b.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-data-mongodb/src/integration-test/java/org/springframework/session/data/mongo/MongoDbLogoutVerificationTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 159,
                            "endLine": 162,
                            "startColumn": 11,
                            "endColumn": 11
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 409,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "spring-session-data-mongodb/src/integration-test/java/org/springframework/session/data/mongo/MongoDbDeleteJacksonSessionVerificationTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 164,
                  "endLine": 164,
                  "startColumn": 16,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3267f2dc68fb7bea3aaa49176745baac84a35b3f1a826e3407b95f14847b83bf",
            "1": "0643f59b.6a1270ed.5106f171.150572f3.3a913e09.57bc8f74.d6c2d867.21254726.ca9876a9.1cbd3ff4.5106f171.30877db4.3a913e09.9d992be1.d6c2d867.2a307277"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-data-mongodb/src/integration-test/java/org/springframework/session/data/mongo/MongoDbDeleteJacksonSessionVerificationTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 164,
                            "endLine": 164,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 422,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "spring-session-data-mongodb/src/integration-test/java/org/springframework/session/data/mongo/MongoDbLogoutVerificationTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 172,
                  "endLine": 172,
                  "startColumn": 16,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7ef9b296b256a443615e264798dc2312bf6e268b7676aad90a02608c5d847af1",
            "1": "0643f59b.6a1270ed.5106f171.150572f3.3a913e09.57bc8f74.d6c2d867.21254726.ca9876a9.1cbd3ff4.5106f171.30877db4.3a913e09.9d992be1.d6c2d867.2a307277"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-data-mongodb/src/integration-test/java/org/springframework/session/data/mongo/MongoDbLogoutVerificationTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 172,
                            "endLine": 172,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 422,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "spring-session-core/src/test/java/org/springframework/session/PrincipalNameIndexResolverTests.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 57,
                  "endLine": 57,
                  "startColumn": 91,
                  "endColumn": 100
                }
              }
            }
          ],
          "fingerprints": {
            "0": "67213fb29b6e04656df6ae8ef197d8fcdbd796eec974356538add82d35f33d97",
            "1": "ac4e7c8b.481b9a3e.79861a6d.6c52ae28.000ee9f1.51c5d720.75c6bf9d.1d68b394.19689298.481b9a3e.750d773f.1bc7f334.000ee9f1.8973017f.72a275ef.1d68b394"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-core/src/test/java/org/springframework/session/PrincipalNameIndexResolverTests.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 91,
                            "endColumn": 100
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 372,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "spring-session-jdbc/src/test/java/org/springframework/session/jdbc/JdbcIndexedSessionRepositoryTests.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 616,
                  "endLine": 616,
                  "startColumn": 86,
                  "endColumn": 95
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f0e420d4af8294558b67179a310e24d8d6d5160eb94d95f82f0eea4c1ae9d996",
            "1": "cea1274c.481b9a3e.79861a6d.6c52ae28.000ee9f1.136f7cfd.b486194e.203bd690.19689298.481b9a3e.750d773f.1bc7f334.000ee9f1.8973017f.b486194e.203bd690"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-jdbc/src/test/java/org/springframework/session/jdbc/JdbcIndexedSessionRepositoryTests.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 616,
                            "endLine": 616,
                            "startColumn": 86,
                            "endColumn": 95
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 372,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "spring-session-hazelcast/src/test/java/org/springframework/session/hazelcast/HazelcastIndexedSessionRepositoryTests.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 380,
                  "endLine": 380,
                  "startColumn": 86,
                  "endColumn": 95
                }
              }
            }
          ],
          "fingerprints": {
            "0": "95fed3d5cd4af38103ed191188085cd8b6fe18e78ba8ef1810f1a580e077ac29",
            "1": "cea1274c.481b9a3e.79861a6d.6c52ae28.000ee9f1.136f7cfd.b486194e.203bd690.19689298.481b9a3e.750d773f.1bc7f334.000ee9f1.8973017f.b486194e.203bd690"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-hazelcast/src/test/java/org/springframework/session/hazelcast/HazelcastIndexedSessionRepositoryTests.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 380,
                            "endLine": 380,
                            "startColumn": 86,
                            "endColumn": 95
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 372,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "spring-session-samples/spring-session-sample-javaconfig-rest/src/main/java/sample/SecurityConfig.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 55,
                  "endLine": 55,
                  "startColumn": 49,
                  "endColumn": 65
                }
              }
            }
          ],
          "fingerprints": {
            "0": "df35b106909874b005520c9bc6e256368237a1039b19ca429db9092e7497b2cf",
            "1": "0643f59b.6a1270ed.5106f171.150572f3.3a913e09.57bc8f74.d6c2d867.21254726.ca9876a9.1cbd3ff4.4a19bc6c.30877db4.3a913e09.5a22c7a3.3701091c.21254726"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-javaconfig-rest/src/main/java/sample/SecurityConfig.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 49,
                            "endColumn": 65
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 518,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "spring-session-samples/spring-session-sample-javaconfig-security/src/main/java/sample/SecurityConfig.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 35,
                  "endLine": 35,
                  "startColumn": 49,
                  "endColumn": 65
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bf0500fbb59440310430ceba25dbf21a0cf7ac9f818b4b9c8bc2c26d54a63a6f",
            "1": "0643f59b.6a1270ed.5106f171.150572f3.3a913e09.57bc8f74.d6c2d867.21254726.ca9876a9.1cbd3ff4.4a19bc6c.30877db4.3a913e09.5a22c7a3.3701091c.21254726"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-javaconfig-security/src/main/java/sample/SecurityConfig.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 35,
                            "endLine": 35,
                            "startColumn": 49,
                            "endColumn": 65
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 518,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "spring-session-docs/modules/ROOT/examples/java/docs/security/RememberMeSecurityConfiguration.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "startColumn": 40,
                  "endColumn": 56
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a1138e6cc1d7aa2035b2d45b9b5ce07a9b133a7f92eb6e9c52ce8fdf85fb258f",
            "1": "0643f59b.6a1270ed.5106f171.150572f3.3a913e09.57bc8f74.d6c2d867.21254726.ca9876a9.1cbd3ff4.4a19bc6c.30877db4.3a913e09.5a22c7a3.3701091c.21254726"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-docs/modules/ROOT/examples/java/docs/security/RememberMeSecurityConfiguration.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 74,
                            "endLine": 74,
                            "startColumn": 40,
                            "endColumn": 56
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 518,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "spring-session-samples/spring-session-sample-javaconfig-hazelcast/src/main/java/sample/SecurityConfig.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 35,
                  "endLine": 35,
                  "startColumn": 49,
                  "endColumn": 65
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d73665fb18259edfdfa0f50e58e3fe69560064b3ae5430b1566a656eedb4c53d",
            "1": "0643f59b.6a1270ed.5106f171.150572f3.3a913e09.57bc8f74.d6c2d867.21254726.ca9876a9.1cbd3ff4.4a19bc6c.30877db4.3a913e09.5a22c7a3.3701091c.21254726"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "spring-session-samples/spring-session-sample-javaconfig-hazelcast/src/main/java/sample/SecurityConfig.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 35,
                            "endLine": 35,
                            "startColumn": 49,
                            "endColumn": 65
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 518,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "isSupported": true,
            "lang": "Java",
            "files": 425,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "XML",
            "files": 29,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "JavaScript",
            "files": 3,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "HTML",
            "files": 10,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Java Server Pages",
            "files": 8,
            "type": "SUPPORTED"
          },
          {
            "isSupported": false,
            "lang": "HTML",
            "files": 11,
            "type": "FAILED_PARSING"
          }
        ]
      }
    }
  ]
}
