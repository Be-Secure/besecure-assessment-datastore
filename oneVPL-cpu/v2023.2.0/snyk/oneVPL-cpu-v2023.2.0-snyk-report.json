{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "python/InsecureHash",
              "name": "InsecureHash",
              "shortDescription": {
                "text": "Use of Password Hash With Insufficient Computational Effort"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n## Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "InsecureHash",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-916"
                ]
              }
            },
            {
              "id": "python/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "PT",
                  "Security",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/pynickle/amazing-python/commit/80d2cc8c3e2c8330416b91f17a09b51830915b86?diff=split#diff-f626b00ab4d99fdbd4cb2bd61ae29469L118",
                    "lines": [
                      {
                        "line": "if request.method == \"POST\":",
                        "lineNumber": 161,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try:",
                        "lineNumber": 162,
                        "lineChange": "none"
                      },
                      {
                        "line": "        f = request.files['file']",
                        "lineNumber": 163,
                        "lineChange": "none"
                      },
                      {
                        "line": "        filename = f.filename",
                        "lineNumber": 118,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        filename = secure_filename(f.filename)",
                        "lineNumber": 164,
                        "lineChange": "added"
                      },
                      {
                        "line": "        f.save(filename)",
                        "lineNumber": 165,
                        "lineChange": "none"
                      },
                      {
                        "line": "        with open(filename, \"r\", encoding=\"utf-8\") as f:",
                        "lineNumber": 166,
                        "lineChange": "none"
                      },
                      {
                        "line": "            success, errors = words_validate(f.read())",
                        "lineNumber": 167,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/WhaleShark-Team/cobra/commit/1ac467a2c1cf8427a5bf60031677817140fe181c?diff=split#diff-dc0ad7c98d7072655327746f1bc95b3aL72",
                    "lines": [
                      {
                        "line": "task_type = 1",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "# check if there is a file or gitlab url",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "if len(request.files) == 0:",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # no files, should check username and password",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "    task_type = 1",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "# there is a file, check file format and uncompress it.",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "task_type = 2",
                        "lineNumber": 89,
                        "lineChange": "none"
                      },
                      {
                        "line": "upload_src = request.files['file']",
                        "lineNumber": 90,
                        "lineChange": "none"
                      },
                      {
                        "line": "filename = str(int(time.time())) + '_' + upload_src.filename",
                        "lineNumber": 90,
                        "lineChange": "removed"
                      },
                      {
                        "line": "filename = str(int(time.time())) + '_' + secure_filename(upload_src.filename)",
                        "lineNumber": 91,
                        "lineChange": "added"
                      },
                      {
                        "line": "filepath = 'uploads/' + filename",
                        "lineNumber": 92,
                        "lineChange": "none"
                      },
                      {
                        "line": "upload_src.save(filepath)",
                        "lineNumber": 93,
                        "lineChange": "none"
                      },
                      {
                        "line": "# if you upload a rar file, upload_src.mimetype will returns \"application/octet-stream\"",
                        "lineNumber": 95,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Wordseer/wordseer/commit/ea92ade27f7a7a12d057a2b71daf9ffa1cf4385e?diff=split#diff-e86334029c6a0118169cce848ff474ddR13",
                    "lines": [
                      {
                        "line": " PROJECT_ROUTE = \"/projects/\"",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": " ",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "def allowed_file(filename):",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return os.path.splitext(filename)[1] in app.config[\"ALLOWED_EXTENSIONS\"]",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": " @app.route(PROJECT_ROUTE, methods=[\"GET\", \"POST\"])",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": " def projects():",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "if request.method == \"POST\":",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "    uploaded_file = request.files[\"uploaded_file\"]",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if uploaded_file and allowed_file(uploaded_file.filename):",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "        filename = secure_filename(uploaded_file.filename)",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "        dest_path = os.path.join(app.config[\"UPLOAD_DIR\"],",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "            filename)",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "        uploaded_file.save(dest_path)",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "        #TODO: send the user somewhere useful?",
                        "lineNumber": 49,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 553,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "python/InsecureHash/test",
              "name": "InsecureHash/test",
              "shortDescription": {
                "text": "Use of Password Hash With Insufficient Computational Effort"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n## Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "InsecureHash",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-916"
                ]
              }
            },
            {
              "id": "python/InsecureXmlParser/test",
              "name": "InsecureXmlParser/test",
              "shortDescription": {
                "text": "Insecure Xml Parser"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nFor convenience, XML documents can use system identifiers to enable access to stored content, whether local or remote. The XML processor then uses the system identifier to access the resource rather than using the URI. When this weakness exists, the application permits user-supplied data, which could include the address of an XML external identity, to be passed directly to the XML parser. The application will then attempt to retrieve documents from outside of secure, controlled areas.\n\nAttackers can exploit this weakness to expose sensitive data, execute port scanning on the server side, or launch a denial-of-service attack (DoS) such as Billion Laughs.\n\n## Best practices for prevention\n* Avoid using vulnerable APIs\n* When possible, disable loading of data from external entities. The method of doing this will vary based on the language and XML parser being used.\n* Use a local, static document type definitions (DTDs) and ensure that external DTDs are disallowed entirely.\n* If user input cannot be avoided, perform validation against an allowlist of possible data sources. However, as long as external DTDs are allowed, XML code remains inherently vulnerable to attacks exploiting this weakness.\n\n\n## References\n* [XML vulnerabilities](https://docs.python.org/3/library/xml.html#xml-vulnerabilities)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "InsecureXmlParser",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/AcutronicRobotics/HRIM/commit/250c0c6fbccf7d1584927c2e7dd3761ae1c97012?diff=split#diff-c98fee250d6c0852708b3e48b7c79662L21",
                    "lines": [
                      {
                        "line": "                     choices=component_type_array)",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "args = parser.parse_args()",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "tree = et.parse(args.filename)",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "tree = parse(args.filename)",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "root = tree.getroot()",
                        "lineNumber": 21,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/moloch--/RootTheBox/commit/49d8f3f218c10aa71697fab2aab7d4eebbbc2618?diff=split#diff-f03054770abb9c24ad726a4465460150L124",
                    "lines": [
                      {
                        "line": "try:",
                        "lineNumber": 124,
                        "lineChange": "none"
                      },
                      {
                        "line": "    tree = ET.parse(filename)",
                        "lineNumber": 125,
                        "lineChange": "none"
                      },
                      {
                        "line": "except Exception as error:",
                        "lineNumber": 124,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    print(WARN+\"ERROR: \" + str(error))",
                        "lineNumber": 125,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    xml_root = tree.getroot()",
                        "lineNumber": 126,
                        "lineChange": "added"
                      },
                      {
                        "line": "    levels = get_child_by_tag(xml_root, \"gamelevels\")",
                        "lineNumber": 127,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/eucalyptus/eucaconsole/commit/62b8abc0b08531e1145d48f6951ebc7bd6afc735?diff=split#diff-c8dbccf4ef1ce28db5c8808ff9d73422L293",
                    "lines": [
                      {
                        "line": "    creds = Credentials()",
                        "lineNumber": 291,
                        "lineChange": "none"
                      },
                      {
                        "line": "    h = BotoXmlHandler(creds, None)",
                        "lineNumber": 292,
                        "lineChange": "none"
                      },
                      {
                        "line": "    xml.sax.parseString(body, h)",
                        "lineNumber": 292,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    parseString(body, h)",
                        "lineNumber": 293,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return creds",
                        "lineNumber": 294,
                        "lineChange": "none"
                      },
                      {
                        "line": "except SSLError as err:",
                        "lineNumber": 295,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 32,
                "cwe": [
                  "CWE-611"
                ]
              }
            },
            {
              "id": "python/CommandInjection/test",
              "name": "CommandInjection/test",
              "shortDescription": {
                "text": "Command Injection"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nWith an OS command injection attack a web application user can pass commands directly to the system shell, attached to a legitimate request. These commands can then be executed on the application server, potentially leading to harmful consequences, including data exposure or deletion. Like code injection attacks, command injection attacks are essentially a failure of data validation. Unlike code injection attacks, which introduce new code, command injection attacks use existing system functions, often taking advantage of the application's unnecessarily high privilege level, increasing the risk of serious harm and reputational damage.\n\n## Best practices for prevention\n- Never trust user input. Assume any input may transmit harmful values.\n- Adopt the principle of least privilege: No application should have a greater access level than needed to run its required tasks.\n- Control user access policies on a task-by-task basis.\n- Don't pass user input directly to the system; use libraries or APIs that lack system access.\n- Where shell commands must be passed, escape values using functions like shlex for Python, or escapeshellarg() for PHP.\n- Sanitize user input with regular expressions to define permitted characters along with maximum string length.\n- Convert special characters such as `& |  ; $ > < \\ !` before passing to the server.\n- Whitelist permitted commands and validate user responses against these expectations.\n- Remember that code injection can take place on multiple fronts: GET and POST requests, but also cookies and HTTP headers.\n- Ensure up-to-date patching across all systems to remediate known vulnerabilities.\n- Educate all team members on safer data handling procedures to prevent attacks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "CommandInjection",
                  "Security",
                  "InTest",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/DustinBorn/avain/commit/4776439387645bced0e86e3766817de2562bf2eb?diff=split#diff-40f53a8850b6eb3209bd2d436d3ec5acL41",
                    "lines": [
                      {
                        "line": "# first download the data feed overview to retrieve URLs to all data feeds",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "try:",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "    nvd_response = requests.get(\"https://nvd.nist.gov/vuln/data-feeds\", timeout=20)",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "except:",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "communicate_warning(\"An error occured when trying to download webpage: https://nvd.nist.gov/vuln/data-feeds\")",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "# match the data feed URLs",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "nvd_nist_datafeed_html = nvd_response.text",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "jfeed_expr = re.compile(r\"https://nvd\\.nist\\.gov/feeds/json/cve/1\\.1/nvdcve-1\\.1-\\d\\d\\d\\d.json\\.zip\")",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "nvd_feed_urls = re.findall(jfeed_expr, nvd_nist_datafeed_html)",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "if not nvd_feed_urls:",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "with open(WGET_OUTFILE, \"w\") as file:",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "    zipfiles = []",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for nvd_feed_url in nvd_feed_urls:",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "        outname = os.path.join(NVD_DATAFEED_DIR, nvd_feed_url.split(\"/\")[-1])",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return_code = subprocess.call(\"wget %s -O %s\" % (nvd_feed_url, outname), stdout=file, stderr=subprocess.STDOUT, shell=True)",
                        "lineNumber": 65,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        return_code = subprocess.call(\"wget %s -O %s\" % (shlex.quote(nvd_feed_url), shlex.quote(outname)),",
                        "lineNumber": 86,
                        "lineChange": "added"
                      },
                      {
                        "line": "                                      stdout=file, stderr=subprocess.STDOUT, shell=True)",
                        "lineNumber": 87,
                        "lineChange": "added"
                      },
                      {
                        "line": "        if return_code != 0:",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "            NVD_UPDATE_SUCCESS = False",
                        "lineNumber": 89,
                        "lineChange": "added"
                      },
                      {
                        "line": "            communicate_warning(\"Getting NVD data feed %s failed\" %  nvd_feed_url)",
                        "lineNumber": 90,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/phase/o/commit/0f4bf9160b046e42f4cfad49585cc727b5213dc0?diff=split#diff-d689391370727e13cf640b0a56f5c1f0L32",
                    "lines": [
                      {
                        "line": "    compileO()",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "#Run code",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "code = request.form['code']",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "input = request.form['input'].replace('\\r\\n', '\\n')",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "print('Got code:', code, 'input:', input)",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "print('Running O code...')",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "p = Popen('./oide -e ' + code, stdout=PIPE, stderr=PIPE, stdin=PIPE, universal_newlines=True, shell=True)",
                        "lineNumber": 35,
                        "lineChange": "removed"
                      },
                      {
                        "line": "p = Popen(['./oide', '-e', code], stdout=PIPE, stderr=PIPE, stdin=PIPE, universal_newlines=True)",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "output, error = p.communicate(input)",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "#Output to IDE",
                        "lineNumber": 37,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/fossasia/susi_linux/commit/cb0d01d811fcb53863847ce57f57e8cb6c83df6c?diff=split#diff-d1b551c102df7ccabbf2e58275781476L15",
                    "lines": [
                      {
                        "line": "    return 'starting the installation script'",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "@app.route('/config/<stt>/<tts>/<hotword>/<wake>')",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "def config(stt, tts, hotword, wake):",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "    os.system('sudo bash /home/pi/SUSI.AI/susi_linux/access_point/server/config.sh {} {} {} {}'.format(stt,tts,hotword,wake))  #nosec #pylint-disable type: ignore",
                        "lineNumber": 16,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    subprocess.call(['sudo', 'bash' , 'server/config.sh', stt, tts, hotword, wake])  #nosec #pylint-disable type: ignore",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return 'Done' # pylint-enable",
                        "lineNumber": 17,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 128,
                "cwe": [
                  "CWE-78"
                ]
              }
            },
            {
              "id": "python/InsecureXmlParser",
              "name": "InsecureXmlParser",
              "shortDescription": {
                "text": "Insecure Xml Parser"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nFor convenience, XML documents can use system identifiers to enable access to stored content, whether local or remote. The XML processor then uses the system identifier to access the resource rather than using the URI. When this weakness exists, the application permits user-supplied data, which could include the address of an XML external identity, to be passed directly to the XML parser. The application will then attempt to retrieve documents from outside of secure, controlled areas.\n\nAttackers can exploit this weakness to expose sensitive data, execute port scanning on the server side, or launch a denial-of-service attack (DoS) such as Billion Laughs.\n\n## Best practices for prevention\n* Avoid using vulnerable APIs\n* When possible, disable loading of data from external entities. The method of doing this will vary based on the language and XML parser being used.\n* Use a local, static document type definitions (DTDs) and ensure that external DTDs are disallowed entirely.\n* If user input cannot be avoided, perform validation against an allowlist of possible data sources. However, as long as external DTDs are allowed, XML code remains inherently vulnerable to attacks exploiting this weakness.\n\n\n## References\n* [XML vulnerabilities](https://docs.python.org/3/library/xml.html#xml-vulnerabilities)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "InsecureXmlParser",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/AcutronicRobotics/HRIM/commit/250c0c6fbccf7d1584927c2e7dd3761ae1c97012?diff=split#diff-c98fee250d6c0852708b3e48b7c79662L21",
                    "lines": [
                      {
                        "line": "                     choices=component_type_array)",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "args = parser.parse_args()",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "tree = et.parse(args.filename)",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "tree = parse(args.filename)",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "root = tree.getroot()",
                        "lineNumber": 21,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/moloch--/RootTheBox/commit/49d8f3f218c10aa71697fab2aab7d4eebbbc2618?diff=split#diff-f03054770abb9c24ad726a4465460150L124",
                    "lines": [
                      {
                        "line": "try:",
                        "lineNumber": 124,
                        "lineChange": "none"
                      },
                      {
                        "line": "    tree = ET.parse(filename)",
                        "lineNumber": 125,
                        "lineChange": "none"
                      },
                      {
                        "line": "except Exception as error:",
                        "lineNumber": 124,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    print(WARN+\"ERROR: \" + str(error))",
                        "lineNumber": 125,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    xml_root = tree.getroot()",
                        "lineNumber": 126,
                        "lineChange": "added"
                      },
                      {
                        "line": "    levels = get_child_by_tag(xml_root, \"gamelevels\")",
                        "lineNumber": 127,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/eucalyptus/eucaconsole/commit/62b8abc0b08531e1145d48f6951ebc7bd6afc735?diff=split#diff-c8dbccf4ef1ce28db5c8808ff9d73422L293",
                    "lines": [
                      {
                        "line": "    creds = Credentials()",
                        "lineNumber": 291,
                        "lineChange": "none"
                      },
                      {
                        "line": "    h = BotoXmlHandler(creds, None)",
                        "lineNumber": 292,
                        "lineChange": "none"
                      },
                      {
                        "line": "    xml.sax.parseString(body, h)",
                        "lineNumber": 292,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    parseString(body, h)",
                        "lineNumber": 293,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return creds",
                        "lineNumber": 294,
                        "lineChange": "none"
                      },
                      {
                        "line": "except SSLError as err:",
                        "lineNumber": 295,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 32,
                "cwe": [
                  "CWE-611"
                ]
              }
            },
            {
              "id": "python/no~hostname~verification",
              "name": "no~hostname~verification",
              "shortDescription": {
                "text": "no~hostname~verification"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "no~hostname~verification",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.md5](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "script/bootstrap.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 508,
                  "endLine": 508,
                  "startColumn": 42,
                  "endColumn": 60
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3b3ff1f7e88f892a93c141321182200d2b7fd11002d2a9de202cdd804c4d546d",
            "1": "2010f70c.ecc4e7fd.5604ac65.139c59a8.3a605997.ba14daf2.75d4ed92.2c77ce57.2010f70c.ecc4e7fd.f04405c4.139c59a8.3a605997.ba14daf2.75d4ed92.2c77ce57"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/bootstrap.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 506,
                            "endLine": 506,
                            "startColumn": 30,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 210,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.md5](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "script/bootstrap.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 510,
                  "endLine": 510,
                  "startColumn": 34,
                  "endColumn": 52
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e008a4bd1b53b286f42c6362115ec59d2178e91e679c6d7ffe3f955e42cd8ec9",
            "1": "2010f70c.ecc4e7fd.5604ac65.139c59a8.3a605997.ba14daf2.75d4ed92.2c77ce57.2010f70c.ecc4e7fd.f04405c4.139c59a8.3a605997.ba14daf2.75d4ed92.2c77ce57"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/bootstrap.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 506,
                            "endLine": 506,
                            "startColumn": 30,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 210,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21)",
              "[open](22)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "script/coverity.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 119,
                  "endLine": 119,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b7799a639560cdbbc51930f30412defd9f560d240fededec47d597e25a18024f",
            "1": "73461b37.52719dea.187bf175.139c59a8.f3eda546.1b260804.08e5252e.4201a018.1e15ac3b.1b8e554c.187bf175.9cd2dfe0.4608c58f.820d17bc.f6dc7859.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 192,
                            "endLine": 192,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 192,
                            "endLine": 192,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 192,
                            "endLine": 192,
                            "startColumn": 5,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 195,
                            "endLine": 195,
                            "startColumn": 45,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 195,
                            "endLine": 195,
                            "startColumn": 5,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 196,
                            "endLine": 196,
                            "startColumn": 39,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 196,
                            "endLine": 196,
                            "startColumn": 39,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 196,
                            "endLine": 196,
                            "startColumn": 23,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 196,
                            "endLine": 196,
                            "startColumn": 5,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 224,
                            "endLine": 224,
                            "startColumn": 21,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 225,
                            "endLine": 225,
                            "startColumn": 43,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 250,
                            "endLine": 250,
                            "startColumn": 32,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 256,
                            "endLine": 256,
                            "startColumn": 32,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 262,
                            "endLine": 262,
                            "startColumn": 32,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 268,
                            "endLine": 268,
                            "startColumn": 32,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 300,
                            "endLine": 300,
                            "startColumn": 28,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 577,
                            "endLine": 577,
                            "startColumn": 32,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 586,
                            "endLine": 586,
                            "startColumn": 32,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 597,
                            "endLine": 597,
                            "startColumn": 48,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 597,
                            "endLine": 597,
                            "startColumn": 35,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 31,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 15,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 585,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into json.dump, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19)",
              "[json.dump](20)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "script/coverity.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 302,
                  "endLine": 302,
                  "startColumn": 9,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a1dc607bc513cdc1d42526967d594ccf8fc77489392625f432d5a21d5136442a",
            "1": "2d06e3d6.a215d38b.187bf175.139c59a8.175c247b.111d979a.01cf8906.545e9171.1e15ac3b.1b8e554c.75c093eb.76c60cbc.175c247b.111d979a.f6dc7859.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 192,
                            "endLine": 192,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 192,
                            "endLine": 192,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 192,
                            "endLine": 192,
                            "startColumn": 5,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 195,
                            "endLine": 195,
                            "startColumn": 45,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 195,
                            "endLine": 195,
                            "startColumn": 5,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 196,
                            "endLine": 196,
                            "startColumn": 39,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 196,
                            "endLine": 196,
                            "startColumn": 39,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 196,
                            "endLine": 196,
                            "startColumn": 23,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 196,
                            "endLine": 196,
                            "startColumn": 5,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 224,
                            "endLine": 224,
                            "startColumn": 21,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 225,
                            "endLine": 225,
                            "startColumn": 43,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 250,
                            "endLine": 250,
                            "startColumn": 32,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 256,
                            "endLine": 256,
                            "startColumn": 32,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 262,
                            "endLine": 262,
                            "startColumn": 32,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 268,
                            "endLine": 268,
                            "startColumn": 32,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 300,
                            "endLine": 300,
                            "startColumn": 28,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 300,
                            "endLine": 300,
                            "startColumn": 15,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 300,
                            "endLine": 300,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 301,
                            "endLine": 301,
                            "startColumn": 23,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 302,
                            "endLine": 302,
                            "startColumn": 34,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 302,
                            "endLine": 302,
                            "startColumn": 9,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 585,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16)",
              "[open](17)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "script/coverity.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 595,
                  "endLine": 595,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4bcee29a47b3c5159f87cd323b033186e002be351a5de210c89cc9b767248676",
            "1": "f29fdd12.78e54f54.187bf175.4a95692a.f3eda546.820d17bc.081ac3f4.ebed174f.1e15ac3b.1c04f711.75c093eb.76c60cbc.f3eda546.820d17bc.f6dc7859.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 192,
                            "endLine": 192,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 192,
                            "endLine": 192,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 192,
                            "endLine": 192,
                            "startColumn": 5,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 195,
                            "endLine": 195,
                            "startColumn": 45,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 195,
                            "endLine": 195,
                            "startColumn": 5,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 196,
                            "endLine": 196,
                            "startColumn": 39,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 196,
                            "endLine": 196,
                            "startColumn": 39,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 196,
                            "endLine": 196,
                            "startColumn": 23,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 196,
                            "endLine": 196,
                            "startColumn": 5,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 224,
                            "endLine": 224,
                            "startColumn": 21,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 225,
                            "endLine": 225,
                            "startColumn": 43,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 250,
                            "endLine": 250,
                            "startColumn": 32,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 250,
                            "endLine": 250,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 250,
                            "endLine": 250,
                            "startColumn": 5,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 251,
                            "endLine": 251,
                            "startColumn": 24,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 251,
                            "endLine": 251,
                            "startColumn": 5,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 595,
                            "endLine": 595,
                            "startColumn": 15,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 595,
                            "endLine": 595,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 585,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1)",
              "[open](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "script/bootstrap.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "startColumn": 24,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "900f16dffbab49bec77a9ed76e9424cc48f49e97002bb649e08b5ba2d28db421",
            "1": "a6b41d6e.98b7cea9.79e62dc9.139c59a8.f3eda546.ba14daf2.a2237efa.f46ed94e.9aacecfd.9dc2f629.3aefae7d.03d71cbf.4608c58f.ba14daf2.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/bootstrap.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 29,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/bootstrap.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 29,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/bootstrap.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 585,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1)",
              "[open](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "script/build_from_mingw.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 30,
                  "endLine": 30,
                  "startColumn": 24,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ebd80629115843d10a8cc09381fdf186a5eb31010159584e5accd9911a4dadba",
            "1": "a6b41d6e.98b7cea9.79e62dc9.139c59a8.f3eda546.ba14daf2.a2237efa.f46ed94e.9aacecfd.9dc2f629.3aefae7d.03d71cbf.4608c58f.ba14daf2.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/build_from_mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 29,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/build_from_mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 29,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/build_from_mingw.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 535,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into os.remove, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8)",
              "[os.remove](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "script/bootstrap.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 163,
                  "endLine": 163,
                  "startColumn": 21,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a74b04be4e8074e49dca476da4304d81b8bf4d47e50f59cb87b5ce88dd2a1a69",
            "1": "5e2187a4.ecc4e7fd.5604ac65.139c59a8.cc857d4e.ba14daf2.75d4ed92.b60afa86.61137a49.be2304cf.6dec1acf.6ba51aae.2ac398c1.9bfb6250.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/bootstrap.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/bootstrap.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 5,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/bootstrap.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 5,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/bootstrap.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 456,
                            "endLine": 456,
                            "startColumn": 12,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/bootstrap.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 150,
                            "endLine": 150,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/bootstrap.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 152,
                            "endLine": 152,
                            "startColumn": 23,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/bootstrap.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 158,
                            "endLine": 158,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/bootstrap.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 36,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/bootstrap.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 163,
                            "endLine": 163,
                            "startColumn": 31,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/bootstrap.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 163,
                            "endLine": 163,
                            "startColumn": 21,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 585,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.rmtree, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[shutil.rmtree](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "script/bootstrap.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 170,
                  "endLine": 170,
                  "startColumn": 21,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a996b85d8c4ce4e56ea435e1c8b1d5de3dadaadc98987db41ee173a538688804",
            "1": "d5c0229d.ecc4e7fd.5604ac65.139c59a8.cc857d4e.ba14daf2.75d4ed92.6eb46ac5.61137a49.be2304cf.6dec1acf.6ba51aae.2ac398c1.9bfb6250.a2237efa.395368c9"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/bootstrap.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/bootstrap.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 5,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/bootstrap.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 5,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/bootstrap.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 456,
                            "endLine": 456,
                            "startColumn": 12,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/bootstrap.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 150,
                            "endLine": 150,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/bootstrap.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 152,
                            "endLine": 152,
                            "startColumn": 23,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/bootstrap.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 158,
                            "endLine": 158,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/bootstrap.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 165,
                            "endLine": 165,
                            "startColumn": 34,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/bootstrap.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 167,
                            "endLine": 167,
                            "startColumn": 41,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/bootstrap.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 170,
                            "endLine": 170,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/bootstrap.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 170,
                            "endLine": 170,
                            "startColumn": 21,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 585,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash/test",
          "ruleIndex": 2,
          "level": "note",
          "message": {
            "text": "hashlib.sha1 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.sha1](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/tools/python/get_content/main.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 203,
                  "endLine": 203,
                  "startColumn": 14,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b4cd245d8ef6e0b4a4f3a2d1fe468f1995a6b62fe2ca0c7c7a74dc30e369ea35",
            "1": "ec3d151e.d06b6a9f.79e62dc9.139c59a8.056de048.ba14daf2.39f27e35.8794408a.97da360b.59b34bce.c2b6f7fb.139c59a8.e26e24d8.ba14daf2.39f27e35.8794408a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 203,
                            "endLine": 203,
                            "startColumn": 14,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 210,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureHash/test",
          "ruleIndex": 2,
          "level": "note",
          "message": {
            "text": "hashlib.sha1 is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[hashlib.sha1](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/tools/python/get_content/main.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 263,
                  "endLine": 263,
                  "startColumn": 14,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "302075b298a92cf143a057712baf73a26469008410627323e2ddd5db3241bdbb",
            "1": "ec3d151e.d06b6a9f.79e62dc9.139c59a8.1d07cee4.ba14daf2.39f27e35.8794408a.97da360b.59b34bce.c2b6f7fb.139c59a8.25ac000c.ba14daf2.39f27e35.8794408a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 263,
                            "endLine": 263,
                            "startColumn": 14,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 210,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureXmlParser/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "xml.dom.minidom.parse is considered insecure. Use an analog from the defusedxml package.",
            "markdown": "{0} is considered insecure. Use an analog from the defusedxml package.",
            "arguments": [
              "[xml.dom.minidom.parse](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/unit/googletest/googletest/test/gtest_xml_output_unittest.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 391,
                  "endLine": 391,
                  "startColumn": 14,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "757cd00958f2bc5f2ca7bb5c6478ceeca25e691614e4c0079f5188113708eeb4",
            "1": "4cedbfe7.4f5bc1f5.5ebedaa6.1a161f10.f570993b.ba14daf2.0a7337bb.0990edd8.4cedbfe7.4f5bc1f5.5ebedaa6.1a161f10.f570993b.ba14daf2.0a7337bb.0990edd8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/unit/googletest/googletest/test/gtest_xml_output_unittest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 391,
                            "endLine": 391,
                            "startColumn": 14,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 425,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureXmlParser/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "xml.dom.minidom.parse is considered insecure. Use an analog from the defusedxml package.",
            "markdown": "{0} is considered insecure. Use an analog from the defusedxml package.",
            "arguments": [
              "[xml.dom.minidom.parse](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/unit/googletest/googletest/test/gtest_xml_outfiles_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 123,
                  "endLine": 123,
                  "startColumn": 16,
                  "endColumn": 29
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c1e95e3f51ad770d12720f885a59333fa5e4acfc5c35ba18ff85cb56cac91900",
            "1": "4cedbfe7.4f5bc1f5.5ebedaa6.1a161f10.1d07cee4.ba14daf2.be7f1a4e.cf6dda23.4cedbfe7.4f5bc1f5.5ebedaa6.1a161f10.1d07cee4.ba14daf2.be7f1a4e.cf6dda23"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/unit/googletest/googletest/test/gtest_xml_outfiles_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 16,
                            "endColumn": 29
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 425,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureXmlParser/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "xml.dom.minidom.parse is considered insecure. Use an analog from the defusedxml package.",
            "markdown": "{0} is considered insecure. Use an analog from the defusedxml package.",
            "arguments": [
              "[xml.dom.minidom.parse](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/unit/googletest/googletest/test/gtest_xml_outfiles_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 125,
                  "endLine": 125,
                  "startColumn": 16,
                  "endColumn": 29
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d1bdf2e7a0759cac37d8963901d3c456519af0c5bc829ccfdb1dbc7db21db9d2",
            "1": "4cedbfe7.4f5bc1f5.5ebedaa6.1a161f10.1d07cee4.ba14daf2.be7f1a4e.7949d7a0.4cedbfe7.4f5bc1f5.5ebedaa6.1a161f10.1d07cee4.ba14daf2.be7f1a4e.7949d7a0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/unit/googletest/googletest/test/gtest_xml_outfiles_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 125,
                            "endLine": 125,
                            "startColumn": 16,
                            "endColumn": 29
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 425,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureXmlParser/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "xml.dom.minidom.parseString is considered insecure. Use an analog from the defusedxml package.",
            "markdown": "{0} is considered insecure. Use an analog from the defusedxml package.",
            "arguments": [
              "[xml.dom.minidom.parseString](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/unit/googletest/googletest/test/gtest_xml_output_unittest.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 405,
                  "endLine": 405,
                  "startColumn": 16,
                  "endColumn": 35
                }
              }
            }
          ],
          "fingerprints": {
            "0": "20f7840976427c70affbd8a65bf2f7cf8d6811e6dcf425aaa490ca9b410e0af3",
            "1": "4cedbfe7.eb71e550.3cf35b1d.031ee9cb.5d45d3a9.1c0aa529.be7f1a4e.8b1be798.4cedbfe7.eb71e550.3cf35b1d.031ee9cb.5d45d3a9.1c0aa529.be7f1a4e.8b1be798"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/unit/googletest/googletest/test/gtest_xml_output_unittest.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 405,
                            "endLine": 405,
                            "startColumn": 16,
                            "endColumn": 35
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 425,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureXmlParser/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "xml.dom.minidom.parseString is considered insecure. Use an analog from the defusedxml package.",
            "markdown": "{0} is considered insecure. Use an analog from the defusedxml package.",
            "arguments": [
              "[xml.dom.minidom.parseString](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/unit/googletest/googletest/test/gtest_xml_outfiles_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 121,
                  "endLine": 121,
                  "startColumn": 16,
                  "endColumn": 35
                }
              }
            }
          ],
          "fingerprints": {
            "0": "68d9ad36a044653340169dfda4d9e1624b7b41b02a8fd4f3e695e56627e174ad",
            "1": "dc14caf2.e416641f.3cf35b1d.139c59a8.d8b6e1a2.2b012511.be7f1a4e.8b1be798.dc14caf2.e416641f.3cf35b1d.139c59a8.d8b6e1a2.2b012511.be7f1a4e.8b1be798"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/unit/googletest/googletest/test/gtest_xml_outfiles_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 16,
                            "endColumn": 35
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 425,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CommandInjection/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into subprocess.Popen, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27)",
              "[subprocess.Popen](28)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/tools/python/check_content/__main__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 32,
                  "endLine": 32,
                  "startColumn": 22,
                  "endColumn": 35
                }
              }
            }
          ],
          "fingerprints": {
            "0": "076fe191054467a20a341ebe565d0cc005111b47a4e2b375286ed0e2714354b2",
            "1": "f39fd327.471ab14e.79e62dc9.b5f6ec27.719ec7b9.ba14daf2.6f613be5.6aac30d8.a6b41d6e.75edeac8.bb71048e.899791a4.0b217cdb.0a892d8d.6f613be5.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 36,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 36,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 245,
                            "endLine": 245,
                            "startColumn": 19,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 257,
                            "endLine": 257,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 135,
                            "endLine": 135,
                            "startColumn": 10,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 138,
                            "endLine": 138,
                            "startColumn": 24,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 140,
                            "endLine": 140,
                            "startColumn": 33,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 18,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 15,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 5,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 130,
                            "endLine": 130,
                            "startColumn": 24,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 131,
                            "endLine": 131,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 140,
                            "endLine": 140,
                            "startColumn": 5,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 162,
                            "endLine": 162,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 162,
                            "endLine": 162,
                            "startColumn": 16,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 162,
                            "endLine": 162,
                            "startColumn": 5,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 162,
                            "endLine": 162,
                            "startColumn": 5,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 163,
                            "endLine": 163,
                            "startColumn": 5,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 164,
                            "endLine": 164,
                            "startColumn": 5,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 165,
                            "endLine": 165,
                            "startColumn": 37,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 140,
                            "endLine": 140,
                            "startColumn": 13,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 142,
                            "endLine": 142,
                            "startColumn": 25,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 19,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 17,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/check_content/util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 14,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 360,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CommandInjection/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into subprocess.Popen, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43)",
              "[subprocess.Popen](44)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/tools/python/get_content/__main__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c37f95f861ad1116dd5d8ceb0aa9b5f2ff16f61d788368212ba2b49039430ef5",
            "1": "d1025937.e3d9b656.714d4bb4.b5f6ec27.1b57e67a.ba14daf2.f9f89fbf.ebed174f.d1025937.5e5eeb93.714d4bb4.9cd2dfe0.48de7171.0a892d8d.f6dc7859.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 5,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 28,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 276,
                            "endLine": 276,
                            "startColumn": 17,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 278,
                            "endLine": 278,
                            "startColumn": 8,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 279,
                            "endLine": 279,
                            "startColumn": 38,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 199,
                            "endLine": 199,
                            "startColumn": 23,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 203,
                            "endLine": 203,
                            "startColumn": 27,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 205,
                            "endLine": 205,
                            "startColumn": 32,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 135,
                            "endLine": 135,
                            "startColumn": 23,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 137,
                            "endLine": 137,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 139,
                            "endLine": 139,
                            "startColumn": 18,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 139,
                            "endLine": 139,
                            "startColumn": 18,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 139,
                            "endLine": 139,
                            "startColumn": 11,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 142,
                            "endLine": 142,
                            "startColumn": 36,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 142,
                            "endLine": 142,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 205,
                            "endLine": 205,
                            "startColumn": 5,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 206,
                            "endLine": 206,
                            "startColumn": 20,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 207,
                            "endLine": 207,
                            "startColumn": 22,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 215,
                            "endLine": 215,
                            "startColumn": 40,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 216,
                            "endLine": 216,
                            "startColumn": 17,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 216,
                            "endLine": 216,
                            "startColumn": 60,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 217,
                            "endLine": 217,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 229,
                            "endLine": 229,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 230,
                            "endLine": 230,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 231,
                            "endLine": 231,
                            "startColumn": 24,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 231,
                            "endLine": 231,
                            "startColumn": 24,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 231,
                            "endLine": 231,
                            "startColumn": 24,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 231,
                            "endLine": 231,
                            "startColumn": 15,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 231,
                            "endLine": 231,
                            "startColumn": 13,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 228,
                            "endLine": 228,
                            "startColumn": 9,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 226,
                            "endLine": 232,
                            "startColumn": 11,
                            "endColumn": 6
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 226,
                            "endLine": 232,
                            "startColumn": 5,
                            "endColumn": 6
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 235,
                            "endLine": 235,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 237,
                            "endLine": 237,
                            "startColumn": 13,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 239,
                            "endLine": 239,
                            "startColumn": 13,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 247,
                            "endLine": 247,
                            "startColumn": 5,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 248,
                            "endLine": 248,
                            "startColumn": 32,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 140,
                            "endLine": 140,
                            "startColumn": 13,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 142,
                            "endLine": 142,
                            "startColumn": 25,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 19,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 17,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/tools/python/get_content/util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 14,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 360,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureXmlParser",
          "ruleIndex": 5,
          "level": "warning",
          "message": {
            "text": "xml.dom.minidom.parseString is considered insecure. Use an analog from the defusedxml package.",
            "markdown": "{0} is considered insecure. Use an analog from the defusedxml package.",
            "arguments": [
              "[xml.dom.minidom.parseString](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "script/coverity.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 29,
                  "endLine": 29,
                  "startColumn": 18,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5639c02fd23b26785062bd1eee3afef7e2f0b1779930ed5233f918dfca898cfe",
            "1": "e9aed90e.a6ccbe23.79e62dc9.139c59a8.51875c6d.7c2d6dc8.be7f1a4e.ebed174f.e9aed90e.a6ccbe23.79e62dc9.139c59a8.51875c6d.7c2d6dc8.be7f1a4e.ebed174f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/coverity.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 18,
                            "endColumn": 37
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 555,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/no~hostname~verification",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "Using context that has been passed from ssl._create_unverified_context will result with no hostname verification.",
            "markdown": "Using context that has been passed from {0} will result with no hostname verification.",
            "arguments": [
              "[ssl._create_unverified_context](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "script/bootstrap.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 299,
                  "endLine": 299,
                  "startColumn": 15,
                  "endColumn": 45
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1e22f9c1b06b89024382434858250effddc5ac94cbcde092168db52b1682f63d",
            "1": "8a9351cb.ae949b01.79e62dc9.139c59a8.a62d072b.be3df3bc.b69c6615.1dea1eef.8a9351cb.ae949b01.79e62dc9.139c59a8.a62d072b.be3df3bc.b69c6615.1dea1eef"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "script/bootstrap.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 299,
                            "endLine": 299,
                            "startColumn": 15,
                            "endColumn": 45
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 205,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "isSupported": true,
            "lang": "Python",
            "files": 50,
            "type": "SUPPORTED"
          }
        ]
      }
    }
  ]
}
