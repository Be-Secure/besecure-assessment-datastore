{
    "total": 1691,
    "p": 1,
    "ps": 100,
    "paging": {
      "pageIndex": 1,
      "pageSize": 100,
      "total": 1691
    },
    "effortTotal": 13379,
    "issues": [
      {
        "key": "AYm1aTj3VtH5e2L1KGDx",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/aws/aws_provider_test.py",
        "project": "prowler",
        "line": 69,
        "hash": "ed28b90e1b9690271daa5439ffdc8820",
        "textRange": {
          "startLine": 69,
          "endLine": 69,
          "startOffset": 12,
          "endOffset": 78
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/aws_provider_test.py",
                "textRange": {
                  "startLine": 128,
                  "endLine": 128,
                  "startOffset": 12,
                  "endOffset": 78
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/aws_provider_test.py",
                "textRange": {
                  "startLine": 194,
                  "endLine": 194,
                  "startOffset": 12,
                  "endOffset": 78
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"prowler.providers.aws.aws_provider.input_role_mfa_token_and_code\" 3 times.",
        "effort": "6min",
        "debt": "6min",
        "author": "pepe@verica.io",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-18T07:36:37+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTj3VtH5e2L1KGDz",
        "rule": "python:S117",
        "severity": "MINOR",
        "component": "prowler:tests/providers/aws/aws_provider_test.py",
        "project": "prowler",
        "line": 148,
        "hash": "a0c5b7ea1263db835e7a1c21259daae3",
        "textRange": {
          "startLine": 148,
          "endLine": 148,
          "startOffset": 8,
          "endOffset": 19
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename this local variable \"sessionName\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
        "effort": "2min",
        "debt": "2min",
        "author": "pepe@verica.io",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-18T07:36:37+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTj3VtH5e2L1KGD1",
        "rule": "python:S117",
        "severity": "MINOR",
        "component": "prowler:tests/providers/aws/aws_provider_test.py",
        "project": "prowler",
        "line": 317,
        "hash": "a0c5b7ea1263db835e7a1c21259daae3",
        "textRange": {
          "startLine": 317,
          "endLine": 317,
          "startOffset": 8,
          "endOffset": 19
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename this local variable \"sessionName\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
        "effort": "2min",
        "debt": "2min",
        "author": "pepe@verica.io",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-18T07:36:37+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTlxVtH5e2L1KGE7",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/common/audit_info_test.py",
        "project": "prowler",
        "line": 174,
        "hash": "b187f07bc38578e9d53d33c0ad62cef9",
        "textRange": {
          "startLine": 174,
          "endLine": 174,
          "startOffset": 12,
          "endOffset": 68
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/common/audit_info_test.py",
                "textRange": {
                  "startLine": 229,
                  "endLine": 229,
                  "startOffset": 12,
                  "endOffset": 68
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/common/audit_info_test.py",
                "textRange": {
                  "startLine": 247,
                  "endLine": 247,
                  "startOffset": 12,
                  "endOffset": 68
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/common/audit_info_test.py",
                "textRange": {
                  "startLine": 267,
                  "endLine": 267,
                  "startOffset": 12,
                  "endOffset": 68
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/common/audit_info_test.py",
                "textRange": {
                  "startLine": 287,
                  "endLine": 287,
                  "startOffset": 12,
                  "endOffset": 68
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"prowler.providers.common.audit_info.current_audit_info\" 5 times.",
        "effort": "10min",
        "debt": "10min",
        "author": "pepe@verica.io",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-18T07:36:37+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTlxVtH5e2L1KGE-",
        "rule": "python:S125",
        "severity": "MAJOR",
        "component": "prowler:tests/providers/common/audit_info_test.py",
        "project": "prowler",
        "line": 262,
        "hash": "b2c5bcce0df4f44a70246753fc865327",
        "textRange": {
          "startLine": 262,
          "endLine": 262,
          "startOffset": 12,
          "endOffset": 85
        },
        "flows": [],
        "status": "OPEN",
        "message": "Remove this commented out code.",
        "effort": "5min",
        "debt": "5min",
        "author": "pepe@verica.io",
        "tags": [
          "unused"
        ],
        "creationDate": "2023-07-18T07:36:37+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTlxVtH5e2L1KGE_",
        "rule": "python:S125",
        "severity": "MAJOR",
        "component": "prowler:tests/providers/common/audit_info_test.py",
        "project": "prowler",
        "line": 282,
        "hash": "e1d9d3fa14d568bce316ec7c67af5607",
        "textRange": {
          "startLine": 282,
          "endLine": 282,
          "startOffset": 12,
          "endOffset": 76
        },
        "flows": [],
        "status": "OPEN",
        "message": "Remove this commented out code.",
        "effort": "5min",
        "debt": "5min",
        "author": "pepe@verica.io",
        "tags": [
          "unused"
        ],
        "creationDate": "2023-07-18T07:36:37+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTlxVtH5e2L1KGFA",
        "rule": "python:S125",
        "severity": "MAJOR",
        "component": "prowler:tests/providers/common/audit_info_test.py",
        "project": "prowler",
        "line": 302,
        "hash": "e1d9d3fa14d568bce316ec7c67af5607",
        "textRange": {
          "startLine": 302,
          "endLine": 302,
          "startOffset": 12,
          "endOffset": 76
        },
        "flows": [],
        "status": "OPEN",
        "message": "Remove this commented out code.",
        "effort": "5min",
        "debt": "5min",
        "author": "pepe@verica.io",
        "tags": [
          "unused"
        ],
        "creationDate": "2023-07-18T07:36:37+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTj3VtH5e2L1KGD0",
        "rule": "python:S117",
        "severity": "MINOR",
        "component": "prowler:tests/providers/aws/aws_provider_test.py",
        "project": "prowler",
        "line": 234,
        "hash": "a0c5b7ea1263db835e7a1c21259daae3",
        "textRange": {
          "startLine": 234,
          "endLine": 234,
          "startOffset": 8,
          "endOffset": 19
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename this local variable \"sessionName\" to match the regular expression ^[_a-z][a-z0-9_]*$.",
        "effort": "2min",
        "debt": "2min",
        "author": "pepe@verica.io",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-17T08:09:48+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTjlVtH5e2L1KGDb",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/aws/lib/credentials/credentials_test.py",
        "project": "prowler",
        "line": 74,
        "hash": "b30c23554ef989da897144db5a64a812",
        "textRange": {
          "startLine": 74,
          "endLine": 74,
          "startOffset": 24,
          "endOffset": 41
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/lib/credentials/credentials_test.py",
                "textRange": {
                  "startLine": 112,
                  "endLine": 112,
                  "startOffset": 24,
                  "endOffset": 41
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/lib/credentials/credentials_test.py",
                "textRange": {
                  "startLine": 150,
                  "endLine": 150,
                  "startOffset": 24,
                  "endOffset": 41
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/lib/credentials/credentials_test.py",
                "textRange": {
                  "startLine": 188,
                  "endLine": 188,
                  "startOffset": 24,
                  "endOffset": 41
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/lib/credentials/credentials_test.py",
                "textRange": {
                  "startLine": 229,
                  "endLine": 229,
                  "startOffset": 24,
                  "endOffset": 41
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/lib/credentials/credentials_test.py",
                "textRange": {
                  "startLine": 267,
                  "endLine": 267,
                  "startOffset": 24,
                  "endOffset": 41
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/lib/credentials/credentials_test.py",
                "textRange": {
                  "startLine": 309,
                  "endLine": 309,
                  "startOffset": 24,
                  "endOffset": 41
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/lib/credentials/credentials_test.py",
                "textRange": {
                  "startLine": 356,
                  "endLine": 356,
                  "startOffset": 24,
                  "endOffset": 41
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/lib/credentials/credentials_test.py",
                "textRange": {
                  "startLine": 399,
                  "endLine": 399,
                  "startOffset": 24,
                  "endOffset": 41
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/lib/credentials/credentials_test.py",
                "textRange": {
                  "startLine": 447,
                  "endLine": 447,
                  "startOffset": 24,
                  "endOffset": 41
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"[0-9a-zA-Z]{20}\" 10 times.",
        "effort": "20min",
        "debt": "20min",
        "author": "pepe@verica.io",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-17T08:09:48+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aT8NVtH5e2L1KGMT",
        "rule": "python:S3776",
        "severity": "CRITICAL",
        "component": "prowler:prowler/providers/aws/lib/policy_condition_parser/policy_condition_parser.py",
        "project": "prowler",
        "line": 1,
        "hash": "0fea966f3ec18f5d9cf7f5b7fb26600e",
        "textRange": {
          "startLine": 1,
          "endLine": 1,
          "startOffset": 4,
          "endOffset": 40
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/lib/policy_condition_parser/policy_condition_parser.py",
                "textRange": {
                  "startLine": 10,
                  "endLine": 10,
                  "startOffset": 4,
                  "endOffset": 7
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/lib/policy_condition_parser/policy_condition_parser.py",
                "textRange": {
                  "startLine": 11,
                  "endLine": 11,
                  "startOffset": 8,
                  "endOffset": 10
                },
                "msg": "+2 (incl 1 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/lib/policy_condition_parser/policy_condition_parser.py",
                "textRange": {
                  "startLine": 12,
                  "endLine": 12,
                  "startOffset": 12,
                  "endOffset": 14
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/lib/policy_condition_parser/policy_condition_parser.py",
                "textRange": {
                  "startLine": 14,
                  "endLine": 14,
                  "startOffset": 16,
                  "endOffset": 18
                },
                "msg": "+4 (incl 3 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/lib/policy_condition_parser/policy_condition_parser.py",
                "textRange": {
                  "startLine": 21,
                  "endLine": 21,
                  "startOffset": 20,
                  "endOffset": 23
                },
                "msg": "+5 (incl 4 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/lib/policy_condition_parser/policy_condition_parser.py",
                "textRange": {
                  "startLine": 24,
                  "endLine": 24,
                  "startOffset": 24,
                  "endOffset": 26
                },
                "msg": "+6 (incl 5 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/lib/policy_condition_parser/policy_condition_parser.py",
                "textRange": {
                  "startLine": 28,
                  "endLine": 28,
                  "startOffset": 16,
                  "endOffset": 20
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/lib/policy_condition_parser/policy_condition_parser.py",
                "textRange": {
                  "startLine": 31,
                  "endLine": 31,
                  "startOffset": 20,
                  "endOffset": 22
                },
                "msg": "+5 (incl 4 for nesting)",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Refactor this function to reduce its Cognitive Complexity from 27 to the 15 allowed.",
        "effort": "17min",
        "debt": "17min",
        "author": "nachor1992@gmail.com",
        "tags": [
          "brain-overload"
        ],
        "creationDate": "2023-07-12T13:39:01+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aT5WVtH5e2L1KGLr",
        "rule": "python:S3776",
        "severity": "CRITICAL",
        "component": "prowler:prowler/providers/aws/services/sqs/sqs_queues_not_publicly_accessible/sqs_queues_not_publicly_accessible.py",
        "project": "prowler",
        "line": 9,
        "hash": "7c28c5c1e8ca42924fb985a49879f926",
        "textRange": {
          "startLine": 9,
          "endLine": 9,
          "startOffset": 8,
          "endOffset": 15
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/services/sqs/sqs_queues_not_publicly_accessible/sqs_queues_not_publicly_accessible.py",
                "textRange": {
                  "startLine": 11,
                  "endLine": 11,
                  "startOffset": 8,
                  "endOffset": 11
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/services/sqs/sqs_queues_not_publicly_accessible/sqs_queues_not_publicly_accessible.py",
                "textRange": {
                  "startLine": 19,
                  "endLine": 19,
                  "startOffset": 12,
                  "endOffset": 14
                },
                "msg": "+2 (incl 1 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/services/sqs/sqs_queues_not_publicly_accessible/sqs_queues_not_publicly_accessible.py",
                "textRange": {
                  "startLine": 20,
                  "endLine": 20,
                  "startOffset": 16,
                  "endOffset": 19
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/services/sqs/sqs_queues_not_publicly_accessible/sqs_queues_not_publicly_accessible.py",
                "textRange": {
                  "startLine": 22,
                  "endLine": 22,
                  "startOffset": 20,
                  "endOffset": 22
                },
                "msg": "+4 (incl 3 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/services/sqs/sqs_queues_not_publicly_accessible/sqs_queues_not_publicly_accessible.py",
                "textRange": {
                  "startLine": 23,
                  "endLine": 23,
                  "startOffset": 24,
                  "endOffset": 26
                },
                "msg": "+5 (incl 4 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/services/sqs/sqs_queues_not_publicly_accessible/sqs_queues_not_publicly_accessible.py",
                "textRange": {
                  "startLine": 23,
                  "endLine": 23,
                  "startOffset": 52,
                  "endOffset": 55
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/services/sqs/sqs_queues_not_publicly_accessible/sqs_queues_not_publicly_accessible.py",
                "textRange": {
                  "startLine": 29,
                  "endLine": 29,
                  "startOffset": 28,
                  "endOffset": 30
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/services/sqs/sqs_queues_not_publicly_accessible/sqs_queues_not_publicly_accessible.py",
                "textRange": {
                  "startLine": 27,
                  "endLine": 27,
                  "startOffset": 32,
                  "endOffset": 35
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/services/sqs/sqs_queues_not_publicly_accessible/sqs_queues_not_publicly_accessible.py",
                "textRange": {
                  "startLine": 31,
                  "endLine": 31,
                  "startOffset": 32,
                  "endOffset": 35
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/services/sqs/sqs_queues_not_publicly_accessible/sqs_queues_not_publicly_accessible.py",
                "textRange": {
                  "startLine": 34,
                  "endLine": 34,
                  "startOffset": 28,
                  "endOffset": 30
                },
                "msg": "+6 (incl 5 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/services/sqs/sqs_queues_not_publicly_accessible/sqs_queues_not_publicly_accessible.py",
                "textRange": {
                  "startLine": 36,
                  "endLine": 36,
                  "startOffset": 32,
                  "endOffset": 35
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/services/sqs/sqs_queues_not_publicly_accessible/sqs_queues_not_publicly_accessible.py",
                "textRange": {
                  "startLine": 41,
                  "endLine": 41,
                  "startOffset": 28,
                  "endOffset": 32
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Refactor this function to reduce its Cognitive Complexity from 27 to the 15 allowed.",
        "effort": "17min",
        "debt": "17min",
        "author": "nachor1992@gmail.com",
        "tags": [
          "brain-overload"
        ],
        "creationDate": "2023-07-12T13:39:01+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTjzVtH5e2L1KGDw",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:tests/providers/aws/lib/policy_condition_parser/policy_condition_parser_test.py",
        "project": "prowler",
        "line": 8,
        "hash": "df44356579ba30eb4e64e38591329315",
        "textRange": {
          "startLine": 8,
          "endLine": 8,
          "startOffset": 6,
          "endOffset": 34
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"Test_policy_condition_parser\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "nachor1992@gmail.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-12T13:39:01+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTjzVtH5e2L1KGDs",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/aws/lib/policy_condition_parser/policy_condition_parser_test.py",
        "project": "prowler",
        "line": 10,
        "hash": "31d9c35edcc29e090b1d8f636a6ff524",
        "textRange": {
          "startLine": 10,
          "endLine": 10,
          "startOffset": 48,
          "endOffset": 67
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/lib/policy_condition_parser/policy_condition_parser_test.py",
                "textRange": {
                  "startLine": 16,
                  "endLine": 16,
                  "startOffset": 48,
                  "endOffset": 67
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/lib/policy_condition_parser/policy_condition_parser_test.py",
                "textRange": {
                  "startLine": 23,
                  "endLine": 23,
                  "startOffset": 29,
                  "endOffset": 48
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/lib/policy_condition_parser/policy_condition_parser_test.py",
                "textRange": {
                  "startLine": 30,
                  "endLine": 30,
                  "startOffset": 48,
                  "endOffset": 67
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"aws:SourceAccount\" 4 times.",
        "effort": "8min",
        "debt": "8min",
        "author": "nachor1992@gmail.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-12T13:39:01+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTjzVtH5e2L1KGDt",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/aws/lib/policy_condition_parser/policy_condition_parser_test.py",
        "project": "prowler",
        "line": 37,
        "hash": "7633faa466464f77dc3af07b6a22a956",
        "textRange": {
          "startLine": 37,
          "endLine": 37,
          "startOffset": 42,
          "endOffset": 85
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/lib/policy_condition_parser/policy_condition_parser_test.py",
                "textRange": {
                  "startLine": 48,
                  "endLine": 48,
                  "startOffset": 20,
                  "endOffset": 63
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/lib/policy_condition_parser/policy_condition_parser_test.py",
                "textRange": {
                  "startLine": 60,
                  "endLine": 60,
                  "startOffset": 41,
                  "endOffset": 84
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"arn:aws:cloudtrail:*:123456789012:trail/*\" 3 times.",
        "effort": "6min",
        "debt": "6min",
        "author": "nachor1992@gmail.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-12T13:39:01+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTjzVtH5e2L1KGDu",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/aws/lib/policy_condition_parser/policy_condition_parser_test.py",
        "project": "prowler",
        "line": 37,
        "hash": "7633faa466464f77dc3af07b6a22a956",
        "textRange": {
          "startLine": 37,
          "endLine": 37,
          "startOffset": 24,
          "endOffset": 39
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/lib/policy_condition_parser/policy_condition_parser_test.py",
                "textRange": {
                  "startLine": 47,
                  "endLine": 47,
                  "startOffset": 16,
                  "endOffset": 31
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/lib/policy_condition_parser/policy_condition_parser_test.py",
                "textRange": {
                  "startLine": 60,
                  "endLine": 60,
                  "startOffset": 24,
                  "endOffset": 39
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/lib/policy_condition_parser/policy_condition_parser_test.py",
                "textRange": {
                  "startLine": 69,
                  "endLine": 69,
                  "startOffset": 24,
                  "endOffset": 39
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/lib/policy_condition_parser/policy_condition_parser_test.py",
                "textRange": {
                  "startLine": 79,
                  "endLine": 79,
                  "startOffset": 16,
                  "endOffset": 31
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/lib/policy_condition_parser/policy_condition_parser_test.py",
                "textRange": {
                  "startLine": 92,
                  "endLine": 92,
                  "startOffset": 16,
                  "endOffset": 31
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/lib/policy_condition_parser/policy_condition_parser_test.py",
                "textRange": {
                  "startLine": 106,
                  "endLine": 106,
                  "startOffset": 16,
                  "endOffset": 31
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/lib/policy_condition_parser/policy_condition_parser_test.py",
                "textRange": {
                  "startLine": 117,
                  "endLine": 117,
                  "startOffset": 16,
                  "endOffset": 31
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"aws:SourceArn\" 8 times.",
        "effort": "16min",
        "debt": "16min",
        "author": "nachor1992@gmail.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-12T13:39:01+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTjzVtH5e2L1KGDv",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/aws/lib/policy_condition_parser/policy_condition_parser_test.py",
        "project": "prowler",
        "line": 80,
        "hash": "717a6e90eaa365490dc854627d823667",
        "textRange": {
          "startLine": 80,
          "endLine": 80,
          "startOffset": 20,
          "endOffset": 74
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/lib/policy_condition_parser/policy_condition_parser_test.py",
                "textRange": {
                  "startLine": 93,
                  "endLine": 93,
                  "startOffset": 20,
                  "endOffset": 74
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/lib/policy_condition_parser/policy_condition_parser_test.py",
                "textRange": {
                  "startLine": 106,
                  "endLine": 106,
                  "startOffset": 33,
                  "endOffset": 87
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"arn:aws:cloudtrail:eu-west-1:123456789012:trail/test\" 3 times.",
        "effort": "6min",
        "debt": "6min",
        "author": "nachor1992@gmail.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-12T13:39:01+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTgWVtH5e2L1KGB_",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/aws/services/sqs/sqs_queues_not_publicly_accessible/sqs_queues_not_publicly_accessible_test.py",
        "project": "prowler",
        "line": 21,
        "hash": "0ffd3a56dd0921fb032e6c5750e85b35",
        "textRange": {
          "startLine": 21,
          "endLine": 21,
          "startOffset": 22,
          "endOffset": 42
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/services/sqs/sqs_queues_not_publicly_accessible/sqs_queues_not_publicly_accessible_test.py",
                "textRange": {
                  "startLine": 35,
                  "endLine": 35,
                  "startOffset": 22,
                  "endOffset": 42
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/services/sqs/sqs_queues_not_publicly_accessible/sqs_queues_not_publicly_accessible_test.py",
                "textRange": {
                  "startLine": 49,
                  "endLine": 49,
                  "startOffset": 22,
                  "endOffset": 42
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/services/sqs/sqs_queues_not_publicly_accessible/sqs_queues_not_publicly_accessible_test.py",
                "textRange": {
                  "startLine": 67,
                  "endLine": 67,
                  "startOffset": 22,
                  "endOffset": 42
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"sqs:ReceiveMessage\" 4 times.",
        "effort": "8min",
        "debt": "8min",
        "author": "nachor1992@gmail.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-12T13:39:01+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTgWVtH5e2L1KGB-",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/aws/services/sqs/sqs_queues_not_publicly_accessible/sqs_queues_not_publicly_accessible_test.py",
        "project": "prowler",
        "line": 80,
        "hash": "8a150e2b5148624d471f20d87e12b44c",
        "textRange": {
          "startLine": 80,
          "endLine": 80,
          "startOffset": 12,
          "endOffset": 64
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/services/sqs/sqs_queues_not_publicly_accessible/sqs_queues_not_publicly_accessible_test.py",
                "textRange": {
                  "startLine": 103,
                  "endLine": 103,
                  "startOffset": 12,
                  "endOffset": 64
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/services/sqs/sqs_queues_not_publicly_accessible/sqs_queues_not_publicly_accessible_test.py",
                "textRange": {
                  "startLine": 130,
                  "endLine": 130,
                  "startOffset": 12,
                  "endOffset": 64
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/services/sqs/sqs_queues_not_publicly_accessible/sqs_queues_not_publicly_accessible_test.py",
                "textRange": {
                  "startLine": 161,
                  "endLine": 161,
                  "startOffset": 12,
                  "endOffset": 64
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/services/sqs/sqs_queues_not_publicly_accessible/sqs_queues_not_publicly_accessible_test.py",
                "textRange": {
                  "startLine": 192,
                  "endLine": 192,
                  "startOffset": 12,
                  "endOffset": 64
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"prowler.providers.aws.services.sqs.sqs_service.SQS\" 5 times.",
        "effort": "10min",
        "debt": "10min",
        "author": "nachor1992@gmail.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-12T13:39:01+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTj_VtH5e2L1KGD5",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/gcp/services/iam/iam_no_service_roles_at_project_level/iam_no_service_roles_at_project_level_test.py",
        "project": "prowler",
        "line": 15,
        "hash": "864c8feda25864e5d94f27e7a4b7927e",
        "textRange": {
          "startLine": 15,
          "endLine": 15,
          "startOffset": 12,
          "endOffset": 115
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/iam/iam_no_service_roles_at_project_level/iam_no_service_roles_at_project_level_test.py",
                "textRange": {
                  "startLine": 62,
                  "endLine": 62,
                  "startOffset": 12,
                  "endOffset": 115
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/iam/iam_no_service_roles_at_project_level/iam_no_service_roles_at_project_level_test.py",
                "textRange": {
                  "startLine": 104,
                  "endLine": 104,
                  "startOffset": 12,
                  "endOffset": 115
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/iam/iam_no_service_roles_at_project_level/iam_no_service_roles_at_project_level_test.py",
                "textRange": {
                  "startLine": 145,
                  "endLine": 145,
                  "startOffset": 12,
                  "endOffset": 115
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"prowler.providers.gcp.services.cloudresourcemanager.cloudresourcemanager_service.CloudResourceManager\" 4 times.",
        "effort": "8min",
        "debt": "8min",
        "author": "49699333+dependabot[bot]@users.noreply.github.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-11T07:37:29+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTnhVtH5e2L1KGGu",
        "rule": "python:S3776",
        "severity": "CRITICAL",
        "component": "prowler:prowler/lib/outputs/compliance.py",
        "project": "prowler",
        "line": 47,
        "hash": "4738e17dd0638f7452180e828173641a",
        "textRange": {
          "startLine": 47,
          "endLine": 47,
          "startOffset": 4,
          "endOffset": 19
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 53,
                  "endLine": 53,
                  "startOffset": 8,
                  "endOffset": 11
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 55,
                  "endLine": 55,
                  "startOffset": 12,
                  "endOffset": 14
                },
                "msg": "+2 (incl 1 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 58,
                  "endLine": 58,
                  "startOffset": 16,
                  "endOffset": 19
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 61,
                  "endLine": 61,
                  "startOffset": 16,
                  "endOffset": 19
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 64,
                  "endLine": 64,
                  "startOffset": 20,
                  "endOffset": 23
                },
                "msg": "+4 (incl 3 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 90,
                  "endLine": 90,
                  "startOffset": 12,
                  "endOffset": 16
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 90,
                  "endLine": 90,
                  "startOffset": 47,
                  "endOffset": 50
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 97,
                  "endLine": 97,
                  "startOffset": 16,
                  "endOffset": 18
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 98,
                  "endLine": 98,
                  "startOffset": 20,
                  "endOffset": 23
                },
                "msg": "+4 (incl 3 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 101,
                  "endLine": 101,
                  "startOffset": 24,
                  "endOffset": 27
                },
                "msg": "+5 (incl 4 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 102,
                  "endLine": 102,
                  "startOffset": 28,
                  "endOffset": 30
                },
                "msg": "+6 (incl 5 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 129,
                  "endLine": 129,
                  "startOffset": 28,
                  "endOffset": 32
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 158,
                  "endLine": 158,
                  "startOffset": 12,
                  "endOffset": 16
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 160,
                  "endLine": 160,
                  "startOffset": 16,
                  "endOffset": 19
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 163,
                  "endLine": 163,
                  "startOffset": 16,
                  "endOffset": 18
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 165,
                  "endLine": 165,
                  "startOffset": 16,
                  "endOffset": 18
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 169,
                  "endLine": 169,
                  "startOffset": 16,
                  "endOffset": 18
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 170,
                  "endLine": 170,
                  "startOffset": 20,
                  "endOffset": 23
                },
                "msg": "+4 (incl 3 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 173,
                  "endLine": 173,
                  "startOffset": 24,
                  "endOffset": 27
                },
                "msg": "+5 (incl 4 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 201,
                  "endLine": 201,
                  "startOffset": 12,
                  "endOffset": 16
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 204,
                  "endLine": 204,
                  "startOffset": 16,
                  "endOffset": 19
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 207,
                  "endLine": 207,
                  "startOffset": 16,
                  "endOffset": 18
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 209,
                  "endLine": 209,
                  "startOffset": 16,
                  "endOffset": 18
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 213,
                  "endLine": 213,
                  "startOffset": 16,
                  "endOffset": 18
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 214,
                  "endLine": 214,
                  "startOffset": 20,
                  "endOffset": 23
                },
                "msg": "+4 (incl 3 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 218,
                  "endLine": 218,
                  "startOffset": 24,
                  "endOffset": 27
                },
                "msg": "+5 (incl 4 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 240,
                  "endLine": 240,
                  "startOffset": 12,
                  "endOffset": 16
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 243,
                  "endLine": 243,
                  "startOffset": 16,
                  "endOffset": 19
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 246,
                  "endLine": 246,
                  "startOffset": 16,
                  "endOffset": 18
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 248,
                  "endLine": 248,
                  "startOffset": 16,
                  "endOffset": 18
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 252,
                  "endLine": 252,
                  "startOffset": 16,
                  "endOffset": 18
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 253,
                  "endLine": 253,
                  "startOffset": 20,
                  "endOffset": 23
                },
                "msg": "+4 (incl 3 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 261,
                  "endLine": 261,
                  "startOffset": 24,
                  "endOffset": 27
                },
                "msg": "+5 (incl 4 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 293,
                  "endLine": 293,
                  "startOffset": 12,
                  "endOffset": 16
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 295,
                  "endLine": 295,
                  "startOffset": 16,
                  "endOffset": 18
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 297,
                  "endLine": 297,
                  "startOffset": 16,
                  "endOffset": 18
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 301,
                  "endLine": 301,
                  "startOffset": 16,
                  "endOffset": 18
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 302,
                  "endLine": 302,
                  "startOffset": 20,
                  "endOffset": 23
                },
                "msg": "+4 (incl 3 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 305,
                  "endLine": 305,
                  "startOffset": 24,
                  "endOffset": 27
                },
                "msg": "+5 (incl 4 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 329,
                  "endLine": 329,
                  "startOffset": 12,
                  "endOffset": 14
                },
                "msg": "+2 (incl 1 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 336,
                  "endLine": 336,
                  "startOffset": 4,
                  "endOffset": 10
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Refactor this function to reduce its Cognitive Complexity from 114 to the 15 allowed.",
        "effort": "1h44min",
        "debt": "1h44min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "brain-overload"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTnhVtH5e2L1KGGv",
        "rule": "python:S3776",
        "severity": "CRITICAL",
        "component": "prowler:prowler/lib/outputs/compliance.py",
        "project": "prowler",
        "line": 342,
        "hash": "3497edfb123e41824c8b3a9a739d7293",
        "textRange": {
          "startLine": 342,
          "endLine": 342,
          "startOffset": 4,
          "endOffset": 28
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 350,
                  "endLine": 350,
                  "startOffset": 8,
                  "endOffset": 10
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 362,
                  "endLine": 362,
                  "startOffset": 12,
                  "endOffset": 15
                },
                "msg": "+2 (incl 1 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 365,
                  "endLine": 365,
                  "startOffset": 16,
                  "endOffset": 19
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 366,
                  "endLine": 366,
                  "startOffset": 20,
                  "endOffset": 22
                },
                "msg": "+4 (incl 3 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 369,
                  "endLine": 369,
                  "startOffset": 24,
                  "endOffset": 27
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 374,
                  "endLine": 374,
                  "startOffset": 24,
                  "endOffset": 27
                },
                "msg": "+5 (incl 4 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 375,
                  "endLine": 375,
                  "startOffset": 28,
                  "endOffset": 31
                },
                "msg": "+6 (incl 5 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 380,
                  "endLine": 380,
                  "startOffset": 32,
                  "endOffset": 34
                },
                "msg": "+7 (incl 6 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 388,
                  "endLine": 388,
                  "startOffset": 32,
                  "endOffset": 34
                },
                "msg": "+7 (incl 6 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 393,
                  "endLine": 393,
                  "startOffset": 32,
                  "endOffset": 36
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 395,
                  "endLine": 395,
                  "startOffset": 32,
                  "endOffset": 34
                },
                "msg": "+7 (incl 6 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 397,
                  "endLine": 397,
                  "startOffset": 32,
                  "endOffset": 36
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 399,
                  "endLine": 399,
                  "startOffset": 32,
                  "endOffset": 36
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 401,
                  "endLine": 401,
                  "startOffset": 32,
                  "endOffset": 36
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 405,
                  "endLine": 405,
                  "startOffset": 12,
                  "endOffset": 15
                },
                "msg": "+2 (incl 1 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 421,
                  "endLine": 421,
                  "startOffset": 12,
                  "endOffset": 14
                },
                "msg": "+2 (incl 1 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 425,
                  "endLine": 425,
                  "startOffset": 12,
                  "endOffset": 16
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 451,
                  "endLine": 451,
                  "startOffset": 8,
                  "endOffset": 12
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 460,
                  "endLine": 460,
                  "startOffset": 12,
                  "endOffset": 15
                },
                "msg": "+2 (incl 1 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 463,
                  "endLine": 463,
                  "startOffset": 16,
                  "endOffset": 19
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 464,
                  "endLine": 464,
                  "startOffset": 20,
                  "endOffset": 22
                },
                "msg": "+4 (incl 3 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 466,
                  "endLine": 466,
                  "startOffset": 24,
                  "endOffset": 27
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 470,
                  "endLine": 470,
                  "startOffset": 24,
                  "endOffset": 27
                },
                "msg": "+5 (incl 4 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 471,
                  "endLine": 471,
                  "startOffset": 28,
                  "endOffset": 31
                },
                "msg": "+6 (incl 5 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 474,
                  "endLine": 474,
                  "startOffset": 32,
                  "endOffset": 34
                },
                "msg": "+7 (incl 6 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 480,
                  "endLine": 480,
                  "startOffset": 32,
                  "endOffset": 34
                },
                "msg": "+7 (incl 6 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 482,
                  "endLine": 482,
                  "startOffset": 32,
                  "endOffset": 36
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 484,
                  "endLine": 484,
                  "startOffset": 32,
                  "endOffset": 34
                },
                "msg": "+7 (incl 6 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 485,
                  "endLine": 485,
                  "startOffset": 36,
                  "endOffset": 38
                },
                "msg": "+8 (incl 7 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 487,
                  "endLine": 487,
                  "startOffset": 36,
                  "endOffset": 40
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 489,
                  "endLine": 489,
                  "startOffset": 32,
                  "endOffset": 36
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 490,
                  "endLine": 490,
                  "startOffset": 36,
                  "endOffset": 38
                },
                "msg": "+8 (incl 7 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 492,
                  "endLine": 492,
                  "startOffset": 36,
                  "endOffset": 40
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 497,
                  "endLine": 497,
                  "startOffset": 12,
                  "endOffset": 15
                },
                "msg": "+2 (incl 1 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 500,
                  "endLine": 500,
                  "startOffset": 16,
                  "endOffset": 18
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 504,
                  "endLine": 504,
                  "startOffset": 16,
                  "endOffset": 20
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 508,
                  "endLine": 508,
                  "startOffset": 16,
                  "endOffset": 18
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 512,
                  "endLine": 512,
                  "startOffset": 16,
                  "endOffset": 20
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 516,
                  "endLine": 516,
                  "startOffset": 12,
                  "endOffset": 14
                },
                "msg": "+2 (incl 1 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 520,
                  "endLine": 520,
                  "startOffset": 12,
                  "endOffset": 16
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 546,
                  "endLine": 546,
                  "startOffset": 8,
                  "endOffset": 12
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 554,
                  "endLine": 554,
                  "startOffset": 12,
                  "endOffset": 15
                },
                "msg": "+2 (incl 1 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 557,
                  "endLine": 557,
                  "startOffset": 16,
                  "endOffset": 19
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 558,
                  "endLine": 558,
                  "startOffset": 20,
                  "endOffset": 22
                },
                "msg": "+4 (incl 3 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 560,
                  "endLine": 560,
                  "startOffset": 24,
                  "endOffset": 27
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 563,
                  "endLine": 563,
                  "startOffset": 24,
                  "endOffset": 27
                },
                "msg": "+5 (incl 4 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 564,
                  "endLine": 564,
                  "startOffset": 28,
                  "endOffset": 31
                },
                "msg": "+6 (incl 5 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 565,
                  "endLine": 565,
                  "startOffset": 32,
                  "endOffset": 34
                },
                "msg": "+7 (incl 6 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 567,
                  "endLine": 567,
                  "startOffset": 32,
                  "endOffset": 34
                },
                "msg": "+7 (incl 6 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 570,
                  "endLine": 570,
                  "startOffset": 32,
                  "endOffset": 36
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 576,
                  "endLine": 576,
                  "startOffset": 12,
                  "endOffset": 15
                },
                "msg": "+2 (incl 1 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 579,
                  "endLine": 579,
                  "startOffset": 16,
                  "endOffset": 18
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 583,
                  "endLine": 583,
                  "startOffset": 16,
                  "endOffset": 20
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 587,
                  "endLine": 587,
                  "startOffset": 12,
                  "endOffset": 14
                },
                "msg": "+2 (incl 1 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 591,
                  "endLine": 591,
                  "startOffset": 12,
                  "endOffset": 16
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 617,
                  "endLine": 617,
                  "startOffset": 8,
                  "endOffset": 12
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/compliance.py",
                "textRange": {
                  "startLine": 622,
                  "endLine": 622,
                  "startOffset": 4,
                  "endOffset": 10
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Refactor this function to reduce its Cognitive Complexity from 176 to the 15 allowed.",
        "effort": "2h46min",
        "debt": "2h46min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "brain-overload"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTnKVtH5e2L1KGGM",
        "rule": "python:S3776",
        "severity": "CRITICAL",
        "component": "prowler:prowler/lib/outputs/file_descriptors.py",
        "project": "prowler",
        "line": 71,
        "hash": "29e5cb896fa90cbe1d8de952d2c702f4",
        "textRange": {
          "startLine": 71,
          "endLine": 71,
          "startOffset": 4,
          "endOffset": 25
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/file_descriptors.py",
                "textRange": {
                  "startLine": 74,
                  "endLine": 74,
                  "startOffset": 8,
                  "endOffset": 10
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/file_descriptors.py",
                "textRange": {
                  "startLine": 75,
                  "endLine": 75,
                  "startOffset": 12,
                  "endOffset": 15
                },
                "msg": "+2 (incl 1 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/file_descriptors.py",
                "textRange": {
                  "startLine": 76,
                  "endLine": 76,
                  "startOffset": 16,
                  "endOffset": 18
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/file_descriptors.py",
                "textRange": {
                  "startLine": 78,
                  "endLine": 78,
                  "startOffset": 20,
                  "endOffset": 22
                },
                "msg": "+4 (incl 3 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/file_descriptors.py",
                "textRange": {
                  "startLine": 85,
                  "endLine": 85,
                  "startOffset": 20,
                  "endOffset": 22
                },
                "msg": "+4 (incl 3 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/file_descriptors.py",
                "textRange": {
                  "startLine": 92,
                  "endLine": 92,
                  "startOffset": 20,
                  "endOffset": 22
                },
                "msg": "+4 (incl 3 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/file_descriptors.py",
                "textRange": {
                  "startLine": 101,
                  "endLine": 101,
                  "startOffset": 16,
                  "endOffset": 20
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/file_descriptors.py",
                "textRange": {
                  "startLine": 108,
                  "endLine": 108,
                  "startOffset": 16,
                  "endOffset": 20
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/file_descriptors.py",
                "textRange": {
                  "startLine": 117,
                  "endLine": 117,
                  "startOffset": 16,
                  "endOffset": 20
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/file_descriptors.py",
                "textRange": {
                  "startLine": 124,
                  "endLine": 124,
                  "startOffset": 16,
                  "endOffset": 20
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/file_descriptors.py",
                "textRange": {
                  "startLine": 125,
                  "endLine": 125,
                  "startOffset": 20,
                  "endOffset": 22
                },
                "msg": "+4 (incl 3 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/file_descriptors.py",
                "textRange": {
                  "startLine": 132,
                  "endLine": 132,
                  "startOffset": 16,
                  "endOffset": 20
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/file_descriptors.py",
                "textRange": {
                  "startLine": 133,
                  "endLine": 133,
                  "startOffset": 20,
                  "endOffset": 22
                },
                "msg": "+4 (incl 3 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/file_descriptors.py",
                "textRange": {
                  "startLine": 140,
                  "endLine": 140,
                  "startOffset": 20,
                  "endOffset": 24
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/file_descriptors.py",
                "textRange": {
                  "startLine": 150,
                  "endLine": 150,
                  "startOffset": 20,
                  "endOffset": 24
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/file_descriptors.py",
                "textRange": {
                  "startLine": 157,
                  "endLine": 157,
                  "startOffset": 20,
                  "endOffset": 24
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/file_descriptors.py",
                "textRange": {
                  "startLine": 164,
                  "endLine": 164,
                  "startOffset": 20,
                  "endOffset": 24
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/file_descriptors.py",
                "textRange": {
                  "startLine": 177,
                  "endLine": 177,
                  "startOffset": 20,
                  "endOffset": 24
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/file_descriptors.py",
                "textRange": {
                  "startLine": 190,
                  "endLine": 190,
                  "startOffset": 20,
                  "endOffset": 24
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/file_descriptors.py",
                "textRange": {
                  "startLine": 200,
                  "endLine": 200,
                  "startOffset": 20,
                  "endOffset": 24
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/file_descriptors.py",
                "textRange": {
                  "startLine": 210,
                  "endLine": 210,
                  "startOffset": 20,
                  "endOffset": 24
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/file_descriptors.py",
                "textRange": {
                  "startLine": 221,
                  "endLine": 221,
                  "startOffset": 4,
                  "endOffset": 10
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Refactor this function to reduce its Cognitive Complexity from 40 to the 15 allowed.",
        "effort": "30min",
        "debt": "30min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "brain-overload"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTnVVtH5e2L1KGGc",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:prowler/lib/outputs/models.py",
        "project": "prowler",
        "line": 542,
        "hash": "2b2627b20128826f4627ac72964c94c3",
        "textRange": {
          "startLine": 542,
          "endLine": 542,
          "startOffset": 6,
          "endOffset": 30
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"Check_Output_CSV_AWS_CIS\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTnVVtH5e2L1KGGd",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:prowler/lib/outputs/models.py",
        "project": "prowler",
        "line": 570,
        "hash": "f9d2c9a73291afd15f5be5abcc42b562",
        "textRange": {
          "startLine": 570,
          "endLine": 570,
          "startOffset": 6,
          "endOffset": 30
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"Check_Output_CSV_GCP_CIS\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTnZVtH5e2L1KGGp",
        "rule": "python:S3776",
        "severity": "CRITICAL",
        "component": "prowler:prowler/lib/outputs/outputs.py",
        "project": "prowler",
        "line": 46,
        "hash": "9fc198674b18d6fb7344bb4f0d084f50",
        "textRange": {
          "startLine": 46,
          "endLine": 46,
          "startOffset": 4,
          "endOffset": 10
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/outputs.py",
                "textRange": {
                  "startLine": 49,
                  "endLine": 49,
                  "startOffset": 8,
                  "endOffset": 10
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/outputs.py",
                "textRange": {
                  "startLine": 52,
                  "endLine": 52,
                  "startOffset": 8,
                  "endOffset": 10
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/outputs.py",
                "textRange": {
                  "startLine": 57,
                  "endLine": 57,
                  "startOffset": 8,
                  "endOffset": 10
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/outputs.py",
                "textRange": {
                  "startLine": 67,
                  "endLine": 67,
                  "startOffset": 8,
                  "endOffset": 10
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/outputs.py",
                "textRange": {
                  "startLine": 68,
                  "endLine": 68,
                  "startOffset": 12,
                  "endOffset": 15
                },
                "msg": "+2 (incl 1 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/outputs.py",
                "textRange": {
                  "startLine": 70,
                  "endLine": 70,
                  "startOffset": 16,
                  "endOffset": 18
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/outputs.py",
                "textRange": {
                  "startLine": 71,
                  "endLine": 71,
                  "startOffset": 20,
                  "endOffset": 22
                },
                "msg": "+4 (incl 3 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/outputs.py",
                "textRange": {
                  "startLine": 86,
                  "endLine": 86,
                  "startOffset": 16,
                  "endOffset": 18
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/outputs.py",
                "textRange": {
                  "startLine": 88,
                  "endLine": 88,
                  "startOffset": 20,
                  "endOffset": 22
                },
                "msg": "+4 (incl 3 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/outputs.py",
                "textRange": {
                  "startLine": 88,
                  "endLine": 88,
                  "startOffset": 53,
                  "endOffset": 56
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/outputs.py",
                "textRange": {
                  "startLine": 89,
                  "endLine": 89,
                  "startOffset": 24,
                  "endOffset": 26
                },
                "msg": "+5 (incl 4 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/outputs.py",
                "textRange": {
                  "startLine": 106,
                  "endLine": 106,
                  "startOffset": 24,
                  "endOffset": 26
                },
                "msg": "+5 (incl 4 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/outputs.py",
                "textRange": {
                  "startLine": 107,
                  "endLine": 107,
                  "startOffset": 28,
                  "endOffset": 30
                },
                "msg": "+6 (incl 5 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/outputs.py",
                "textRange": {
                  "startLine": 121,
                  "endLine": 121,
                  "startOffset": 28,
                  "endOffset": 30
                },
                "msg": "+6 (incl 5 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/outputs.py",
                "textRange": {
                  "startLine": 123,
                  "endLine": 123,
                  "startOffset": 32,
                  "endOffset": 35
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/outputs.py",
                "textRange": {
                  "startLine": 134,
                  "endLine": 134,
                  "startOffset": 24,
                  "endOffset": 26
                },
                "msg": "+5 (incl 4 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/outputs.py",
                "textRange": {
                  "startLine": 138,
                  "endLine": 138,
                  "startOffset": 24,
                  "endOffset": 26
                },
                "msg": "+5 (incl 4 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/outputs.py",
                "textRange": {
                  "startLine": 149,
                  "endLine": 149,
                  "startOffset": 24,
                  "endOffset": 26
                },
                "msg": "+5 (incl 4 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/outputs.py",
                "textRange": {
                  "startLine": 164,
                  "endLine": 164,
                  "startOffset": 24,
                  "endOffset": 26
                },
                "msg": "+5 (incl 4 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/outputs.py",
                "textRange": {
                  "startLine": 177,
                  "endLine": 177,
                  "startOffset": 8,
                  "endOffset": 12
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/outputs.py",
                "textRange": {
                  "startLine": 179,
                  "endLine": 179,
                  "startOffset": 12,
                  "endOffset": 14
                },
                "msg": "+2 (incl 1 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/outputs.py",
                "textRange": {
                  "startLine": 182,
                  "endLine": 182,
                  "startOffset": 8,
                  "endOffset": 10
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/outputs.py",
                "textRange": {
                  "startLine": 184,
                  "endLine": 184,
                  "startOffset": 8,
                  "endOffset": 10
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/outputs.py",
                "textRange": {
                  "startLine": 186,
                  "endLine": 186,
                  "startOffset": 12,
                  "endOffset": 15
                },
                "msg": "+2 (incl 1 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/lib/outputs/outputs.py",
                "textRange": {
                  "startLine": 188,
                  "endLine": 188,
                  "startOffset": 4,
                  "endOffset": 10
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Refactor this function to reduce its Cognitive Complexity from 72 to the 15 allowed.",
        "effort": "1h2min",
        "debt": "1h2min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "brain-overload"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aUCHVtH5e2L1KGNy",
        "rule": "python:S5886",
        "severity": "MAJOR",
        "component": "prowler:prowler/providers/gcp/services/apikeys/apikeys_key_exists/apikeys_key_exists.py",
        "project": "prowler",
        "line": 22,
        "hash": "72a53aa1d6cd417c7522b0ea4a3f7b33",
        "textRange": {
          "startLine": 22,
          "endLine": 22,
          "startOffset": 15,
          "endOffset": 23
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/apikeys/apikeys_key_exists/apikeys_key_exists.py",
                "textRange": {
                  "startLine": 6,
                  "endLine": 6,
                  "startOffset": 8,
                  "endOffset": 15
                },
                "msg": "Function definition.",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/apikeys/apikeys_key_exists/apikeys_key_exists.py",
                "textRange": {
                  "startLine": 6,
                  "endLine": 6,
                  "startOffset": 25,
                  "endOffset": 41
                },
                "msg": "Type hint.",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Return a value of type \"Check_Report_GCP\" instead of \"list\" or update function \"execute\" type hint.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aUBoVtH5e2L1KGNu",
        "rule": "python:S5886",
        "severity": "MAJOR",
        "component": "prowler:prowler/providers/gcp/services/cloudstorage/cloudstorage_bucket_log_retention_policy_lock/cloudstorage_bucket_log_retention_policy_lock.py",
        "project": "prowler",
        "line": 35,
        "hash": "72a53aa1d6cd417c7522b0ea4a3f7b33",
        "textRange": {
          "startLine": 35,
          "endLine": 35,
          "startOffset": 15,
          "endOffset": 23
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/cloudstorage/cloudstorage_bucket_log_retention_policy_lock/cloudstorage_bucket_log_retention_policy_lock.py",
                "textRange": {
                  "startLine": 9,
                  "endLine": 9,
                  "startOffset": 8,
                  "endOffset": 15
                },
                "msg": "Function definition.",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/cloudstorage/cloudstorage_bucket_log_retention_policy_lock/cloudstorage_bucket_log_retention_policy_lock.py",
                "textRange": {
                  "startLine": 9,
                  "endLine": 9,
                  "startOffset": 25,
                  "endOffset": 41
                },
                "msg": "Type hint.",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Return a value of type \"Check_Report_GCP\" instead of \"list\" or update function \"execute\" type hint.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aT9DVtH5e2L1KGMl",
        "rule": "python:S5886",
        "severity": "MAJOR",
        "component": "prowler:prowler/providers/gcp/services/compute/compute_loadbalancer_logging_enabled/compute_loadbalancer_logging_enabled.py",
        "project": "prowler",
        "line": 23,
        "hash": "72a53aa1d6cd417c7522b0ea4a3f7b33",
        "textRange": {
          "startLine": 23,
          "endLine": 23,
          "startOffset": 15,
          "endOffset": 23
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/compute/compute_loadbalancer_logging_enabled/compute_loadbalancer_logging_enabled.py",
                "textRange": {
                  "startLine": 6,
                  "endLine": 6,
                  "startOffset": 8,
                  "endOffset": 15
                },
                "msg": "Function definition.",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/compute/compute_loadbalancer_logging_enabled/compute_loadbalancer_logging_enabled.py",
                "textRange": {
                  "startLine": 6,
                  "endLine": 6,
                  "startOffset": 25,
                  "endOffset": 41
                },
                "msg": "Type hint.",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Return a value of type \"Check_Report_GCP\" instead of \"list\" or update function \"execute\" type hint.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aT9cVtH5e2L1KGMp",
        "rule": "python:S5886",
        "severity": "MAJOR",
        "component": "prowler:prowler/providers/gcp/services/compute/compute_network_dns_logging_enabled/compute_network_dns_logging_enabled.py",
        "project": "prowler",
        "line": 28,
        "hash": "72a53aa1d6cd417c7522b0ea4a3f7b33",
        "textRange": {
          "startLine": 28,
          "endLine": 28,
          "startOffset": 15,
          "endOffset": 23
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/compute/compute_network_dns_logging_enabled/compute_network_dns_logging_enabled.py",
                "textRange": {
                  "startLine": 7,
                  "endLine": 7,
                  "startOffset": 8,
                  "endOffset": 15
                },
                "msg": "Function definition.",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/compute/compute_network_dns_logging_enabled/compute_network_dns_logging_enabled.py",
                "textRange": {
                  "startLine": 7,
                  "endLine": 7,
                  "startOffset": 25,
                  "endOffset": 41
                },
                "msg": "Type hint.",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Return a value of type \"Check_Report_GCP\" instead of \"list\" or update function \"execute\" type hint.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aT-LVtH5e2L1KGM4",
        "rule": "python:S5886",
        "severity": "MAJOR",
        "component": "prowler:prowler/providers/gcp/services/compute/compute_network_not_legacy/compute_network_not_legacy.py",
        "project": "prowler",
        "line": 21,
        "hash": "72a53aa1d6cd417c7522b0ea4a3f7b33",
        "textRange": {
          "startLine": 21,
          "endLine": 21,
          "startOffset": 15,
          "endOffset": 23
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/compute/compute_network_not_legacy/compute_network_not_legacy.py",
                "textRange": {
                  "startLine": 6,
                  "endLine": 6,
                  "startOffset": 8,
                  "endOffset": 15
                },
                "msg": "Function definition.",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/compute/compute_network_not_legacy/compute_network_not_legacy.py",
                "textRange": {
                  "startLine": 6,
                  "endLine": 6,
                  "startOffset": 25,
                  "endOffset": 41
                },
                "msg": "Type hint.",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Return a value of type \"Check_Report_GCP\" instead of \"list\" or update function \"execute\" type hint.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aT-DVtH5e2L1KGM2",
        "rule": "python:S5886",
        "severity": "MAJOR",
        "component": "prowler:prowler/providers/gcp/services/compute/compute_project_os_login_enabled/compute_project_os_login_enabled.py",
        "project": "prowler",
        "line": 22,
        "hash": "72a53aa1d6cd417c7522b0ea4a3f7b33",
        "textRange": {
          "startLine": 22,
          "endLine": 22,
          "startOffset": 15,
          "endOffset": 23
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/compute/compute_project_os_login_enabled/compute_project_os_login_enabled.py",
                "textRange": {
                  "startLine": 6,
                  "endLine": 6,
                  "startOffset": 8,
                  "endOffset": 15
                },
                "msg": "Function definition.",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/compute/compute_project_os_login_enabled/compute_project_os_login_enabled.py",
                "textRange": {
                  "startLine": 6,
                  "endLine": 6,
                  "startOffset": 25,
                  "endOffset": 41
                },
                "msg": "Type hint.",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Return a value of type \"Check_Report_GCP\" instead of \"list\" or update function \"execute\" type hint.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aT9uVtH5e2L1KGMv",
        "rule": "python:S3776",
        "severity": "CRITICAL",
        "component": "prowler:prowler/providers/gcp/services/compute/compute_service.py",
        "project": "prowler",
        "line": 145,
        "hash": "bafa98432efb073ee2784eba913ed734",
        "textRange": {
          "startLine": 145,
          "endLine": 145,
          "startOffset": 8,
          "endOffset": 24
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/compute/compute_service.py",
                "textRange": {
                  "startLine": 146,
                  "endLine": 146,
                  "startOffset": 8,
                  "endOffset": 11
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/compute/compute_service.py",
                "textRange": {
                  "startLine": 149,
                  "endLine": 149,
                  "startOffset": 16,
                  "endOffset": 21
                },
                "msg": "+2 (incl 1 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/compute/compute_service.py",
                "textRange": {
                  "startLine": 151,
                  "endLine": 151,
                  "startOffset": 20,
                  "endOffset": 23
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/compute/compute_service.py",
                "textRange": {
                  "startLine": 154,
                  "endLine": 154,
                  "startOffset": 28,
                  "endOffset": 30
                },
                "msg": "+4 (incl 3 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/compute/compute_service.py",
                "textRange": {
                  "startLine": 156,
                  "endLine": 156,
                  "startOffset": 28,
                  "endOffset": 30
                },
                "msg": "+5 (incl 4 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/compute/compute_service.py",
                "textRange": {
                  "startLine": 171,
                  "endLine": 171,
                  "startOffset": 12,
                  "endOffset": 18
                },
                "msg": "+2 (incl 1 for nesting)",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Refactor this function to reduce its Cognitive Complexity from 17 to the 15 allowed.",
        "effort": "7min",
        "debt": "7min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "brain-overload"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aT9uVtH5e2L1KGMw",
        "rule": "python:S3358",
        "severity": "MAJOR",
        "component": "prowler:prowler/providers/gcp/services/compute/compute_service.py",
        "project": "prowler",
        "line": 155,
        "hash": "40e12b8cdadbc9ad09098f1ce5f48ff7",
        "textRange": {
          "startLine": 155,
          "endLine": 157,
          "startOffset": 33,
          "endOffset": 41
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/compute/compute_service.py",
                "textRange": {
                  "startLine": 154,
                  "endLine": 154,
                  "startOffset": 28,
                  "endOffset": 30
                },
                "msg": "Parent conditional expression.",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Extract this nested conditional expression into an independent statement.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "confusing"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aT9yVtH5e2L1KGMx",
        "rule": "python:S5886",
        "severity": "MAJOR",
        "component": "prowler:prowler/providers/gcp/services/compute/compute_subnet_flow_logs_enabled/compute_subnet_flow_logs_enabled.py",
        "project": "prowler",
        "line": 21,
        "hash": "72a53aa1d6cd417c7522b0ea4a3f7b33",
        "textRange": {
          "startLine": 21,
          "endLine": 21,
          "startOffset": 15,
          "endOffset": 23
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/compute/compute_subnet_flow_logs_enabled/compute_subnet_flow_logs_enabled.py",
                "textRange": {
                  "startLine": 6,
                  "endLine": 6,
                  "startOffset": 8,
                  "endOffset": 15
                },
                "msg": "Function definition.",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/compute/compute_subnet_flow_logs_enabled/compute_subnet_flow_logs_enabled.py",
                "textRange": {
                  "startLine": 6,
                  "endLine": 6,
                  "startOffset": 25,
                  "endOffset": 41
                },
                "msg": "Type hint.",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Return a value of type \"Check_Report_GCP\" instead of \"list\" or update function \"execute\" type hint.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aUA9VtH5e2L1KGNo",
        "rule": "python:S5886",
        "severity": "MAJOR",
        "component": "prowler:prowler/providers/gcp/services/iam/iam_account_access_approval_enabled/iam_account_access_approval_enabled.py",
        "project": "prowler",
        "line": 24,
        "hash": "72a53aa1d6cd417c7522b0ea4a3f7b33",
        "textRange": {
          "startLine": 24,
          "endLine": 24,
          "startOffset": 15,
          "endOffset": 23
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/iam/iam_account_access_approval_enabled/iam_account_access_approval_enabled.py",
                "textRange": {
                  "startLine": 8,
                  "endLine": 8,
                  "startOffset": 8,
                  "endOffset": 15
                },
                "msg": "Function definition.",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/iam/iam_account_access_approval_enabled/iam_account_access_approval_enabled.py",
                "textRange": {
                  "startLine": 8,
                  "endLine": 8,
                  "startOffset": 25,
                  "endOffset": 41
                },
                "msg": "Type hint.",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Return a value of type \"Check_Report_GCP\" instead of \"list\" or update function \"execute\" type hint.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aUBQVtH5e2L1KGNr",
        "rule": "python:S5886",
        "severity": "MAJOR",
        "component": "prowler:prowler/providers/gcp/services/iam/iam_audit_logs_enabled/iam_audit_logs_enabled.py",
        "project": "prowler",
        "line": 24,
        "hash": "72a53aa1d6cd417c7522b0ea4a3f7b33",
        "textRange": {
          "startLine": 24,
          "endLine": 24,
          "startOffset": 15,
          "endOffset": 23
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/iam/iam_audit_logs_enabled/iam_audit_logs_enabled.py",
                "textRange": {
                  "startLine": 8,
                  "endLine": 8,
                  "startOffset": 8,
                  "endOffset": 15
                },
                "msg": "Function definition.",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/iam/iam_audit_logs_enabled/iam_audit_logs_enabled.py",
                "textRange": {
                  "startLine": 8,
                  "endLine": 8,
                  "startOffset": 25,
                  "endOffset": 41
                },
                "msg": "Type hint.",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Return a value of type \"Check_Report_GCP\" instead of \"list\" or update function \"execute\" type hint.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aUBEVtH5e2L1KGNp",
        "rule": "python:S5886",
        "severity": "MAJOR",
        "component": "prowler:prowler/providers/gcp/services/iam/iam_organization_essential_contacts_configured/iam_organization_essential_contacts_configured.py",
        "project": "prowler",
        "line": 27,
        "hash": "72a53aa1d6cd417c7522b0ea4a3f7b33",
        "textRange": {
          "startLine": 27,
          "endLine": 27,
          "startOffset": 15,
          "endOffset": 23
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/iam/iam_organization_essential_contacts_configured/iam_organization_essential_contacts_configured.py",
                "textRange": {
                  "startLine": 8,
                  "endLine": 8,
                  "startOffset": 8,
                  "endOffset": 15
                },
                "msg": "Function definition.",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/iam/iam_organization_essential_contacts_configured/iam_organization_essential_contacts_configured.py",
                "textRange": {
                  "startLine": 8,
                  "endLine": 8,
                  "startOffset": 25,
                  "endOffset": 41
                },
                "msg": "Type hint.",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Return a value of type \"Check_Report_GCP\" instead of \"list\" or update function \"execute\" type hint.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aUA1VtH5e2L1KGNm",
        "rule": "python:S3776",
        "severity": "CRITICAL",
        "component": "prowler:prowler/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties.py",
        "project": "prowler",
        "line": 8,
        "hash": "4ed400b42c5b88dee416a838b4c74abc",
        "textRange": {
          "startLine": 8,
          "endLine": 8,
          "startOffset": 8,
          "endOffset": 15
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties.py",
                "textRange": {
                  "startLine": 10,
                  "endLine": 10,
                  "startOffset": 8,
                  "endOffset": 11
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties.py",
                "textRange": {
                  "startLine": 19,
                  "endLine": 19,
                  "startOffset": 12,
                  "endOffset": 15
                },
                "msg": "+2 (incl 1 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties.py",
                "textRange": {
                  "startLine": 20,
                  "endLine": 20,
                  "startOffset": 16,
                  "endOffset": 18
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties.py",
                "textRange": {
                  "startLine": 21,
                  "endLine": 21,
                  "startOffset": 20,
                  "endOffset": 22
                },
                "msg": "+4 (incl 3 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties.py",
                "textRange": {
                  "startLine": 23,
                  "endLine": 23,
                  "startOffset": 20,
                  "endOffset": 22
                },
                "msg": "+4 (incl 3 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties.py",
                "textRange": {
                  "startLine": 26,
                  "endLine": 26,
                  "startOffset": 24,
                  "endOffset": 26
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties.py",
                "textRange": {
                  "startLine": 28,
                  "endLine": 28,
                  "startOffset": 24,
                  "endOffset": 27
                },
                "msg": "+5 (incl 4 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties.py",
                "textRange": {
                  "startLine": 29,
                  "endLine": 29,
                  "startOffset": 28,
                  "endOffset": 30
                },
                "msg": "+6 (incl 5 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties.py",
                "textRange": {
                  "startLine": 31,
                  "endLine": 31,
                  "startOffset": 12,
                  "endOffset": 14
                },
                "msg": "+2 (incl 1 for nesting)",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Refactor this function to reduce its Cognitive Complexity from 28 to the 15 allowed.",
        "effort": "18min",
        "debt": "18min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "brain-overload"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aUA0VtH5e2L1KGNl",
        "rule": "python:S5886",
        "severity": "MAJOR",
        "component": "prowler:prowler/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties.py",
        "project": "prowler",
        "line": 36,
        "hash": "72a53aa1d6cd417c7522b0ea4a3f7b33",
        "textRange": {
          "startLine": 36,
          "endLine": 36,
          "startOffset": 15,
          "endOffset": 23
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties.py",
                "textRange": {
                  "startLine": 8,
                  "endLine": 8,
                  "startOffset": 8,
                  "endOffset": 15
                },
                "msg": "Function definition.",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties.py",
                "textRange": {
                  "startLine": 8,
                  "endLine": 8,
                  "startOffset": 25,
                  "endOffset": 41
                },
                "msg": "Type hint.",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Return a value of type \"Check_Report_GCP\" instead of \"list\" or update function \"execute\" type hint.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aUAqVtH5e2L1KGNj",
        "rule": "python:S5886",
        "severity": "MAJOR",
        "component": "prowler:prowler/providers/gcp/services/iam/iam_role_sa_enforce_separation_of_duties/iam_role_sa_enforce_separation_of_duties.py",
        "project": "prowler",
        "line": 29,
        "hash": "72a53aa1d6cd417c7522b0ea4a3f7b33",
        "textRange": {
          "startLine": 29,
          "endLine": 29,
          "startOffset": 15,
          "endOffset": 23
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/iam/iam_role_sa_enforce_separation_of_duties/iam_role_sa_enforce_separation_of_duties.py",
                "textRange": {
                  "startLine": 8,
                  "endLine": 8,
                  "startOffset": 8,
                  "endOffset": 15
                },
                "msg": "Function definition.",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/iam/iam_role_sa_enforce_separation_of_duties/iam_role_sa_enforce_separation_of_duties.py",
                "textRange": {
                  "startLine": 8,
                  "endLine": 8,
                  "startOffset": 25,
                  "endOffset": 41
                },
                "msg": "Type hint.",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Return a value of type \"Check_Report_GCP\" instead of \"list\" or update function \"execute\" type hint.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aUC6VtH5e2L1KGN6",
        "rule": "python:S5886",
        "severity": "MAJOR",
        "component": "prowler:prowler/providers/gcp/services/serviceusage/serviceusage_cloudasset_inventory_enabled/serviceusage_cloudasset_inventory_enabled.py",
        "project": "prowler",
        "line": 31,
        "hash": "72a53aa1d6cd417c7522b0ea4a3f7b33",
        "textRange": {
          "startLine": 31,
          "endLine": 31,
          "startOffset": 15,
          "endOffset": 23
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/serviceusage/serviceusage_cloudasset_inventory_enabled/serviceusage_cloudasset_inventory_enabled.py",
                "textRange": {
                  "startLine": 8,
                  "endLine": 8,
                  "startOffset": 8,
                  "endOffset": 15
                },
                "msg": "Function definition.",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/gcp/services/serviceusage/serviceusage_cloudasset_inventory_enabled/serviceusage_cloudasset_inventory_enabled.py",
                "textRange": {
                  "startLine": 8,
                  "endLine": 8,
                  "startOffset": 25,
                  "endOffset": 41
                },
                "msg": "Type hint.",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Return a value of type \"Check_Report_GCP\" instead of \"list\" or update function \"execute\" type hint.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTlhVtH5e2L1KGEy",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:tests/providers/gcp/services/apikeys/apikeys_key_exists/apikeys_key_exists_test.py",
        "project": "prowler",
        "line": 7,
        "hash": "5ed3b561b4e807825d5dd1deb2cd80f5",
        "textRange": {
          "startLine": 7,
          "endLine": 7,
          "startOffset": 6,
          "endOffset": 29
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"Test_apikeys_key_exists\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTlFVtH5e2L1KGEg",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:tests/providers/gcp/services/compute/compute_block_project_wide_ssh_keys_disabled/compute_block_project_wide_ssh_keys_disabled_test.py",
        "project": "prowler",
        "line": 7,
        "hash": "df89e4aa6d2040abb5c0d9bf636da46d",
        "textRange": {
          "startLine": 7,
          "endLine": 7,
          "startOffset": 6,
          "endOffset": 64
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"Test_compute_instance_block_project_wide_ssh_keys_disabled\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTlFVtH5e2L1KGEf",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/gcp/services/compute/compute_block_project_wide_ssh_keys_disabled/compute_block_project_wide_ssh_keys_disabled_test.py",
        "project": "prowler",
        "line": 14,
        "hash": "08e952f1008c0781cc43ae1591a19217",
        "textRange": {
          "startLine": 14,
          "endLine": 14,
          "startOffset": 12,
          "endOffset": 175
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_block_project_wide_ssh_keys_disabled/compute_block_project_wide_ssh_keys_disabled_test.py",
                "textRange": {
                  "startLine": 48,
                  "endLine": 48,
                  "startOffset": 12,
                  "endOffset": 175
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_block_project_wide_ssh_keys_disabled/compute_block_project_wide_ssh_keys_disabled_test.py",
                "textRange": {
                  "startLine": 89,
                  "endLine": 89,
                  "startOffset": 12,
                  "endOffset": 175
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_block_project_wide_ssh_keys_disabled/compute_block_project_wide_ssh_keys_disabled_test.py",
                "textRange": {
                  "startLine": 130,
                  "endLine": 130,
                  "startOffset": 12,
                  "endOffset": 175
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"prowler.providers.gcp.services.compute.compute_instance_block_project_wide_ssh_keys_disabled.compute_instance_block_project_wide_ssh_keys_disabled.compute_client\" 4 times.",
        "effort": "8min",
        "debt": "8min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTkkVtH5e2L1KGEO",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:tests/providers/gcp/services/compute/compute_default_service_account_in_use/compute_default_service_account_in_use_test.py",
        "project": "prowler",
        "line": 7,
        "hash": "9e947e9edca76b4266364d33ca8aec17",
        "textRange": {
          "startLine": 7,
          "endLine": 7,
          "startOffset": 6,
          "endOffset": 58
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"Test_compute_instance_default_service_account_in_use\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTkkVtH5e2L1KGEN",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/gcp/services/compute/compute_default_service_account_in_use/compute_default_service_account_in_use_test.py",
        "project": "prowler",
        "line": 13,
        "hash": "ca9d9f337ba262c9e3d74c84da0792e3",
        "textRange": {
          "startLine": 13,
          "endLine": 13,
          "startOffset": 12,
          "endOffset": 163
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_default_service_account_in_use/compute_default_service_account_in_use_test.py",
                "textRange": {
                  "startLine": 47,
                  "endLine": 47,
                  "startOffset": 12,
                  "endOffset": 163
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_default_service_account_in_use/compute_default_service_account_in_use_test.py",
                "textRange": {
                  "startLine": 90,
                  "endLine": 90,
                  "startOffset": 12,
                  "endOffset": 163
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_default_service_account_in_use/compute_default_service_account_in_use_test.py",
                "textRange": {
                  "startLine": 133,
                  "endLine": 133,
                  "startOffset": 12,
                  "endOffset": 163
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"prowler.providers.gcp.services.compute.compute_instance_default_service_account_in_use.compute_instance_default_service_account_in_use.compute_client\" 4 times.",
        "effort": "8min",
        "debt": "8min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTktVtH5e2L1KGES",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:tests/providers/gcp/services/compute/compute_default_service_account_in_use_with_full_api_access/compute_default_service_account_in_use_with_full_api_access_test.py",
        "project": "prowler",
        "line": 7,
        "hash": "f8e6400b1fc8bb5b2dd5b1b638ad19d2",
        "textRange": {
          "startLine": 7,
          "endLine": 7,
          "startOffset": 6,
          "endOffset": 79
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"Test_compute_instance_default_service_account_in_use_with_full_api_access\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTktVtH5e2L1KGER",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/gcp/services/compute/compute_default_service_account_in_use_with_full_api_access/compute_default_service_account_in_use_with_full_api_access_test.py",
        "project": "prowler",
        "line": 13,
        "hash": "a7f4f7eeb878489ec6d6243b38829d57",
        "textRange": {
          "startLine": 13,
          "endLine": 13,
          "startOffset": 12,
          "endOffset": 205
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_default_service_account_in_use_with_full_api_access/compute_default_service_account_in_use_with_full_api_access_test.py",
                "textRange": {
                  "startLine": 51,
                  "endLine": 51,
                  "startOffset": 12,
                  "endOffset": 205
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_default_service_account_in_use_with_full_api_access/compute_default_service_account_in_use_with_full_api_access_test.py",
                "textRange": {
                  "startLine": 99,
                  "endLine": 99,
                  "startOffset": 12,
                  "endOffset": 205
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_default_service_account_in_use_with_full_api_access/compute_default_service_account_in_use_with_full_api_access_test.py",
                "textRange": {
                  "startLine": 147,
                  "endLine": 147,
                  "startOffset": 12,
                  "endOffset": 205
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"prowler.providers.gcp.services.compute.compute_instance_default_service_account_in_use_with_full_api_access.compute_instance_default_service_account_in_use_with_full_api_access.compute_client\" 4 times.",
        "effort": "8min",
        "debt": "8min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTk2VtH5e2L1KGEY",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:tests/providers/gcp/services/compute/compute_encryption_with_csek_is_disabled/compute_encryption_with_csek_is_disabled_test.py",
        "project": "prowler",
        "line": 7,
        "hash": "f585d61a4a26492836dc6999ec0d3e78",
        "textRange": {
          "startLine": 7,
          "endLine": 7,
          "startOffset": 6,
          "endOffset": 56
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"Test_compute_instance_encryption_with_csek_enabled\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTk2VtH5e2L1KGEX",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/gcp/services/compute/compute_encryption_with_csek_is_disabled/compute_encryption_with_csek_is_disabled_test.py",
        "project": "prowler",
        "line": 14,
        "hash": "21a5811d4e6deb92955e43507477978c",
        "textRange": {
          "startLine": 14,
          "endLine": 14,
          "startOffset": 12,
          "endOffset": 159
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_encryption_with_csek_is_disabled/compute_encryption_with_csek_is_disabled_test.py",
                "textRange": {
                  "startLine": 48,
                  "endLine": 48,
                  "startOffset": 12,
                  "endOffset": 159
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_encryption_with_csek_is_disabled/compute_encryption_with_csek_is_disabled_test.py",
                "textRange": {
                  "startLine": 89,
                  "endLine": 89,
                  "startOffset": 12,
                  "endOffset": 159
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_encryption_with_csek_is_disabled/compute_encryption_with_csek_is_disabled_test.py",
                "textRange": {
                  "startLine": 130,
                  "endLine": 130,
                  "startOffset": 12,
                  "endOffset": 159
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"prowler.providers.gcp.services.compute.compute_instance_encryption_with_csek_enabled.compute_instance_encryption_with_csek_enabled.compute_client\" 4 times.",
        "effort": "8min",
        "debt": "8min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTk6VtH5e2L1KGEa",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:tests/providers/gcp/services/compute/compute_instance_confidential_computing_enabled/compute_instance_confidential_computing_enabled_test.py",
        "project": "prowler",
        "line": 7,
        "hash": "ee7046b6b4122209a75e12615269bf4b",
        "textRange": {
          "startLine": 7,
          "endLine": 7,
          "startOffset": 6,
          "endOffset": 58
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"Test_compute_instance_confidential_computing_enabled\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTk6VtH5e2L1KGEZ",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/gcp/services/compute/compute_instance_confidential_computing_enabled/compute_instance_confidential_computing_enabled_test.py",
        "project": "prowler",
        "line": 14,
        "hash": "82241ac0089ee9e5532e6d5bb5ef4e48",
        "textRange": {
          "startLine": 14,
          "endLine": 14,
          "startOffset": 12,
          "endOffset": 163
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_instance_confidential_computing_enabled/compute_instance_confidential_computing_enabled_test.py",
                "textRange": {
                  "startLine": 48,
                  "endLine": 48,
                  "startOffset": 12,
                  "endOffset": 163
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_instance_confidential_computing_enabled/compute_instance_confidential_computing_enabled_test.py",
                "textRange": {
                  "startLine": 92,
                  "endLine": 92,
                  "startOffset": 12,
                  "endOffset": 163
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"prowler.providers.gcp.services.compute.compute_instance_confidential_computing_enabled.compute_instance_confidential_computing_enabled.compute_client\" 3 times.",
        "effort": "6min",
        "debt": "6min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTkWVtH5e2L1KGEG",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:tests/providers/gcp/services/compute/compute_ip_forwarding_is_enabled/compute_ip_forwarding_is_enabled_test.py",
        "project": "prowler",
        "line": 7,
        "hash": "31f6dd907b11beaf45ee90a0e7322a75",
        "textRange": {
          "startLine": 7,
          "endLine": 7,
          "startOffset": 6,
          "endOffset": 52
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"Test_compute_instance_ip_forwarding_is_enabled\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTkWVtH5e2L1KGEF",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/gcp/services/compute/compute_ip_forwarding_is_enabled/compute_ip_forwarding_is_enabled_test.py",
        "project": "prowler",
        "line": 13,
        "hash": "c8fe3639b98472e49ab57b4180ae8856",
        "textRange": {
          "startLine": 13,
          "endLine": 13,
          "startOffset": 12,
          "endOffset": 151
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_ip_forwarding_is_enabled/compute_ip_forwarding_is_enabled_test.py",
                "textRange": {
                  "startLine": 47,
                  "endLine": 47,
                  "startOffset": 12,
                  "endOffset": 151
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_ip_forwarding_is_enabled/compute_ip_forwarding_is_enabled_test.py",
                "textRange": {
                  "startLine": 90,
                  "endLine": 90,
                  "startOffset": 12,
                  "endOffset": 151
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_ip_forwarding_is_enabled/compute_ip_forwarding_is_enabled_test.py",
                "textRange": {
                  "startLine": 133,
                  "endLine": 133,
                  "startOffset": 12,
                  "endOffset": 151
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"prowler.providers.gcp.services.compute.compute_instance_ip_forwarding_is_enabled.compute_instance_ip_forwarding_is_enabled.compute_client\" 4 times.",
        "effort": "8min",
        "debt": "8min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTkeVtH5e2L1KGEK",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:tests/providers/gcp/services/compute/compute_loadbalancer_logging_enabled/compute_loadbalancer_logging_enabled_test.py",
        "project": "prowler",
        "line": 7,
        "hash": "c5b8e445ac5263ac00754bf23ee47ec0",
        "textRange": {
          "startLine": 7,
          "endLine": 7,
          "startOffset": 6,
          "endOffset": 47
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"Test_compute_loadbalancer_logging_enabled\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTkeVtH5e2L1KGEJ",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/gcp/services/compute/compute_loadbalancer_logging_enabled/compute_loadbalancer_logging_enabled_test.py",
        "project": "prowler",
        "line": 14,
        "hash": "95a3ecbbc2030082e0d22c29cda4ed7a",
        "textRange": {
          "startLine": 14,
          "endLine": 14,
          "startOffset": 12,
          "endOffset": 141
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_loadbalancer_logging_enabled/compute_loadbalancer_logging_enabled_test.py",
                "textRange": {
                  "startLine": 42,
                  "endLine": 42,
                  "startOffset": 12,
                  "endOffset": 141
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_loadbalancer_logging_enabled/compute_loadbalancer_logging_enabled_test.py",
                "textRange": {
                  "startLine": 80,
                  "endLine": 80,
                  "startOffset": 12,
                  "endOffset": 141
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"prowler.providers.gcp.services.compute.compute_loadbalancer_logging_enabled.compute_loadbalancer_logging_enabled.compute_client\" 3 times.",
        "effort": "6min",
        "debt": "6min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTlCVtH5e2L1KGEe",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:tests/providers/gcp/services/compute/compute_network_dns_logging_enabled/compute_network_dns_logging_enabled_test.py",
        "project": "prowler",
        "line": 9,
        "hash": "babc33c25281f3aa7e4769c907f1cd51",
        "textRange": {
          "startLine": 9,
          "endLine": 9,
          "startOffset": 6,
          "endOffset": 46
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"Test_compute_network_dns_logging_enabled\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTlCVtH5e2L1KGEd",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/gcp/services/compute/compute_network_dns_logging_enabled/compute_network_dns_logging_enabled_test.py",
        "project": "prowler",
        "line": 17,
        "hash": "7efebac1ba0c46eeb9ba661661eb1f81",
        "textRange": {
          "startLine": 17,
          "endLine": 17,
          "startOffset": 12,
          "endOffset": 139
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_network_dns_logging_enabled/compute_network_dns_logging_enabled_test.py",
                "textRange": {
                  "startLine": 53,
                  "endLine": 53,
                  "startOffset": 12,
                  "endOffset": 139
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_network_dns_logging_enabled/compute_network_dns_logging_enabled_test.py",
                "textRange": {
                  "startLine": 103,
                  "endLine": 103,
                  "startOffset": 12,
                  "endOffset": 139
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"prowler.providers.gcp.services.compute.compute_network_dns_logging_enabled.compute_network_dns_logging_enabled.compute_client\" 3 times.",
        "effort": "6min",
        "debt": "6min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTkZVtH5e2L1KGEI",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:tests/providers/gcp/services/compute/compute_network_not_legacy/compute_network_not_legacy_test.py",
        "project": "prowler",
        "line": 7,
        "hash": "b50445ccda6910bd1a2c0229ab744934",
        "textRange": {
          "startLine": 7,
          "endLine": 7,
          "startOffset": 6,
          "endOffset": 37
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"Test_compute_network_not_legacy\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTkZVtH5e2L1KGEH",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/gcp/services/compute/compute_network_not_legacy/compute_network_not_legacy_test.py",
        "project": "prowler",
        "line": 15,
        "hash": "8957498b3c35d4b6282957968e8cd8a2",
        "textRange": {
          "startLine": 15,
          "endLine": 15,
          "startOffset": 12,
          "endOffset": 121
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_network_not_legacy/compute_network_not_legacy_test.py",
                "textRange": {
                  "startLine": 42,
                  "endLine": 42,
                  "startOffset": 12,
                  "endOffset": 121
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_network_not_legacy/compute_network_not_legacy_test.py",
                "textRange": {
                  "startLine": 79,
                  "endLine": 79,
                  "startOffset": 12,
                  "endOffset": 121
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"prowler.providers.gcp.services.compute.compute_network_not_legacy.compute_network_not_legacy.compute_client\" 3 times.",
        "effort": "6min",
        "debt": "6min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTkzVtH5e2L1KGEW",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:tests/providers/gcp/services/compute/compute_project_os_login_enabled/compute_project_os_login_enabled_test.py",
        "project": "prowler",
        "line": 7,
        "hash": "2e9402713be7a5d870706db3ff6d0a9e",
        "textRange": {
          "startLine": 7,
          "endLine": 7,
          "startOffset": 6,
          "endOffset": 43
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"Test_compute_project_os_login_enabled\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTkzVtH5e2L1KGEV",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/gcp/services/compute/compute_project_os_login_enabled/compute_project_os_login_enabled_test.py",
        "project": "prowler",
        "line": 14,
        "hash": "659f05e8d7b31ac142ebfa17970d84e9",
        "textRange": {
          "startLine": 14,
          "endLine": 14,
          "startOffset": 12,
          "endOffset": 133
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_project_os_login_enabled/compute_project_os_login_enabled_test.py",
                "textRange": {
                  "startLine": 38,
                  "endLine": 38,
                  "startOffset": 12,
                  "endOffset": 133
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_project_os_login_enabled/compute_project_os_login_enabled_test.py",
                "textRange": {
                  "startLine": 71,
                  "endLine": 71,
                  "startOffset": 12,
                  "endOffset": 133
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"prowler.providers.gcp.services.compute.compute_project_os_login_enabled.compute_project_os_login_enabled.compute_client\" 3 times.",
        "effort": "6min",
        "debt": "6min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTk-VtH5e2L1KGEc",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:tests/providers/gcp/services/compute/compute_rdp_access_from_the_internet_allowed/compute_rdp_access_from_the_internet_allowed_test.py",
        "project": "prowler",
        "line": 7,
        "hash": "b7ae2896e898f9fe8760163b9742bf7d",
        "textRange": {
          "startLine": 7,
          "endLine": 7,
          "startOffset": 6,
          "endOffset": 64
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"Test_compute_firewall_rdp_access_from_the_internet_allowed\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTk-VtH5e2L1KGEb",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/gcp/services/compute/compute_rdp_access_from_the_internet_allowed/compute_rdp_access_from_the_internet_allowed_test.py",
        "project": "prowler",
        "line": 13,
        "hash": "10c9121e6599641d3de54b73a7142f70",
        "textRange": {
          "startLine": 13,
          "endLine": 13,
          "startOffset": 12,
          "endOffset": 175
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_rdp_access_from_the_internet_allowed/compute_rdp_access_from_the_internet_allowed_test.py",
                "textRange": {
                  "startLine": 42,
                  "endLine": 42,
                  "startOffset": 12,
                  "endOffset": 175
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_rdp_access_from_the_internet_allowed/compute_rdp_access_from_the_internet_allowed_test.py",
                "textRange": {
                  "startLine": 78,
                  "endLine": 78,
                  "startOffset": 12,
                  "endOffset": 175
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_rdp_access_from_the_internet_allowed/compute_rdp_access_from_the_internet_allowed_test.py",
                "textRange": {
                  "startLine": 114,
                  "endLine": 114,
                  "startOffset": 12,
                  "endOffset": 175
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_rdp_access_from_the_internet_allowed/compute_rdp_access_from_the_internet_allowed_test.py",
                "textRange": {
                  "startLine": 150,
                  "endLine": 150,
                  "startOffset": 12,
                  "endOffset": 175
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_rdp_access_from_the_internet_allowed/compute_rdp_access_from_the_internet_allowed_test.py",
                "textRange": {
                  "startLine": 186,
                  "endLine": 186,
                  "startOffset": 12,
                  "endOffset": 175
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_rdp_access_from_the_internet_allowed/compute_rdp_access_from_the_internet_allowed_test.py",
                "textRange": {
                  "startLine": 222,
                  "endLine": 222,
                  "startOffset": 12,
                  "endOffset": 175
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_rdp_access_from_the_internet_allowed/compute_rdp_access_from_the_internet_allowed_test.py",
                "textRange": {
                  "startLine": 258,
                  "endLine": 258,
                  "startOffset": 12,
                  "endOffset": 175
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_rdp_access_from_the_internet_allowed/compute_rdp_access_from_the_internet_allowed_test.py",
                "textRange": {
                  "startLine": 294,
                  "endLine": 294,
                  "startOffset": 12,
                  "endOffset": 175
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_rdp_access_from_the_internet_allowed/compute_rdp_access_from_the_internet_allowed_test.py",
                "textRange": {
                  "startLine": 330,
                  "endLine": 330,
                  "startOffset": 12,
                  "endOffset": 175
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_rdp_access_from_the_internet_allowed/compute_rdp_access_from_the_internet_allowed_test.py",
                "textRange": {
                  "startLine": 369,
                  "endLine": 369,
                  "startOffset": 12,
                  "endOffset": 175
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_rdp_access_from_the_internet_allowed/compute_rdp_access_from_the_internet_allowed_test.py",
                "textRange": {
                  "startLine": 409,
                  "endLine": 409,
                  "startOffset": 12,
                  "endOffset": 175
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"prowler.providers.gcp.services.compute.compute_firewall_rdp_access_from_the_internet_allowed.compute_firewall_rdp_access_from_the_internet_allowed.compute_client\" 12 times.",
        "effort": "24min",
        "debt": "24min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTlJVtH5e2L1KGEi",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:tests/providers/gcp/services/compute/compute_serial_ports_in_use/compute_serial_ports_in_use_test.py",
        "project": "prowler",
        "line": 7,
        "hash": "149ed0602e98eb7a49697635776ff1d2",
        "textRange": {
          "startLine": 7,
          "endLine": 7,
          "startOffset": 6,
          "endOffset": 47
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"Test_compute_instance_serial_ports_in_use\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTlJVtH5e2L1KGEh",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/gcp/services/compute/compute_serial_ports_in_use/compute_serial_ports_in_use_test.py",
        "project": "prowler",
        "line": 14,
        "hash": "89ed5937f972f1770ab481e9607bac55",
        "textRange": {
          "startLine": 14,
          "endLine": 14,
          "startOffset": 12,
          "endOffset": 141
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_serial_ports_in_use/compute_serial_ports_in_use_test.py",
                "textRange": {
                  "startLine": 48,
                  "endLine": 48,
                  "startOffset": 12,
                  "endOffset": 141
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_serial_ports_in_use/compute_serial_ports_in_use_test.py",
                "textRange": {
                  "startLine": 89,
                  "endLine": 89,
                  "startOffset": 12,
                  "endOffset": 141
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_serial_ports_in_use/compute_serial_ports_in_use_test.py",
                "textRange": {
                  "startLine": 130,
                  "endLine": 130,
                  "startOffset": 12,
                  "endOffset": 141
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_serial_ports_in_use/compute_serial_ports_in_use_test.py",
                "textRange": {
                  "startLine": 171,
                  "endLine": 171,
                  "startOffset": 12,
                  "endOffset": 141
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_serial_ports_in_use/compute_serial_ports_in_use_test.py",
                "textRange": {
                  "startLine": 212,
                  "endLine": 212,
                  "startOffset": 12,
                  "endOffset": 141
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"prowler.providers.gcp.services.compute.compute_instance_serial_ports_in_use.compute_instance_serial_ports_in_use.compute_client\" 6 times.",
        "effort": "12min",
        "debt": "12min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTkwVtH5e2L1KGEU",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:tests/providers/gcp/services/compute/compute_shielded_vm_enabled/compute_shielded_vm_enabled_test.py",
        "project": "prowler",
        "line": 7,
        "hash": "0d9cb15a0d7afb43c167effd2f3e0f0f",
        "textRange": {
          "startLine": 7,
          "endLine": 7,
          "startOffset": 6,
          "endOffset": 47
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"Test_compute_instance_shielded_vm_enabled\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTkwVtH5e2L1KGET",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/gcp/services/compute/compute_shielded_vm_enabled/compute_shielded_vm_enabled_test.py",
        "project": "prowler",
        "line": 14,
        "hash": "431837ba35767ff58cd59fcbc5e9fdf5",
        "textRange": {
          "startLine": 14,
          "endLine": 14,
          "startOffset": 12,
          "endOffset": 141
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_shielded_vm_enabled/compute_shielded_vm_enabled_test.py",
                "textRange": {
                  "startLine": 48,
                  "endLine": 48,
                  "startOffset": 12,
                  "endOffset": 141
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_shielded_vm_enabled/compute_shielded_vm_enabled_test.py",
                "textRange": {
                  "startLine": 89,
                  "endLine": 89,
                  "startOffset": 12,
                  "endOffset": 141
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_shielded_vm_enabled/compute_shielded_vm_enabled_test.py",
                "textRange": {
                  "startLine": 130,
                  "endLine": 130,
                  "startOffset": 12,
                  "endOffset": 141
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"prowler.providers.gcp.services.compute.compute_instance_shielded_vm_enabled.compute_instance_shielded_vm_enabled.compute_client\" 4 times.",
        "effort": "8min",
        "debt": "8min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTkoVtH5e2L1KGEQ",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:tests/providers/gcp/services/compute/compute_ssh_access_from_the_internet_allowed/compute_ssh_access_from_the_internet_allowed_test.py",
        "project": "prowler",
        "line": 7,
        "hash": "f6e4d39a41ef92a60e757817bcbad273",
        "textRange": {
          "startLine": 7,
          "endLine": 7,
          "startOffset": 6,
          "endOffset": 64
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"Test_compute_firewall_ssh_access_from_the_internet_allowed\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTkoVtH5e2L1KGEP",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/gcp/services/compute/compute_ssh_access_from_the_internet_allowed/compute_ssh_access_from_the_internet_allowed_test.py",
        "project": "prowler",
        "line": 13,
        "hash": "e7f7a93d3de26a521d80db73cfcd12f5",
        "textRange": {
          "startLine": 13,
          "endLine": 13,
          "startOffset": 12,
          "endOffset": 175
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_ssh_access_from_the_internet_allowed/compute_ssh_access_from_the_internet_allowed_test.py",
                "textRange": {
                  "startLine": 42,
                  "endLine": 42,
                  "startOffset": 12,
                  "endOffset": 175
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_ssh_access_from_the_internet_allowed/compute_ssh_access_from_the_internet_allowed_test.py",
                "textRange": {
                  "startLine": 78,
                  "endLine": 78,
                  "startOffset": 12,
                  "endOffset": 175
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_ssh_access_from_the_internet_allowed/compute_ssh_access_from_the_internet_allowed_test.py",
                "textRange": {
                  "startLine": 114,
                  "endLine": 114,
                  "startOffset": 12,
                  "endOffset": 175
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_ssh_access_from_the_internet_allowed/compute_ssh_access_from_the_internet_allowed_test.py",
                "textRange": {
                  "startLine": 150,
                  "endLine": 150,
                  "startOffset": 12,
                  "endOffset": 175
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_ssh_access_from_the_internet_allowed/compute_ssh_access_from_the_internet_allowed_test.py",
                "textRange": {
                  "startLine": 186,
                  "endLine": 186,
                  "startOffset": 12,
                  "endOffset": 175
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_ssh_access_from_the_internet_allowed/compute_ssh_access_from_the_internet_allowed_test.py",
                "textRange": {
                  "startLine": 222,
                  "endLine": 222,
                  "startOffset": 12,
                  "endOffset": 175
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_ssh_access_from_the_internet_allowed/compute_ssh_access_from_the_internet_allowed_test.py",
                "textRange": {
                  "startLine": 258,
                  "endLine": 258,
                  "startOffset": 12,
                  "endOffset": 175
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_ssh_access_from_the_internet_allowed/compute_ssh_access_from_the_internet_allowed_test.py",
                "textRange": {
                  "startLine": 294,
                  "endLine": 294,
                  "startOffset": 12,
                  "endOffset": 175
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_ssh_access_from_the_internet_allowed/compute_ssh_access_from_the_internet_allowed_test.py",
                "textRange": {
                  "startLine": 330,
                  "endLine": 330,
                  "startOffset": 12,
                  "endOffset": 175
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_ssh_access_from_the_internet_allowed/compute_ssh_access_from_the_internet_allowed_test.py",
                "textRange": {
                  "startLine": 369,
                  "endLine": 369,
                  "startOffset": 12,
                  "endOffset": 175
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_ssh_access_from_the_internet_allowed/compute_ssh_access_from_the_internet_allowed_test.py",
                "textRange": {
                  "startLine": 409,
                  "endLine": 409,
                  "startOffset": 12,
                  "endOffset": 175
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"prowler.providers.gcp.services.compute.compute_firewall_ssh_access_from_the_internet_allowed.compute_firewall_ssh_access_from_the_internet_allowed.compute_client\" 12 times.",
        "effort": "24min",
        "debt": "24min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTkhVtH5e2L1KGEM",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:tests/providers/gcp/services/compute/compute_subnet_flow_logs_enabled/compute_subnet_flow_logs_enabled_test.py",
        "project": "prowler",
        "line": 7,
        "hash": "ba634234ed627e9c76f23dbfa67e59a7",
        "textRange": {
          "startLine": 7,
          "endLine": 7,
          "startOffset": 6,
          "endOffset": 43
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"Test_compute_subnet_flow_logs_enabled\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTkhVtH5e2L1KGEL",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/gcp/services/compute/compute_subnet_flow_logs_enabled/compute_subnet_flow_logs_enabled_test.py",
        "project": "prowler",
        "line": 14,
        "hash": "926f44b4c8a473583d73e2067c355db0",
        "textRange": {
          "startLine": 14,
          "endLine": 14,
          "startOffset": 12,
          "endOffset": 133
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_subnet_flow_logs_enabled/compute_subnet_flow_logs_enabled_test.py",
                "textRange": {
                  "startLine": 42,
                  "endLine": 42,
                  "startOffset": 12,
                  "endOffset": 133
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/compute/compute_subnet_flow_logs_enabled/compute_subnet_flow_logs_enabled_test.py",
                "textRange": {
                  "startLine": 80,
                  "endLine": 80,
                  "startOffset": 12,
                  "endOffset": 133
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"prowler.providers.gcp.services.compute.compute_subnet_flow_logs_enabled.compute_subnet_flow_logs_enabled.compute_client\" 3 times.",
        "effort": "6min",
        "debt": "6min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTj8VtH5e2L1KGD2",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:tests/providers/gcp/services/iam/iam_account_access_approval_enabled/iam_account_access_approval_enabled_test.py",
        "project": "prowler",
        "line": 9,
        "hash": "c22e820c35bdcdf027dc77cb0e2f41c0",
        "textRange": {
          "startLine": 9,
          "endLine": 9,
          "startOffset": 6,
          "endOffset": 46
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"Test_iam_account_access_approval_enabled\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTkJVtH5e2L1KGD-",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:tests/providers/gcp/services/iam/iam_audit_logs_enabled/iam_audit_logs_enabled_test.py",
        "project": "prowler",
        "line": 7,
        "hash": "8e335e3d5b0756983ab7214d2eb5dbf5",
        "textRange": {
          "startLine": 7,
          "endLine": 7,
          "startOffset": 6,
          "endOffset": 33
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"Test_iam_audit_logs_enabled\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTkJVtH5e2L1KGD9",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/gcp/services/iam/iam_audit_logs_enabled/iam_audit_logs_enabled_test.py",
        "project": "prowler",
        "line": 15,
        "hash": "b06b51c86ca11b32b89550b792358266",
        "textRange": {
          "startLine": 15,
          "endLine": 15,
          "startOffset": 12,
          "endOffset": 122
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/iam/iam_audit_logs_enabled/iam_audit_logs_enabled_test.py",
                "textRange": {
                  "startLine": 39,
                  "endLine": 39,
                  "startOffset": 12,
                  "endOffset": 122
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/iam/iam_audit_logs_enabled/iam_audit_logs_enabled_test.py",
                "textRange": {
                  "startLine": 73,
                  "endLine": 73,
                  "startOffset": 12,
                  "endOffset": 122
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"prowler.providers.gcp.services.iam.iam_audit_logs_enabled.iam_audit_logs_enabled.cloudresourcemanager_client\" 3 times.",
        "effort": "6min",
        "debt": "6min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTkFVtH5e2L1KGD8",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:tests/providers/gcp/services/iam/iam_organization_essential_contacts_configured/iam_organization_essential_contacts_configured_test.py",
        "project": "prowler",
        "line": 9,
        "hash": "9a2df7a049b41ae594afd94fe3905d1b",
        "textRange": {
          "startLine": 9,
          "endLine": 9,
          "startOffset": 6,
          "endOffset": 57
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"Test_iam_organization_essential_contacts_configured\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTkFVtH5e2L1KGD7",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/gcp/services/iam/iam_organization_essential_contacts_configured/iam_organization_essential_contacts_configured_test.py",
        "project": "prowler",
        "line": 16,
        "hash": "912740dd2649f261cf2fc01d6f73ecac",
        "textRange": {
          "startLine": 16,
          "endLine": 16,
          "startOffset": 12,
          "endOffset": 167
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/iam/iam_organization_essential_contacts_configured/iam_organization_essential_contacts_configured_test.py",
                "textRange": {
                  "startLine": 35,
                  "endLine": 35,
                  "startOffset": 12,
                  "endOffset": 167
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/iam/iam_organization_essential_contacts_configured/iam_organization_essential_contacts_configured_test.py",
                "textRange": {
                  "startLine": 63,
                  "endLine": 63,
                  "startOffset": 12,
                  "endOffset": 167
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"prowler.providers.gcp.services.iam.iam_organization_essential_contacts_configured.iam_organization_essential_contacts_configured.essentialcontacts_client\" 3 times.",
        "effort": "6min",
        "debt": "6min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTkTVtH5e2L1KGEE",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:tests/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties_test.py",
        "project": "prowler",
        "line": 7,
        "hash": "fd35cb1434a8cef21cdc61c365e7c765",
        "textRange": {
          "startLine": 7,
          "endLine": 7,
          "startOffset": 6,
          "endOffset": 52
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"Test_iam_role_kms_enforce_separation_of_duties\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTkTVtH5e2L1KGED",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties_test.py",
        "project": "prowler",
        "line": 15,
        "hash": "ba476478b58f57f3aaa2ab84021271d3",
        "textRange": {
          "startLine": 15,
          "endLine": 15,
          "startOffset": 12,
          "endOffset": 160
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties_test.py",
                "textRange": {
                  "startLine": 62,
                  "endLine": 62,
                  "startOffset": 12,
                  "endOffset": 160
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties_test.py",
                "textRange": {
                  "startLine": 110,
                  "endLine": 110,
                  "startOffset": 12,
                  "endOffset": 160
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"prowler.providers.gcp.services.iam.iam_role_kms_enforce_separation_of_duties.iam_role_kms_enforce_separation_of_duties.cloudresourcemanager_client\" 3 times.",
        "effort": "6min",
        "debt": "6min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTkTVtH5e2L1KGEC",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties_test.py",
        "project": "prowler",
        "line": 42,
        "hash": "a06d30d0a9d473d957152e80501792be",
        "textRange": {
          "startLine": 42,
          "endLine": 42,
          "startOffset": 21,
          "endOffset": 81
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties_test.py",
                "textRange": {
                  "startLine": 47,
                  "endLine": 47,
                  "startOffset": 21,
                  "endOffset": 81
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties_test.py",
                "textRange": {
                  "startLine": 52,
                  "endLine": 52,
                  "startOffset": 21,
                  "endOffset": 81
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties_test.py",
                "textRange": {
                  "startLine": 90,
                  "endLine": 90,
                  "startOffset": 21,
                  "endOffset": 81
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties_test.py",
                "textRange": {
                  "startLine": 95,
                  "endLine": 95,
                  "startOffset": 21,
                  "endOffset": 81
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties_test.py",
                "textRange": {
                  "startLine": 100,
                  "endLine": 100,
                  "startOffset": 21,
                  "endOffset": 81
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"serviceAccount:685829395199@cloudbuild.gserviceaccount.com\" 6 times.",
        "effort": "12min",
        "debt": "12min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTkPVtH5e2L1KGEB",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:tests/providers/gcp/services/iam/iam_role_sa_enforce_separation_of_duties/iam_role_sa_enforce_separation_of_duties_test.py",
        "project": "prowler",
        "line": 7,
        "hash": "47566f79de4e0c63f197f94dece6e748",
        "textRange": {
          "startLine": 7,
          "endLine": 7,
          "startOffset": 6,
          "endOffset": 51
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"Test_iam_role_sa_enforce_separation_of_duties\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTkPVtH5e2L1KGEA",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/gcp/services/iam/iam_role_sa_enforce_separation_of_duties/iam_role_sa_enforce_separation_of_duties_test.py",
        "project": "prowler",
        "line": 15,
        "hash": "3d7a8a7eeb8846f59dcc5c79204e1e96",
        "textRange": {
          "startLine": 15,
          "endLine": 15,
          "startOffset": 12,
          "endOffset": 158
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/iam/iam_role_sa_enforce_separation_of_duties/iam_role_sa_enforce_separation_of_duties_test.py",
                "textRange": {
                  "startLine": 62,
                  "endLine": 62,
                  "startOffset": 12,
                  "endOffset": 158
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/iam/iam_role_sa_enforce_separation_of_duties/iam_role_sa_enforce_separation_of_duties_test.py",
                "textRange": {
                  "startLine": 110,
                  "endLine": 110,
                  "startOffset": 12,
                  "endOffset": 158
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"prowler.providers.gcp.services.iam.iam_role_sa_enforce_separation_of_duties.iam_role_sa_enforce_separation_of_duties.cloudresourcemanager_client\" 3 times.",
        "effort": "6min",
        "debt": "6min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTkPVtH5e2L1KGD_",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/gcp/services/iam/iam_role_sa_enforce_separation_of_duties/iam_role_sa_enforce_separation_of_duties_test.py",
        "project": "prowler",
        "line": 42,
        "hash": "a06d30d0a9d473d957152e80501792be",
        "textRange": {
          "startLine": 42,
          "endLine": 42,
          "startOffset": 21,
          "endOffset": 81
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/iam/iam_role_sa_enforce_separation_of_duties/iam_role_sa_enforce_separation_of_duties_test.py",
                "textRange": {
                  "startLine": 47,
                  "endLine": 47,
                  "startOffset": 21,
                  "endOffset": 81
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/iam/iam_role_sa_enforce_separation_of_duties/iam_role_sa_enforce_separation_of_duties_test.py",
                "textRange": {
                  "startLine": 52,
                  "endLine": 52,
                  "startOffset": 21,
                  "endOffset": 81
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/iam/iam_role_sa_enforce_separation_of_duties/iam_role_sa_enforce_separation_of_duties_test.py",
                "textRange": {
                  "startLine": 90,
                  "endLine": 90,
                  "startOffset": 21,
                  "endOffset": 81
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/iam/iam_role_sa_enforce_separation_of_duties/iam_role_sa_enforce_separation_of_duties_test.py",
                "textRange": {
                  "startLine": 95,
                  "endLine": 95,
                  "startOffset": 21,
                  "endOffset": 81
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/iam/iam_role_sa_enforce_separation_of_duties/iam_role_sa_enforce_separation_of_duties_test.py",
                "textRange": {
                  "startLine": 100,
                  "endLine": 100,
                  "startOffset": 21,
                  "endOffset": 81
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"serviceAccount:685829395199@cloudbuild.gserviceaccount.com\" 6 times.",
        "effort": "12min",
        "debt": "12min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTlpVtH5e2L1KGE3",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:tests/providers/gcp/services/serviceusage/serviceusage_cloudasset_inventory_enabled/serviceusage_cloudasset_inventory_enabled_test.py",
        "project": "prowler",
        "line": 9,
        "hash": "76fbfc1db88c778414cee2e1665993ed",
        "textRange": {
          "startLine": 9,
          "endLine": 9,
          "startOffset": 6,
          "endOffset": 52
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"Test_serviceusage_cloudasset_inventory_enabled\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTlpVtH5e2L1KGE2",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/gcp/services/serviceusage/serviceusage_cloudasset_inventory_enabled/serviceusage_cloudasset_inventory_enabled_test.py",
        "project": "prowler",
        "line": 32,
        "hash": "3d70293392159c0d66252735fa164c17",
        "textRange": {
          "startLine": 32,
          "endLine": 32,
          "startOffset": 44,
          "endOffset": 71
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/serviceusage/serviceusage_cloudasset_inventory_enabled/serviceusage_cloudasset_inventory_enabled_test.py",
                "textRange": {
                  "startLine": 42,
                  "endLine": 42,
                  "startOffset": 25,
                  "endOffset": 52
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/serviceusage/serviceusage_cloudasset_inventory_enabled/serviceusage_cloudasset_inventory_enabled_test.py",
                "textRange": {
                  "startLine": 67,
                  "endLine": 67,
                  "startOffset": 44,
                  "endOffset": 71
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"cloudasset.googleapis.com\" 3 times.",
        "effort": "6min",
        "debt": "6min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTlpVtH5e2L1KGE1",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/gcp/services/serviceusage/serviceusage_cloudasset_inventory_enabled/serviceusage_cloudasset_inventory_enabled_test.py",
        "project": "prowler",
        "line": 34,
        "hash": "8f16b77e469a2d775687b831068d2bba",
        "textRange": {
          "startLine": 34,
          "endLine": 34,
          "startOffset": 46,
          "endOffset": 69
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/serviceusage/serviceusage_cloudasset_inventory_enabled/serviceusage_cloudasset_inventory_enabled_test.py",
                "textRange": {
                  "startLine": 43,
                  "endLine": 43,
                  "startOffset": 26,
                  "endOffset": 49
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/serviceusage/serviceusage_cloudasset_inventory_enabled/serviceusage_cloudasset_inventory_enabled_test.py",
                "textRange": {
                  "startLine": 69,
                  "endLine": 69,
                  "startOffset": 46,
                  "endOffset": 69
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"Cloud Asset Inventory\" 3 times.",
        "effort": "6min",
        "debt": "6min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-06T15:01:56+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aT76VtH5e2L1KGMM",
        "rule": "python:S1172",
        "severity": "MAJOR",
        "component": "prowler:prowler/providers/aws/lib/allowlist/allowlist.py",
        "project": "prowler",
        "line": 151,
        "hash": "f8b3c6b58976e27cbdb28b32f1cb42e5",
        "textRange": {
          "startLine": 151,
          "endLine": 151,
          "startOffset": 41,
          "endOffset": 48
        },
        "flows": [],
        "status": "OPEN",
        "message": "Remove the unused function parameter \"account\".",
        "effort": "5min",
        "debt": "5min",
        "author": "nachor1992@gmail.com",
        "tags": [
          "unused"
        ],
        "creationDate": "2023-07-06T13:33:32+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aT76VtH5e2L1KGMN",
        "rule": "python:S3776",
        "severity": "CRITICAL",
        "component": "prowler:prowler/providers/aws/lib/allowlist/allowlist.py",
        "project": "prowler",
        "line": 252,
        "hash": "d19e55c60a2874b49da5487a18402d8a",
        "textRange": {
          "startLine": 252,
          "endLine": 252,
          "startOffset": 4,
          "endOffset": 15
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/lib/allowlist/allowlist.py",
                "textRange": {
                  "startLine": 259,
                  "endLine": 259,
                  "startOffset": 8,
                  "endOffset": 10
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/lib/allowlist/allowlist.py",
                "textRange": {
                  "startLine": 264,
                  "endLine": 264,
                  "startOffset": 12,
                  "endOffset": 14
                },
                "msg": "+2 (incl 1 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/lib/allowlist/allowlist.py",
                "textRange": {
                  "startLine": 265,
                  "endLine": 265,
                  "startOffset": 16,
                  "endOffset": 18
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/lib/allowlist/allowlist.py",
                "textRange": {
                  "startLine": 267,
                  "endLine": 267,
                  "startOffset": 16,
                  "endOffset": 18
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/lib/allowlist/allowlist.py",
                "textRange": {
                  "startLine": 269,
                  "endLine": 269,
                  "startOffset": 16,
                  "endOffset": 19
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/lib/allowlist/allowlist.py",
                "textRange": {
                  "startLine": 270,
                  "endLine": 270,
                  "startOffset": 20,
                  "endOffset": 22
                },
                "msg": "+4 (incl 3 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/lib/allowlist/allowlist.py",
                "textRange": {
                  "startLine": 272,
                  "endLine": 272,
                  "startOffset": 16,
                  "endOffset": 19
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/lib/allowlist/allowlist.py",
                "textRange": {
                  "startLine": 273,
                  "endLine": 273,
                  "startOffset": 20,
                  "endOffset": 22
                },
                "msg": "+4 (incl 3 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/lib/allowlist/allowlist.py",
                "textRange": {
                  "startLine": 275,
                  "endLine": 275,
                  "startOffset": 16,
                  "endOffset": 18
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/lib/allowlist/allowlist.py",
                "textRange": {
                  "startLine": 288,
                  "endLine": 288,
                  "startOffset": 20,
                  "endOffset": 23
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/lib/allowlist/allowlist.py",
                "textRange": {
                  "startLine": 278,
                  "endLine": 278,
                  "startOffset": 24,
                  "endOffset": 26
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/lib/allowlist/allowlist.py",
                "textRange": {
                  "startLine": 277,
                  "endLine": 277,
                  "startOffset": 43,
                  "endOffset": 46
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/lib/allowlist/allowlist.py",
                "textRange": {
                  "startLine": 282,
                  "endLine": 282,
                  "startOffset": 24,
                  "endOffset": 26
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/lib/allowlist/allowlist.py",
                "textRange": {
                  "startLine": 281,
                  "endLine": 281,
                  "startOffset": 42,
                  "endOffset": 45
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/lib/allowlist/allowlist.py",
                "textRange": {
                  "startLine": 286,
                  "endLine": 286,
                  "startOffset": 24,
                  "endOffset": 26
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/lib/allowlist/allowlist.py",
                "textRange": {
                  "startLine": 285,
                  "endLine": 285,
                  "startOffset": 44,
                  "endOffset": 47
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/lib/allowlist/allowlist.py",
                "textRange": {
                  "startLine": 288,
                  "endLine": 288,
                  "startOffset": 61,
                  "endOffset": 63
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/lib/allowlist/allowlist.py",
                "textRange": {
                  "startLine": 288,
                  "endLine": 288,
                  "startOffset": 40,
                  "endOffset": 43
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/lib/allowlist/allowlist.py",
                "textRange": {
                  "startLine": 292,
                  "endLine": 292,
                  "startOffset": 4,
                  "endOffset": 10
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Refactor this function to reduce its Cognitive Complexity from 36 to the 15 allowed.",
        "effort": "26min",
        "debt": "26min",
        "author": "nachor1992@gmail.com",
        "tags": [
          "brain-overload"
        ],
        "creationDate": "2023-07-06T13:33:32+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTjwVtH5e2L1KGDq",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/aws/lib/allowlist/allowlist_test.py",
        "project": "prowler",
        "line": 137,
        "hash": "edaf78fabe47a44d608764206251c9fa",
        "textRange": {
          "startLine": 137,
          "endLine": 137,
          "startOffset": 25,
          "endOffset": 42
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/lib/allowlist/allowlist_test.py",
                "textRange": {
                  "startLine": 142,
                  "endLine": 142,
                  "startOffset": 12,
                  "endOffset": 29
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/lib/allowlist/allowlist_test.py",
                "textRange": {
                  "startLine": 576,
                  "endLine": 576,
                  "startOffset": 37,
                  "endOffset": 54
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/lib/allowlist/allowlist_test.py",
                "textRange": {
                  "startLine": 589,
                  "endLine": 589,
                  "startOffset": 12,
                  "endOffset": 29
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/lib/allowlist/allowlist_test.py",
                "textRange": {
                  "startLine": 613,
                  "endLine": 613,
                  "startOffset": 26,
                  "endOffset": 43
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/aws/lib/allowlist/allowlist_test.py",
                "textRange": {
                  "startLine": 620,
                  "endLine": 620,
                  "startOffset": 12,
                  "endOffset": 29
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"environment=dev\" 6 times.",
        "effort": "12min",
        "debt": "12min",
        "author": "nachor1992@gmail.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-06T13:33:32+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTllVtH5e2L1KGE0",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:tests/providers/gcp/services/bigquery/bigquery_dataset_public_access/bigquery_dataset_public_access_test.py",
        "project": "prowler",
        "line": 7,
        "hash": "43982a19163b007304f66acda1d2e650",
        "textRange": {
          "startLine": 7,
          "endLine": 7,
          "startOffset": 6,
          "endOffset": 41
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"Test_bigquery_dataset_public_access\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-07-03T11:01:51+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTllVtH5e2L1KGEz",
        "rule": "python:S1192",
        "severity": "CRITICAL",
        "component": "prowler:tests/providers/gcp/services/bigquery/bigquery_dataset_public_access/bigquery_dataset_public_access_test.py",
        "project": "prowler",
        "line": 13,
        "hash": "0eeb55bbb8a8c24d04f21f249c598d25",
        "textRange": {
          "startLine": 13,
          "endLine": 13,
          "startOffset": 12,
          "endOffset": 131
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/bigquery/bigquery_dataset_public_access/bigquery_dataset_public_access_test.py",
                "textRange": {
                  "startLine": 41,
                  "endLine": 41,
                  "startOffset": 12,
                  "endOffset": 131
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:tests/providers/gcp/services/bigquery/bigquery_dataset_public_access/bigquery_dataset_public_access_test.py",
                "textRange": {
                  "startLine": 79,
                  "endLine": 79,
                  "startOffset": 12,
                  "endOffset": 131
                },
                "msg": "Duplication",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Define a constant instead of duplicating this literal \"prowler.providers.gcp.services.bigquery.bigquery_dataset_public_access.bigquery_dataset_public_access.bigquery_client\" 3 times.",
        "effort": "6min",
        "debt": "6min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "design"
        ],
        "creationDate": "2023-07-03T11:01:51+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aT1dVtH5e2L1KGKq",
        "rule": "python:S3776",
        "severity": "CRITICAL",
        "component": "prowler:prowler/providers/aws/services/cloudwatch/cloudwatch_log_group_no_secrets_in_logs/cloudwatch_log_group_no_secrets_in_logs.py",
        "project": "prowler",
        "line": 12,
        "hash": "7c28c5c1e8ca42924fb985a49879f926",
        "textRange": {
          "startLine": 12,
          "endLine": 12,
          "startOffset": 8,
          "endOffset": 15
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/services/cloudwatch/cloudwatch_log_group_no_secrets_in_logs/cloudwatch_log_group_no_secrets_in_logs.py",
                "textRange": {
                  "startLine": 14,
                  "endLine": 14,
                  "startOffset": 8,
                  "endOffset": 11
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/services/cloudwatch/cloudwatch_log_group_no_secrets_in_logs/cloudwatch_log_group_no_secrets_in_logs.py",
                "textRange": {
                  "startLine": 22,
                  "endLine": 22,
                  "startOffset": 12,
                  "endOffset": 14
                },
                "msg": "+2 (incl 1 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/services/cloudwatch/cloudwatch_log_group_no_secrets_in_logs/cloudwatch_log_group_no_secrets_in_logs.py",
                "textRange": {
                  "startLine": 23,
                  "endLine": 23,
                  "startOffset": 16,
                  "endOffset": 19
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/services/cloudwatch/cloudwatch_log_group_no_secrets_in_logs/cloudwatch_log_group_no_secrets_in_logs.py",
                "textRange": {
                  "startLine": 33,
                  "endLine": 33,
                  "startOffset": 20,
                  "endOffset": 22
                },
                "msg": "+4 (incl 3 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/services/cloudwatch/cloudwatch_log_group_no_secrets_in_logs/cloudwatch_log_group_no_secrets_in_logs.py",
                "textRange": {
                  "startLine": 34,
                  "endLine": 34,
                  "startOffset": 24,
                  "endOffset": 27
                },
                "msg": "+5 (incl 4 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/services/cloudwatch/cloudwatch_log_group_no_secrets_in_logs/cloudwatch_log_group_no_secrets_in_logs.py",
                "textRange": {
                  "startLine": 43,
                  "endLine": 43,
                  "startOffset": 28,
                  "endOffset": 30
                },
                "msg": "+6 (incl 5 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/services/cloudwatch/cloudwatch_log_group_no_secrets_in_logs/cloudwatch_log_group_no_secrets_in_logs.py",
                "textRange": {
                  "startLine": 50,
                  "endLine": 50,
                  "startOffset": 28,
                  "endOffset": 34
                },
                "msg": "+6 (incl 5 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/services/cloudwatch/cloudwatch_log_group_no_secrets_in_logs/cloudwatch_log_group_no_secrets_in_logs.py",
                "textRange": {
                  "startLine": 54,
                  "endLine": 54,
                  "startOffset": 28,
                  "endOffset": 30
                },
                "msg": "+6 (incl 5 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/services/cloudwatch/cloudwatch_log_group_no_secrets_in_logs/cloudwatch_log_group_no_secrets_in_logs.py",
                "textRange": {
                  "startLine": 60,
                  "endLine": 60,
                  "startOffset": 32,
                  "endOffset": 34
                },
                "msg": "+7 (incl 6 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/services/cloudwatch/cloudwatch_log_group_no_secrets_in_logs/cloudwatch_log_group_no_secrets_in_logs.py",
                "textRange": {
                  "startLine": 61,
                  "endLine": 61,
                  "startOffset": 36,
                  "endOffset": 39
                },
                "msg": "+8 (incl 7 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/services/cloudwatch/cloudwatch_log_group_no_secrets_in_logs/cloudwatch_log_group_no_secrets_in_logs.py",
                "textRange": {
                  "startLine": 67,
                  "endLine": 67,
                  "startOffset": 28,
                  "endOffset": 32
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/services/cloudwatch/cloudwatch_log_group_no_secrets_in_logs/cloudwatch_log_group_no_secrets_in_logs.py",
                "textRange": {
                  "startLine": 71,
                  "endLine": 71,
                  "startOffset": 20,
                  "endOffset": 22
                },
                "msg": "+4 (incl 3 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/providers/aws/services/cloudwatch/cloudwatch_log_group_no_secrets_in_logs/cloudwatch_log_group_no_secrets_in_logs.py",
                "textRange": {
                  "startLine": 81,
                  "endLine": 81,
                  "startOffset": 12,
                  "endOffset": 14
                },
                "msg": "+2 (incl 1 for nesting)",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Refactor this function to reduce its Cognitive Complexity from 55 to the 15 allowed.",
        "effort": "45min",
        "debt": "45min",
        "author": "nachor1992@gmail.com",
        "tags": [
          "brain-overload"
        ],
        "creationDate": "2023-07-03T10:52:46+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aUDPVtH5e2L1KGN9",
        "rule": "python:S3776",
        "severity": "CRITICAL",
        "component": "prowler:prowler/__main__.py",
        "project": "prowler",
        "line": 46,
        "hash": "16cefedf10e7af4f8381ee57cb3f0984",
        "textRange": {
          "startLine": 46,
          "endLine": 46,
          "startOffset": 4,
          "endOffset": 11
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 63,
                  "endLine": 63,
                  "startOffset": 4,
                  "endOffset": 6
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 67,
                  "endLine": 67,
                  "startOffset": 4,
                  "endOffset": 6
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 73,
                  "endLine": 73,
                  "startOffset": 4,
                  "endOffset": 6
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 81,
                  "endLine": 81,
                  "startOffset": 4,
                  "endOffset": 6
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 94,
                  "endLine": 94,
                  "startOffset": 4,
                  "endOffset": 6
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 97,
                  "endLine": 97,
                  "startOffset": 4,
                  "endOffset": 6
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 117,
                  "endLine": 117,
                  "startOffset": 4,
                  "endOffset": 6
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 125,
                  "endLine": 125,
                  "startOffset": 4,
                  "endOffset": 6
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 129,
                  "endLine": 129,
                  "startOffset": 4,
                  "endOffset": 6
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 133,
                  "endLine": 133,
                  "startOffset": 4,
                  "endOffset": 6
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 140,
                  "endLine": 140,
                  "startOffset": 4,
                  "endOffset": 6
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 155,
                  "endLine": 155,
                  "startOffset": 4,
                  "endOffset": 6
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 155,
                  "endLine": 155,
                  "startOffset": 40,
                  "endOffset": 43
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 161,
                  "endLine": 161,
                  "startOffset": 4,
                  "endOffset": 6
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 165,
                  "endLine": 165,
                  "startOffset": 4,
                  "endOffset": 8
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 173,
                  "endLine": 173,
                  "startOffset": 4,
                  "endOffset": 6
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 174,
                  "endLine": 174,
                  "startOffset": 8,
                  "endOffset": 10
                },
                "msg": "+2 (incl 1 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 174,
                  "endLine": 174,
                  "startOffset": 43,
                  "endOffset": 46
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 182,
                  "endLine": 182,
                  "startOffset": 8,
                  "endOffset": 12
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 188,
                  "endLine": 188,
                  "startOffset": 4,
                  "endOffset": 6
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 189,
                  "endLine": 189,
                  "startOffset": 8,
                  "endOffset": 11
                },
                "msg": "+2 (incl 1 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 191,
                  "endLine": 191,
                  "startOffset": 12,
                  "endOffset": 14
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 195,
                  "endLine": 195,
                  "startOffset": 12,
                  "endOffset": 14
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 203,
                  "endLine": 203,
                  "startOffset": 12,
                  "endOffset": 14
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 203,
                  "endLine": 203,
                  "startOffset": 33,
                  "endOffset": 36
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 204,
                  "endLine": 204,
                  "startOffset": 35,
                  "endOffset": 37
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 209,
                  "endLine": 209,
                  "startOffset": 16,
                  "endOffset": 18
                },
                "msg": "+4 (incl 3 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 221,
                  "endLine": 221,
                  "startOffset": 4,
                  "endOffset": 6
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 221,
                  "endLine": 221,
                  "startOffset": 47,
                  "endOffset": 50
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 225,
                  "endLine": 225,
                  "startOffset": 4,
                  "endOffset": 6
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 233,
                  "endLine": 233,
                  "startOffset": 8,
                  "endOffset": 10
                },
                "msg": "+2 (incl 1 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 233,
                  "endLine": 233,
                  "startOffset": 32,
                  "endOffset": 35
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 234,
                  "endLine": 234,
                  "startOffset": 12,
                  "endOffset": 15
                },
                "msg": "+3 (incl 2 for nesting)",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 245,
                  "endLine": 245,
                  "startOffset": 4,
                  "endOffset": 6
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 249,
                  "endLine": 249,
                  "startOffset": 4,
                  "endOffset": 6
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          },
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 249,
                  "endLine": 249,
                  "startOffset": 35,
                  "endOffset": 38
                },
                "msg": "+1",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Refactor this function to reduce its Cognitive Complexity from 50 to the 15 allowed.",
        "effort": "40min",
        "debt": "40min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "brain-overload"
        ],
        "creationDate": "2023-07-03T09:48:40+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aUDPVtH5e2L1KGN-",
        "rule": "python:S5655",
        "severity": "CRITICAL",
        "component": "prowler:prowler/__main__.py",
        "project": "prowler",
        "line": 118,
        "hash": "939ef2e03640baf529b205427f017cc7",
        "textRange": {
          "startLine": 118,
          "endLine": 118,
          "startOffset": 31,
          "endOffset": 56
        },
        "flows": [
          {
            "locations": [
              {
                "component": "prowler:prowler/__main__.py",
                "textRange": {
                  "startLine": 118,
                  "endLine": 118,
                  "startOffset": 31,
                  "endOffset": 56
                },
                "msg": "Change this argument; Function \"print_checks\" expects a different type",
                "msgFormattings": []
              },
              {
                "component": "prowler:prowler/lib/check/check.py",
                "textRange": {
                  "startLine": 272,
                  "endLine": 272,
                  "startOffset": 4,
                  "endOffset": 16
                },
                "msg": "Function definition",
                "msgFormattings": []
              }
            ]
          }
        ],
        "status": "OPEN",
        "message": "Change this argument; Function \"print_checks\" expects a different type",
        "effort": "20min",
        "debt": "20min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "suspicious"
        ],
        "creationDate": "2023-07-03T09:48:40+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTm-VtH5e2L1KGFy",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:prowler/lib/check/compliance_models.py",
        "project": "prowler",
        "line": 11,
        "hash": "455f58ff32ac5bacb6229dfb827e4273",
        "textRange": {
          "startLine": 11,
          "endLine": 11,
          "startOffset": 6,
          "endOffset": 37
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"ENS_Requirement_Attribute_Nivel\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-06-30T10:24:05+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTm-VtH5e2L1KGFz",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:prowler/lib/check/compliance_models.py",
        "project": "prowler",
        "line": 20,
        "hash": "5b01d3b73b7c7e749ec9ab6558007ab2",
        "textRange": {
          "startLine": 20,
          "endLine": 20,
          "startOffset": 6,
          "endOffset": 43
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"ENS_Requirement_Attribute_Dimensiones\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-06-30T10:24:05+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTm-VtH5e2L1KGF0",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:prowler/lib/check/compliance_models.py",
        "project": "prowler",
        "line": 30,
        "hash": "a9af779d6269f22c572a482fa60d56b9",
        "textRange": {
          "startLine": 30,
          "endLine": 30,
          "startOffset": 6,
          "endOffset": 37
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"ENS_Requirement_Attribute_Tipos\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-06-30T10:24:05+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTm-VtH5e2L1KGF1",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:prowler/lib/check/compliance_models.py",
        "project": "prowler",
        "line": 39,
        "hash": "27fbce32b81d782566d34c663285cf02",
        "textRange": {
          "startLine": 39,
          "endLine": 39,
          "startOffset": 6,
          "endOffset": 31
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"ENS_Requirement_Attribute\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-06-30T10:24:05+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTm-VtH5e2L1KGF2",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:prowler/lib/check/compliance_models.py",
        "project": "prowler",
        "line": 52,
        "hash": "8299aa18c63a772a4945c850f5880a80",
        "textRange": {
          "startLine": 52,
          "endLine": 52,
          "startOffset": 6,
          "endOffset": 46
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"Generic_Compliance_Requirement_Attribute\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-06-30T10:24:05+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      },
      {
        "key": "AYm1aTm-VtH5e2L1KGF3",
        "rule": "python:S101",
        "severity": "MINOR",
        "component": "prowler:prowler/lib/check/compliance_models.py",
        "project": "prowler",
        "line": 63,
        "hash": "2166952266e83aba201ecda6c917c526",
        "textRange": {
          "startLine": 63,
          "endLine": 63,
          "startOffset": 6,
          "endOffset": 39
        },
        "flows": [],
        "status": "OPEN",
        "message": "Rename class \"CIS_Requirement_Attribute_Profile\" to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "effort": "5min",
        "debt": "5min",
        "author": "38561120+sergargar@users.noreply.github.com",
        "tags": [
          "convention"
        ],
        "creationDate": "2023-06-30T10:24:05+0000",
        "updateDate": "2023-08-02T08:40:21+0000",
        "type": "CODE_SMELL",
        "scope": "MAIN",
        "quickFixAvailable": false,
        "messageFormattings": [],
        "codeVariants": []
      }
    ],
    "components": [
      {
        "key": "prowler:tests/providers/gcp/services/compute/compute_subnet_flow_logs_enabled/compute_subnet_flow_logs_enabled_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "compute_subnet_flow_logs_enabled_test.py",
        "longName": "tests/providers/gcp/services/compute/compute_subnet_flow_logs_enabled/compute_subnet_flow_logs_enabled_test.py",
        "path": "tests/providers/gcp/services/compute/compute_subnet_flow_logs_enabled/compute_subnet_flow_logs_enabled_test.py"
      },
      {
        "key": "prowler:tests/providers/gcp/services/compute/compute_loadbalancer_logging_enabled/compute_loadbalancer_logging_enabled_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "compute_loadbalancer_logging_enabled_test.py",
        "longName": "tests/providers/gcp/services/compute/compute_loadbalancer_logging_enabled/compute_loadbalancer_logging_enabled_test.py",
        "path": "tests/providers/gcp/services/compute/compute_loadbalancer_logging_enabled/compute_loadbalancer_logging_enabled_test.py"
      },
      {
        "key": "prowler",
        "enabled": true,
        "qualifier": "TRK",
        "name": "prowler",
        "longName": "prowler"
      },
      {
        "key": "prowler:prowler/providers/gcp/services/cloudstorage/cloudstorage_bucket_log_retention_policy_lock/cloudstorage_bucket_log_retention_policy_lock.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "cloudstorage_bucket_log_retention_policy_lock.py",
        "longName": "prowler/providers/gcp/services/cloudstorage/cloudstorage_bucket_log_retention_policy_lock/cloudstorage_bucket_log_retention_policy_lock.py",
        "path": "prowler/providers/gcp/services/cloudstorage/cloudstorage_bucket_log_retention_policy_lock/cloudstorage_bucket_log_retention_policy_lock.py"
      },
      {
        "key": "prowler:prowler/providers/aws/lib/policy_condition_parser/policy_condition_parser.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "policy_condition_parser.py",
        "longName": "prowler/providers/aws/lib/policy_condition_parser/policy_condition_parser.py",
        "path": "prowler/providers/aws/lib/policy_condition_parser/policy_condition_parser.py"
      },
      {
        "key": "prowler:prowler/providers/gcp/services/compute/compute_network_not_legacy/compute_network_not_legacy.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "compute_network_not_legacy.py",
        "longName": "prowler/providers/gcp/services/compute/compute_network_not_legacy/compute_network_not_legacy.py",
        "path": "prowler/providers/gcp/services/compute/compute_network_not_legacy/compute_network_not_legacy.py"
      },
      {
        "key": "prowler:prowler/providers/gcp/services/iam/iam_role_sa_enforce_separation_of_duties/iam_role_sa_enforce_separation_of_duties.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "iam_role_sa_enforce_separation_of_duties.py",
        "longName": "prowler/providers/gcp/services/iam/iam_role_sa_enforce_separation_of_duties/iam_role_sa_enforce_separation_of_duties.py",
        "path": "prowler/providers/gcp/services/iam/iam_role_sa_enforce_separation_of_duties/iam_role_sa_enforce_separation_of_duties.py"
      },
      {
        "key": "prowler:prowler/__main__.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "__main__.py",
        "longName": "prowler/__main__.py",
        "path": "prowler/__main__.py"
      },
      {
        "key": "prowler:prowler/providers/aws/services/sqs/sqs_queues_not_publicly_accessible/sqs_queues_not_publicly_accessible.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "sqs_queues_not_publicly_accessible.py",
        "longName": "prowler/providers/aws/services/sqs/sqs_queues_not_publicly_accessible/sqs_queues_not_publicly_accessible.py",
        "path": "prowler/providers/aws/services/sqs/sqs_queues_not_publicly_accessible/sqs_queues_not_publicly_accessible.py"
      },
      {
        "key": "prowler:tests/providers/gcp/services/compute/compute_shielded_vm_enabled/compute_shielded_vm_enabled_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "compute_shielded_vm_enabled_test.py",
        "longName": "tests/providers/gcp/services/compute/compute_shielded_vm_enabled/compute_shielded_vm_enabled_test.py",
        "path": "tests/providers/gcp/services/compute/compute_shielded_vm_enabled/compute_shielded_vm_enabled_test.py"
      },
      {
        "key": "prowler:prowler/providers/gcp/services/compute/compute_network_dns_logging_enabled/compute_network_dns_logging_enabled.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "compute_network_dns_logging_enabled.py",
        "longName": "prowler/providers/gcp/services/compute/compute_network_dns_logging_enabled/compute_network_dns_logging_enabled.py",
        "path": "prowler/providers/gcp/services/compute/compute_network_dns_logging_enabled/compute_network_dns_logging_enabled.py"
      },
      {
        "key": "prowler:tests/providers/gcp/services/compute/compute_default_service_account_in_use_with_full_api_access/compute_default_service_account_in_use_with_full_api_access_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "compute_default_service_account_in_use_with_full_api_access_test.py",
        "longName": "tests/providers/gcp/services/compute/compute_default_service_account_in_use_with_full_api_access/compute_default_service_account_in_use_with_full_api_access_test.py",
        "path": "tests/providers/gcp/services/compute/compute_default_service_account_in_use_with_full_api_access/compute_default_service_account_in_use_with_full_api_access_test.py"
      },
      {
        "key": "prowler:tests/providers/gcp/services/compute/compute_ssh_access_from_the_internet_allowed/compute_ssh_access_from_the_internet_allowed_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "compute_ssh_access_from_the_internet_allowed_test.py",
        "longName": "tests/providers/gcp/services/compute/compute_ssh_access_from_the_internet_allowed/compute_ssh_access_from_the_internet_allowed_test.py",
        "path": "tests/providers/gcp/services/compute/compute_ssh_access_from_the_internet_allowed/compute_ssh_access_from_the_internet_allowed_test.py"
      },
      {
        "key": "prowler:tests/providers/aws/lib/credentials/credentials_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "credentials_test.py",
        "longName": "tests/providers/aws/lib/credentials/credentials_test.py",
        "path": "tests/providers/aws/lib/credentials/credentials_test.py"
      },
      {
        "key": "prowler:prowler/providers/gcp/services/serviceusage/serviceusage_cloudasset_inventory_enabled/serviceusage_cloudasset_inventory_enabled.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "serviceusage_cloudasset_inventory_enabled.py",
        "longName": "prowler/providers/gcp/services/serviceusage/serviceusage_cloudasset_inventory_enabled/serviceusage_cloudasset_inventory_enabled.py",
        "path": "prowler/providers/gcp/services/serviceusage/serviceusage_cloudasset_inventory_enabled/serviceusage_cloudasset_inventory_enabled.py"
      },
      {
        "key": "prowler:tests/providers/aws/lib/allowlist/allowlist_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "allowlist_test.py",
        "longName": "tests/providers/aws/lib/allowlist/allowlist_test.py",
        "path": "tests/providers/aws/lib/allowlist/allowlist_test.py"
      },
      {
        "key": "prowler:prowler/lib/outputs/file_descriptors.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "file_descriptors.py",
        "longName": "prowler/lib/outputs/file_descriptors.py",
        "path": "prowler/lib/outputs/file_descriptors.py"
      },
      {
        "key": "prowler:tests/providers/gcp/services/compute/compute_rdp_access_from_the_internet_allowed/compute_rdp_access_from_the_internet_allowed_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "compute_rdp_access_from_the_internet_allowed_test.py",
        "longName": "tests/providers/gcp/services/compute/compute_rdp_access_from_the_internet_allowed/compute_rdp_access_from_the_internet_allowed_test.py",
        "path": "tests/providers/gcp/services/compute/compute_rdp_access_from_the_internet_allowed/compute_rdp_access_from_the_internet_allowed_test.py"
      },
      {
        "key": "prowler:tests/providers/gcp/services/compute/compute_instance_confidential_computing_enabled/compute_instance_confidential_computing_enabled_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "compute_instance_confidential_computing_enabled_test.py",
        "longName": "tests/providers/gcp/services/compute/compute_instance_confidential_computing_enabled/compute_instance_confidential_computing_enabled_test.py",
        "path": "tests/providers/gcp/services/compute/compute_instance_confidential_computing_enabled/compute_instance_confidential_computing_enabled_test.py"
      },
      {
        "key": "prowler:tests/providers/gcp/services/compute/compute_encryption_with_csek_is_disabled/compute_encryption_with_csek_is_disabled_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "compute_encryption_with_csek_is_disabled_test.py",
        "longName": "tests/providers/gcp/services/compute/compute_encryption_with_csek_is_disabled/compute_encryption_with_csek_is_disabled_test.py",
        "path": "tests/providers/gcp/services/compute/compute_encryption_with_csek_is_disabled/compute_encryption_with_csek_is_disabled_test.py"
      },
      {
        "key": "prowler:tests/providers/aws/lib/policy_condition_parser/policy_condition_parser_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "policy_condition_parser_test.py",
        "longName": "tests/providers/aws/lib/policy_condition_parser/policy_condition_parser_test.py",
        "path": "tests/providers/aws/lib/policy_condition_parser/policy_condition_parser_test.py"
      },
      {
        "key": "prowler:tests/providers/gcp/services/compute/compute_project_os_login_enabled/compute_project_os_login_enabled_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "compute_project_os_login_enabled_test.py",
        "longName": "tests/providers/gcp/services/compute/compute_project_os_login_enabled/compute_project_os_login_enabled_test.py",
        "path": "tests/providers/gcp/services/compute/compute_project_os_login_enabled/compute_project_os_login_enabled_test.py"
      },
      {
        "key": "prowler:prowler/lib/check/compliance_models.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "compliance_models.py",
        "longName": "prowler/lib/check/compliance_models.py",
        "path": "prowler/lib/check/compliance_models.py"
      },
      {
        "key": "prowler:tests/providers/gcp/services/iam/iam_organization_essential_contacts_configured/iam_organization_essential_contacts_configured_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "iam_organization_essential_contacts_configured_test.py",
        "longName": "tests/providers/gcp/services/iam/iam_organization_essential_contacts_configured/iam_organization_essential_contacts_configured_test.py",
        "path": "tests/providers/gcp/services/iam/iam_organization_essential_contacts_configured/iam_organization_essential_contacts_configured_test.py"
      },
      {
        "key": "prowler:prowler/lib/check/check.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "check.py",
        "longName": "prowler/lib/check/check.py",
        "path": "prowler/lib/check/check.py"
      },
      {
        "key": "prowler:prowler/providers/gcp/services/compute/compute_loadbalancer_logging_enabled/compute_loadbalancer_logging_enabled.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "compute_loadbalancer_logging_enabled.py",
        "longName": "prowler/providers/gcp/services/compute/compute_loadbalancer_logging_enabled/compute_loadbalancer_logging_enabled.py",
        "path": "prowler/providers/gcp/services/compute/compute_loadbalancer_logging_enabled/compute_loadbalancer_logging_enabled.py"
      },
      {
        "key": "prowler:prowler/providers/gcp/services/compute/compute_project_os_login_enabled/compute_project_os_login_enabled.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "compute_project_os_login_enabled.py",
        "longName": "prowler/providers/gcp/services/compute/compute_project_os_login_enabled/compute_project_os_login_enabled.py",
        "path": "prowler/providers/gcp/services/compute/compute_project_os_login_enabled/compute_project_os_login_enabled.py"
      },
      {
        "key": "prowler:tests/providers/aws/aws_provider_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "aws_provider_test.py",
        "longName": "tests/providers/aws/aws_provider_test.py",
        "path": "tests/providers/aws/aws_provider_test.py"
      },
      {
        "key": "prowler:tests/providers/gcp/services/iam/iam_no_service_roles_at_project_level/iam_no_service_roles_at_project_level_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "iam_no_service_roles_at_project_level_test.py",
        "longName": "tests/providers/gcp/services/iam/iam_no_service_roles_at_project_level/iam_no_service_roles_at_project_level_test.py",
        "path": "tests/providers/gcp/services/iam/iam_no_service_roles_at_project_level/iam_no_service_roles_at_project_level_test.py"
      },
      {
        "key": "prowler:tests/providers/gcp/services/compute/compute_serial_ports_in_use/compute_serial_ports_in_use_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "compute_serial_ports_in_use_test.py",
        "longName": "tests/providers/gcp/services/compute/compute_serial_ports_in_use/compute_serial_ports_in_use_test.py",
        "path": "tests/providers/gcp/services/compute/compute_serial_ports_in_use/compute_serial_ports_in_use_test.py"
      },
      {
        "key": "prowler:tests/providers/gcp/services/iam/iam_account_access_approval_enabled/iam_account_access_approval_enabled_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "iam_account_access_approval_enabled_test.py",
        "longName": "tests/providers/gcp/services/iam/iam_account_access_approval_enabled/iam_account_access_approval_enabled_test.py",
        "path": "tests/providers/gcp/services/iam/iam_account_access_approval_enabled/iam_account_access_approval_enabled_test.py"
      },
      {
        "key": "prowler:tests/providers/gcp/services/compute/compute_block_project_wide_ssh_keys_disabled/compute_block_project_wide_ssh_keys_disabled_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "compute_block_project_wide_ssh_keys_disabled_test.py",
        "longName": "tests/providers/gcp/services/compute/compute_block_project_wide_ssh_keys_disabled/compute_block_project_wide_ssh_keys_disabled_test.py",
        "path": "tests/providers/gcp/services/compute/compute_block_project_wide_ssh_keys_disabled/compute_block_project_wide_ssh_keys_disabled_test.py"
      },
      {
        "key": "prowler:tests/providers/gcp/services/compute/compute_network_dns_logging_enabled/compute_network_dns_logging_enabled_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "compute_network_dns_logging_enabled_test.py",
        "longName": "tests/providers/gcp/services/compute/compute_network_dns_logging_enabled/compute_network_dns_logging_enabled_test.py",
        "path": "tests/providers/gcp/services/compute/compute_network_dns_logging_enabled/compute_network_dns_logging_enabled_test.py"
      },
      {
        "key": "prowler:prowler/providers/gcp/services/apikeys/apikeys_key_exists/apikeys_key_exists.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "apikeys_key_exists.py",
        "longName": "prowler/providers/gcp/services/apikeys/apikeys_key_exists/apikeys_key_exists.py",
        "path": "prowler/providers/gcp/services/apikeys/apikeys_key_exists/apikeys_key_exists.py"
      },
      {
        "key": "prowler:tests/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "iam_role_kms_enforce_separation_of_duties_test.py",
        "longName": "tests/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties_test.py",
        "path": "tests/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties_test.py"
      },
      {
        "key": "prowler:tests/providers/gcp/services/iam/iam_role_sa_enforce_separation_of_duties/iam_role_sa_enforce_separation_of_duties_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "iam_role_sa_enforce_separation_of_duties_test.py",
        "longName": "tests/providers/gcp/services/iam/iam_role_sa_enforce_separation_of_duties/iam_role_sa_enforce_separation_of_duties_test.py",
        "path": "tests/providers/gcp/services/iam/iam_role_sa_enforce_separation_of_duties/iam_role_sa_enforce_separation_of_duties_test.py"
      },
      {
        "key": "prowler:tests/providers/gcp/services/iam/iam_audit_logs_enabled/iam_audit_logs_enabled_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "iam_audit_logs_enabled_test.py",
        "longName": "tests/providers/gcp/services/iam/iam_audit_logs_enabled/iam_audit_logs_enabled_test.py",
        "path": "tests/providers/gcp/services/iam/iam_audit_logs_enabled/iam_audit_logs_enabled_test.py"
      },
      {
        "key": "prowler:prowler/providers/aws/lib/allowlist/allowlist.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "allowlist.py",
        "longName": "prowler/providers/aws/lib/allowlist/allowlist.py",
        "path": "prowler/providers/aws/lib/allowlist/allowlist.py"
      },
      {
        "key": "prowler:tests/providers/gcp/services/bigquery/bigquery_dataset_public_access/bigquery_dataset_public_access_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "bigquery_dataset_public_access_test.py",
        "longName": "tests/providers/gcp/services/bigquery/bigquery_dataset_public_access/bigquery_dataset_public_access_test.py",
        "path": "tests/providers/gcp/services/bigquery/bigquery_dataset_public_access/bigquery_dataset_public_access_test.py"
      },
      {
        "key": "prowler:tests/providers/gcp/services/apikeys/apikeys_key_exists/apikeys_key_exists_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "apikeys_key_exists_test.py",
        "longName": "tests/providers/gcp/services/apikeys/apikeys_key_exists/apikeys_key_exists_test.py",
        "path": "tests/providers/gcp/services/apikeys/apikeys_key_exists/apikeys_key_exists_test.py"
      },
      {
        "key": "prowler:tests/providers/common/audit_info_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "audit_info_test.py",
        "longName": "tests/providers/common/audit_info_test.py",
        "path": "tests/providers/common/audit_info_test.py"
      },
      {
        "key": "prowler:tests/providers/gcp/services/serviceusage/serviceusage_cloudasset_inventory_enabled/serviceusage_cloudasset_inventory_enabled_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "serviceusage_cloudasset_inventory_enabled_test.py",
        "longName": "tests/providers/gcp/services/serviceusage/serviceusage_cloudasset_inventory_enabled/serviceusage_cloudasset_inventory_enabled_test.py",
        "path": "tests/providers/gcp/services/serviceusage/serviceusage_cloudasset_inventory_enabled/serviceusage_cloudasset_inventory_enabled_test.py"
      },
      {
        "key": "prowler:prowler/providers/gcp/services/iam/iam_organization_essential_contacts_configured/iam_organization_essential_contacts_configured.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "iam_organization_essential_contacts_configured.py",
        "longName": "prowler/providers/gcp/services/iam/iam_organization_essential_contacts_configured/iam_organization_essential_contacts_configured.py",
        "path": "prowler/providers/gcp/services/iam/iam_organization_essential_contacts_configured/iam_organization_essential_contacts_configured.py"
      },
      {
        "key": "prowler:prowler/providers/gcp/services/iam/iam_audit_logs_enabled/iam_audit_logs_enabled.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "iam_audit_logs_enabled.py",
        "longName": "prowler/providers/gcp/services/iam/iam_audit_logs_enabled/iam_audit_logs_enabled.py",
        "path": "prowler/providers/gcp/services/iam/iam_audit_logs_enabled/iam_audit_logs_enabled.py"
      },
      {
        "key": "prowler:prowler/providers/gcp/services/iam/iam_account_access_approval_enabled/iam_account_access_approval_enabled.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "iam_account_access_approval_enabled.py",
        "longName": "prowler/providers/gcp/services/iam/iam_account_access_approval_enabled/iam_account_access_approval_enabled.py",
        "path": "prowler/providers/gcp/services/iam/iam_account_access_approval_enabled/iam_account_access_approval_enabled.py"
      },
      {
        "key": "prowler:prowler/providers/gcp/services/compute/compute_subnet_flow_logs_enabled/compute_subnet_flow_logs_enabled.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "compute_subnet_flow_logs_enabled.py",
        "longName": "prowler/providers/gcp/services/compute/compute_subnet_flow_logs_enabled/compute_subnet_flow_logs_enabled.py",
        "path": "prowler/providers/gcp/services/compute/compute_subnet_flow_logs_enabled/compute_subnet_flow_logs_enabled.py"
      },
      {
        "key": "prowler:prowler/lib/outputs/compliance.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "compliance.py",
        "longName": "prowler/lib/outputs/compliance.py",
        "path": "prowler/lib/outputs/compliance.py"
      },
      {
        "key": "prowler:prowler/providers/aws/services/cloudwatch/cloudwatch_log_group_no_secrets_in_logs/cloudwatch_log_group_no_secrets_in_logs.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "cloudwatch_log_group_no_secrets_in_logs.py",
        "longName": "prowler/providers/aws/services/cloudwatch/cloudwatch_log_group_no_secrets_in_logs/cloudwatch_log_group_no_secrets_in_logs.py",
        "path": "prowler/providers/aws/services/cloudwatch/cloudwatch_log_group_no_secrets_in_logs/cloudwatch_log_group_no_secrets_in_logs.py"
      },
      {
        "key": "prowler:prowler/lib/outputs/outputs.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "outputs.py",
        "longName": "prowler/lib/outputs/outputs.py",
        "path": "prowler/lib/outputs/outputs.py"
      },
      {
        "key": "prowler:prowler/providers/gcp/services/compute/compute_service.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "compute_service.py",
        "longName": "prowler/providers/gcp/services/compute/compute_service.py",
        "path": "prowler/providers/gcp/services/compute/compute_service.py"
      },
      {
        "key": "prowler:prowler/lib/outputs/models.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "models.py",
        "longName": "prowler/lib/outputs/models.py",
        "path": "prowler/lib/outputs/models.py"
      },
      {
        "key": "prowler:tests/providers/aws/services/sqs/sqs_queues_not_publicly_accessible/sqs_queues_not_publicly_accessible_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "sqs_queues_not_publicly_accessible_test.py",
        "longName": "tests/providers/aws/services/sqs/sqs_queues_not_publicly_accessible/sqs_queues_not_publicly_accessible_test.py",
        "path": "tests/providers/aws/services/sqs/sqs_queues_not_publicly_accessible/sqs_queues_not_publicly_accessible_test.py"
      },
      {
        "key": "prowler:tests/providers/gcp/services/compute/compute_network_not_legacy/compute_network_not_legacy_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "compute_network_not_legacy_test.py",
        "longName": "tests/providers/gcp/services/compute/compute_network_not_legacy/compute_network_not_legacy_test.py",
        "path": "tests/providers/gcp/services/compute/compute_network_not_legacy/compute_network_not_legacy_test.py"
      },
      {
        "key": "prowler:prowler/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "iam_role_kms_enforce_separation_of_duties.py",
        "longName": "prowler/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties.py",
        "path": "prowler/providers/gcp/services/iam/iam_role_kms_enforce_separation_of_duties/iam_role_kms_enforce_separation_of_duties.py"
      },
      {
        "key": "prowler:tests/providers/gcp/services/compute/compute_ip_forwarding_is_enabled/compute_ip_forwarding_is_enabled_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "compute_ip_forwarding_is_enabled_test.py",
        "longName": "tests/providers/gcp/services/compute/compute_ip_forwarding_is_enabled/compute_ip_forwarding_is_enabled_test.py",
        "path": "tests/providers/gcp/services/compute/compute_ip_forwarding_is_enabled/compute_ip_forwarding_is_enabled_test.py"
      },
      {
        "key": "prowler:tests/providers/gcp/services/compute/compute_default_service_account_in_use/compute_default_service_account_in_use_test.py",
        "enabled": true,
        "qualifier": "FIL",
        "name": "compute_default_service_account_in_use_test.py",
        "longName": "tests/providers/gcp/services/compute/compute_default_service_account_in_use/compute_default_service_account_in_use_test.py",
        "path": "tests/providers/gcp/services/compute/compute_default_service_account_in_use/compute_default_service_account_in_use_test.py"
      }
    ],
    "facets": []
  }